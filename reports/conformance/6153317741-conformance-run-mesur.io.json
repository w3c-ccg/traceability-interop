{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2dc1f6a1-4721-4c24-8291-135d1b2a6d93",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0281ae2d-6c14-41c5-9193-67b7c3954a95",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fb44fcd-ec62-4b18-a899-82a3f3058e27",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad317dde-0e18-4a3c-bbfd-5e7c0ef6edfb"
                }
              }
            ]
          },
          {
            "id": "2a9cb1f6-fd55-49f8-a008-f2443a99b60e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1eacc257-b60b-414a-94ac-32bdc935f501",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52bbe6fc-3963-4609-8d2c-c8f261b1a57c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a851c143-a923-4e03-884e-9e028bd65652",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b5dce3a2-cc3c-426c-bfbc-f2481236f757",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8312a897-eeb4-4668-b301-774c74e01e6a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d89e32e-64a1-43dc-97d9-562054fe5628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbcdbfab-c6a1-414f-9032-689fbd584750"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27c252d2-6764-463d-be97-653dea21110e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c7b003d-5247-47aa-be61-366676ec72ed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a521ebe2-7484-431b-8626-26381edb52c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3b207f6-8e45-4eb0-878e-cf3ba8ad8c4b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a267ab0-1aa4-412a-b5ce-ee52d68e1924",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "53750a35-7a1f-4c2f-aced-2014ebb4dcbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d316300c-ef23-40ea-a790-d80c4891565a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c599a2d1-332f-4aba-bb75-accda9d08b0a"
            }
          }
        ]
      },
      {
        "id": "9c1cf75e-ebc6-463d-af9a-97ae85bbf48d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "59c7db59-a9fa-426e-9469-bb6f97f4b49f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "334be5fd-8f5a-47ec-9530-852840eae372",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a61ce0cc-7ed8-4f4f-889f-40603e195a03",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4006b636-4c90-4c91-bf2e-90c9b8014288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be163e03-1dac-40b7-90e9-571a6273f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf8ee35-8c31-405e-ada5-d0f558dbc986",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f33e1-198d-4ecf-9b53-3aa0698f5744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3467e19b-456c-44da-8b82-088f38908d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03270f0-ce3e-4061-88ed-88ccf180c4dd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2afe617-66bb-4cc4-8522-444fa1dda383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f51bc6e-0aee-4f9a-b35d-4f0cd790c0a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c94724d-310c-4024-8415-4d7f32365492",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d80aceb2-457f-44ed-b65b-cb521ecba7f5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b54e13d-c718-4ac0-96f5-3f60a249629a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aabf8e42-c551-460a-a02d-41887f2ea6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0124c-901d-4fdc-8f21-a2af5261d73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c30eba0-d4fc-46af-9b53-cc387a220f79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9600ee46-1b24-437e-a0a1-ba3aadda448d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cad3e6c-7231-4792-b35f-db26c380c713",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad25639-dd28-4912-abb7-a23e009a3fe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c2ae1c5d-c8f7-4849-9cb2-21825afb214b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a67d7b57-82d0-457f-915d-be1fde39088e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7137f015-9970-4656-9507-ad40a94d0deb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1110aec6-0519-4d2e-afe6-f8f6daaeede4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6da93309-fa70-4d06-92e6-ac7ee5044d25"
            }
          }
        ]
      },
      {
        "id": "b24520ca-5f7a-4b4b-ae3c-587a302ebe04",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "becd47f7-f281-461a-b1c3-4d714ef84bdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eeb2c1a3-5ecc-4f4c-b53a-5508f8099f8b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "99748fb5-be6d-46f2-9263-cd455ec65e26",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cceaae8-40ba-451b-aa7b-037203891313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33938be4-3eda-48fd-a6ef-0ca6500bcb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536f1d2f-4599-4ea7-9df2-bb0b2e4cc220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c1eef48-e5b9-4d5e-999a-ebfaf56afae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532da5ac-37d1-4421-9c58-b2f2d88f3fb5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69f41a4-529b-4962-8abe-3862991fcfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb3198d-0de5-40b0-ac19-6d5855981433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef0a8f3-e8ae-4981-b44b-958104b49b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19f3b09b-81f6-48d8-8f77-eb738f8d97f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7834c112-f5dc-4afc-92ca-edbe58d45ab4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263e2ac3-8b3c-45a4-a7c0-2d3b4f379294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163b0790-204c-44d4-a2cf-4264cf0bcbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700705a8-df6c-44d5-baa4-18e13c584477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0795814-8e16-4647-a37b-d1a797a86f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a405e3c7-ee99-4d9d-9243-5daa0df36138",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad31aef2-34f9-454d-b080-a0b37d728e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0452744a-590b-4098-9559-9faecc27148e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed6eafc-7b99-47e1-a882-fc21fbd02697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27abbca-17ca-4a71-8841-7bce5c4bfbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc676b7-1ea4-44fe-ad3e-cfae12845a88",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d14340f-736f-4a3c-9b40-0aded4d49669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe56fc1-c8d7-41d1-b255-76cd064368c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b739c0-22d6-4c11-9120-f96f3e6910c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a792e7-4a0f-4b2b-9944-b084ae8d8c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7f433e-c43f-4494-876e-a3b629806037",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99a0a3a-cc02-40e0-bf1e-5afdbb4164eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6a8312-b796-4383-ba68-b185f70400c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cfef97-ee1a-4d8a-8fcb-52d472fa7e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecd1cf56-d22a-42a6-acfe-e5e9bfb942c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea02db-6f9f-48ba-a616-96c00d249f52",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f0339c-601b-4f99-9f25-94171ec17131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143d6447-b5ca-47d1-864f-5c5573dd4195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93adc24b-64a7-41e6-b798-4b4d721c6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d91bded-5b66-4c49-88c3-3b4037b842c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245b4380-c6a5-4678-a203-5652ff3ea737",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4fc851-9821-4acb-a54f-cb43006a72d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad6a546-6579-4132-912a-d923701df1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dae1ce0-b4d0-4b0f-a08b-1b0c8e5612ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6f806cb-a4c3-42d0-b239-25f50b780d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5825db7b-df84-4007-b246-6a725bc8446e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e90cc21-8336-4376-a8bb-2bad49bfaa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374cd5df-f175-4216-af4e-eda6d3b7c062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1c9572-fdcd-4290-8985-40b2842e30c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "793fafc9-3015-4726-a3f3-fd0ad6a2e7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff98075d-1228-458b-878a-02bf1d2ff671",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a263279-47a9-49d0-b051-d7dd3ce5ea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a592b0-416f-481b-9167-7f7061eb6ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618a3caa-ad18-4a29-9fef-25307855ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed272232-c2e8-45bb-9a49-6078609110ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a528c6b0-23d1-452e-8a2a-5550201a5920",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30aaeaf-5212-4caf-9b5f-daad43e7dd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d822a956-af26-4ab5-a3f7-122a4ce80e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f69d517-2029-46a5-bf91-2857f39fe4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e2e7faa-3828-445e-90df-8b7410d44119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84b6d9c-007d-40dd-a043-077448ee8c7e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed1f49a-1a0c-4541-ab3c-f930de78bb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af1fcb7-c901-4b45-8ebe-840c88342648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b459527-b588-455d-8e2d-579a729a1a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c37939-1aad-4d33-828e-a5f74d76bb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73709930-948c-4f60-a5b5-7ef1759b4b03",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d022a7cb-f3a2-4be6-8e7c-cbaa2c760b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f2c524-0e3c-4b09-9398-77a4dd80b97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7860f826-9cf0-4ff4-81fa-28be236e5eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1996c937-1113-40b4-a9cf-79b07b8c2ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2644ae57-71fb-4b17-b5f1-bcad29438450",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc479100-18de-4b1b-af79-8b9d4934384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2436b03-361f-44a8-83ae-e29ee8a2af86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b059fcf5-197f-4128-af7d-2cbabf69a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0d43eb4-d015-43bd-9299-87d09d967c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38647ae-4739-41db-a237-f791cc1d014f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c895075-6c93-4af6-bdf4-fd26323b29d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59b5419-dcb7-4666-96f1-207787d3bd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ea40c-d319-42a4-90be-cb351a4ceecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d95cc463-ff59-4a91-ae4a-84462661c12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f50f974-7c54-4244-b53b-9ebf6b043c76",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc26d86b-55db-41fb-b1b0-9d1b228be173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20546b9a-ae2c-4cae-a5b5-c7d574b6d214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d989c3c6-e641-4e3e-9faf-49e343aaaa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd167904-e9cf-4124-9acc-f71eeb414b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eafb7e-1e70-4e2e-8388-f91819288460",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af90e0d-3505-4d3e-9cba-4c0eaf3caf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e141eebb-30cf-4d65-a22e-fbd7c9d08ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def15086-4271-47a4-a02a-8681cc70da04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcaff758-609e-4dd4-8d0b-83b6401e4bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5ec82b-4d58-4f2a-94f6-7f5d3c730621",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16ed261-f72e-4ec2-9a16-b37805a7fc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f158e5-fa57-47fc-8b36-c4a0f5ba1c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e764c1-0df7-42e8-a7e1-238a38f09b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d2fdf0-3d3a-4f18-8c14-24923270b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ebc392-99b4-49fa-9eac-4afc6919569a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd646a-be9b-4e00-a269-086f93335df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadf8b52-9817-4a55-96d2-52c18de877ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b87fea-be0f-4860-8537-bd25358c0a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa83538-0ea9-40e4-9e5f-03a62a82fe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de834560-37b2-4fd8-9e52-6cf6be5630ab",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caced470-f0ed-43d3-a061-2ecb7fad70db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6bb1c6-b9ee-4273-ad5a-2260ee435e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bb3e49-9a40-4722-a461-5445a1b66a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05312048-fdc2-4d6d-b7c3-cb4115b40514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5e7716-81b9-40ee-8649-6c100b84a626",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660fe261-7c5e-47af-b95d-ecbda622b2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecab995b-1a6f-4927-b35a-bded0281eabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f43326-1b69-4554-a3c6-642a8fcc9ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "532126c6-da23-42f0-8a96-976260101a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b527e08d-6d4c-4bcc-8c21-1f6cdd7cf46a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31f5ff6-8432-4418-84ab-59ee8c7c6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d4513f-503f-4191-94ab-349541311ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ed4aab-39aa-439e-8e72-55aed9ca42f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de77c1e-e005-4f7e-8c66-7692f3256fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204259e8-3e0f-478c-b1dc-c4efca809f6d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ed08e6-1325-48d2-83a0-5a6e8ad83180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e188f3-6378-4bdb-81a9-4e5a3ec706e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f01b22-edfd-4628-afda-7a9b3a48f288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c66c2b-995d-40e7-af61-2acb553dddf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4202d59-de9c-4044-9f06-8e8160392271",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9220dd09-b14e-4374-8062-31c8799c1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1965096b-9c90-4a33-8754-d2c4b1557c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5522d38-f9e1-4a9f-8506-4a0ab8884c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b10623b-1161-4be0-9bd5-89249d8bf90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be24d0d-4c75-49b5-8a4d-48346431b775",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93575980-e7f7-4b5f-bcfa-4b6730696e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62c8dd4-c433-4d27-b7bc-00baff229e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200643c0-0f40-44bb-817e-c6947afa24fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda4f2ad-8ed2-42d3-a374-163e4ca00157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e57f09e-a771-47f2-a307-e01976cf7606",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb6405e-86d8-4896-b4a3-a0287a2a32b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bb5350-52e3-4045-9c1d-d28682c21434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01c10ff-3029-40b2-8471-1fb79fa766a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cee9b5c2-e7ee-4116-9deb-e586ac5f8c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe298b3a-bf91-4571-98e2-285e266e9d9c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce629fc-ed6d-42f6-89b8-1d26204e86ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2dcb72-1b1a-4100-93ae-0ae00fae4356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafd96c6-3a17-4bfa-bbd0-d307264c0c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "289a771c-37c8-4f79-98eb-c14899033b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e54049-5290-42d7-8e72-4a04a8956ebe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b834c24d-2a3f-4d20-8ad9-912c10931807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76448d3-d33d-4417-b335-d300fcd392a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4004706-7c6b-4892-b1b1-07c4c1c1d213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef3bab8-5c9a-4ccf-949d-6b128083d759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4b5f12-d43b-4573-b6ec-76febdeac1b6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf7a5be-da50-4644-807e-bc2a2fa3a594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987285e5-8596-4e5f-85cb-87fdb384ada1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841789fa-7360-417f-af67-a0af42dc521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6449782-bdf3-4909-aed1-79f92cb0de41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2cafa5-1c8f-425d-bfcc-e86fad690734",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778fc0d8-a929-4247-8c9e-59b0d1176a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6084b3-334d-48ef-bb90-547ef1f6cd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c635b3-491b-4c4c-b5e0-12d861ac8016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "578fc629-50ba-44c4-a11f-3a58d1d91dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4ddd41-38c6-4a7f-ad2a-b8000d38ad91",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf50c42-d163-4548-b34c-ab6e6b70cfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dab994f-41e0-4c1a-ab4a-dde083fb91df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c634c379-a371-49b0-9168-72e8667fb1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2658b5d-df61-4509-9bde-0022e7b0879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d425c60-756c-4a16-b90c-0e6768f2a8a7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd12e53-60d3-466b-a8f2-6de78a4d3e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b47b22a-671d-415f-b276-9a8bc743b4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e05b34-2f5d-4dad-85b4-dafbb2d5aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c36c08-b4f9-4d26-bcf5-cbbc6add40a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c412774f-1a62-4d59-8cbb-739f0227ef28",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28830d1d-0769-47f5-adc4-8841a4bc237f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037c1c6e-e3fe-4505-9ba2-0d0ed28d7a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98b6934-1b3c-4248-ba14-6264d337344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83802e1-fbcf-412c-8aed-e0f41c0d4a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42775618-cd76-4904-a119-782882e924d4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf0a0a9-417f-4677-882e-ca3b24837dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2875e1c3-88c5-4b20-b6a4-3e3bd0340838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318629c9-9baa-4bc2-8397-cfb920e895d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5ba83e-ee9f-4187-bfbc-368aacf9ae2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bacad04-b896-40ae-92f9-766d7d316f07",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8f5a52-d0d4-44b9-9458-bf92e170daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e327802a-cc9c-4c7b-975e-62fa42ed5685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b21c4e5-7862-445a-a4af-46d4d77bae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0577ce48-13c8-4d3e-a528-40037c9b490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c7de57-3b5a-422d-b40b-d6db9610e55d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eca74de-abba-4850-9f38-58f58150e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f015e1f0-03a8-4da7-ae3a-bfd1b318c0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ff7815-9694-4bb5-9db2-ad228a86e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa86ce3-9c96-4deb-b958-247a4cdb8fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e680f7c-5ab9-4197-9981-b17c3ae8140c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ac5233-c36b-41e0-b89f-0bc5a2f7a861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc9e1b4-8774-4516-afb6-67eb33dc332f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59e5c08-d11a-4f62-ba96-35e3c39e84e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c03d08d-3b11-49ed-86f8-be73808373fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca5fe84-1228-4007-833b-f0cd8de1d5e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27f0215-41ae-489f-a699-c61bfa2bc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f71518-1489-42da-8a3c-8c46905b5028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37bdc96-1564-4243-bac7-4a16fc3befac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9afe8865-58e5-4d3f-9c63-755f57cc2cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fcf78a-b6a1-4ad4-ba6a-dec4d3d45b1e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3c1b50-36b7-49f4-8009-b113af095808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabe61f1-48b2-4236-a696-f79b15195366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f819865-2abc-47e5-8a3b-4b02de81000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "421b7c02-1774-49aa-9478-e9310b837932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c820e7cd-dda0-4eed-b39f-65653c20d311",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3929b0-72f4-4fff-9315-2f4da3e1952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a545bd5-32f1-401b-a8ae-6ca5e27fcb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e35b65-19b5-4b28-89e1-3e8d308dfef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8119317d-3a3b-4623-972c-93ef5783bbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b282b2b-b183-4134-8de1-2b7c7d6be2a5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54f29ef-79ec-4d19-9760-79f2b477a72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf856ba-8f13-45c8-ac21-a2e29db7b5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04532c46-3cbf-4ffd-a397-225b2c82644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "960c4c01-fd68-4b9e-aa9e-47034122652d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4f0072-ed3a-4d96-adba-aa14981ffcc9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad593717-742f-4c2f-a714-c22c924b529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ef5c20-326b-4dfb-8527-8b45a985f504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7c0502-cc98-40f0-aa90-748feb3f2ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d559a75f-c929-4d75-addc-d7bdc9b5304b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6786b41-94c6-4504-a090-77ca50ce365c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176822f0-5e87-4fe2-88cc-21b427ccda64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f278fdb-499e-49a2-965c-ebee068eabd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572b7e46-29d5-464f-855c-7e666b8fcd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa108d5f-4528-4f63-9077-aabadfc8d929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189df234-db19-4ce0-8686-a5f4e2bb4458",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee4b319-00e1-458a-b246-1258f883b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94734862-8fc6-4def-aa49-adcbf4b18a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cf2c7b-a30b-455b-9b95-a1c6c8749643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9257108c-2fb0-46b8-90a9-5e8cb35693ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb40b6b-f87d-4e7a-9d84-e47e045a4f3f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db6b830-b50e-4e62-80bb-9c50518da13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059cb3a9-6bd6-44d4-a5fa-3ac099647f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6398e6-865d-4b05-b92c-8a70942f5ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e90a2c3-aa52-4652-b4ad-dded8cb6f501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b555a8-60c9-4e0f-8f37-9b4b9db66efc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e021b716-efe8-4b26-ae31-8c92ecb20a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a453e37d-09cf-4a42-8d10-8325d13317eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8451e37a-32e7-47da-b819-f43d0aefe63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec7e5e3-ce03-4dc6-b48b-f9b0c812dc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab75d9d1-298d-408a-bdce-9b7cdabb055a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bd3858-9d77-4b6d-9b47-05fec7e4cf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d7512a-16ef-4b3a-bc91-8a8dfc22cf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb1d3fc-66b2-4ef5-9d3d-99561a59ee5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a11cab8e-7982-4ca1-8e40-95f3564bf375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e7f0b6-95a1-4644-97e8-0cc708d76df8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af298b6-d4e0-492f-8461-a53a32349dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22963e25-c2ab-402f-a5da-b9cb953872ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fd5df5-766b-4433-8b2c-fda977244ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c1baa6-968c-4e8c-b5df-ac5207f2173f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d11ca1-87fd-4dc6-9c41-cbfc42c09405",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8841bb84-d3e1-45e0-ac1c-45acb9518300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fcdece-58b8-4a64-b5c2-80345c0ca77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94df30ee-5bf3-48b2-b70f-9f772132d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5167ad88-c8fb-47cd-96cc-e3fea7513647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f946d2-059f-4673-ad4a-721e0777be43",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9da31a-c1d9-4585-a241-9d4dbf1d6e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23db541c-4e1b-40cd-8574-efb6954ee422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bb0e85-489d-4938-8925-fe5c574faeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eacba8a2-34c6-44d4-8002-6e559590380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcfbb8d-1b49-496b-b738-b52b99089585",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b478114-eab1-477c-aefe-2c122a314a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2576ff-e11b-4941-a265-6c85123e31db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a766b3-7c44-4c3d-935e-68438d51a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c9b94a-54a8-4ca7-87f7-d023647b9042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8771344d-7dbd-4d38-80b9-98749f397071",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb3d1fd-449d-4f21-897e-caa4f36d23e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8432df80-97a0-4931-8995-2dfe97d68977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53638e1-46d5-4ba9-8f62-83afd0522b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ffa3da-d81f-491a-9445-7e9b4165358a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1389026a-b8cb-4f6a-8fd6-30bd32d69cb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90893274-2ae9-4549-887e-fdc8366e34ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac0cb58-74ec-4585-9107-37ae70a8c4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0575835-d77d-4cd6-8072-7803906bc0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5fdc5f-deab-4f5b-9207-6482c6ae0f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72cdf73-ba41-4cf9-a0eb-558a6fdfabec",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0ef39f-13a7-4761-adb4-0943edcd9234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a8817c-b6c5-4bb3-96e9-ac27cc984c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d208bb-c8eb-4199-b4de-0cdefdd1341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20fae2aa-8056-43bf-97cb-f9865897e10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21d776a-faf1-483f-8099-7f26ce914d59",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2f73a9-ae97-4ba4-9119-75e01f54c7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064f0c05-5f37-47f6-aa17-96750597aefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be72a47f-55ba-4f6d-ae32-518494993277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e983e1-1077-47ec-8cef-cd1b4eec33f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca78d70f-cb1c-449b-9243-c9cb296ff36c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2092f84-4706-4fb1-8f3a-b34e0a3e1274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0aab8d-7e1e-48d1-931c-baa917b4c48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f318de-cb63-4309-99c0-7ff0ac8b0899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c273b5d-b494-45a8-9571-d6bbcb12e40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8ac65e-6ddb-4539-8817-9a5b33b91380",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a125cdf-c95b-4fdc-b34b-29514dcca395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a2d7b4-d59b-43b1-877d-412da67d924d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03323cec-5327-4650-9712-7acc2725f65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1aec27-0c18-4cb9-b163-4b3c9656426c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf3e2fb-96f9-4092-841d-ab38f632f856",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dcbf90-b58c-4fae-a67d-027c97d281a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85076cb4-3862-4b7a-80e4-a4dde5d913f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ee6305-b760-49ad-a74a-17a206ecfcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e81bff0-6f35-436c-bd04-abfefc6a1f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3173bbde-beb6-4383-bd7a-21794f4f8e91",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88b9fec-7f34-4ef3-b6fe-09bdff51746d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e61acf-d123-43b8-bb8b-42f5ff889804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d0d1d2-f0e9-46b6-a1d1-18c5636f3d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1dddb1-0c39-495a-a917-202cec3eaca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430e0744-682c-4ba9-947b-930cae74b357",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d4285a-dec1-46b5-b4d1-ee79c8f163cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa9a0af-cb47-40b9-a83d-df6107e18c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffda9cb-bd5f-464b-9e36-ec457a60240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46cbce5-2be6-492b-ba0d-09dcf891fb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a94e241-49b2-4575-90fd-7a6721d739ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ee082b-ab5d-4eb9-adfe-11f42645d154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93353c4b-5e59-46cc-8836-c47b05162aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b1f4ae-d694-4254-ab2d-b9d8ffced444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e86f1c0-8785-4c16-9be5-2eaf48d47d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d1f63-e320-4818-af07-7b7336c538af",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8971957-da42-426f-a40c-1d8a51e7fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff53139-dbc6-45a8-8967-c61afe5df438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba328bf3-40a0-428e-9be0-3eb1c5cda2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "744c2145-4208-40ee-87e1-8fb41598bf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a7ebc2-ed55-46ac-96f4-258cd395f83a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c18fa56-f2b0-4f76-8331-1b6869002323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6644dc92-65b4-4c29-8c4c-b1d6c43acf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaeaeea-5aba-46e9-bf0c-043add590897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d026b51c-2427-4b67-a0e2-c38d53653409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ad63dc-0823-4100-964d-01917e663c83",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6684cb8d-b62c-407c-8b00-3b1df987c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f9af67-75e7-4aa0-8b4a-14ed451736a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fe5cd5-173b-4905-9b06-5fcd5b3bb858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c327122-7e7b-46ee-a4f5-07dd21890865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2b99a8-db29-40a7-afb2-862e8c3547b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a131d3-7a15-45cc-a918-f107dd11f74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f18ced7-8d15-48c2-8018-1a751e8cb7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6d490b-fdd6-4461-a007-44e9f6b96e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36a3f5e1-14b0-41af-a59d-1ba08b77d9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161612d9-cdb4-4979-9c73-f5d5fee3c24a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6f7a89-a165-40b8-b97f-f03057ac5b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abbe0c3-6f87-4c94-ace0-7b16a843587c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9781e2d-9c49-4633-9c9c-628d4b1d2928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "069f239b-a02a-4b05-bb4c-5746c3140677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97af95ce-dbe2-464d-8aac-95f270db78c8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaf7164-4a4a-4458-a634-851b2e2d22be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d28bfb-0aaa-4a54-be1b-ab92360a8621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de79094-c160-414a-9037-e7a9e11f0a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aaee95-ea55-4e65-b5ae-770cee237832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6047378f-002d-46b8-b5d3-b0d21017b09d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bd44d4-e25e-4a17-a77e-22f6fd344b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3c85aa-da5e-48ce-8c5f-83c873d526a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a508aae2-ea11-49bf-a421-d6b31d750063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "110dc830-c024-47ca-a68b-e46fa7dbd57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314953bf-0013-4f7a-bf8c-014ddcb217eb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be101594-550a-490b-a0e0-f2ae3c750c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a210926-90e0-4a3b-861f-42f5fcf06c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6527d500-3ef9-4ac6-a09c-7b231c878591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b3b413-0e81-4510-9f9b-33366b78b123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a637e402-dd48-495a-a753-5308cea09092",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5d0a61-3be4-4c40-a051-69b9853ff55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2fa657-c89a-4cf9-85b5-6ae8a85c9360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d5488-4da4-4d95-a6fd-1efe4446cf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf8e8c9-c240-46a1-9ad3-b58d3ba45ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5161e9-78ae-433d-8edd-6c962f2dc449",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f496f71b-1cf3-4b0b-adc5-247e9f8e5339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df39875e-56b0-4d7c-969a-1dc452fe1578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f3eee-1c57-45dd-b271-0b9e7ad3535c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68502de-538b-4c46-b748-aa165c602f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8dce5d-4113-49e6-9097-7d9e8c276a1b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35241fdc-3a77-4a4c-ad97-f5587ce8bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbb209a-482d-4ae8-a0ca-452f8d6c327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f1286-64a4-4ec1-9a58-6218fe30833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f578a224-3ae5-4492-a88f-26bc0bb6e926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fef1cf0-442f-4007-9b98-1b87da5e2aac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb59d56-e314-4af1-aa10-fa9a0061f147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136e61a5-160e-4f86-ae5c-86550a7d9349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abd8ebf-0d64-46bc-891b-0bc853581410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65722eb4-de61-49b1-afd9-3d267ff94fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af567156-ea28-4a8a-a450-eca6cc30b293",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c163e9-383b-4cfd-b474-c1f67938145b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2194b06-2e64-467b-bae1-83bfae63006a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9f5314-ba3e-4ac8-8c46-5a29e281de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12355280-399d-4c75-9208-25d5db83a1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1318bcd-e214-4def-bdcf-09933f90f32d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84be04ab-e1e9-4d32-a83b-e6a21b74dca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6d233e-51f4-4fc4-91fc-91b8b7d22a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df1bbaf-8fb9-4b64-b892-962cb3aac0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f629bf8-03b5-4b00-b07c-ac43d84857c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46c6a9d-3563-490b-a436-497316ab4fb0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580527ae-90e9-4d70-ab55-513cd4c93694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113cd3d8-3be7-45ab-ad98-e5216b2b9c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ab52b4-2373-466a-a6a5-0a5b0bea6f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13dd0d17-bd39-4356-aa86-9b5871362b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febc529b-69a4-4f14-905e-a94154c68660",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3217b665-2ed1-4cf8-9deb-73707ef8bc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7c2a21-e240-4179-bc41-c0d86a3aefdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be51cb66-db1d-4226-b6e4-2a761335c6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64932f76-3919-427b-8cf9-013ba4e07e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bbb4dd-6e61-40be-9588-8373414ee4ca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9685b4b-b38b-44af-9ff8-b75bb7b9c2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60362e42-8860-41e1-9793-3ea40f955cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fcb646-eb05-4be0-9fdd-445c58e012d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa9a6af-8fa1-4797-9f1c-0f39ff34e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc527ef3-edcc-45de-b863-fa51781b8980",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf85be7-d61b-4c6d-b07e-390cdac7e1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f34bdc-3da9-4f32-a8dc-ac8ca6d034e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aea4b92-a1be-4da2-b3da-aa7b18ae4a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7947259b-cb62-432d-9412-672bfd0b6171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0004c9d5-62d0-47a6-94aa-580cf8b7dc78",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adabdfae-caa3-4558-a0df-0ee08ea278f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2fce91-6fff-4367-baed-d6c104215039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583390e4-d160-4e83-9d2f-73da595986ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79d8a74c-5f8b-48a6-97d3-1e14576808d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854706f9-18fe-4100-81a6-1f31bc794aee",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6666056c-b974-4b67-a6b6-8396d88c1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d35a29-c36a-469a-b9f3-7153729ae80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d10f68-d618-47c1-bdb7-2ef31153d29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "351bdf68-75cf-4c4c-916a-5bd4499b083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7657fcc-24cc-4eb4-a3c5-4c73ab732b3b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d03104-3ca2-4b20-ae74-fedcbf4a8d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5942f4d1-90e2-4b05-91d1-d36a586330dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fbca97-f2f9-4d14-b333-7c25bb6d248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9730099-22f0-4541-ae83-ad7b0a09d9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9cb42f-80ad-49b5-badb-796a507e4e59",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae77890-9b56-4a2c-b457-f4e7ca2be28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8f5ee7-dd10-45c6-8a2e-2fedff6f8ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518d4a1d-5faf-4fa4-8ddf-62cce6b4873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc1df48-37a2-4183-bdce-b31c1acbff89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0254eccd-8964-4f5f-84b0-284c79a0a682",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2d3f4-0d80-4573-b1b9-48d399180f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3a4258-42a0-4fd0-a1bf-45e1095bb373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9be307-294c-4c3d-aeab-8031206a0295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4e7abc-777a-4fb2-ac47-9ecd4a16f4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b44f9c-c50b-4f58-ba66-fe720884210c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63924f30-73e9-404e-b882-399cf8026d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cae1e87-e62a-4814-9e40-677a7bd16cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e493ac-339b-4f9e-acd6-f7c8b8583887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1a7af6-c867-425f-b414-f743e6dc3056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f2df33-364b-492b-977a-403e11e72bc5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc295d3-f667-4194-9a52-e45c42c6eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cade636-1c36-4d8f-85c5-b937723068a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67193340-9e57-438e-a6b4-3def51e120bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f105e55-fe92-4b10-9b17-95da5bfa5cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14a1acc-2824-4f47-a8b3-5ef036f92bf9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7ada61-c475-4ff6-a3e9-8aaf3e24ad47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791629de-8737-41c1-9c43-6957bd87c46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e3e051-0007-4605-9b0b-2e373d37c29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff16add-dc03-4958-ad01-0113ebb3a1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a654b-ec7e-4c9a-bddf-e1c8695bbc8f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325d7719-db29-4a9f-89b4-ca9662be4603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2730ce46-4ad5-4caf-952d-ebc38fb7d913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d660dbe-972a-4921-80b2-291ca6c4c783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e43eac8-8466-4dfb-adf7-b73f8889fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ccd2dc-dc24-4301-8411-30f421a4d487",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45511f0-d381-4018-9338-7e3bca657770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8ff450-acd5-4706-8266-1ce9983c1866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045b7cb2-10d0-42f2-8d76-f3cc467e91ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "710bf4cf-53e0-46c0-b0e9-68163ec8ec6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663cefca-a317-4cc0-81c7-a6a0fa282c79",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f949b209-34f6-416d-94cd-15b0de9f6281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ffc124-ab3c-4dfa-9d84-c7448831e223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f10fda-8487-410f-84e1-99c85da6edd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49fbcb22-f042-4dec-8a41-56e19f5bdf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5d19cc-febf-4060-b5a3-16a3462b9672",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a76587-6526-48e8-a93d-325f6fbfe1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f3257f-9d82-4c23-81b1-29de11be1c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e830a9e5-bf10-487d-81c1-634db42e9242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2dc1e83-a8d7-4ed1-a98f-49cf1db476e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3d8d3e-2919-4a65-a72c-92e66d38450c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222a1584-8f86-4c0e-ba7d-92c66c45271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b10908e0-12fd-439a-8b66-003cf95c6112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6010bd-69fb-453e-b802-9a2dbe3789ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3156d1d-8a93-46d1-8abb-00b1ad38ad99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ace36543-a24b-44a1-98fe-0f8b16b2795b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52be9d38-49a1-463e-b3ec-e280cf3d52bd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d063aa48-b3a6-4afc-90ed-1712ea734475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f120395-87fd-4d15-84aa-a3204ad3cfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a6e7c9-7896-43ea-9053-50e4f8fadd79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49385e83-9b2c-4161-b3ec-68a15c1e85eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40dfe543-7865-49b0-b624-cd7b5ff647c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e97ab36-c78b-4ff4-97a2-6d811da0f2e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf213654-d389-49c4-96a8-32d820573a99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1978421-37b2-44b2-bc25-0f2ec52805cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31a33441-44d6-4d10-a2c5-ba31b392272e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "406cbe10-d5a9-4e80-ac5e-8194ac4f28c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40c36b82-0a5e-41a3-9dd0-01090eb42d35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89bb857c-415f-46c6-8fe3-78d8bce244ae"
                }
              }
            ]
          },
          {
            "id": "6a158de5-6a8f-4eb0-ba55-de70f392d6c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22123979-ebb3-4b96-8f90-36b726537796",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b9f1af-a179-4826-a14e-9ab51085a5c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f7d5648-5c81-4aff-b0ca-35c10f81b2cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d3f165d-e8a0-4dd9-ae5a-32022a02e6a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "571e9e06-b912-4ca3-9dae-214fa7257295"
                    }
                  }
                ]
              },
              {
                "id": "b4379401-609d-43c2-ad52-1b65199be139",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e03f52e-df26-4a42-af3e-b96a1f5651dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68c7907f-f86e-4176-b779-f83a48685467"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3a98a2-99a3-413a-b18f-6a94486b47f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2173c12-f2ab-46de-b5a1-c8c47f65a343"
                    }
                  }
                ]
              },
              {
                "id": "626c5eab-97e8-4f59-a74d-b3470996d50a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b665fef8-9e86-44e6-9929-379e89cce613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dd76201-79ba-4a21-8f04-8b67fbecdec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "926f003b-309c-4aec-86d1-5c1eeb1850eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2abda24d-ed25-40c4-95b3-608c350ac985"
                    }
                  }
                ]
              },
              {
                "id": "dd515ea6-5676-4553-9773-671fb37dd02a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68a5abeb-ff72-48eb-852d-2b8338036b0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4cd32a4-5174-413a-902e-573f1c7161b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3454960c-ee3f-45d6-a108-3937894de958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "46a579b5-8d09-42a9-af18-9e47792871bb"
                    }
                  }
                ]
              },
              {
                "id": "b81dbb59-dce0-4f81-8a58-e86951d766e7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a088e0f8-6072-47f1-99f4-c9e2cc6dca2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88bcea34-6ad6-4bb1-913d-316c0efec085"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "166700cd-b4d1-4700-95d7-a3bd5f2e78e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "512a655b-b838-4189-b0fe-3432655e179c"
                    }
                  }
                ]
              },
              {
                "id": "b61b3e05-edf9-4492-aece-d9567238c05a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4961c742-b3b8-4eaf-940a-bc88d239696e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2d0bd9d-5f6a-4d67-8e2a-24ad2cf6ed35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52cafd3b-962d-48ea-ad43-1cb78a50eb3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4685475-bbe4-4af5-bed6-da0c4b60e3f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "995a44ca-94fe-42ce-96a3-5a0fd763e46b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aac7f7d-9bd2-44fb-960f-9db2e8843957"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48b072dd-42e1-4f0f-918f-dd045ca020b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "070621f1-c549-444e-bad2-30a569710016"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6312b89a-98e5-4449-9f08-7ae72b0f20ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dd874e4d-8786-4a7e-bc4e-e8ebf161c48e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1077fb1b-b42c-4d8f-a9f1-8d7ff3913dee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3163739-4f3b-4fb2-b66c-1f317cb1f41e"
            }
          }
        ]
      },
      {
        "id": "e725bda4-61fe-4f87-8d04-a7134aa602d8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8ca07f36-7506-481b-b98a-7b678eba4deb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57b268b8-0ba4-4562-abf1-d3e3e7ad9564",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98556e3e-5261-4897-924f-c1535b99deb6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd74576-acb3-48e4-878e-b4febbbaff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78fe956-6bae-4b06-8bee-b83b24da354d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143afb34-f008-4437-b6f6-33a1d8b779ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c18909-ce88-4c40-926e-1435c6fd7d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70b7511-012c-4014-84e7-185b45dbdddb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f8eb03-b753-4277-8ee2-a9723455a879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0f9eb3-dae8-4b84-9c9d-45d696a62852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbef673-7cf9-48db-acc6-e46c13850926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7247b3-07be-487f-9db9-b24cf3a523d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b57bfe-f9a6-451d-bcf4-c50db31d5fee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67578c7-5a31-48f8-b82d-01660294eb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2beeaea-2680-4b9f-a147-64015349f899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecaaa86-30fc-437c-bb26-b9f3d3262545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9637290c-ca82-495f-b7e1-2cba1d5c8c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0efc31-57a5-4cea-b8c3-2a49c32dc7bf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6694fbe-7bac-45b2-9974-2b859e59143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33b9be0-ace5-43ee-b9a8-3fa445ce90fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe05f686-da0e-4d8a-b060-94d7a1e056fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a30ee23-6ebf-453a-9ad0-4ec2fac86400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b45a6b-46e7-48d5-b4bc-06e5d0d760de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d56657b-5ede-4220-a2d9-40645174bf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af554c61-74f9-4476-a8a4-6c29271bf005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ffd262-2fa1-4188-8768-e361764541fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ac782c-de40-4635-b476-e7d9de0ca2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591e686b-7d84-4fc2-878a-5f6912c9b494",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a910926-b209-4662-b440-d262096d5bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcea56a-c9a4-4ae9-9624-16e7aeb641df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c9c141-e2a7-4f7b-9195-202d3421b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e244a31-7b40-4e8c-b130-f9fb810d8ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d7fd1-8c4c-4190-9db3-d066b50a2652",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7537f175-5c6e-4ff6-889b-7281b4764f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012e3022-7bb3-4e2c-a6ba-bdcc77f7a831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacd46c0-d85d-4b41-9015-66b09deab38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1a6011-a0c7-4b52-9e95-52810c9308e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38bbb77-73f6-427a-8247-fdf18efda87f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873337b3-54b8-40f6-a071-5cee8e6da3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93cc6f7-a70b-4151-93a3-50af8db826c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c5e106-be79-4a74-b378-544b4d114ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b632d9-0538-4d46-a1b6-98b83533cddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e232435d-0cfd-4f23-8306-1599242f0f89",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c10c5ce-bd65-453e-a8c4-0453c9260248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a1294c-b156-4103-85ff-b81e9272481c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33c51ac-69d9-425f-b8d8-93abe4c9342f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d511cb85-eff0-46db-ba0a-f3286dbeeb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c620f-55d8-4b92-a693-4f129cfab026",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c279291-5203-4b2d-8a85-f2fa1da560be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8884a287-05ce-4f7d-9e63-6665e2ee0eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49ad874-522d-4dac-88e5-7382deb487d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e682e33-3147-438d-bb68-88d8e9bc2def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d7edf1-7e7b-4cc9-9ce4-30a18b508dd6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad93dd3-4ac8-4135-8b28-6ddce7590a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5404ac76-9c02-4770-9622-338bb2e5fea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1d1e5-2d34-4e95-915c-223bb597cda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfccd90-93ac-4609-a8aa-fe3dbcf0ad58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828747ab-d795-4a77-88d8-97ee43f2dbd4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf5b6f4-4b31-40f3-9d19-120750db8ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e05751-7f19-4960-a659-ae248910ad4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb055976-779f-4ab3-b236-e059a07a9d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d049de1-0e43-4255-bca6-25e3efdf0b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd564e6-fc3c-4e88-89db-07447cb6186a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf545fe-2da6-447f-a3d3-ef8997be0e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46285b9b-1a89-415c-8284-e413b0c6fbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89088bac-b301-483a-a21e-e0cc12ecc68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8fe2c7-b4ea-4bf1-803f-bc3f3d3173e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e55e56-ec06-4bc1-8abd-9c1bc4db4c7a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afaef3f-03d0-463d-9c63-5ea7f1f5dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6d4689-99e1-45a3-8c3f-6157a7c399ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15307fbb-7552-4445-b1a4-1e20b29ff787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f717f694-5f5e-4d67-ba23-ea2543653790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb0e641-0bd3-48a5-8317-23f3e91b4333",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8c7274-4b3c-4679-a0ec-96424c4faf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a99bd71-cb45-4b55-afb7-2b5e018867bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d2b776-0495-4146-b247-6feac13e5cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "644db26e-a9bb-4804-8587-1b4d78d91ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d358dfb-d464-44a6-a996-4db1f080cac2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd461360-d6e7-4f92-acad-5e9cc2e79b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40e6951-e855-4ebf-9c7d-8eb3782ead64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e86ebc7-914a-41f4-a23c-71edf8e12673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8425e0-40a5-452e-bd6c-e84b7adb7de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57719ca0-c2fa-4e81-bbe9-284756e3511a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213a1407-a6d2-400f-ad39-fc07b744e401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eebf94-0890-4654-a4b4-4176d05e2927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfbd0ad-5f8c-414d-b115-203f226f1d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e1bfc5-e5d0-403a-915c-6b4713e74013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33714d7a-73b4-47db-b8eb-06ec9dd11839",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1013f1e6-6f0e-45dc-8a06-de8acb2420a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e341269a-8489-4aae-b6c3-539f450e8e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc104ff-8cc5-444f-b50c-ac9e7f58eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd724ff-5a10-4721-9620-b6380c13170d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3591d409-bf8a-4af2-8ed7-65eb3cee45bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48afdc01-4ef9-4d8b-80fe-86f95285f3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b5b824-653e-498d-affd-65efc282b948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c67c456-9548-416b-8dd2-a4b00d7f0718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19294f06-98d4-463d-9113-c9370912b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d07d96-670d-45bb-8597-5c3f86c266b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0399f6ab-c9ec-49ca-adb7-d295bc96e2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcad8fb-9d49-41d7-b935-82503881e0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30662ff4-0009-437c-a7d3-25f2f54e1e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b942fef-2feb-4bf3-931f-63fad46972aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46d3026-3216-4c1e-b19b-4263a00c5f98",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f566ab5-10d5-48d2-8ed8-595b0e0c2b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ad3178-62d9-4893-b0c8-6a15c3848807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26ed1ad-ea9e-4df6-adf4-472589029fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc83ce4b-4aeb-44d7-986f-297352ca1d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd7bf3e-6f81-4bc9-b26a-224e1abcd546",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b46744-8fa6-4e2f-8991-90fe5fdc8be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035c361c-9a43-4032-ab5f-3a55fd9239e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4e4d8b-7110-4d99-86d5-01ba9a89a25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ec0c3f-a665-4c31-9414-c0febe5e7276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b12b973-0fb6-4afb-b21c-f200f93cd084",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c300a213-0692-42cc-b96c-7b6d42170b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd7d2af-746b-4cb0-9b75-56bafb39e4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc31e5f-6acf-4de6-b8d5-ef3c2af4132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04d9d3b-ace1-48f3-a7f8-819880a82df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12df81fa-927e-4060-92e7-80dbeffbed9d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aafa9c7-8896-4f01-ac32-60a4335c5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6959a8bb-6075-4c66-968d-13c2c9648ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f899aa4-32cd-4225-af31-8684eb502fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76dee96e-28ad-4608-aa37-837290f3f35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9000e8e-7012-40fc-a37c-a3eea1ae317a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44a681b-71de-49a3-8f10-ccdf67379e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880a9acc-f960-4f8e-9db9-dd36cebd547f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0990fe0d-a2d3-436e-b216-9cb51c26aad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6860e229-b935-43d8-b808-a27678779e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a4aa4-b136-4bf0-8b8a-0d7caad222b6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a293c47a-0669-4427-9367-f521b24d6e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8383bc-bf22-4d47-8abb-9a3cd332ecb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4ed929-8b7d-4d4a-b8bf-87dbc098d74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "640e686d-fc45-4bff-b03e-87b0d9d111ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15a43a6-231e-4a8c-82a4-404f4b964825",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15eda9a-911e-4848-9aca-1fc6440a1edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f97ae2-0f24-4f48-8c21-06cc435252cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82498691-64f7-4c7e-939c-fcc4ffe092f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab352b8-9585-43cf-bdc3-49dbe49e1bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6017a9ce-f626-40ac-9e90-02ecc6015ff9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad02158-516e-40c8-8c92-1c1e0d6df7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6583f6aa-e0cb-4f04-a380-39d1daf6670b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54740e0c-abc9-4d40-8dec-d76d6d9d88c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b35af00-170d-4f57-8962-0ab990b289d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6cb623-87bb-47cb-a85a-42b9a1a3cdaa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bea707-8dfc-4002-8fee-089757489563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300a2159-2f56-457f-9d67-056c9f4cce4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba654946-5b63-4dbc-84e5-297e04cb9aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec06d6d-e948-4e85-ba80-eae9f95b1822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff69be4-578e-4c5f-8fc4-344db58ec39c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad0c73a-cd77-4d10-8a75-4bd7a2e550c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155f8588-71ed-4a43-8e7b-89d12f37abab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d4474-b1d6-4a7e-bece-732f34d5a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c0dd76-be5e-4c91-9010-e94558aa8c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73526303-5f30-4b94-9b46-b12c07dad593",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5764fb-7ad2-40fa-958f-01cd2c7e01cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719d4318-7ece-48b8-9d63-2f34df538189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbad4dc-a78d-4946-8cea-4d7686cca209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c39792-91ae-4d8f-a315-366ecf2dae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675a2c3d-674e-40ab-acb9-b759a53ed89b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d6f4a1-825a-40b1-a1bf-fb00c6556718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce398a68-9c5b-4055-bee3-52a05e60ef5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ba7728-610f-4d34-b7f6-bf936dcd2bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dcf948-0a9d-49ad-880f-d8534d2f4101"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bef00651-7058-4e63-a5be-e6a261f6d61a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2b8a5c3-f3a9-40f1-b1aa-82261b13c517",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9dd37d-a52f-466a-8820-0b26117698f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d55b7f2-c72d-4dbc-85d5-192feb20e718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fe9151-e590-475c-a663-ad69fa39fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ba4cfa7-a6c9-4942-b5b7-44ccacc6a83e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "430bb3c7-1928-4191-9d5d-5894665d6565",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "234643dc-d536-4510-85a4-c3f17948c14e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "758d84a9-81a2-4957-a68a-f9e4e45bf0b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d33e6e-26ae-48d8-b00b-daffa6715364"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6406f723-8ee2-4ffb-952b-2924552b3fd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c284036-7041-4ef7-83c4-c143a8c0be66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f200325-18cc-4e6a-b41f-63bca9d4aab3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d80b264-5f73-4177-a8be-ceabdcf8cfa7"
            }
          }
        ]
      },
      {
        "id": "11bf0502-065c-40d4-bc0a-f7a926f6d69d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b50e5c74-038f-415e-95e3-8884de87eb4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fd15e68-716b-42a1-848b-7688a47985cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3609367-0f7a-421c-a0e3-5d5ca52ba0e7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324e2e70-3fa5-4484-a1b5-0bef58dd5383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfa8f75-901f-4f48-93a2-243fca856161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67545ef5-8761-44e8-bf09-3317ae1c17b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f621a5-f7ca-4891-aaad-f8c9b9118ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b82f0b-d8cd-467b-b2fb-80e0ee5f1e98",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ca403-c12f-470f-9d71-058f73191d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8980711-ac91-4b1c-8a1f-6994d7f773ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808db6cd-5e1c-4c89-92c8-a822e6bad072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f793641a-925b-4970-aba1-60681f83f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc8252a-6bf7-45bc-8729-f657dbb585ad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565375b-d4c0-49df-b88c-699e2ade8e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ceffec-71e3-4c7d-b925-c2872092b002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abd1fe3-b89e-455b-8fb6-35a0b3cb45b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95818364-3265-4a81-af56-2e1a19515417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd4812b-c452-4458-86cb-667d50a0638a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecadaade-c225-49e0-9780-f3851df6cc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e270bd-e0d6-447a-a179-af40cc7b98d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52acfb8c-0aa5-4069-9611-99f37925aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b55fde-38f3-48ae-bd17-aa1324987603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a472dfa9-b05a-40b5-a7bf-a574f4ccebdf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b084e720-6dbc-4b6a-a28f-c0b3dd771e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47010cac-effa-4fec-aa96-f3b33de97988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc001e45-2bbb-4992-bdb9-94302c59bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabe447b-ed5e-4b46-87de-6ee831b0e0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d397f74-09bf-474f-9a9d-a64809c0922b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d99ad0-7d88-41d4-9c2a-2e4b143d79be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c07938-55d1-48c2-be13-7f285a7c23db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc968acd-3ba8-48c5-bb43-37ffe87e9aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b07e9b-1164-4b7e-960c-96a8f5c95f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25178070-e7a8-49ec-a4b1-1a231aa6f499",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef44558-49f9-4918-ac6e-bd15fc538499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c2edea-ca9a-43c6-9520-b906e5de3860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b132c-8407-4dd9-be24-078cdc98e2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0074b317-4a75-4310-95c3-7d51c3119902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae0e99b-2433-43d3-bf48-1abad3881926",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7fc92b-7de8-4554-9cb3-0019923b8b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e6a2ed-0554-44f5-9090-ed93d1e72b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4163770e-d799-4aab-a61c-0f8d51735365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4397fe-8bc8-4512-b75e-1d34e80c8628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab02dd05-4fc0-48d4-aa15-a6488d41f2a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d1f6d0-7ee8-4fe3-9b3c-5eb9ed1a88a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3fab96-60a9-4489-880b-8db334c44d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d5f215-6bcf-41a9-a058-38c0d5b61073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3051d16-5a27-4352-b579-03d9fd3acfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7241b49b-8f86-4269-9381-369a9228b526",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2c84eb-1416-4698-ba4c-ed4b4a89caf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f4c6da-c2c6-4504-b0e2-f6e9c747c612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e297c35-b384-4437-8850-d253da4e196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b493eb80-468c-435b-a513-ff06ffb9ba56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df248f6a-7e91-4b61-b9b6-6e985eca0fcf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d265b6-a8b8-4c81-99b3-44cc684a6e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f42a44-5373-44d0-ab34-2cdd7eb90b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a47db5-baaf-4b2b-8f16-20bb63b44be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8edb62-0086-4fa8-b3b5-94864b2d255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03838b8a-7592-498c-b1f5-17264dac6c9b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34740308-79ae-4724-85b2-79ac951cc4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2fc1ca-79fc-498c-ba1d-a78906531bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9284871f-df66-4929-838a-c1f5cc12ee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f304255-d183-4ddd-afd2-f15d25689f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f2f2c4-a044-4ac8-8f5b-2730e22aab13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07acdf5e-1806-473e-ad8d-37879b429fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e98f24-e1cd-4a3d-b2db-93d92e52f4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ad4cc8-bbee-44d1-bfc4-e28be391ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0674ca1-b458-4dc4-9330-a8332ed46243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aa846d-da71-43da-b844-da368a2111b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913fc80b-3b8c-41dd-813b-fbc37f8655af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0355ddec-69b3-4f06-940c-7a7ca68de534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2a7399-5700-4817-bafb-b3ede9fe3590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5059d67b-d96f-4cad-9e25-e19001ba3d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac3fd3a-d8fa-4609-9d44-642e5573ff23",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff544c7-3321-417e-be90-c0af82d87cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac906ee-829f-4f2d-95e4-68b3cb568bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6d9f0f-8856-48a0-9947-1a95f0ff3453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a28d69-86c8-4da0-a5c8-c921ff95384b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f351b4-3117-4196-ac98-f8aaccb7783a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc62aa0-856f-4f75-949f-dfce7d09ef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0be4b31-66ab-4400-baa3-afdde2ad253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022e1e2b-dc56-49fa-9bee-2fc144248aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff96ad0-42ec-4315-a658-f2ffb7946ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8be70e-255b-457d-bef7-50fdc3a71183",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c5141-13be-4e1b-8620-8e779aeb80b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1798d33-36c3-430e-a402-6a7d51235c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344574c5-231d-4d2d-99c4-85e2fceb551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "11475fe5-9efd-4085-976c-51006aed066f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb6c773-e669-4816-963d-e0187d57ad0a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d57a56c-2a7f-49ed-aa79-47c94c353ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eec9b1e-a4a4-4c4c-a4d0-361bb52fb79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b8e19-dbb4-4cc2-8362-30e7db3496a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5e5b6b-de56-4d9c-9ebb-73f4b41eeed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b9ce4-ef93-4e12-b5e8-31126874e4ce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffedd1f5-6d57-42e6-9875-21d813de3aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ba0a2d-a551-42db-b9c6-30f4676b7f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4a9a10-1171-411e-90d4-6555de004aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d730821-75c8-49a7-ad59-50efbd6b5ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec1f956-ea71-4573-ac86-ad27fb081e3f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f1d007-e592-40fc-9fcd-0053af62d007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524997ff-9bd4-4944-bf56-8c50e82cedb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6064b78-dba8-4c2d-885a-9611ae26966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a863ef42-3e0e-42a3-abb5-378f4bbd9018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3efe07b-944f-4c74-ae63-f057e1c20789",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6933fff5-4d40-4b26-89f6-c0ed29494ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96381c04-36de-4d25-9529-92d2bfa2758c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50018afc-245e-48c7-a3f4-8e122a77579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11f2cf3-bdc5-4965-9639-ae45cc222e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec06c452-0501-4e0b-b052-fb3fbf28fb28",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c4ca28-53fc-4778-9a56-90e6e2163f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42059f10-44e0-4eec-a01f-a3672a9e7e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05c1321-a893-4497-80bf-7ac2333c1d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da56de03-0fa9-441c-ac5d-dcd348d2e74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3dc816-c9ad-4ea8-91b8-573df7857de0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0dd71c-8e3e-4a2c-be4d-f3724b385174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6af14eb-6c3c-4ecd-a75e-c80c7b486178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebff4801-669a-4287-b89e-480049f2967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c35930-b4b7-40b4-937c-ccbcc3de8527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69906742-004e-4965-8546-e759ddf0dce5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a84ed4d-f0bf-4376-8f2e-16cafc22f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cc18e5-9576-4c6a-ada5-3807c5423cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79211dd0-fe21-411f-9de0-88396851349e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359b58a6-64ab-4f22-9a60-f4b9a355a0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d298a35-1fde-41c3-8dc9-139fad9a8cb2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ab7a5f-8973-4f3c-a02a-8d6f6075aac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d062e8-53c8-4f5c-a597-045e08b58feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8edb4bc-9ea5-457c-9c4c-236cc347fcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9f4f7a-5302-4456-b9e6-7b85417a004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146a4354-8808-47e1-adf6-2dd3e9add40e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9a4787-1a8d-4922-af73-957b67c7ec0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f62ea11-b61c-4298-b9ab-dcd0d635aeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117d5b67-48ea-46e3-92b2-7b05158637aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bff0763-0dc1-4044-8a5a-d587f0ca2222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d93149-e5fa-49e1-9463-e70399038f63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b7225-e54e-4b38-9ef9-4dd09b04a2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab21db4-ab5e-4773-a2af-0ad9ccea522b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f89d6c-a1a1-49e0-a9c0-5acf3c6e0a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fcf718-37ea-4a9b-a752-bb2d0b424e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e15df6d-bb65-43a9-b7f8-61765f309f05",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256b8fcc-12eb-4194-a97b-53e3381cb9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71598243-a217-48fb-94f7-6804eb445484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628fc5e6-4bdf-4e00-b028-b5bc2d282616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a1c20a-96b6-471b-8ed0-82946ef10389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5d2f0d-c8ff-4ce3-828f-b99605bcee33",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6c465f-5398-4d48-9579-867f555f1d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2848fbb-483b-4e61-b601-0a7ee4ace99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab74f25-a536-4fd4-9be4-e29fc262efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "244c7bed-d788-46b2-9350-809bf585adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b932715-1c67-4cb8-a58d-ea41308832e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0285de64-925d-474d-972d-5f06f666dec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638aaff2-a0ba-4fb6-874f-5eb17ad6276c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c8e648-735c-44ed-97d2-c1725e839e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c7dda8-69cc-4e5d-aca6-2ccc6b9fdc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28491b9-4999-4d36-a320-18c83687004b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7af0b9-aa70-4604-8478-2c37257003a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb18fb49-2fed-4423-884b-4ae0d78bb1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718ba355-3024-43ac-a8e9-dc2d325c939d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbad1b2-4b9d-4174-892d-e6d13cf6befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635304e7-df16-4cc1-9074-93b77018fe62",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966c57df-767c-40f7-b016-e34fb6d5a923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fbb031-6e72-4039-8cd7-3e76af90ef57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2f827e-c169-41d4-b466-4d15bd976264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c3de91-8634-4b04-951c-2002818cb87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44736993-96ce-4ba4-acf7-314d031722cf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c5b31a-5ab8-45ce-b737-3c55d8840a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af74073-087c-4674-be61-73cfd7539296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9560290a-2ac2-48a0-9cbe-a359342b1810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2459205-8b44-4300-9c15-4366763b3382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e583754-0b50-4eaa-9f8f-3de9d2fd8bbc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1054d46-e088-4979-9040-78031ea38916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16dc427a-4858-4cb2-a706-001884e40eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43b1e5-99fb-4dd6-a478-1e8b4a9ce97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c36563-ca79-46ce-8382-b7308e8f356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d55673-7693-4fb2-8007-93a9398ca052",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c33ac-3552-4d54-b70f-aacaebbebf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbdbe59-3d57-4b9a-bd70-1b25a86a1af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbf0c62-3382-484d-8cb2-45fa51f23a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fd012f-a517-4f73-af56-d6c257d5c047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce88502-c953-42a0-891f-176ca3e883c3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2666ea-975d-4d21-98c3-766b7a353c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48120984-e5cb-4537-86c5-34b77f3f6cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eada28d5-7ca2-4e41-b120-e34916bb5d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "018c330e-57e7-4f26-925d-1e7b1f625cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fd3e43-a72c-45c5-9abd-3c8638eb4439",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54ea9bf-ebf9-45a7-8e84-ff6fa549ea94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761df134-bfbb-4a2e-9fc8-94a8f4f1c660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba8ec79-e90b-4775-9779-e565f22f497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60cefe7-1d2a-4b5a-bb80-05c0d3dc8513"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c91c5786-8b74-4da8-8ecb-09cd526187ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebfb846b-cd9e-45d9-a501-caf7bd842114",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eff2ef-92c7-4863-ad4c-7543063be76b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe7d70f-3a78-4058-8046-c5fc58e132cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc59146-99d9-401d-8d70-7c15950df7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bddb97c9-30f2-4c43-bc87-32dc87381af5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df1cf097-1bbd-4a99-8e4d-9cb2ead37393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "733e4e3f-a3d5-46df-9b3f-73a6629c7aad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76fec6df-530a-4b51-8f2a-32e8260764b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1e199ab-fa33-4b2e-b298-d8fde364df1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e602821c-9c3d-444e-a312-3739c366f0d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b77351ab-ce71-4c8f-a00e-bb39f6c12287"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44caa383-5280-4026-a6ab-6b8f45c7eaa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b23b70b3-30d7-4646-b593-d79f14465ca7"
            }
          }
        ]
      },
      {
        "id": "791a0678-75f0-4d67-ac37-16c8f36f5384",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b6d25860-fcb2-4fa8-8dc2-4b8a04f8ae9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fecb8751-7eeb-4b5e-9c27-29df1dbdc5dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef94fdfc-872e-4504-93b1-09312b064da2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7937c8-981a-41e4-9e18-d04e7508f8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84144244-f026-4093-87ec-2ed306590f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc07382-c9cf-4b77-9ccc-b802659b1355",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b28f9e-5dde-440d-a19a-9056fde27c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facbc829-8629-438e-bd70-a7cd5655e93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d8c24a-535e-4cc0-834d-ee5a2148fb4d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7d1e4e-b878-4631-81dd-6d28d26a17bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa9d64d-7770-4840-9f30-728830ee19bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317e3ecc-a297-4d15-91ad-56a37d727e49",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20ed4f9-f98d-411d-b0e2-870a4023ba2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f3d073-1842-4208-96c7-9b050072a093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3166e444-20fe-4b98-b484-5d48e2f40f1a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516959ec-ada8-49b2-a31d-742268828275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94835aa-6ba9-48ac-a66e-4c423be375ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3c16b6-b771-4cf7-8d2b-e1f1f8e8a0b1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b0eef7-5375-4d26-ad0e-7af9943c9966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87aa209-4f3a-49bf-b0b1-91013161f7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6258c16d-211d-4ef5-bb30-28a4fab00387",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a7782b-c4d4-41b7-9c39-1fa48f5572bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3474d185-c7c0-4294-9950-85ccac722f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567d4db5-4156-403d-be0c-58df05395000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0887d6a3-4070-4489-933d-9e512049e024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a2539-b5e6-497d-9676-f289c45aa556",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a4bd81-a37c-4f85-b2dd-d34e9d9aa6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1440d2-0aeb-4d0b-a99f-4cf5c4719ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2851ccc3-0400-4cb2-87b8-9432b9790929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b922dd40-9ccc-42ac-bd6e-44fbafe379c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74b5aa0-9a6a-4df5-a4ea-7853e23879d1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8010dc1e-a4b2-4dc7-911d-bac2eac4375d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebaf8f64-b655-4e05-b1da-0b01a3c47c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1150030-020d-48ce-81da-30dc54be61b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b00a35-0010-4833-b48b-968deff540b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee10a26-2216-400e-ac5d-079ff119423f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcad072-0c1f-4677-afc0-252b73a85d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e67a46-7eae-4dad-a509-aff4c07b5add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97912b4-6368-42fa-911f-bb5847f3ad10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1241f9-62dc-4577-883a-ed3dfd491a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b111d5-ed07-4065-b041-6c6b756f0631",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f64b02-5998-430f-841d-3614220aaf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a947d82-6e39-4bab-be92-fbe09e6487bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14756960-b688-46d0-a0c3-8b3338b866a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcc9c3a-4e5c-49f7-acf9-37f001501586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770fc514-5ad6-4022-b3ea-0104de75f9cc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efeac3f-fa66-468d-ac32-9ccd2a6705ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66640f83-2538-4dfa-af2b-5c23b8912b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1c0995-afc9-40e1-ad74-d1aa40aef8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8f64d3-d445-4a5f-9f23-25e62406f958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248f7300-7230-4521-b7cf-eb10e4a45981",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a441ad74-9db5-4128-af5c-7183437f0517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af92304-4c59-44ab-be70-fe54e202c29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182ff25a-ca4b-46af-af35-eb774297718c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed611b4-d8c2-4197-bb4d-6fc681f049ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e223564-5ae0-416d-acce-111afa0be24c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67205e8-61dd-4502-b526-38334544010b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4775a953-a5ec-48f0-9284-d77fce0289b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d6afd5-937a-44a9-804d-1755c5a6ec90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23462003-d15f-4cf8-b750-a4dbc625201b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bd0108-111b-4a06-8262-e3c7e73af065",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fe6302-b4b3-4b2e-a411-73cbfdda9e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c607fd49-edc8-4dab-9b0c-a61e2a39ba03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5afee4-1ec5-42db-b497-8fbb75f48d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7e0eab-c5e0-4fad-818b-d7ff4a4e3b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e9818-3478-42db-a626-40e5c6488b12",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7926d1fa-0ee0-48e7-889f-649456e0c188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34568895-4463-4e00-ad46-bdc06608c689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76745ba-5aff-43d7-b215-6264cd0d2ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92e46c6-beca-4474-b646-34a7f0afa33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c4e3b5-a47f-42aa-9a3c-309c50e61d60",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b29b02a-6817-4ed7-9272-bb40156f0d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cf4040-9e89-4b3d-a0f2-50de5f63ac70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2323b3b1-4e65-42c9-9436-b50304bf2c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c468e27d-2c44-400e-ba36-a0385e2c558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb22b2f-f1ac-4f68-9f81-25b55355b0c6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6054d12e-cb41-4b90-9427-a12e0695c197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293c84d1-f602-40a0-8ff2-1869c8f5a710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718826fe-e1e5-425b-82cd-42dd0e73a733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b149184d-d18c-4c58-9693-837f56e05bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01764664-fdd4-47c9-bff6-96efeeeee5e7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388256d3-4f0c-443a-86ca-d628ad779eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4b70d8-6db6-43be-8555-fe68fd7345e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5bc560-404e-41fe-8591-493e0c03b08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfafb87-a616-4dff-90ec-2e67afed0ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0c271b-6e4c-4370-ba2c-26fa110e903e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcef80b6-2b63-4e12-832a-8063e5b7b81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd843998-d76f-4982-b2ce-b3957e1f4010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72320a6b-aef0-4af7-8761-d1205d564355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebe0bd9-79ea-4e38-9c51-5a91861aeedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01584a6c-4e7a-44ab-9cc4-cad882b4bbb2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de5aa7e-3587-495f-b3ed-7baeeae8bcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0cfdce-cea1-46dc-a0e8-729b0badf2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65da608a-0638-4f2a-9847-847b798825ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50513fe8-0e11-42d9-a694-0fe9f3f35a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263c2430-48a5-46de-8048-930358608303",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4165730b-2c17-4e9f-89a9-5af0ec5567bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bf4fb3-dcf1-4a2e-b9b4-757c1db47ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8debd4ca-fc6c-4714-a9ba-45cbb4f7a023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6eeff6-bd49-4d40-86a5-a2ee484d1b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3143cf-7198-483e-8dea-28d03792380e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43d8afb-f2f0-42ff-af04-3c1310ee3d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4929c8-ff84-46bf-9527-1a843ca8df80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e1a1e2-fd01-4156-ac89-a98aca95fc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7833d845-3332-4664-8500-3eda87cf500d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255be998-5b09-421b-bfdb-34c9598230a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc6b116-3e41-4ce7-ba3a-bb9fd6ae21c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be54cb3-7938-46cc-bdb2-b0f1cd9a2879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d168b299-de4d-4e74-82cf-9ed9e3f55198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c6b531-f6a8-4d99-8d23-6b803a8e892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7ee5b9-dd4d-4e5d-9ab0-2ed6b2e142a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041151cd-45c7-4564-bf5d-5cf39a7b5deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d522a7f8-4a73-441f-99b5-9cfaf5030cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad565c6-dd36-4562-8e84-7bd26aae9d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324b515e-4716-48cd-ba2f-be14db8fde87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601ccf87-60dc-4532-aed6-13d78da477f0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066eaa88-ac92-4049-b5c9-d074edc47a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbdbb99-4f18-463d-91e5-5e2c944bb658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc329ab-6f42-4782-b440-05e90a63c97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a16a7d-afd5-446e-8e9e-636f03485f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a79740-0138-4cc1-9220-168168d02aa2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca0eb6-d398-482d-b4b3-7f2663ad5dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a01acdc-9b1b-4db3-b672-1889689ac0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dec0522-23cd-499d-a61f-865c787ba7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ffb430-0c88-4873-afe0-2820aa74a6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765ac295-5f1a-4494-85b5-3a9383e61219",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af335d8-7de9-4291-8b91-5f29692519fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95ce920-4b2c-421e-a625-e7a97445d870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84676cd0-7cfa-4971-a08b-78f914d70f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476cda5e-06f9-48fb-8bc1-7abc11dda84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f518b30e-1924-489c-95fb-53ccd47e9ed3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f44b80c-2fb1-4c0e-948f-553cc1bcd937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3fd2bb-88de-4dbe-b12e-e21d100a6101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fabb9d3-1189-4617-88a4-70680e5617d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baac0380-5516-4564-b31a-aa793d4dcffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fc3971-35a9-4a73-aa8e-f8afc0e5e9de",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce56c91-a1bb-4ddd-854c-d9419ef9c6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542cd24f-aeb9-4196-a2ca-218c3e7835bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c50bf3-60fc-483a-a158-36225593a823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db89ee02-404e-43ee-b5ed-b40c21e73dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d8a39a-72fe-4c97-b86e-fe039562de55",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb8b214-6005-46ee-96cd-2a2d09a066db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dfd4912-be74-43e1-b4eb-5e0e55c7a7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a877070d-7dc6-4d0d-8f75-2db791514cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ce79e7-3986-4c29-b2b6-0d784288c87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f4a30-dd31-4531-9af9-173a48406ed7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a4fa54-2a51-4a4f-9d7d-b4c6b13a89d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9281d335-853b-41df-bbc7-47fdce678851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab9978-d576-4d1e-8d19-42d60edd4598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16649e09-ba23-47d9-98e8-67e39af16382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29f3ec6-b304-4c5b-8a62-e8526e047e96",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f45e44f-5324-4d58-8f5e-f085b1e495c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ea18b8-bee5-4bd1-bdbc-c44e1809e69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3086351c-805d-48a5-a973-6f369feeac52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63562d88-0cbb-4df3-af4b-e65e1f22dff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a72ac75-b748-4256-af8e-a39a310e5b67",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9151f078-ca55-4d6e-b80d-893787cb4d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6248d0-d9a1-4694-a616-c561cffad40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d206cdf-bbbe-4210-82a2-d25e892cff2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a3f023-e03c-4a95-8c3c-5c43eece5cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646e8280-6979-47bd-a4b0-dc71f956c33b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65930350-2ba9-4872-a5a6-457106013f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6416c5c9-07bc-41b0-92a2-12650bafed63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89e5720-726a-4b94-a46f-220073bc55f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed1cca2-a5bd-47aa-8ac3-d892370cff58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d2d09-2b06-45d7-99ea-ed7e9f3713ae",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c96cb2a-52aa-4980-9d41-ff7b1bea9f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42339f13-d02a-4342-a7f7-a630ae8817df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6e1166-267d-4bb4-bb85-9d7fd6e6b5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af185c-80e7-4ef0-8837-f52109ee6317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df142e9c-fcce-411f-b608-9ed9eece32df",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3355fbaf-0aac-4ff2-b9f1-d14b0b50ee1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3ae49b-32db-4c05-9c15-0e9e73b444ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d2d8b4-6704-4188-9f7f-6d8ba4326521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bf110a-e62f-4145-a233-07668d279c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4678aaea-454b-47a5-bf61-b77c96a2e547",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bdb56a-bbc6-4a69-93ba-303ebb57ff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419a0f7c-d08f-4981-8b2a-714885632a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c40e62-49a0-4fe3-a371-c5a5c462a717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d2408b-5fb1-46e4-9d1a-f6a5a97896c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d2a5bc-500b-42a1-b60a-8836f1d58343",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a44b228-4129-4e73-971b-4ae2662cf7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c8e621-da8d-4b84-bc3d-acadd4ec4cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fce2f88-f0a1-4b7a-929a-bedf677427b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9090a725-5d9d-4152-8f42-e474ac6b5dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de5f3c-9293-4e95-9a7c-25ef3446fb43",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91af6af5-df26-41cb-a867-e526764bfd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042e6f91-f7cd-48d7-8355-b269c0139e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b0a5e1-068c-47e4-9252-59fa6ff31387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ce9fd4-943c-43b9-9a9e-b8f5f3ba8568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb361eb-e6d7-4e2a-b4b2-f1c02b0ad6da",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a2adc0-5c96-4c0b-a19e-e71f3553bf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c992a479-c401-440c-9a87-e3f20b606426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c20d7-cafe-43a2-8178-030953eb323b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a65d948-2637-430a-8e09-f5f22a271207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38543690-aa47-4afa-a933-f78b0200fd9e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590bedf0-7f28-42f9-bc6d-1caac5a00b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dfa57f-7ede-4639-a4dd-b9390e6f1c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b9d199-3f20-4dfc-819f-7a0daa25d670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb1175f-2bda-4768-8aef-fbccc5ecb3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf53e3ef-1f23-40e9-9192-4967fd91410c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf24b01e-d586-4a76-9ae6-a223b11c7013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36483058-67f9-46bf-8b94-8503bd7f8ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bcef82-8afc-4a15-a484-3b919512609c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f8d29f-d78e-4729-ae49-c8794613a37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125e3bc1-bb5f-4577-bc3e-89e63a36b9ba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f99c905-b3ea-4a33-af9d-318fcaa0c1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88de154e-ad49-4361-91ab-8d17c0dab476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48eb136-03e1-42ad-b2a8-49b93dbb1741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4496d68c-aa99-4c71-bb80-e236648567fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7b32a6-2b51-420a-abd8-e182da39dec4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3991e72a-cb55-4122-96ea-8e9e2ec0656e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959146d1-1e8d-4696-9781-118d59f926af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d349bf2-9c47-4624-ab8e-3e3367888cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b44a6f-848e-45ba-9c4c-9aad1f832b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a95a536-4e9d-4894-9f5f-4923aa86fa0b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5d3e8e-36e1-489f-a8d4-9f33a5ad504a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d73a08a-ed83-4618-a921-9b0ca4fd4f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa581f4-b77a-4301-a897-dda53fdcc079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d989218-1a6f-4359-ae6b-a1b8c2588da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c65cd60-c42d-4f3f-a9ac-c54b33001401",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f445219-6aa6-49dd-af49-7237de1fb04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af354e4-dc39-420b-9f98-11fd076d77ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bd9cff-5634-45da-a2e8-e1a528daec60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49190fd-fa9d-4f27-acfe-14ec175c4c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4ae413-f39a-4c42-a937-9f244cd5d1f6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33abb2a3-818b-43d1-8b84-86a07ef5485f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a8f4df-7b28-4171-8388-7b3b9c823809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6923653-a060-4dd5-9b4d-026728762a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b316954-53f1-462a-b4aa-6ec03a628492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c24755-e800-4631-9173-633494368526",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb4ac53-9247-4522-80c8-607d61aa3f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2523d0d-9267-43b1-a109-6eeaf880b5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf9c4dc-7f0f-4287-999c-8a123b21beec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14256ace-777d-4571-a83a-c14d2bb33c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8c2a09-363b-4624-9085-e775ae8035e9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed798cdd-5abc-457d-8e63-e6f5c8b84639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0300037a-abde-465f-a9ca-5d4b9c40dedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4044839-4bcd-46aa-a1b4-84e9bfb3fddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3cff30-23fa-4256-a1e5-90324ff3d4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3028e8c-338f-4472-b6eb-7120b84ba47f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4d0d95-1b7d-4db6-8f44-f25423d6379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dc77b9-e8ec-4ccd-aa38-726813731547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed834ac-db32-40aa-9a7a-e29fd5e2d08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfd7d50-5311-4d8d-89d8-ab79e39f4cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2aa874-ea3b-4b68-958b-889aa32837fa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9041439-a082-4aad-87db-9e18b117fa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10781fa3-04a9-48fe-b128-146127a3cfdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7924ea-24ec-419b-9d83-1c0e3d4a0379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0a3a9e-a600-4b6c-a9b8-31047ecaf884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe96f757-3882-46e2-b66e-d32156bee6e6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c1974-e4e3-4ed6-bac1-50c50f7e8017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f774faa-8658-419f-8d88-2a23c4edd4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a88fd9f-14f8-419d-86a4-4319b4179a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a59956-ca79-480c-9bf4-d5f662d84784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db6ac3e-6122-4f20-b2c6-b84857d9cd69",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cd373c-1f98-4b51-b74f-692b6fb1a061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78c8129-995c-4f46-b32b-4aa0be83fb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af773968-c69c-409d-9d7f-69a48b5da3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a672fb5-cc32-4279-b167-86cea3738c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a562141c-71ed-4547-b695-ef99b18066b7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bb2588-9ae2-4373-b003-8c1ce4f51b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77227c71-6b53-4da7-8636-c54d7d367530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e10e2b-1bb5-4a0b-9f97-311bbcbcd7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905c0f4a-0e4f-4d3e-8930-e834af80dc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204d6b29-17bb-4dc0-ba8a-6d962091f565",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edf439c-1143-4fd6-badd-2589ece61e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559e852c-8183-4a72-bb7d-77bdd37436a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8c80a3-20e3-4fba-8f97-0be5515a6890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03921593-69b1-4811-b9e3-aaf3e42920a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35841b21-215b-45f1-88da-9371ca05ab2f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba7e01-db1c-46da-adff-7d53250f53fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cf8ebd-42c9-488f-97e3-0ce0a458adc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f847649-e250-4b5a-b67b-ab8c6f38fcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9d53d1-94b6-481c-82ca-2aad0912648d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2074ade1-18d0-4a20-a347-b6abd197c73f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d227ab14-1968-480f-9340-56282e3e711e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd2b5f5-a7b8-4308-9771-8f805239b8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3931f29-6fb1-4c22-a756-034c9c6a6870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9212a0f8-3e8e-4952-893f-f7f936928930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1eff3e-2b44-4b0c-89bf-6079839fa81a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df956d5-3c32-48d8-b801-43f820cbaeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3594091c-9ead-43fe-951d-fd201920042a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95cea3d-38fe-4275-aaf5-9b793c80ee9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb431ac-9f96-4fc1-bbc6-2ae7b456561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0275b6-df8b-453d-ad0b-4eb803ce2b0e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be854e4c-3a1f-4859-a747-1e91f16444d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f36525-3d84-4a25-bbc3-bb84f0879709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf49990-33d9-45ee-800f-cd54a978fc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9921a737-2382-442b-9dd5-a27febedd7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f83b05d-3256-4f6c-b060-fe4475b0aeac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3e6692-8eb0-44ed-97ad-09178a94d0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ded2aef-4d65-4aa5-ac52-7e554c4534a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82287c40-4c73-467e-9cc2-484d1fcc3390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3912ab79-9618-4b01-998d-e119af6eaaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bca576-f97c-4633-8142-78951fbf4685",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca94f19-9068-47a4-b1a1-b114652f1562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf39bad-38fc-42ec-aad8-430463f81f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987c3940-2f2d-4d79-b35d-4070b8dacec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30292c8b-3f06-4899-8304-6eadc4dba4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9e7806-cbe7-483f-a02a-f509fe17a767",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08b8395-3fe3-4ec9-827e-0be523d5b05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88c0892-72bd-423b-8f2f-62370a7102bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c51d4-e9ee-42b0-b2f6-219c1aae2b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c19f4a-a46c-458f-bbe1-93ea3df43adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee4f368-85c9-4f55-922a-467deddb9326",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7524da-c208-462f-8428-64c221a23544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914c98d2-6f52-481b-b517-53d2aabdffdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed262cac-28b3-4fc1-9d78-33bbd04877ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092c66db-53a5-488c-a4e2-b649675a92cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49bc5b9-9d60-4744-9ac2-0aa4d56569ff",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc2e9b-ef6f-4e89-8394-fe7c9ae2dd63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74c22c7-d38e-4333-96e2-d146669ce9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201f148c-4fdb-4ca8-9e99-f9277d996cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aace27d-53b4-4421-aa61-5178a498a599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9a2671-d1de-4fd5-ad1c-5fbaab8644dc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a5a78f-042d-4a92-a661-848b037a0346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e486ff4-22fe-4929-a685-c1800f352736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46818a4-eb7d-42ba-8641-92ab80e6bf9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85913a77-4ce5-459b-b8b9-6bfa3596e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70441f64-e586-4be8-802b-0fe6eda5fdda",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af41cbdb-fcb1-46e2-b701-20314d53eeec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1041b9-eb1b-4bda-8c2e-fc6e4537ed32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59a3e3e-0ef8-4aab-8f5d-874ca386692c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b18f40-391a-4fa2-9c6a-7f614269bf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba70b570-4369-43c4-b301-d8c90d04268c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f8e18c-0f21-4a3d-a95f-95a22d5624c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b6e024-063f-47f8-87ca-8bfa29dcda9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b1b73d-5f1c-4dfa-8e27-bb7ec13827b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a505e6-c617-4dd9-8ca8-fe2ae9188da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04592eff-48ac-4e7d-863c-9cd0891f5b5b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c357ee-dc50-4faa-a150-563a37eaf480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d64d6401-6f17-4508-8c1a-98a58a4fa7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0ae3ee-767c-4fb0-9405-5d21495ad8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afc8382-1b51-4351-b3ff-30b444bdf134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e185d-0b5b-4c08-9c63-f2619e43dbf6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef95a19f-41e7-45a0-ad12-868a2620d225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da67e062-bccc-4e02-967e-9d30d84708ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08f7fc5-c15b-4845-b590-41b681c30cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea71dc5-e323-4aa4-820f-2e1f6f53ad8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f227f46-05d6-4571-b145-619d3df65aa0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8736fb15-fe3d-4916-9a04-186a6dccb1be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f1f8443-7c67-4d70-b587-7900b2231d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fd5da6-51c1-4e74-b319-6a9c9caee4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99120875-ad1c-4b9e-ba32-d7aa30362beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff6cce7-5f67-458f-90db-25fa3c107716",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31457e69-b2a6-45b7-b7e8-2c14fcddde4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a16f75e-89a9-48d3-a3c4-536e7d7219a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490e5648-383e-4bc9-b6c9-b75c725d8f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5d7297-dc02-423f-b60a-36a6bde00d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642c8551-212b-42d4-8092-a2ffda2d4259",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2062fea7-4dbd-455a-b887-846e38f0c901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418a818a-9d2e-493b-bb38-24039b4ee5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8dd36d-4afc-4488-92ec-dc35cdd49002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d519b9c1-d9e0-41f0-a0cb-6789db499736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826d464b-62bc-4438-b87c-f9b23517d7da",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eda869e-bd1e-481c-96a5-5b33dc8dbfa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3fe71a3-ef9b-4e50-a029-f28326012a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab189f-8a31-4dcd-bf99-4113733c8ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a018f9-e2b0-41a7-a457-a261944b53cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cfb3f9-3cc7-4239-9168-ee3714224b20",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b910a9-6cd9-41ca-bc07-ed4280b9921a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e380d4-9628-4e48-bf24-cd904ac3406c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f09a400-76b8-434c-b668-3467c6c31f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207e9254-0500-41c6-ac90-0cb58c7330a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004c571-79d8-482d-b031-6b51c97770ae",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6676e2ae-294e-48ee-8df0-0e223bdf6feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9d4332-4a60-4730-b065-2fc0bd92e841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b57cd7-4e5f-49fd-a583-11b36235be1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e0af28-084e-4a86-bc3f-c0ef4573d6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89539aa-c722-462e-9cc8-9187b38daa6d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3bd360-e3d5-47fe-830b-d4b95ac1b4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929994ce-8759-4bc4-bd87-e44074a530ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b7b8e0-2ecd-49ca-89d6-7bf6d246d7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8f931e-436e-406f-a2e9-94bdff2e3039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8702cc4-f6cf-4ab9-8a36-bbab1f736f94",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df392408-107b-459d-a007-c7bcea0213cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b561227-8db3-4170-9440-c2893d333720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3941923f-8501-4c42-a5b7-b06b50024686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9086e24-9ddd-4760-9e3b-2d80b1f467b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4461e7d-71dc-4878-84e8-176557cfb043",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae012eca-c8dd-4c8d-9fbf-66e227dfc125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa57b59-4b74-433b-9bf7-abd5eedc739b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08e3c1c-1284-4907-a419-6faa304ff0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7425ed-7bf8-4f2f-aa8c-e485a1ead711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86773517-670b-4401-9064-0887f4d2c1e9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed66aa44-b6c9-4b49-9f13-17c2b972b12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f5d95f-2c92-4e8b-b511-6be74cf63cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f46e11-6a9c-467f-bf38-ac16a3bfcbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b731215-efff-49b7-b3f6-c37ba65ff64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4360ec9-3cbb-43fe-a7c0-ec9574e2f17b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6f474d-7af8-4cfa-81c1-aff1bb806b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1cf802-49c3-4af5-aec0-7a16080ae76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91992ea-23e7-4edb-a122-9330ddd7cd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d73cfa1-78ae-4bf8-9bcf-b34541b8570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedcdb03-6520-42f0-b20a-33edac1bb7fa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5281bb-0182-45c0-ba75-952fa3b008dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30cde318-16ac-41b1-8c79-e1663ba34236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280f6099-c5eb-44f0-90c5-cdf9a5088c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2b9f1b-89a6-446d-ae8b-6cdab9ab02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321f18df-ff05-4264-9c74-6b8f13d9828d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b7d161-8104-4c18-a3f7-d8ea7f4ed46b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded0671c-209a-48ff-8ada-01b942cc5efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfdceef-a680-4b89-9e64-5773eed83ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965fde6b-e1c5-4c83-9631-c269eef026e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd257715-aa5f-48db-868f-c557d9e2991a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dd3807-6b1e-4dbe-917c-c88ffb8b3158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03217f1-db40-4ca6-8d50-06e3f34a08b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920575b9-39dd-4021-8973-dbe591a78d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb89ea9e-6e7a-4658-8dbd-4abc5d25419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17181406-0223-41fa-9d55-7c499235d14c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c04548-444a-4133-a461-ddca576cad0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3485c68-b083-4866-9d33-646383945a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018921d1-968e-474f-a46d-bd1e58620f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76d9cb1-9cc9-4410-b14c-1e994d5ec7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310be5c6-d5f7-49f1-989b-54251f2ff02d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92968f62-ce85-49b6-8f18-2941c448f660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590e3632-3d4c-44c5-a146-6b9bcf12af30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f02495-f092-46cc-b003-6ea84c229031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d27fed-d067-46f8-a749-cd2af0ea2756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b7a70-4325-4d9a-b891-74eb90c03b8d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb317c94-f78e-47b6-aca8-04cb16a1a831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b7c9ca-79e3-4020-b1e2-8c86d99044ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3b2c90-af79-4be8-a5d4-cb9819f56d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2323fc97-3a1e-4d1a-8236-646db9543ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd70428-90b8-4ca7-a4da-10f536a56bc3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c4ce47-86c4-4d3c-8fce-c360a3ce4481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b7664a3-02f5-4ec8-af2e-284eb7d3277e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f135eda4-962d-490a-9ecf-0572878796b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52da8b31-4d7b-42b6-9b73-e164f8ff4db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d571832d-5983-494b-a23e-89958c082d0b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c378ce-8897-4fb7-8491-4b3666d226f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4180c6a-0871-4910-831d-ca247d7dbacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ae4481-02a0-41c5-89f4-f61e4505e57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3a0273-d039-4444-b29a-63436e13a0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e984c620-84c8-4000-af2f-7e4950a70e07",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f589cb8b-d173-48d4-9c0d-82d895c6d2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96bcf4cd-2f68-4b77-89b9-89676b0d9384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247b9523-791c-4018-bf7a-ff6004b3462f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d24385a-7e65-4fb0-95ab-2bb9cfc04d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059352cf-b841-46e1-9c1c-7091e3144046",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169048dc-8bf8-427c-8cc5-2237e23b6729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9a46ae-f8c9-46e1-bd28-1b6da5e04484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428a08c1-acd2-4484-8f4c-a5c513e006d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330dbfb7-2677-4ece-95ef-f86e2e71c444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c340a8c-05b9-4ca8-adb9-a67bdf57e901",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a96353e-9073-40df-893a-faf592b9bffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7af28b8-751b-4b42-ba89-d0eb052f0c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b3a16c-dd8e-4465-b9d9-ea4bc71997f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10597af-e987-4dac-84d2-c550ec71f31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b0f05c-275c-4464-a08f-52794af0c9fc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a33d9-3f47-4711-95de-10221167ef8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b8a1418-ee92-4b00-b22c-c7b499c5f521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6a04b7-a34f-42e9-b8c6-3260213a7852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3315f4-d6d5-4277-ab11-a83de1e3859b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755eb5aa-ee71-4e34-b0b3-34060c3f6a2a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339c1aa5-3949-483e-8faf-6947c9794e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c244411f-d4bd-4ac6-ab82-9108fe170f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5887be11-3702-4c36-8ad7-6742cd382bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9870fe00-451c-413e-a462-364cae70de66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6413a060-1a35-499c-abb9-04af6a8cda5a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abfeb94-b00e-4b49-9b33-01852a43333b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648740fb-7161-44fd-be45-bb6b7edc3f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3db1a4-ddd0-4027-b429-0607c9723f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd5432f-dddd-4e74-b0ec-61c127724ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f7e9cb-5a0b-49c2-ad68-a86c4a322b50",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e090ee-8932-4f93-94c0-40b61ee59fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11259f1c-c5c9-45a1-ae15-826aa8588bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbb0a0e-0606-473e-bda8-7a9f31d928c4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e881a4-b518-4441-94dd-4652dd9bab7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43576452-f875-4a96-9dbd-b9f068c719c8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290d1937-67eb-4655-9be7-04c52decc718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc5d5033-f4a9-4981-9857-4f4bd24e8272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79a293c-ccd1-495e-bbc0-920b62d203e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d72f63-6012-4be3-9f4f-bf178fd5ba64"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4149d409-0c98-465f-aaed-8ae81d9e3c38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d79aa44-f8d7-4fde-9dab-33d0472b1486"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "890b4276-1646-4832-bce4-eeec1e55682d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0b5c960-3fad-4043-97e8-0e2d449c500b"
                    }
                  }
                ]
              },
              {
                "id": "ef373216-edd7-4231-b305-466afd562bb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ec7862b-4ae3-468d-bd34-a73ebd8e6161",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348413ad-82ac-4d48-bd4c-0063f7dd4d64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "46c2258d-4507-41df-8400-2a47587a6f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c240ba90-e1ec-47d2-9edf-b009a37452fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c36f10f1-e054-484b-a1ae-9588c7f88816"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4d31d3c-3373-4ee7-83bc-92565e1a85db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17854736-8777-4b5b-83a6-b13116b554fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35e6b8fa-06e0-44e5-81cb-6f8e1e606c24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95c95adf-25a4-4b36-acf2-a0f95f49fd57"
                    }
                  }
                ]
              },
              {
                "id": "a726a3be-aeb7-4d45-9e03-138ea16e340f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7249f107-91f2-47a0-85e8-fa0fb8aee04d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027b3d36-97bb-40aa-b7d8-e168535e437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "77704ffb-938b-47c6-88f3-8f80fa147b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60f238-778e-4d1b-9fbb-f1e707732aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61ca1d7-912b-4b37-924f-02efc1ac42b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e246bdc-3bed-4651-8822-bcc841e24051",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab73d147-aa00-461e-a0ad-3837dae6f5c2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6d19dff-a51e-4388-91fb-992c6d0fca73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "edfdf503-ed2e-4f9d-816b-a882c28f0c0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "656a0698-cfc1-4019-89c6-daf2cd7c8c0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b97b5de9-49ba-4783-ab57-e8d20ffc134b"
                    }
                  }
                ]
              },
              {
                "id": "0e348c7f-3510-4dc1-8807-42ca1ccaddbd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b414d0d-ef31-445a-974f-e7ca4f05e3e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "54c409eb-413c-4f7c-8e4d-96d545fffe5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b415f9cd-fc96-4b7c-99fd-69cbd97aed03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4e1aaf0-8634-4eee-bdae-480b16ca51d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d4a40db-aee9-4349-b4e0-4aebe9de2919",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1187c1a5-cc42-41f3-b401-5a7a4acbfbfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0db850b8-11f8-458e-bb06-64d024c8fbac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9288bfc1-6196-412c-b994-a914a1817ef6"
            }
          }
        ]
      },
      {
        "id": "4acbdfcd-118f-4020-8593-70df33c819de",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62c59ef6-3a56-43c9-984e-1289d9f340b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08f14f40-e457-4497-9670-c51711d9ec49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96b5f743-143b-49b6-970a-37fe230f3e65",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f08675-8cb7-415f-a1df-22f95b409b2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc4f4484-0c40-47a3-905a-f5464d08fc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e723d3b-b101-487e-b257-4c2d9d495ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "389a5d29-552c-4d05-b335-6b1038dcff80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0843557-10d1-4709-b204-d517a5cf9e7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6adcc147-a7ed-47b0-bbc4-21b5bff8f323"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "919b8299-e2ef-4760-88eb-a52522078105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824467fa-e21c-4289-8197-954d8b06acab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da864738-e6f7-4c3b-9f06-d2fc0f4e841a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b21c4a92-cc79-4b8e-b8b6-a6d372c97538"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9e11d06-c910-4612-9190-dcc5db885834",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc53157d-669d-4456-89d0-2d6e04719a5a"
            }
          }
        ]
      },
      {
        "id": "d3c9450a-d61a-4a48-bd8a-9d306f1aba3a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c9a3675e-335f-4cde-84ba-1ed99ef68203",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b651d039-0143-4c4e-8d51-40d66d7afd9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae35b467-3f38-472b-8ba5-74e2f7bfe98a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0be334-04ac-4b87-8ee6-247685ac56e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9dbb7c9-f11a-44f7-a3d8-ee60364c169a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c8b0e-7870-4aff-bf8e-e5fcfe5133e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd0663f3-8059-46a1-afc1-6da824a0be18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f1e5d3a-769b-4d96-a62f-aefa6e1f0cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af3ebb09-d392-480f-abef-21f310cf22a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84a80755-7e2f-46cf-b601-a3382d816769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b773003c-9d06-4db2-b083-e0e552cf8bc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "423f60a3-f11e-4560-b3d9-d060af6c05d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56b3fa55-7401-4b9e-ad63-5749b169b6f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6368062c-49aa-4847-af03-8e6913c8eed7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9159d7e4-7f7e-4515-91fb-58f02bfb4708"
            }
          }
        ]
      },
      {
        "id": "f9b017e4-5d0b-4d7a-81da-31c825269f8c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1cedfc11-9370-426c-9f20-767770db9c51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81ac12fe-e355-4647-b885-0fda9ac1834c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebcdb4b1-4321-4145-86ed-665df265e5a2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4536d774-539f-48ab-9e0b-1381996212b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f806f493-594d-41ce-9412-062401ba6edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c8728d-3fee-4059-9451-3628592bf9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42e3220e-1a98-4e71-9787-2ebcb40a4375"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6f235be-7e81-499c-a019-7ca349bd4253",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b744f0a5-19bd-4e25-9867-ceea26ce7d3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcd59c12-ea5b-4fa0-b19d-5e695a1ccca3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e531c25a-c6d5-440d-a793-318708d9dedc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9885854c-bc1f-46c6-b071-cc2212378a01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b56ac5a7-4ef6-49a9-b0f3-c80889ebecd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec0f0428-fee2-4b9f-839e-087dd5851cfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2423319d-82af-41f2-84ed-75a378aa20dd"
            }
          }
        ]
      },
      {
        "id": "7629d667-1ce5-4916-a0d8-3022a79b0d91",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7343a11-8a43-4bcf-a945-e4f53d3f035a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f318812-c02a-49d8-96cd-b7619650bc4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23590feb-102d-4096-be28-1a1e4de52df4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e285c74-fd54-466d-8641-f34c8780ff75",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c45c2149-42d5-41f1-a5a1-a57cadef3ea6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.7676056338028,
      "responseMin": 19,
      "responseMax": 409,
      "responseSd": 29.597693451471716,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694478679424,
      "completed": 1694478701269
    },
    "executions": [
      {
        "id": "0281ae2d-6c14-41c5-9193-67b7c3954a95",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "46434000-a2b9-47fc-a20e-418f962c241a",
          "httpRequestId": "0aed2b92-1b16-4907-a09a-d4975f780374"
        },
        "item": {
          "id": "0281ae2d-6c14-41c5-9193-67b7c3954a95",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09bce480-bdcd-420a-ae49-7f3572c3b8cc",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 0
        }
      },
      {
        "id": "2a9cb1f6-fd55-49f8-a008-f2443a99b60e",
        "cursor": {
          "ref": "e641d4f4-6a24-43f3-a1c1-d67ebdc61b41",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "23661097-7ee0-4e74-9819-deb7fa4aecfd"
        },
        "item": {
          "id": "2a9cb1f6-fd55-49f8-a008-f2443a99b60e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45fbe5c0-7900-47c0-b469-850b81437649",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "8312a897-eeb4-4668-b301-774c74e01e6a",
        "cursor": {
          "ref": "d7b0d958-d889-40bd-a1d3-dd34ed1c996d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fc429b5d-d7c0-46f5-97dc-2ce83f91f038"
        },
        "item": {
          "id": "8312a897-eeb4-4668-b301-774c74e01e6a",
          "name": "did_json"
        },
        "response": {
          "id": "6da649e6-7334-4249-b53a-3a79a40ba57d",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61ce0cc-7ed8-4f4f-889f-40603e195a03",
        "cursor": {
          "ref": "6e649171-3cb7-400d-8911-e3b7ccf91a13",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b627321d-2465-4e80-8229-d62ebfb1dfd2"
        },
        "item": {
          "id": "a61ce0cc-7ed8-4f4f-889f-40603e195a03",
          "name": "did:invalid"
        },
        "response": {
          "id": "f02556f8-85ca-457a-a892-528ff62df547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61ce0cc-7ed8-4f4f-889f-40603e195a03",
        "cursor": {
          "ref": "6e649171-3cb7-400d-8911-e3b7ccf91a13",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b627321d-2465-4e80-8229-d62ebfb1dfd2"
        },
        "item": {
          "id": "a61ce0cc-7ed8-4f4f-889f-40603e195a03",
          "name": "did:invalid"
        },
        "response": {
          "id": "f02556f8-85ca-457a-a892-528ff62df547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf8ee35-8c31-405e-ada5-d0f558dbc986",
        "cursor": {
          "ref": "65659857-ca6b-4b4d-9f1f-2da0c7bec95e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6d6fcd9d-b903-44e0-82c7-8a1d7d8dff78"
        },
        "item": {
          "id": "fdf8ee35-8c31-405e-ada5-d0f558dbc986",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "25b8761e-fa81-4eb4-ad30-12ed7f058677",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03270f0-ce3e-4061-88ed-88ccf180c4dd",
        "cursor": {
          "ref": "0c6b9dbc-dc54-4851-afc8-b5271e6d6011",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dea58369-7c9a-4354-af27-915da9ad34de"
        },
        "item": {
          "id": "b03270f0-ce3e-4061-88ed-88ccf180c4dd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5792612c-c406-46f5-a3a9-a1472d54aa59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80aceb2-457f-44ed-b65b-cb521ecba7f5",
        "cursor": {
          "ref": "a4fbf068-27f8-42c0-a36d-a22050a88338",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "91f4c183-ff2e-45a3-858c-67a01d435e8b"
        },
        "item": {
          "id": "d80aceb2-457f-44ed-b65b-cb521ecba7f5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4a59712d-c0c8-4af3-a076-b9bd64217741",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cad3e6c-7231-4792-b35f-db26c380c713",
        "cursor": {
          "ref": "28ba892d-c032-414c-8e50-85001e4a6b41",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "18467cf8-19d4-4244-97f4-fffa05839a1f"
        },
        "item": {
          "id": "7cad3e6c-7231-4792-b35f-db26c380c713",
          "name": "identifiers"
        },
        "response": {
          "id": "1716da4b-a90a-46a4-ba3f-6b05fd322f4a",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99748fb5-be6d-46f2-9263-cd455ec65e26",
        "cursor": {
          "ref": "9258dd38-8161-4c95-bfc7-dffdbf1723ab",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7236f1b3-56c8-438d-b43b-1489d2725769"
        },
        "item": {
          "id": "99748fb5-be6d-46f2-9263-cd455ec65e26",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a1d42dbc-859e-47d7-b0a1-b603a7086742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532da5ac-37d1-4421-9c58-b2f2d88f3fb5",
        "cursor": {
          "ref": "2423a787-2e89-42ab-9706-bf8ba15b9226",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec4c9917-9f6f-4404-9591-088e3dd67c6a"
        },
        "item": {
          "id": "532da5ac-37d1-4421-9c58-b2f2d88f3fb5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dd9504e1-ae69-4c78-88b5-c223ef7baa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7834c112-f5dc-4afc-92ca-edbe58d45ab4",
        "cursor": {
          "ref": "d0c3d901-601a-4fa1-b946-5835bde9e776",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "990d2b44-b100-4499-b8b0-1fc9725e657c"
        },
        "item": {
          "id": "7834c112-f5dc-4afc-92ca-edbe58d45ab4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1f7ab17-9e8e-4d2f-9ca8-f1a051d6b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a405e3c7-ee99-4d9d-9243-5daa0df36138",
        "cursor": {
          "ref": "87d9ff21-13ab-4e5f-8095-ddd377c6ddfd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f606b417-1f71-4ace-b584-7c1a766e835b"
        },
        "item": {
          "id": "a405e3c7-ee99-4d9d-9243-5daa0df36138",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "be906386-2dae-4a50-82da-20df954e77f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc676b7-1ea4-44fe-ad3e-cfae12845a88",
        "cursor": {
          "ref": "d1abc7af-58b7-4688-9eb0-677039249987",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "08759220-ae1b-49ee-bb76-2a4dfe07033f"
        },
        "item": {
          "id": "cfc676b7-1ea4-44fe-ad3e-cfae12845a88",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b92b8073-9f8a-4522-8589-d162fe751dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7f433e-c43f-4494-876e-a3b629806037",
        "cursor": {
          "ref": "3853519f-d5d2-4aa6-b6e4-fd6eeb93ed57",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8ed37433-36a6-4224-9f92-1b82ee84ec08"
        },
        "item": {
          "id": "6e7f433e-c43f-4494-876e-a3b629806037",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dc73d7c6-a804-487a-abfd-f06915ab1d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea02db-6f9f-48ba-a616-96c00d249f52",
        "cursor": {
          "ref": "9e052589-fd92-49b7-b63e-73f81a04fc2b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "91cb38e0-fb67-48b4-99d9-c79dbd3d005d"
        },
        "item": {
          "id": "93ea02db-6f9f-48ba-a616-96c00d249f52",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af23800e-0a7f-4c35-9a69-25d29af77d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245b4380-c6a5-4678-a203-5652ff3ea737",
        "cursor": {
          "ref": "2b814995-e0cc-4c7d-a433-b62f3c4b2ec4",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "46f1bb27-7abd-4408-929c-0891867dc354"
        },
        "item": {
          "id": "245b4380-c6a5-4678-a203-5652ff3ea737",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c46b3991-6339-4c30-8e7e-c6a3398ba8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5825db7b-df84-4007-b246-6a725bc8446e",
        "cursor": {
          "ref": "e3cbfca0-95b0-4881-9898-bb0e1620bd2d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04e3e20f-a0f0-4636-8451-b77d75fd6f6b"
        },
        "item": {
          "id": "5825db7b-df84-4007-b246-6a725bc8446e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "87cd819e-a125-444c-a26b-96d97f92a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff98075d-1228-458b-878a-02bf1d2ff671",
        "cursor": {
          "ref": "dc0be02f-3190-4c32-8bae-d1b78c27d256",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bcc21580-3393-44da-86d1-93c1998438ab"
        },
        "item": {
          "id": "ff98075d-1228-458b-878a-02bf1d2ff671",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "59c76dcf-322b-42ec-bd4e-0b724c7f2ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a528c6b0-23d1-452e-8a2a-5550201a5920",
        "cursor": {
          "ref": "6f0aed04-80cf-4625-8cbd-a0691b912b1a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1353aeae-25b1-4467-8a2c-bdf1a4bf2b8c"
        },
        "item": {
          "id": "a528c6b0-23d1-452e-8a2a-5550201a5920",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5e872344-9ace-4987-ba2e-cbde4441e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84b6d9c-007d-40dd-a043-077448ee8c7e",
        "cursor": {
          "ref": "35fe63c0-b218-43e4-8880-ef65b3527371",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "39758b02-1735-49b6-b469-42bad734af55"
        },
        "item": {
          "id": "e84b6d9c-007d-40dd-a043-077448ee8c7e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ba29da0-1ea9-4aa6-8d3d-7fcec2f12c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73709930-948c-4f60-a5b5-7ef1759b4b03",
        "cursor": {
          "ref": "b1112815-5e86-46c2-8d8f-a86295cedf0c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e3adb496-e743-4b8b-b4c2-5860c328e442"
        },
        "item": {
          "id": "73709930-948c-4f60-a5b5-7ef1759b4b03",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3540ce99-88a7-4bf9-935e-cbd7726c9644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2644ae57-71fb-4b17-b5f1-bcad29438450",
        "cursor": {
          "ref": "a93a83ea-9d34-4120-84a6-a6b9b376523e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "abed688f-b131-4ceb-bca9-e19c88867158"
        },
        "item": {
          "id": "2644ae57-71fb-4b17-b5f1-bcad29438450",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "85f447b1-8743-4943-8734-d290423afed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38647ae-4739-41db-a237-f791cc1d014f",
        "cursor": {
          "ref": "96b0fec4-add4-46ba-ad68-5bd2b0a152bc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "03c79792-7036-48fe-946e-c59f75a50814"
        },
        "item": {
          "id": "b38647ae-4739-41db-a237-f791cc1d014f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "17217371-34d5-47f9-82a0-a4fb0a18f258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f50f974-7c54-4244-b53b-9ebf6b043c76",
        "cursor": {
          "ref": "d78f46c4-39b9-43f1-bbbd-6b8678528183",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b10e8453-bfcb-4a2c-9fdf-f7c1cbc9e1c9"
        },
        "item": {
          "id": "0f50f974-7c54-4244-b53b-9ebf6b043c76",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fa5f3f64-3ad6-4435-9572-608ebc06715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eafb7e-1e70-4e2e-8388-f91819288460",
        "cursor": {
          "ref": "2ed08b88-f98e-4d10-b262-62435a651083",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a3efc666-a9b3-49ed-a923-7e2743155b1b"
        },
        "item": {
          "id": "a5eafb7e-1e70-4e2e-8388-f91819288460",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8fcf8889-e23d-46a5-bec9-0c64e975bb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5ec82b-4d58-4f2a-94f6-7f5d3c730621",
        "cursor": {
          "ref": "d9e81ee9-11af-484b-b181-d2fa271ac77f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9647c6c9-4b71-48a9-aeea-f282d9baa85d"
        },
        "item": {
          "id": "9b5ec82b-4d58-4f2a-94f6-7f5d3c730621",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "33ba9aa9-e4e8-4f71-8341-c227e5bed2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ebc392-99b4-49fa-9eac-4afc6919569a",
        "cursor": {
          "ref": "de3d4fce-e960-48eb-aa26-f0b6bc52bab1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c327bc61-8575-4f68-ae0b-72f37a65c91e"
        },
        "item": {
          "id": "c5ebc392-99b4-49fa-9eac-4afc6919569a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cd71965b-f5a1-40a2-807e-c1c0c679849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de834560-37b2-4fd8-9e52-6cf6be5630ab",
        "cursor": {
          "ref": "53d545e8-7597-4bd4-90d8-b0938f633f7d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8151ca6-a9f6-422d-a51e-afb013f63af5"
        },
        "item": {
          "id": "de834560-37b2-4fd8-9e52-6cf6be5630ab",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b6b037e8-25fd-4917-9057-153ab17a6e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5e7716-81b9-40ee-8649-6c100b84a626",
        "cursor": {
          "ref": "31ea206a-847e-4390-a8e7-a4b1f2366ceb",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "de60252d-f5d9-434c-b6c4-170ea5d0fc7c"
        },
        "item": {
          "id": "6e5e7716-81b9-40ee-8649-6c100b84a626",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "51bbbd98-0e08-4ada-9c40-63c1aef75dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b527e08d-6d4c-4bcc-8c21-1f6cdd7cf46a",
        "cursor": {
          "ref": "e209cfad-2648-4abf-b66e-283faed1c94a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2788b532-552d-4fb2-947e-8546a1155fef"
        },
        "item": {
          "id": "b527e08d-6d4c-4bcc-8c21-1f6cdd7cf46a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bfc8a768-dc96-4edc-ba36-29e2d6da5dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204259e8-3e0f-478c-b1dc-c4efca809f6d",
        "cursor": {
          "ref": "ed19c618-7f07-45ce-8694-be2b0f9810f7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e22dbba4-5d10-4126-8b6c-5a7424e6c1ce"
        },
        "item": {
          "id": "204259e8-3e0f-478c-b1dc-c4efca809f6d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bb6798a0-e439-4736-ba4b-f0079b8b5c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4202d59-de9c-4044-9f06-8e8160392271",
        "cursor": {
          "ref": "c03514a1-ca68-4888-88e6-8e072417a751",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9543ef6a-57ca-4158-b9bf-ca0757e4291b"
        },
        "item": {
          "id": "b4202d59-de9c-4044-9f06-8e8160392271",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e6d6fbde-6e21-4638-a8ad-263db19a0c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be24d0d-4c75-49b5-8a4d-48346431b775",
        "cursor": {
          "ref": "ab045e6e-f2a5-4ac8-a6ed-544ae12c4a47",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "089f91ce-c4c1-4bee-a8fb-b0484dbe1746"
        },
        "item": {
          "id": "4be24d0d-4c75-49b5-8a4d-48346431b775",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0c802f8d-30b9-4f2e-9689-b9a65abfb67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e57f09e-a771-47f2-a307-e01976cf7606",
        "cursor": {
          "ref": "83fee9cf-8a8c-49e9-b291-0a5ede2568dd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac5684c0-a3d1-47e2-842c-a876c207bf3a"
        },
        "item": {
          "id": "1e57f09e-a771-47f2-a307-e01976cf7606",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "41ad90d2-9974-4a73-b97b-897f08268f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe298b3a-bf91-4571-98e2-285e266e9d9c",
        "cursor": {
          "ref": "24395070-aea3-46cb-999a-1861d1c3ef33",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1ff03ab0-258c-429b-9082-4e87e81e1b80"
        },
        "item": {
          "id": "fe298b3a-bf91-4571-98e2-285e266e9d9c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d5bbc43-2900-4342-9ab6-e67b04e7d571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e54049-5290-42d7-8e72-4a04a8956ebe",
        "cursor": {
          "ref": "0ef599f2-7ab7-459b-a404-4c304d7acf0b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b65e3d3c-482b-4f48-b05e-c8e610950c86"
        },
        "item": {
          "id": "41e54049-5290-42d7-8e72-4a04a8956ebe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03f1363a-3031-4fbc-a759-cf0620a29e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4b5f12-d43b-4573-b6ec-76febdeac1b6",
        "cursor": {
          "ref": "7a47f939-674b-4dbf-90a0-47f72f24c6b0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3e5250aa-dd4b-4b05-be08-d14dc73690d9"
        },
        "item": {
          "id": "9f4b5f12-d43b-4573-b6ec-76febdeac1b6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ae7d5480-9551-4c8e-9930-6c0da41ac1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2cafa5-1c8f-425d-bfcc-e86fad690734",
        "cursor": {
          "ref": "bb4b3a10-56ba-4f58-8f61-9a828d43fa53",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "17bbb077-394d-46b2-a250-41ca164a1edb"
        },
        "item": {
          "id": "ca2cafa5-1c8f-425d-bfcc-e86fad690734",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "42861bcf-a470-4009-a989-f72eb7b080a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4ddd41-38c6-4a7f-ad2a-b8000d38ad91",
        "cursor": {
          "ref": "40d695df-a1e5-4cac-9391-8c8dd936b635",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8ba3f3ce-d988-4578-8817-b648f584b877"
        },
        "item": {
          "id": "8a4ddd41-38c6-4a7f-ad2a-b8000d38ad91",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d9d84bc-20e5-47c2-abdf-6d1a4fc488af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d425c60-756c-4a16-b90c-0e6768f2a8a7",
        "cursor": {
          "ref": "befced7f-264c-4359-ab95-e92f235c573a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "429d0d42-6ecf-4cf3-a4f0-8a48188bd00e"
        },
        "item": {
          "id": "9d425c60-756c-4a16-b90c-0e6768f2a8a7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5edb1d35-d017-47e5-b95c-1dd1e18a5d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c412774f-1a62-4d59-8cbb-739f0227ef28",
        "cursor": {
          "ref": "55af8879-8536-4226-a7e7-7c0046f637b3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8c01ce66-e56a-4cbe-982d-3a89cbd00f14"
        },
        "item": {
          "id": "c412774f-1a62-4d59-8cbb-739f0227ef28",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "24765bfa-6282-4e3a-98e6-2454983ffbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42775618-cd76-4904-a119-782882e924d4",
        "cursor": {
          "ref": "9747e405-a888-47fc-9442-c3803f06b7f5",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd24e1cf-1097-4f51-98f0-c7effab1f262"
        },
        "item": {
          "id": "42775618-cd76-4904-a119-782882e924d4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dd75e072-235c-48a6-a0f6-e5be7d73ee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bacad04-b896-40ae-92f9-766d7d316f07",
        "cursor": {
          "ref": "995b619f-7ed3-4d14-afe8-fa8f953f79ea",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d40dc71c-5d9a-4979-8a08-ca5a84d0e0ec"
        },
        "item": {
          "id": "6bacad04-b896-40ae-92f9-766d7d316f07",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "012eb687-9beb-4ddf-9a55-74dfce99d076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c7de57-3b5a-422d-b40b-d6db9610e55d",
        "cursor": {
          "ref": "5ad8dada-af64-4b6d-87ff-e4b332a562e4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8d605691-7a16-447c-8c45-485990cef132"
        },
        "item": {
          "id": "52c7de57-3b5a-422d-b40b-d6db9610e55d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0d6040d4-545c-4c26-a639-e6b4a1e7e660",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e680f7c-5ab9-4197-9981-b17c3ae8140c",
        "cursor": {
          "ref": "7e5f83c6-f2ed-4cbd-86a6-0d616b19bd4f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "89898f7c-2489-4811-92c3-dc6d69e2f43d"
        },
        "item": {
          "id": "6e680f7c-5ab9-4197-9981-b17c3ae8140c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "606b7e77-8b54-4a10-98ea-0cd1fd862b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca5fe84-1228-4007-833b-f0cd8de1d5e0",
        "cursor": {
          "ref": "47ca8b37-cc5f-4ad4-8590-bbc047076a10",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25885c60-4ddd-41b2-bf7a-83bca8e4e624"
        },
        "item": {
          "id": "fca5fe84-1228-4007-833b-f0cd8de1d5e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f6d686e5-55dd-4232-bbc6-b880dd7e2af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fcf78a-b6a1-4ad4-ba6a-dec4d3d45b1e",
        "cursor": {
          "ref": "ebdd6aca-c701-4ead-8721-0a7dc90301d4",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e5b6ee7-6d02-4213-8206-ee55b42e3d8e"
        },
        "item": {
          "id": "89fcf78a-b6a1-4ad4-ba6a-dec4d3d45b1e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d6de2fc-2750-4b6e-a3f6-a8596fadeec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c820e7cd-dda0-4eed-b39f-65653c20d311",
        "cursor": {
          "ref": "be8ac6c9-3255-4a84-802a-6a71665a2cd5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "17627410-c086-4ceb-8d2f-ddd764679309"
        },
        "item": {
          "id": "c820e7cd-dda0-4eed-b39f-65653c20d311",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "51eb133c-3f85-4eae-9620-4f635c1bba39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b282b2b-b183-4134-8de1-2b7c7d6be2a5",
        "cursor": {
          "ref": "eb980eee-dd5e-4330-86ee-d532f43745ce",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7ce514e8-9700-4c69-a08f-7eea43814728"
        },
        "item": {
          "id": "7b282b2b-b183-4134-8de1-2b7c7d6be2a5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cc7169ca-11e6-4423-9a86-da584ad4a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4f0072-ed3a-4d96-adba-aa14981ffcc9",
        "cursor": {
          "ref": "9f464ffb-cc7c-4276-b29f-00a3b687d556",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e575c7d8-e1c6-463d-ba06-1be11712eb54"
        },
        "item": {
          "id": "cc4f0072-ed3a-4d96-adba-aa14981ffcc9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "600ed837-8d45-4afe-bd52-cf7754a05a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6786b41-94c6-4504-a090-77ca50ce365c",
        "cursor": {
          "ref": "ed154d9d-3a8a-482b-ae20-bd3845e3c09d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e30f64c3-ff53-48be-9683-42a9e9589ff2"
        },
        "item": {
          "id": "f6786b41-94c6-4504-a090-77ca50ce365c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ff63a64a-b4cb-47c0-ab77-2462bc0f9882",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189df234-db19-4ce0-8686-a5f4e2bb4458",
        "cursor": {
          "ref": "1a14295e-2898-450a-95b2-18607609f1ea",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7316dae3-c1b3-4ee2-833c-021f78dce503"
        },
        "item": {
          "id": "189df234-db19-4ce0-8686-a5f4e2bb4458",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e434141c-b3a8-464b-a6a3-7e914550ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb40b6b-f87d-4e7a-9d84-e47e045a4f3f",
        "cursor": {
          "ref": "90a97d19-823a-4958-b204-928ec7b0d257",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "61ef77f6-a40f-41cc-807b-d651b8c65319"
        },
        "item": {
          "id": "5cb40b6b-f87d-4e7a-9d84-e47e045a4f3f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "091ec702-8567-403b-b637-c222ccb8fff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b555a8-60c9-4e0f-8f37-9b4b9db66efc",
        "cursor": {
          "ref": "0bfce8b1-ef5f-44e3-8eb8-d28536fcf29a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d19a9e0a-8f7e-4156-bae9-5a8fc0f2b201"
        },
        "item": {
          "id": "43b555a8-60c9-4e0f-8f37-9b4b9db66efc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2fa0275c-cc9e-4994-85de-f7444e20d08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab75d9d1-298d-408a-bdce-9b7cdabb055a",
        "cursor": {
          "ref": "2f7bf1aa-4e96-4ef1-bc1e-7144745900f7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a29a3e52-6fd9-4ce9-a608-61647c521269"
        },
        "item": {
          "id": "ab75d9d1-298d-408a-bdce-9b7cdabb055a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "27eb9549-ed10-4f32-b580-34a9c656cf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e7f0b6-95a1-4644-97e8-0cc708d76df8",
        "cursor": {
          "ref": "003b9d69-d64a-4799-b3a7-4abc145c98c8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "23af4129-720e-4268-83bd-754e2ad29c3c"
        },
        "item": {
          "id": "77e7f0b6-95a1-4644-97e8-0cc708d76df8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e4de84b1-4b9e-4df7-8fa4-28b32941e4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d11ca1-87fd-4dc6-9c41-cbfc42c09405",
        "cursor": {
          "ref": "db095c10-0347-4689-94f0-1782897ee2b9",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "118153e9-2be9-42f2-a73d-fdb8f9458bf2"
        },
        "item": {
          "id": "b6d11ca1-87fd-4dc6-9c41-cbfc42c09405",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "daab5daf-11c4-42cc-aad2-abddb31d9651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f946d2-059f-4673-ad4a-721e0777be43",
        "cursor": {
          "ref": "5b12854c-3029-4508-bfc4-6991f9f91c57",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7445c255-7621-4be1-b03e-b28681fff6e6"
        },
        "item": {
          "id": "58f946d2-059f-4673-ad4a-721e0777be43",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c081d1af-b9b6-407e-bbd0-944b9190aa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcfbb8d-1b49-496b-b738-b52b99089585",
        "cursor": {
          "ref": "5c9e4d2a-1e63-4085-bb2b-a9dd47206207",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9dc9a635-b264-4a83-9e6e-6899813dcfa5"
        },
        "item": {
          "id": "ffcfbb8d-1b49-496b-b738-b52b99089585",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "afcec9e8-c764-47c4-91c8-5cd098583a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8771344d-7dbd-4d38-80b9-98749f397071",
        "cursor": {
          "ref": "a6199aac-ca0d-4543-8f59-11a1e11c2d88",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34a264a2-f477-48fa-b5d2-4601bf73c7f7"
        },
        "item": {
          "id": "8771344d-7dbd-4d38-80b9-98749f397071",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9d041de7-c677-42c5-abbe-9bd9ea2fdcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1389026a-b8cb-4f6a-8fd6-30bd32d69cb4",
        "cursor": {
          "ref": "abebc498-f5fa-4e22-9cf9-c4852191fca4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b8d6082c-f80f-41e9-8a38-968a3e1f252b"
        },
        "item": {
          "id": "1389026a-b8cb-4f6a-8fd6-30bd32d69cb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f823b18a-e0cf-4112-a50b-7fcc1edc6ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72cdf73-ba41-4cf9-a0eb-558a6fdfabec",
        "cursor": {
          "ref": "e2c87829-6f2a-427b-9ce0-37270b3a9a99",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6a00fe7a-e47a-42ef-9857-3d474d4489d1"
        },
        "item": {
          "id": "f72cdf73-ba41-4cf9-a0eb-558a6fdfabec",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "748023b0-882e-4350-a3d2-5fd959509e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21d776a-faf1-483f-8099-7f26ce914d59",
        "cursor": {
          "ref": "204f66b2-9c05-4ad1-9d05-63f5ad596a50",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b6e302c5-79ff-4cbd-b376-b6a0d593e746"
        },
        "item": {
          "id": "d21d776a-faf1-483f-8099-7f26ce914d59",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "78d4d447-df71-44bc-84ed-721c4f084dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca78d70f-cb1c-449b-9243-c9cb296ff36c",
        "cursor": {
          "ref": "f63ae34e-761d-4486-8b78-276df8040e71",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "644e0053-2d39-4d35-8755-ceb3ac3c84b3"
        },
        "item": {
          "id": "ca78d70f-cb1c-449b-9243-c9cb296ff36c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b0d08a6b-0e18-419e-a068-17018c384da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8ac65e-6ddb-4539-8817-9a5b33b91380",
        "cursor": {
          "ref": "eda5d819-0b81-4ac6-a5e9-5aa5b7bdb32b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0c7d406a-8e12-4a62-92a9-e239613e91ec"
        },
        "item": {
          "id": "ab8ac65e-6ddb-4539-8817-9a5b33b91380",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "46b12d24-c522-4bb8-9f31-13f50230f83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf3e2fb-96f9-4092-841d-ab38f632f856",
        "cursor": {
          "ref": "3805f4b8-d74e-4ba0-84cd-32a7c1b6e502",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6a4d6a9b-4abf-4b85-b8d4-b1d7964c5307"
        },
        "item": {
          "id": "fdf3e2fb-96f9-4092-841d-ab38f632f856",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b936f929-3d4a-4737-8ebb-fc2fcdbf1f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3173bbde-beb6-4383-bd7a-21794f4f8e91",
        "cursor": {
          "ref": "847a6170-e17e-4221-9cab-9b3ab76208d7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ca16acef-b77b-4da6-a04e-ba54c873c02d"
        },
        "item": {
          "id": "3173bbde-beb6-4383-bd7a-21794f4f8e91",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2cc2485f-3783-4ddd-af34-d6d6954f644d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430e0744-682c-4ba9-947b-930cae74b357",
        "cursor": {
          "ref": "25486013-651a-4ec9-be68-b39107a71806",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "215a7b83-dc31-4a37-9946-8e26f39fdafb"
        },
        "item": {
          "id": "430e0744-682c-4ba9-947b-930cae74b357",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6e1b84a6-0cfa-44dc-a091-81364f285f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a94e241-49b2-4575-90fd-7a6721d739ba",
        "cursor": {
          "ref": "9d0cdf06-3c08-4d00-bba1-eee055d58452",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d1d0249a-c8d5-48ba-acaf-62ac2aca58ef"
        },
        "item": {
          "id": "3a94e241-49b2-4575-90fd-7a6721d739ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "12a52bb2-31fc-4af4-9622-2a0c11425473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d1f63-e320-4818-af07-7b7336c538af",
        "cursor": {
          "ref": "f7a7bc87-a332-4a8b-80fd-8e6a24a6df1b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f998ce4e-f1c6-456b-8005-70fe535e6f41"
        },
        "item": {
          "id": "d57d1f63-e320-4818-af07-7b7336c538af",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ddcae333-e64a-45aa-b9cd-3b54e5007623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a7ebc2-ed55-46ac-96f4-258cd395f83a",
        "cursor": {
          "ref": "d568ab66-e288-4e83-8f76-0a5c021b9455",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bff3ed01-003a-4156-97cf-1e6e8c76e257"
        },
        "item": {
          "id": "91a7ebc2-ed55-46ac-96f4-258cd395f83a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3e0d8a05-80a1-4465-811d-f3a666d29fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad63dc-0823-4100-964d-01917e663c83",
        "cursor": {
          "ref": "62d254ba-0be1-4149-92d4-d8e33d46ee6c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6faf12fc-6fa5-4641-8a9b-6a23cc8c8266"
        },
        "item": {
          "id": "12ad63dc-0823-4100-964d-01917e663c83",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "14a13e16-2f93-4107-9691-e30b098f3fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2b99a8-db29-40a7-afb2-862e8c3547b4",
        "cursor": {
          "ref": "3af3a6de-d285-46c9-b321-3253ed8b7612",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fa6b81a1-dc65-484f-954d-6b8a5681c70c"
        },
        "item": {
          "id": "2d2b99a8-db29-40a7-afb2-862e8c3547b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d85a753f-c276-4876-8938-8412c9190fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161612d9-cdb4-4979-9c73-f5d5fee3c24a",
        "cursor": {
          "ref": "5a5f73b1-0ece-4303-874c-c9a2a37cd5c7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4f5cf38-5cd7-4a30-baa4-13bacce11c63"
        },
        "item": {
          "id": "161612d9-cdb4-4979-9c73-f5d5fee3c24a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a8047e28-f14e-43fe-b848-9b974d15592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97af95ce-dbe2-464d-8aac-95f270db78c8",
        "cursor": {
          "ref": "0b117905-34dd-481a-8cbf-db74e259352f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ef181a85-0524-404a-8c32-47442bbd3183"
        },
        "item": {
          "id": "97af95ce-dbe2-464d-8aac-95f270db78c8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cf64d102-9391-4ef1-9c95-94b2b3cf2014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6047378f-002d-46b8-b5d3-b0d21017b09d",
        "cursor": {
          "ref": "ebe1f130-a302-46db-8aec-c9158833f296",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08798498-2259-4ce4-b928-79c63c0a9d62"
        },
        "item": {
          "id": "6047378f-002d-46b8-b5d3-b0d21017b09d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b1c1350-76a8-4a8f-b825-65e41f2c3408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314953bf-0013-4f7a-bf8c-014ddcb217eb",
        "cursor": {
          "ref": "131faffd-1ca0-48c7-b165-de78f0de8d10",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "de5f0059-1167-4569-be50-fab489008365"
        },
        "item": {
          "id": "314953bf-0013-4f7a-bf8c-014ddcb217eb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "736dccbe-fc4c-437a-acf8-508c21b2599d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a637e402-dd48-495a-a753-5308cea09092",
        "cursor": {
          "ref": "5d63f010-63af-4993-83bb-df8f1ffa3b53",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c172e26e-3142-4a04-84bd-e7b041221106"
        },
        "item": {
          "id": "a637e402-dd48-495a-a753-5308cea09092",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c2167b3e-1f86-430b-bba0-f0ac3c5859b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5161e9-78ae-433d-8edd-6c962f2dc449",
        "cursor": {
          "ref": "719a5511-b4a0-4cc2-80d8-f63318f4b892",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aafde326-2980-46da-a459-3c1e8e89716b"
        },
        "item": {
          "id": "8f5161e9-78ae-433d-8edd-6c962f2dc449",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "869b430f-ec7f-4ffb-9e70-883e8a569681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8dce5d-4113-49e6-9097-7d9e8c276a1b",
        "cursor": {
          "ref": "7cfc357b-b6fd-4368-97c5-56d16a87e337",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07ae1df6-8227-44d7-8346-082818b17cd8"
        },
        "item": {
          "id": "1f8dce5d-4113-49e6-9097-7d9e8c276a1b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28618453-2e54-43be-a11f-a0d178363dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fef1cf0-442f-4007-9b98-1b87da5e2aac",
        "cursor": {
          "ref": "6a243b6b-a1b2-4392-84ec-db6912dd034b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5cf4ea6-f72b-40c3-97f4-85aa597ef5f1"
        },
        "item": {
          "id": "8fef1cf0-442f-4007-9b98-1b87da5e2aac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5dc59eab-68ef-4424-8e9c-e97d5a60c3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af567156-ea28-4a8a-a450-eca6cc30b293",
        "cursor": {
          "ref": "b94ed121-5b4b-4b82-be88-66cb3e3b1c2a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "14324d3f-8d0f-4d15-aca6-b2d036d1c3b2"
        },
        "item": {
          "id": "af567156-ea28-4a8a-a450-eca6cc30b293",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98b1dab1-2ffc-4a48-b7a1-6e845a656c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1318bcd-e214-4def-bdcf-09933f90f32d",
        "cursor": {
          "ref": "4feedc71-1e68-4a15-a224-405e7ca5445b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "684fab40-60fa-4d23-a05a-402291fd87ec"
        },
        "item": {
          "id": "b1318bcd-e214-4def-bdcf-09933f90f32d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "898d0519-5bd2-4f09-bb58-81d7312b5b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46c6a9d-3563-490b-a436-497316ab4fb0",
        "cursor": {
          "ref": "99851f67-dbf2-4ca4-9a94-7ccb2c685870",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f1db84e1-6c15-4817-9d02-24d5d4983ce8"
        },
        "item": {
          "id": "a46c6a9d-3563-490b-a436-497316ab4fb0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fc7ecd5a-6c24-4134-a7b5-c3c3b8b7d11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febc529b-69a4-4f14-905e-a94154c68660",
        "cursor": {
          "ref": "73580be8-7da5-4f5e-be78-73f8f8ab920d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "eeef5605-e977-4df4-b3e3-e6bc9ff07880"
        },
        "item": {
          "id": "febc529b-69a4-4f14-905e-a94154c68660",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "02a11ef7-aaa2-4589-a4e9-0af8bb541f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bbb4dd-6e61-40be-9588-8373414ee4ca",
        "cursor": {
          "ref": "f60c851d-deb4-425c-9f2a-bc9b530af235",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2810f936-b6f1-4c04-9eba-10d29ee91fbd"
        },
        "item": {
          "id": "81bbb4dd-6e61-40be-9588-8373414ee4ca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3bb6cfd0-cb4d-43ce-8b30-3642b142f68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc527ef3-edcc-45de-b863-fa51781b8980",
        "cursor": {
          "ref": "7ac4e00d-0979-4d9c-9b0c-800aa751589a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f789ad90-37fd-47bf-8d00-860d1a04879c"
        },
        "item": {
          "id": "cc527ef3-edcc-45de-b863-fa51781b8980",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a7053c1d-324d-4df0-9145-ff0886277039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0004c9d5-62d0-47a6-94aa-580cf8b7dc78",
        "cursor": {
          "ref": "d68a865d-59a8-417d-9417-71b1f376e675",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab22eab9-ef1a-4c76-8ba5-a706012c8801"
        },
        "item": {
          "id": "0004c9d5-62d0-47a6-94aa-580cf8b7dc78",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "648d0715-6586-4ddd-9584-6d519d195cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854706f9-18fe-4100-81a6-1f31bc794aee",
        "cursor": {
          "ref": "4c9406d4-5a06-4aa9-beb5-47defbd36c6f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8fd80355-00b8-4323-a79e-9035d58d3fbf"
        },
        "item": {
          "id": "854706f9-18fe-4100-81a6-1f31bc794aee",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "66644547-745a-4bf8-8105-28b6ca100801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7657fcc-24cc-4eb4-a3c5-4c73ab732b3b",
        "cursor": {
          "ref": "4faf3531-533d-4c80-9c77-5c42d889f4c7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ddae3fc6-4931-4118-8b4e-cff5d15be0d0"
        },
        "item": {
          "id": "e7657fcc-24cc-4eb4-a3c5-4c73ab732b3b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e0bc75a-9941-4ce9-943d-15dec2e5d748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9cb42f-80ad-49b5-badb-796a507e4e59",
        "cursor": {
          "ref": "1590bca5-c121-44f7-a50a-07986b6d8369",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "13f7eb01-bb9a-488e-b6e9-a3a49779d617"
        },
        "item": {
          "id": "6d9cb42f-80ad-49b5-badb-796a507e4e59",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e16e33dd-dbc5-447d-aaff-2bfae948d898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0254eccd-8964-4f5f-84b0-284c79a0a682",
        "cursor": {
          "ref": "ca2d9da9-2233-4d8d-b9ec-aa067adfd4c4",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dc5f92ce-e2e2-4d3f-91e1-7a13129cf381"
        },
        "item": {
          "id": "0254eccd-8964-4f5f-84b0-284c79a0a682",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7b5190f8-22b4-4274-a1e4-c83a82f0ac1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b44f9c-c50b-4f58-ba66-fe720884210c",
        "cursor": {
          "ref": "01dc1a65-54b1-4d2b-9aff-135796e42168",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "80669a9e-ed52-4208-90c5-603b7e862136"
        },
        "item": {
          "id": "21b44f9c-c50b-4f58-ba66-fe720884210c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "34d60bf1-5e90-4cbe-943a-c39776a48657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f2df33-364b-492b-977a-403e11e72bc5",
        "cursor": {
          "ref": "6e09ba9e-d4ca-4a23-bcc7-dcbb8259aebc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43b7e1a6-e5c0-451e-aa4a-e16a8fbf6223"
        },
        "item": {
          "id": "d7f2df33-364b-492b-977a-403e11e72bc5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "684f4b64-9c99-4302-a020-7702d7606886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14a1acc-2824-4f47-a8b3-5ef036f92bf9",
        "cursor": {
          "ref": "76bd76b1-49ab-4c5c-b719-cbd60afc77be",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6674e806-7609-463f-a011-3b447a23288b"
        },
        "item": {
          "id": "e14a1acc-2824-4f47-a8b3-5ef036f92bf9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a968a503-1b60-49bd-a963-dbdcaa3bbf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a654b-ec7e-4c9a-bddf-e1c8695bbc8f",
        "cursor": {
          "ref": "dd687c21-cc29-48d5-b4e2-20cd6c7354ae",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6c6bdc31-a388-4444-9f93-bc31d14e8276"
        },
        "item": {
          "id": "641a654b-ec7e-4c9a-bddf-e1c8695bbc8f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d85804fa-9b4a-4850-838b-11311b9c521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ccd2dc-dc24-4301-8411-30f421a4d487",
        "cursor": {
          "ref": "f4b28f16-0fc0-49f8-8c8e-51d67713619b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29b92261-34af-4a45-b7a0-6a87b6eb9709"
        },
        "item": {
          "id": "52ccd2dc-dc24-4301-8411-30f421a4d487",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b8c2412c-6e8f-4045-8f1c-d153ef12f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663cefca-a317-4cc0-81c7-a6a0fa282c79",
        "cursor": {
          "ref": "078a4ac0-0a1b-4e7f-8303-46bd149482dd",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "882ffcb4-571d-4338-a7a8-a62a596e8ef0"
        },
        "item": {
          "id": "663cefca-a317-4cc0-81c7-a6a0fa282c79",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f4a5eb4b-74a2-4636-b22b-0e177b6a8a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5d19cc-febf-4060-b5a3-16a3462b9672",
        "cursor": {
          "ref": "7e24aec6-2946-4dd6-859e-9ceeb005afe1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a995eb1e-d72e-4840-a276-89c38ee8f4f5"
        },
        "item": {
          "id": "0d5d19cc-febf-4060-b5a3-16a3462b9672",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "05a45f67-a3be-4e48-b7ed-88649b54d7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3d8d3e-2919-4a65-a72c-92e66d38450c",
        "cursor": {
          "ref": "8c4d6806-fa92-44bb-99b3-c21a5ecc8201",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "794548ca-d52f-4076-9f13-e8f33c394a29"
        },
        "item": {
          "id": "ae3d8d3e-2919-4a65-a72c-92e66d38450c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7b21e2f-637e-4cf7-bad4-e9e999a2fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52be9d38-49a1-463e-b3ec-e280cf3d52bd",
        "cursor": {
          "ref": "bcaa8fe9-a839-4c78-af72-9844ef393b12",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b6a43d98-0fd4-4631-88da-239bf421a9db"
        },
        "item": {
          "id": "52be9d38-49a1-463e-b3ec-e280cf3d52bd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6bcb14a3-dde5-4e6e-a339-3ebfff0484dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22123979-ebb3-4b96-8f90-36b726537796",
        "cursor": {
          "ref": "2bd377c3-c1f0-4a88-9f62-e9eec4717c87",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2aedb80-c4d4-4eed-9f29-778c775766ce"
        },
        "item": {
          "id": "22123979-ebb3-4b96-8f90-36b726537796",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4fecdadf-0413-4904-b0f2-fd5e4d3e841c",
          "status": "Created",
          "code": 201,
          "responseTime": 98,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4379401-609d-43c2-ad52-1b65199be139",
        "cursor": {
          "ref": "6c7d5f2a-e4b7-4e8e-adf8-79e3516c0fab",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6edfbebb-5620-484d-8f73-5bc907ace972"
        },
        "item": {
          "id": "b4379401-609d-43c2-ad52-1b65199be139",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "69df3d37-3a1e-4058-a7f3-c9185c287d1d",
          "status": "Created",
          "code": 201,
          "responseTime": 205,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "626c5eab-97e8-4f59-a74d-b3470996d50a",
        "cursor": {
          "ref": "22a2187e-41b9-4809-ba6f-7aff3a2a0f2b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6d325063-8635-47f5-9d90-0160a4b52b3f"
        },
        "item": {
          "id": "626c5eab-97e8-4f59-a74d-b3470996d50a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a0431a32-41c3-4532-a896-f4d859f4e384",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd515ea6-5676-4553-9773-671fb37dd02a",
        "cursor": {
          "ref": "0333fac2-354c-477f-abe2-d346835eaa52",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7a550da1-8725-4f22-903a-7058e4f95612"
        },
        "item": {
          "id": "dd515ea6-5676-4553-9773-671fb37dd02a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ff3546d7-fd1f-4c6b-9faa-b37cad3021fa",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81dbb59-dce0-4f81-8a58-e86951d766e7",
        "cursor": {
          "ref": "1013ce8d-6a1c-4f9e-8627-bdc529797e1b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5ab0a427-2a79-41be-8a1d-7daa65d5dda3"
        },
        "item": {
          "id": "b81dbb59-dce0-4f81-8a58-e86951d766e7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "16a7a4ed-b795-4871-a5a6-15e75aa10c7e",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61b3e05-edf9-4492-aece-d9567238c05a",
        "cursor": {
          "ref": "e1b64973-513e-423f-8243-7e783f0348e9",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5656445d-97b1-461d-bbbc-0601c8f29fcd"
        },
        "item": {
          "id": "b61b3e05-edf9-4492-aece-d9567238c05a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7a89b375-a364-4e20-8438-7c16922a004b",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98556e3e-5261-4897-924f-c1535b99deb6",
        "cursor": {
          "ref": "a9c95e35-df1c-44dc-90c6-6a259e868173",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d1aaf7b0-3f66-4b24-a671-55da9d72a3d6"
        },
        "item": {
          "id": "98556e3e-5261-4897-924f-c1535b99deb6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "00295ba7-07c6-4b4b-bff5-4838a1f70980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70b7511-012c-4014-84e7-185b45dbdddb",
        "cursor": {
          "ref": "2c187d1b-15af-489e-ac76-293d9dcd4b8f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a2103e51-7a7f-47f0-b839-acb0ce2b7a6e"
        },
        "item": {
          "id": "d70b7511-012c-4014-84e7-185b45dbdddb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c41fccc8-d27e-4233-9081-f2fe81379b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b57bfe-f9a6-451d-bcf4-c50db31d5fee",
        "cursor": {
          "ref": "914e6f8f-1424-4b18-8c6f-8429d9c1644a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f968f0fd-e161-43af-a1ff-468b7c13a196"
        },
        "item": {
          "id": "d7b57bfe-f9a6-451d-bcf4-c50db31d5fee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0c3cdcd1-5c08-47c3-9d28-984834d1d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0efc31-57a5-4cea-b8c3-2a49c32dc7bf",
        "cursor": {
          "ref": "6f97bd0b-3c92-4be1-a603-23965c952f7b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "03a5cbd1-9eac-4074-88de-220360c3e6cc"
        },
        "item": {
          "id": "4f0efc31-57a5-4cea-b8c3-2a49c32dc7bf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a33ae473-dc05-42db-b587-abd8867a1d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b45a6b-46e7-48d5-b4bc-06e5d0d760de",
        "cursor": {
          "ref": "6bc2bf8d-7393-462e-8d74-4885464ae4ab",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf256136-94e5-4179-8bcd-8c782df06d8f"
        },
        "item": {
          "id": "f2b45a6b-46e7-48d5-b4bc-06e5d0d760de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "199b4c45-84bd-4521-b0e1-4877aa1cc69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591e686b-7d84-4fc2-878a-5f6912c9b494",
        "cursor": {
          "ref": "f502bcf5-9a9e-40dc-a0d2-d88706dd6eae",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "69fb51de-a527-4325-b7ed-48eb3618ece3"
        },
        "item": {
          "id": "591e686b-7d84-4fc2-878a-5f6912c9b494",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b45b8f6-e0d2-48c7-be1e-88e44e63eea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d7fd1-8c4c-4190-9db3-d066b50a2652",
        "cursor": {
          "ref": "9b30f4fc-7c35-470f-94e1-3a27b97cb276",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a9e16e7b-f2b5-4457-8054-60df0f33cbf3"
        },
        "item": {
          "id": "557d7fd1-8c4c-4190-9db3-d066b50a2652",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8a2f7d9a-89ff-4451-8950-84788ce44a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38bbb77-73f6-427a-8247-fdf18efda87f",
        "cursor": {
          "ref": "28b4b22d-57a8-49ad-addc-3134ff96ce52",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e2944c5-a234-4e14-921f-881e074962c5"
        },
        "item": {
          "id": "f38bbb77-73f6-427a-8247-fdf18efda87f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "77080d1a-bd76-4e04-8bbb-1ce9e5d9ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e232435d-0cfd-4f23-8306-1599242f0f89",
        "cursor": {
          "ref": "c5ccd0c7-27f0-4686-bf58-6f637b590b5d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d971538a-55f2-4ff9-b1fe-6db2700c7b4e"
        },
        "item": {
          "id": "e232435d-0cfd-4f23-8306-1599242f0f89",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "babd3e2d-2c70-4cec-b7c7-dd47aeb5cbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c620f-55d8-4b92-a693-4f129cfab026",
        "cursor": {
          "ref": "7b6c7c73-abd1-487c-b9b5-ef74cae6237f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "edbcfa57-6e3e-47ee-a8cd-5f62a807283f"
        },
        "item": {
          "id": "0e3c620f-55d8-4b92-a693-4f129cfab026",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22408826-ce3a-4bf5-b91a-2d5e4a0a4c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d7edf1-7e7b-4cc9-9ce4-30a18b508dd6",
        "cursor": {
          "ref": "4f52803a-cbd0-4db9-bc33-670c6239e9e0",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c5685fa7-9d68-4a4d-84cb-667a3dc446dd"
        },
        "item": {
          "id": "35d7edf1-7e7b-4cc9-9ce4-30a18b508dd6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72a1eb7d-7cbb-45c9-b110-b5819f7c5efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828747ab-d795-4a77-88d8-97ee43f2dbd4",
        "cursor": {
          "ref": "dde3eb1d-b9da-4ff3-a87c-ee1efbc4385d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "877bf843-5e52-4209-82a7-979ea7e04734"
        },
        "item": {
          "id": "828747ab-d795-4a77-88d8-97ee43f2dbd4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e82612b-acf0-4b93-96b6-116ba6121164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd564e6-fc3c-4e88-89db-07447cb6186a",
        "cursor": {
          "ref": "5e6c4977-0a31-43ee-b23c-98e2db538940",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "78a89c50-5430-4bbd-bb53-6640b571b529"
        },
        "item": {
          "id": "cdd564e6-fc3c-4e88-89db-07447cb6186a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4caf4a91-98ee-4b29-8aa5-31875478476d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e55e56-ec06-4bc1-8abd-9c1bc4db4c7a",
        "cursor": {
          "ref": "cf328628-5c48-4432-9838-763d4e6a2583",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4cf77e30-d93c-40c7-802a-7bf5f120876e"
        },
        "item": {
          "id": "97e55e56-ec06-4bc1-8abd-9c1bc4db4c7a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b59b6b76-a864-4f44-847f-3b84c5b0f48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb0e641-0bd3-48a5-8317-23f3e91b4333",
        "cursor": {
          "ref": "abff7777-cd1f-497a-89e2-4a3ba27f40ad",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "986f2fa5-e9f0-43b4-9132-e5340a3fcfc2"
        },
        "item": {
          "id": "6fb0e641-0bd3-48a5-8317-23f3e91b4333",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1577c5c1-d9ab-4862-b8e6-e5ef2b1003bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d358dfb-d464-44a6-a996-4db1f080cac2",
        "cursor": {
          "ref": "c2393acf-d65a-4d8d-af28-a5515c9785bd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c5890933-e90a-4cf2-ac03-b73cf3bae1d9"
        },
        "item": {
          "id": "3d358dfb-d464-44a6-a996-4db1f080cac2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d3548856-17c5-4642-bd3d-872b7ffbfd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57719ca0-c2fa-4e81-bbe9-284756e3511a",
        "cursor": {
          "ref": "e868c682-22a5-469b-94be-0187942a24ce",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c0f8a966-5396-41ab-b628-414cd8b9f0c8"
        },
        "item": {
          "id": "57719ca0-c2fa-4e81-bbe9-284756e3511a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1dd42be6-5dad-4568-a154-f4e8fd0ce20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33714d7a-73b4-47db-b8eb-06ec9dd11839",
        "cursor": {
          "ref": "3af060a7-9321-4159-a9e1-383e88dd10e7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0059089d-f4a6-4508-a8e4-d636e7963736"
        },
        "item": {
          "id": "33714d7a-73b4-47db-b8eb-06ec9dd11839",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a7e2f380-da15-4e7e-b8a6-d6f7227b1672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3591d409-bf8a-4af2-8ed7-65eb3cee45bc",
        "cursor": {
          "ref": "e8073939-005d-4e50-8859-3091739b49d7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "403fd514-b8b7-4553-be33-8e9d9f9f73c2"
        },
        "item": {
          "id": "3591d409-bf8a-4af2-8ed7-65eb3cee45bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2ecbb8cf-c9f8-4492-9461-dd4cdf010d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d07d96-670d-45bb-8597-5c3f86c266b5",
        "cursor": {
          "ref": "ce2ff99a-31bb-4635-b4e1-38b903effb1e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eb3cb22a-3a64-4b0b-b487-4940688223db"
        },
        "item": {
          "id": "25d07d96-670d-45bb-8597-5c3f86c266b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "21756b62-b8dc-457d-a480-3dc8fb7efc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46d3026-3216-4c1e-b19b-4263a00c5f98",
        "cursor": {
          "ref": "65e10855-7cce-4135-8912-90a40bb81f00",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2ca62896-3648-4711-a5e3-5714448cc274"
        },
        "item": {
          "id": "d46d3026-3216-4c1e-b19b-4263a00c5f98",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "65de7cb3-1629-43b6-b920-8ef916e9eced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd7bf3e-6f81-4bc9-b26a-224e1abcd546",
        "cursor": {
          "ref": "994e21de-37d1-4b0b-a31b-b07980dfeafc",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a495b26-b913-4373-abab-52ac54f7f634"
        },
        "item": {
          "id": "ddd7bf3e-6f81-4bc9-b26a-224e1abcd546",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61616a2e-c4e6-429b-9e1a-df444032403f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b12b973-0fb6-4afb-b21c-f200f93cd084",
        "cursor": {
          "ref": "e3d2f2e9-94ca-4831-99d9-59572e3ecd95",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c35c2056-2aa6-425b-8c76-87dcea5f1f65"
        },
        "item": {
          "id": "3b12b973-0fb6-4afb-b21c-f200f93cd084",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b18e6e89-0df7-4b72-b72c-7cc7bad2b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12df81fa-927e-4060-92e7-80dbeffbed9d",
        "cursor": {
          "ref": "f7bc1b80-1f58-4a36-9459-ea2c2c49bc57",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "67393b9d-e6ce-4128-8dfc-a4a56e6fc43e"
        },
        "item": {
          "id": "12df81fa-927e-4060-92e7-80dbeffbed9d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "52fde08f-09fd-4780-99c3-ecd0d6563b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9000e8e-7012-40fc-a37c-a3eea1ae317a",
        "cursor": {
          "ref": "7ec12962-ec68-4882-8257-7a59aa015001",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7c085380-eb51-4f0a-8a74-eb6a2e92d763"
        },
        "item": {
          "id": "a9000e8e-7012-40fc-a37c-a3eea1ae317a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ffe00d84-9bf5-4e22-82b7-e867c5fa93a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a4aa4-b136-4bf0-8b8a-0d7caad222b6",
        "cursor": {
          "ref": "c44aa075-a0e9-48f9-afd0-c8d1a6a67303",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "28a714fc-6e3a-48db-abee-2efbe1300594"
        },
        "item": {
          "id": "ad2a4aa4-b136-4bf0-8b8a-0d7caad222b6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "979109a9-624f-488f-b7fa-65cb00ecf750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15a43a6-231e-4a8c-82a4-404f4b964825",
        "cursor": {
          "ref": "9018b8ad-a1b8-4d6b-8488-13cb501f81eb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dd1c44f7-4aa2-4a5a-8288-5586af496268"
        },
        "item": {
          "id": "e15a43a6-231e-4a8c-82a4-404f4b964825",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5b1afa33-2181-4cf7-97f9-f28a1f0180fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6017a9ce-f626-40ac-9e90-02ecc6015ff9",
        "cursor": {
          "ref": "bfc06ad8-d9da-48e3-99e2-1ca163a41d87",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3c15a0b-0cc5-4b2d-96fe-e5e9a6639943"
        },
        "item": {
          "id": "6017a9ce-f626-40ac-9e90-02ecc6015ff9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e012db7-0cdf-42a1-a256-ca9bf0587777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6cb623-87bb-47cb-a85a-42b9a1a3cdaa",
        "cursor": {
          "ref": "b5a9deec-f85a-4c16-843a-ff4359cb5ecc",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "79d71319-4944-4bd1-9c21-ab899c9aa1f5"
        },
        "item": {
          "id": "0b6cb623-87bb-47cb-a85a-42b9a1a3cdaa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "391fc63f-946d-4ad7-94d1-929496e6ade2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff69be4-578e-4c5f-8fc4-344db58ec39c",
        "cursor": {
          "ref": "71746edc-9166-4737-afcb-d01e65989d30",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ee1f46b3-7307-4d6d-812a-ce0ade026840"
        },
        "item": {
          "id": "6ff69be4-578e-4c5f-8fc4-344db58ec39c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "230a2740-ba2b-4d55-af7a-e9e78c330251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73526303-5f30-4b94-9b46-b12c07dad593",
        "cursor": {
          "ref": "43625dd1-140c-4fc8-8ef7-4296f73b3a4b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "26437c5e-52cd-4a0b-be3f-96283dabfee3"
        },
        "item": {
          "id": "73526303-5f30-4b94-9b46-b12c07dad593",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd8ce3c3-5907-4fc6-9347-5eab230b13bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675a2c3d-674e-40ab-acb9-b759a53ed89b",
        "cursor": {
          "ref": "5e204a75-051b-41b2-8876-890ace9471ed",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f01e4166-48ae-4382-b6ee-27a389833ad0"
        },
        "item": {
          "id": "675a2c3d-674e-40ab-acb9-b759a53ed89b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1a3bb526-f613-40c9-b180-45b81ed67a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b8a5c3-f3a9-40f1-b1aa-82261b13c517",
        "cursor": {
          "ref": "8a3b299a-1b32-48db-8acc-27d525687b4e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "450f3dab-e9a2-44b9-8222-12991c361480"
        },
        "item": {
          "id": "c2b8a5c3-f3a9-40f1-b1aa-82261b13c517",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f97e369-05fa-4a15-aed0-b79632d59900",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3609367-0f7a-421c-a0e3-5d5ca52ba0e7",
        "cursor": {
          "ref": "a6535c7b-514d-4ff7-bb79-091f557e03ea",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c79e5e3f-2285-4d05-bfcd-43824595ed44"
        },
        "item": {
          "id": "b3609367-0f7a-421c-a0e3-5d5ca52ba0e7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "086494cb-3b6e-4a49-9677-8d155bcc59a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b82f0b-d8cd-467b-b2fb-80e0ee5f1e98",
        "cursor": {
          "ref": "d5e5c152-f827-4364-8341-2a5fe6dcd35e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "68cffaa7-b9d6-45b9-bbc9-89fd749e3f1a"
        },
        "item": {
          "id": "f5b82f0b-d8cd-467b-b2fb-80e0ee5f1e98",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9cc8a8d8-5261-40ad-90f6-6818e77ab077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc8252a-6bf7-45bc-8729-f657dbb585ad",
        "cursor": {
          "ref": "bbf8bf71-5444-4c11-8758-319b50fd8828",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "604df34a-8ff4-4f3a-bee8-4177dc694a26"
        },
        "item": {
          "id": "8cc8252a-6bf7-45bc-8729-f657dbb585ad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "59c84b15-3b35-4544-a8d9-e3ba89c1db6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd4812b-c452-4458-86cb-667d50a0638a",
        "cursor": {
          "ref": "befae10d-6f72-4e67-accb-05a376177b6e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eb5c1c1c-ea8c-41e2-995c-9e8da12a07b7"
        },
        "item": {
          "id": "acd4812b-c452-4458-86cb-667d50a0638a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1c802696-e0fa-40f8-acf4-644e8ac20622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a472dfa9-b05a-40b5-a7bf-a574f4ccebdf",
        "cursor": {
          "ref": "5e8a648d-0379-4e00-aeeb-29438d82e9b1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "191d769b-9f7e-498b-bf5e-010cf0b45f14"
        },
        "item": {
          "id": "a472dfa9-b05a-40b5-a7bf-a574f4ccebdf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40dbaa5f-934a-40d3-bab6-bf7bbd1a51dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d397f74-09bf-474f-9a9d-a64809c0922b",
        "cursor": {
          "ref": "01d5ba91-b3a9-4b86-ad9e-48e04778a2c6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6695c8cf-2e7c-46bc-9dc3-1e68c71b9c2b"
        },
        "item": {
          "id": "1d397f74-09bf-474f-9a9d-a64809c0922b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f613d511-ade4-41d4-8c2c-56fcfe94c6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25178070-e7a8-49ec-a4b1-1a231aa6f499",
        "cursor": {
          "ref": "40c158b9-c5a1-4c05-830b-8f6a9312a5d2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0f0e6990-a860-4460-9e70-3714dc15b2ac"
        },
        "item": {
          "id": "25178070-e7a8-49ec-a4b1-1a231aa6f499",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f018af22-873d-4566-983f-d2a69d618066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae0e99b-2433-43d3-bf48-1abad3881926",
        "cursor": {
          "ref": "2443d1e4-770d-444d-a73d-970c144bd326",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4a1e32fe-146c-409b-a50e-1961ea1ccc1c"
        },
        "item": {
          "id": "eae0e99b-2433-43d3-bf48-1abad3881926",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "20d76dfe-671a-4544-8eae-3d24ac1e3952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab02dd05-4fc0-48d4-aa15-a6488d41f2a9",
        "cursor": {
          "ref": "3769a596-144f-48ab-b909-27f18dece938",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1dd6ab1d-950e-4fcc-8a35-a0e67d24ac65"
        },
        "item": {
          "id": "ab02dd05-4fc0-48d4-aa15-a6488d41f2a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b75e04ec-22b1-4848-8231-2ad3da82049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7241b49b-8f86-4269-9381-369a9228b526",
        "cursor": {
          "ref": "571be492-6fd0-4a56-a16c-c2682b730c4f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "42f43a85-f032-49e2-9267-476d40cf5603"
        },
        "item": {
          "id": "7241b49b-8f86-4269-9381-369a9228b526",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e594408f-1e12-40b9-9aab-1457960ab215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df248f6a-7e91-4b61-b9b6-6e985eca0fcf",
        "cursor": {
          "ref": "0ff98a40-3d66-48f5-b1bb-25f69ec90a23",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "783ee492-0c8b-49ab-abdf-5a719d3317de"
        },
        "item": {
          "id": "df248f6a-7e91-4b61-b9b6-6e985eca0fcf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "407a50ec-6163-482d-a7cd-6fa6f286f6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03838b8a-7592-498c-b1f5-17264dac6c9b",
        "cursor": {
          "ref": "7ac4c588-2bd5-411a-8470-f171b726a021",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "42b09b3b-9c5e-4ffa-8efc-17458db871d9"
        },
        "item": {
          "id": "03838b8a-7592-498c-b1f5-17264dac6c9b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2ff67a31-879f-448b-8347-604be7fc9b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f2f2c4-a044-4ac8-8f5b-2730e22aab13",
        "cursor": {
          "ref": "e211ddb7-6b33-4d86-a62a-072b75f43c05",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9689f382-7cd2-4653-a195-e5c6570ab22a"
        },
        "item": {
          "id": "04f2f2c4-a044-4ac8-8f5b-2730e22aab13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2cac702-7f47-4230-907c-a19d868542fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aa846d-da71-43da-b844-da368a2111b4",
        "cursor": {
          "ref": "a8c662d3-9ef7-44ec-8e29-321e4a05e10f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9251e3cf-c0da-4863-9411-507510dc2434"
        },
        "item": {
          "id": "70aa846d-da71-43da-b844-da368a2111b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "18673e05-fda1-4c59-aa61-fd6dbdb50fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac3fd3a-d8fa-4609-9d44-642e5573ff23",
        "cursor": {
          "ref": "71b84bc7-1798-4605-9401-cabe251fc530",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "017f80d1-72c1-42c5-a955-6986edf3fa25"
        },
        "item": {
          "id": "bac3fd3a-d8fa-4609-9d44-642e5573ff23",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c876ed5-21a7-4850-8cc4-c9753fe00ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f351b4-3117-4196-ac98-f8aaccb7783a",
        "cursor": {
          "ref": "fc234935-a658-4f92-8be0-085503627e73",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "74bf75be-29d6-4fcd-85fe-a3ce16a9d66b"
        },
        "item": {
          "id": "f6f351b4-3117-4196-ac98-f8aaccb7783a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48f35fa3-d1e6-4ce8-bda1-534c6af2fea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8be70e-255b-457d-bef7-50fdc3a71183",
        "cursor": {
          "ref": "b8336cbd-e062-4f32-92e6-fd3a7fe4ce58",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "36a0bdc1-6fa8-4c19-8b77-909f9644e4ab"
        },
        "item": {
          "id": "ca8be70e-255b-457d-bef7-50fdc3a71183",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f0c0b096-13eb-4c7b-a3ff-e00708ef5b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb6c773-e669-4816-963d-e0187d57ad0a",
        "cursor": {
          "ref": "ba5d54e1-8dbc-4ecf-b00c-6ab4a390ac7b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c279fb51-626c-4cb4-8808-e072c1a69652"
        },
        "item": {
          "id": "1eb6c773-e669-4816-963d-e0187d57ad0a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "429b98ba-8a12-4fa2-b1e1-48cff890a72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b9ce4-ef93-4e12-b5e8-31126874e4ce",
        "cursor": {
          "ref": "3801e760-c805-45ad-a07c-96db2cb20133",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c0e81bf2-4ce4-444a-be7f-3e8de601149b"
        },
        "item": {
          "id": "592b9ce4-ef93-4e12-b5e8-31126874e4ce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d6e23fa-8883-4a29-a3eb-df75bf55b46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec1f956-ea71-4573-ac86-ad27fb081e3f",
        "cursor": {
          "ref": "4d942ba7-d6d9-4ca4-bd54-cdc798e3773a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b4b6e40d-1ae6-41b2-862d-87c9ad44dd25"
        },
        "item": {
          "id": "8ec1f956-ea71-4573-ac86-ad27fb081e3f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba8ec190-4e47-43f1-8937-78af83440e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3efe07b-944f-4c74-ae63-f057e1c20789",
        "cursor": {
          "ref": "d9b11666-04e1-4e0c-a53c-57968b49b35b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "49ba723d-062d-4274-86fc-32fd6df3b1a9"
        },
        "item": {
          "id": "a3efe07b-944f-4c74-ae63-f057e1c20789",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "55e15117-aa80-4b5b-892f-fbf3c3d48fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec06c452-0501-4e0b-b052-fb3fbf28fb28",
        "cursor": {
          "ref": "b530c624-dfc7-4aaa-9c38-72d2bd10a7b4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "803a6c45-5b9f-440d-af3e-c19ce09d4c36"
        },
        "item": {
          "id": "ec06c452-0501-4e0b-b052-fb3fbf28fb28",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b56b3ba2-1cc3-4f24-bf7d-d6c1ded616ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3dc816-c9ad-4ea8-91b8-573df7857de0",
        "cursor": {
          "ref": "9883f671-e1fd-48af-91b8-379c2e728865",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "42233454-ffa7-464b-bb49-6f1849ca4a6a"
        },
        "item": {
          "id": "7d3dc816-c9ad-4ea8-91b8-573df7857de0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "93b86833-f05c-40ae-885c-ea2bd6768dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69906742-004e-4965-8546-e759ddf0dce5",
        "cursor": {
          "ref": "178d1666-0e08-47fe-8b27-690f840db4ca",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3ca84dde-089e-4891-9cde-0699fd64641d"
        },
        "item": {
          "id": "69906742-004e-4965-8546-e759ddf0dce5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b67b028-a2ed-4c40-bb8c-92a1c1af7094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d298a35-1fde-41c3-8dc9-139fad9a8cb2",
        "cursor": {
          "ref": "98536027-7ec1-4c26-bfa8-30411b977f43",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3edbdaa2-14b7-4d09-b645-d0b236452cfd"
        },
        "item": {
          "id": "2d298a35-1fde-41c3-8dc9-139fad9a8cb2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e4e95434-40fd-44ff-9f7a-41153aaaf0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146a4354-8808-47e1-adf6-2dd3e9add40e",
        "cursor": {
          "ref": "43f2e79e-df90-41b3-a46c-82da6e331b4d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "424bf643-2edf-489f-9e08-59b345e0dce6"
        },
        "item": {
          "id": "146a4354-8808-47e1-adf6-2dd3e9add40e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5bdc9cae-d33a-49cc-b355-ab89aee47bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d93149-e5fa-49e1-9463-e70399038f63",
        "cursor": {
          "ref": "3d352a7a-fa7b-4f7c-93bd-899dd017e5d4",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "03db8090-a04c-4bbe-81b7-f98edfbd7419"
        },
        "item": {
          "id": "c3d93149-e5fa-49e1-9463-e70399038f63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b2d3b19-ed14-4423-a2b2-aba38d830f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e15df6d-bb65-43a9-b7f8-61765f309f05",
        "cursor": {
          "ref": "06a3bce6-1d6e-4226-86d4-306b5272ce75",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3ae38012-ab04-4a7a-8f91-f77a182cdfa1"
        },
        "item": {
          "id": "7e15df6d-bb65-43a9-b7f8-61765f309f05",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d3e4b8ec-cd4f-4fff-ab79-50b674909d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d2f0d-c8ff-4ce3-828f-b99605bcee33",
        "cursor": {
          "ref": "0f19ed52-4216-4556-b657-33674e41dab1",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7d979a8b-7281-4a25-8ab7-b6a4c4b02614"
        },
        "item": {
          "id": "0a5d2f0d-c8ff-4ce3-828f-b99605bcee33",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7d4cd56-768f-498e-bce6-9902dfe79eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b932715-1c67-4cb8-a58d-ea41308832e9",
        "cursor": {
          "ref": "a65e0959-2e43-4025-88ce-0b2e7fe23779",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4e7bdb73-463c-4a62-8e62-ce5be716f59d"
        },
        "item": {
          "id": "5b932715-1c67-4cb8-a58d-ea41308832e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "93136539-56de-408d-accb-9e6f8fda334d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28491b9-4999-4d36-a320-18c83687004b",
        "cursor": {
          "ref": "e5ccda82-74aa-471a-b99a-dc38a2f85982",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48ff036a-2463-44ce-af4b-25cbca27ee2b"
        },
        "item": {
          "id": "a28491b9-4999-4d36-a320-18c83687004b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9820f931-1273-451d-91ef-9c210d0cab25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635304e7-df16-4cc1-9074-93b77018fe62",
        "cursor": {
          "ref": "6882384b-67eb-4967-acb8-0130e97efed1",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c2b36cc5-5e66-4406-bc9f-03670c131458"
        },
        "item": {
          "id": "635304e7-df16-4cc1-9074-93b77018fe62",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b1d5dad0-bec5-43d0-b424-fdf820efe450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44736993-96ce-4ba4-acf7-314d031722cf",
        "cursor": {
          "ref": "c31a09fb-6a54-4a51-9baa-6def53941688",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "102697b3-3f88-449c-86fa-47758b1b6c3f"
        },
        "item": {
          "id": "44736993-96ce-4ba4-acf7-314d031722cf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d857a7b0-36c1-47c3-bd26-6831913b0356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e583754-0b50-4eaa-9f8f-3de9d2fd8bbc",
        "cursor": {
          "ref": "6ca9e127-4354-47ea-b553-9a5dca797ec5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fd5846f3-5df5-4059-8101-e66d5f6ae0bf"
        },
        "item": {
          "id": "6e583754-0b50-4eaa-9f8f-3de9d2fd8bbc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b59b9306-625f-4f4e-9f8c-0719f4920b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d55673-7693-4fb2-8007-93a9398ca052",
        "cursor": {
          "ref": "c1b56731-b8e6-4fee-bde7-f4db7e94020b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "538410b8-b955-4212-8403-d824f9a35175"
        },
        "item": {
          "id": "d6d55673-7693-4fb2-8007-93a9398ca052",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ad4a9824-e3df-480e-a6bf-4c52dfa70111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce88502-c953-42a0-891f-176ca3e883c3",
        "cursor": {
          "ref": "5426f127-42b1-446a-bd04-40ef5ea9db4a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d3f5fef-f0ee-44f3-8307-716b59be16e2"
        },
        "item": {
          "id": "2ce88502-c953-42a0-891f-176ca3e883c3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "605c85a2-0468-46fe-816f-b5d8c75add41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fd3e43-a72c-45c5-9abd-3c8638eb4439",
        "cursor": {
          "ref": "cc9de4ac-a2cd-4a30-a815-32e6ce4310b8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4b8c2161-8392-4d0a-9220-bf62c9f3385a"
        },
        "item": {
          "id": "f4fd3e43-a72c-45c5-9abd-3c8638eb4439",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "46089196-8cf8-4773-881d-31ad5be67a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfb846b-cd9e-45d9-a501-caf7bd842114",
        "cursor": {
          "ref": "e5e76922-89ec-423b-9972-2c1b521f982c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "17a7673a-61f4-4caa-a3b4-2775ade6439f"
        },
        "item": {
          "id": "ebfb846b-cd9e-45d9-a501-caf7bd842114",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4522adf9-88cf-488c-9a4e-c87e9e035a05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef94fdfc-872e-4504-93b1-09312b064da2",
        "cursor": {
          "ref": "9c47d7a5-d4d5-43fe-96ef-3d27fccc6ef5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3d566cee-fea3-4b6d-9d96-efaa3aa5f3f4"
        },
        "item": {
          "id": "ef94fdfc-872e-4504-93b1-09312b064da2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7e16414-8d96-4c47-8f26-5b97d7152e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc07382-c9cf-4b77-9ccc-b802659b1355",
        "cursor": {
          "ref": "5e03a9c2-516a-4782-bd1b-bb66a9779737",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c7c226e7-d633-4750-b694-98a07c0a0595"
        },
        "item": {
          "id": "dfc07382-c9cf-4b77-9ccc-b802659b1355",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9b677d9b-afa5-485a-9040-3afafa1cb9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d8c24a-535e-4cc0-834d-ee5a2148fb4d",
        "cursor": {
          "ref": "e67fea65-719d-4748-b60d-fd11fa466f9d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3eb8f325-8467-4b96-899a-58aa222a976e"
        },
        "item": {
          "id": "78d8c24a-535e-4cc0-834d-ee5a2148fb4d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f3d79cc2-2af1-4c24-922f-4f21422c19d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317e3ecc-a297-4d15-91ad-56a37d727e49",
        "cursor": {
          "ref": "43a962f7-f3b1-434f-b34d-6144443a68af",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0305869f-67d4-4db5-a4d6-14967f41d0a4"
        },
        "item": {
          "id": "317e3ecc-a297-4d15-91ad-56a37d727e49",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d3ae96f7-87af-41a0-9273-b9cadbc6f2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3166e444-20fe-4b98-b484-5d48e2f40f1a",
        "cursor": {
          "ref": "b672b38a-0fda-4d59-bbe5-626ec3b43ae3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "16794e92-30e1-48fb-87b7-16c8540ff728"
        },
        "item": {
          "id": "3166e444-20fe-4b98-b484-5d48e2f40f1a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "72359d6c-106e-4374-8900-240a8cf7e98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c16b6-b771-4cf7-8d2b-e1f1f8e8a0b1",
        "cursor": {
          "ref": "1b3609ee-2f41-41c8-9b9d-fc4ecb0c6b07",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "72ecd459-fd21-4800-8ea9-522a30573f92"
        },
        "item": {
          "id": "7e3c16b6-b771-4cf7-8d2b-e1f1f8e8a0b1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "99da5e32-a9cc-414c-8502-5ca69479aaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6258c16d-211d-4ef5-bb30-28a4fab00387",
        "cursor": {
          "ref": "2327a7eb-e532-440c-938e-8658159b6edc",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f4ec50ea-5ac3-49da-91ca-b00e0e1338ac"
        },
        "item": {
          "id": "6258c16d-211d-4ef5-bb30-28a4fab00387",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "16eb9e73-be04-45c1-a1f5-393abed0a1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a2539-b5e6-497d-9676-f289c45aa556",
        "cursor": {
          "ref": "b2cc9ad4-b5b7-46a4-b36a-2a0f0b68ddd5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4f890c2c-c873-41fd-9ba1-494bc5cd35db"
        },
        "item": {
          "id": "e96a2539-b5e6-497d-9676-f289c45aa556",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5d923562-7e1b-4eb5-ac20-437a1b976f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74b5aa0-9a6a-4df5-a4ea-7853e23879d1",
        "cursor": {
          "ref": "62ee2c34-490b-4fe3-93dc-fa0f56853208",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "661f4514-0ff9-4e2b-bd83-88c6e19398ea"
        },
        "item": {
          "id": "b74b5aa0-9a6a-4df5-a4ea-7853e23879d1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "45bcd733-cbbb-400a-9e25-deeceb8c5f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee10a26-2216-400e-ac5d-079ff119423f",
        "cursor": {
          "ref": "e9ce5bd8-090a-4cbb-b1dc-e678ae2d398c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "95eab454-f811-40fc-9ca6-fdf766d894fe"
        },
        "item": {
          "id": "eee10a26-2216-400e-ac5d-079ff119423f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fb3bed71-d2a0-47ea-bab1-809f76555d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b111d5-ed07-4065-b041-6c6b756f0631",
        "cursor": {
          "ref": "99816b74-0ed5-4e5c-8d56-901045669143",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "05a6baec-57cd-49b3-9e72-7046affb2f62"
        },
        "item": {
          "id": "95b111d5-ed07-4065-b041-6c6b756f0631",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "937f47e0-fca6-474a-aa6b-482aa19b94f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770fc514-5ad6-4022-b3ea-0104de75f9cc",
        "cursor": {
          "ref": "e548a09e-9b44-4f63-922a-df9f4dcae9c8",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ada287b7-f9aa-4856-a538-ab151e264dba"
        },
        "item": {
          "id": "770fc514-5ad6-4022-b3ea-0104de75f9cc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95b00e87-b0c8-4ab6-8fd3-593984e57902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248f7300-7230-4521-b7cf-eb10e4a45981",
        "cursor": {
          "ref": "45934d55-9705-44fe-8e23-d386d8d02a89",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d05cd905-3c5c-40d9-b722-d9b8f6e2154f"
        },
        "item": {
          "id": "248f7300-7230-4521-b7cf-eb10e4a45981",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3c2f3845-6974-464f-81b5-80b0d238835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e223564-5ae0-416d-acce-111afa0be24c",
        "cursor": {
          "ref": "c32b3f25-63b3-438e-a765-e0ea9bbf41e1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "38bceea5-7bd4-4b7b-b7d6-0216acdc9f91"
        },
        "item": {
          "id": "8e223564-5ae0-416d-acce-111afa0be24c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "111d9fb5-162e-4345-80a4-1ce6864ae3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bd0108-111b-4a06-8262-e3c7e73af065",
        "cursor": {
          "ref": "8ababed6-1f2c-4b60-a9bb-0bdfb0d658dc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0e91e578-c55d-4f4e-a944-66ed522d1ee3"
        },
        "item": {
          "id": "f5bd0108-111b-4a06-8262-e3c7e73af065",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ce1aeea7-aa07-4ea4-a0fa-e55b77f4145d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e9818-3478-42db-a626-40e5c6488b12",
        "cursor": {
          "ref": "3dc5fe49-d872-438a-a88a-6ed760a9b0d9",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fdf0f30b-bd6d-4f0d-9c48-568c292b238e"
        },
        "item": {
          "id": "cd5e9818-3478-42db-a626-40e5c6488b12",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b9b3a287-02fe-4d88-9e4d-3220332554ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c4e3b5-a47f-42aa-9a3c-309c50e61d60",
        "cursor": {
          "ref": "3ad33b5d-ea3b-4775-83a0-fd9e74331a68",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "26db321d-1eb7-4227-bc43-6cc6f5a7745a"
        },
        "item": {
          "id": "95c4e3b5-a47f-42aa-9a3c-309c50e61d60",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7bc54b5f-d21e-4d38-bb12-703e1d7aee8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb22b2f-f1ac-4f68-9f81-25b55355b0c6",
        "cursor": {
          "ref": "2de04c57-67b9-4733-8225-572a1ce047ce",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fa2464cd-5dcb-474c-ba3d-1b2fc61e46e5"
        },
        "item": {
          "id": "6fb22b2f-f1ac-4f68-9f81-25b55355b0c6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "11055394-2478-4530-88ec-3076cfdac21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01764664-fdd4-47c9-bff6-96efeeeee5e7",
        "cursor": {
          "ref": "b17a7d41-db09-40d8-98df-cb50b4237193",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c14a82f2-822a-4dab-aa05-1681a86e2f1e"
        },
        "item": {
          "id": "01764664-fdd4-47c9-bff6-96efeeeee5e7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "68d7ee6b-fb66-487c-b4be-2e6c58665a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0c271b-6e4c-4370-ba2c-26fa110e903e",
        "cursor": {
          "ref": "f826f29d-90c8-465d-9023-cb8e83cc3448",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9795c736-7e02-4af1-a00f-4eea75fdd2ef"
        },
        "item": {
          "id": "fc0c271b-6e4c-4370-ba2c-26fa110e903e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bf4c8c12-9b6b-4170-a6c6-c31412f2216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01584a6c-4e7a-44ab-9cc4-cad882b4bbb2",
        "cursor": {
          "ref": "0a2d3807-b3e1-48bd-adaa-58551f7ee7b0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1a04a22a-a8e8-4c9b-a500-3a5c89790e1b"
        },
        "item": {
          "id": "01584a6c-4e7a-44ab-9cc4-cad882b4bbb2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74252466-a8e9-43c2-85a9-f07bce8dc517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263c2430-48a5-46de-8048-930358608303",
        "cursor": {
          "ref": "4b6b2fc9-14c6-4880-8ee9-f04c23cc93d2",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0dd1122a-bff7-4899-9e1b-1ef0d71ab523"
        },
        "item": {
          "id": "263c2430-48a5-46de-8048-930358608303",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "451716e8-9113-482c-98e8-194176921035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3143cf-7198-483e-8dea-28d03792380e",
        "cursor": {
          "ref": "14e70100-f7cd-4215-a3dd-393e2fce094c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a76d606b-0900-4c2c-bec3-de79369352fd"
        },
        "item": {
          "id": "3d3143cf-7198-483e-8dea-28d03792380e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "061a7c90-cbce-4638-9850-b3ee9a8dbd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255be998-5b09-421b-bfdb-34c9598230a4",
        "cursor": {
          "ref": "160e98ee-249a-4db3-8f02-e4447b3f754f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "431225ef-6637-449e-8aa8-fdcefd62d94e"
        },
        "item": {
          "id": "255be998-5b09-421b-bfdb-34c9598230a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9a631049-f217-42a4-915d-3c3f9e57db9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7ee5b9-dd4d-4e5d-9ab0-2ed6b2e142a0",
        "cursor": {
          "ref": "04e62e8c-e0a0-4d76-9b67-c4793eed6934",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7ddbc5d9-4dde-4ebe-a8f3-b23e126f75c4"
        },
        "item": {
          "id": "da7ee5b9-dd4d-4e5d-9ab0-2ed6b2e142a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a0b4e680-17b7-40e1-843d-658787b28282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601ccf87-60dc-4532-aed6-13d78da477f0",
        "cursor": {
          "ref": "ea8b0820-8f6f-42b9-bbb9-46adc3a9f2af",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "31d19eed-7fd1-40b5-a66d-dd833dc9eb28"
        },
        "item": {
          "id": "601ccf87-60dc-4532-aed6-13d78da477f0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9afcda07-09aa-4ecd-90d5-714c164aa4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a79740-0138-4cc1-9220-168168d02aa2",
        "cursor": {
          "ref": "1611ae2e-0240-469a-b5d8-a60129dcace7",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5136e05a-75fb-4b6b-8e04-eef7ac7b0f3a"
        },
        "item": {
          "id": "83a79740-0138-4cc1-9220-168168d02aa2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "243964f0-2c7b-4460-816d-23d7158d3512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765ac295-5f1a-4494-85b5-3a9383e61219",
        "cursor": {
          "ref": "30c96e23-b514-492b-b59e-622e9dd46c9a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1a837237-6a40-4115-b39f-45b0c585b04a"
        },
        "item": {
          "id": "765ac295-5f1a-4494-85b5-3a9383e61219",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9b122f4a-cfe1-4b93-8afb-48e8b4bdcdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f518b30e-1924-489c-95fb-53ccd47e9ed3",
        "cursor": {
          "ref": "73ffd36e-1d52-43a0-989a-fd7faaf1188a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d27568cf-3ea7-44ac-ace3-4f487942efbe"
        },
        "item": {
          "id": "f518b30e-1924-489c-95fb-53ccd47e9ed3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "67bcff0e-f207-4c4b-a075-bca92a4ff0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fc3971-35a9-4a73-aa8e-f8afc0e5e9de",
        "cursor": {
          "ref": "570e7a96-5da8-4295-bf3f-730647fb8382",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "902261fc-a786-4956-8465-f92b74adb1af"
        },
        "item": {
          "id": "85fc3971-35a9-4a73-aa8e-f8afc0e5e9de",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "915b3ea5-a8e6-4b8d-b71b-af6b8412e6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d8a39a-72fe-4c97-b86e-fe039562de55",
        "cursor": {
          "ref": "e71a9b0f-f940-4db2-9c54-0e502e207f6e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "06b131a3-4913-4eed-bc2f-cfb85ed07907"
        },
        "item": {
          "id": "f7d8a39a-72fe-4c97-b86e-fe039562de55",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3c685ba2-d413-4c94-8a4b-ed03f6a5d195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f4a30-dd31-4531-9af9-173a48406ed7",
        "cursor": {
          "ref": "67f6d745-7487-4a97-868e-9a5d8072de42",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac4f7c1f-ab29-418b-ab16-bf96f5947d1a"
        },
        "item": {
          "id": "e60f4a30-dd31-4531-9af9-173a48406ed7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ca47049c-3d56-479b-8b85-b5fd7f302e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29f3ec6-b304-4c5b-8a62-e8526e047e96",
        "cursor": {
          "ref": "ca7d2d2c-ac74-4f25-b1fd-9badbf035339",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "72c9e2f5-c300-4793-8ae2-134b753a7ba5"
        },
        "item": {
          "id": "c29f3ec6-b304-4c5b-8a62-e8526e047e96",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dfa27e9b-6d53-4cbf-8ead-d7978a101689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a72ac75-b748-4256-af8e-a39a310e5b67",
        "cursor": {
          "ref": "61236f05-36c8-4feb-9684-c1fca3630116",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "48f8ba86-6e87-40d8-a7ca-eb534e645332"
        },
        "item": {
          "id": "5a72ac75-b748-4256-af8e-a39a310e5b67",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c05a2c3-45e1-42d6-857b-bff50f80a250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646e8280-6979-47bd-a4b0-dc71f956c33b",
        "cursor": {
          "ref": "ff8e5aff-d4c0-4814-8f69-29f167c545c7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "74eaabeb-476f-41bf-a277-ef296edf868a"
        },
        "item": {
          "id": "646e8280-6979-47bd-a4b0-dc71f956c33b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d3c8b633-62f2-4718-9fbf-76b513bc805c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d2d09-2b06-45d7-99ea-ed7e9f3713ae",
        "cursor": {
          "ref": "cb3d458c-d2d1-44d5-aecb-c99c9778e6a3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4458a8c1-5782-453b-aae4-bfc9cabea581"
        },
        "item": {
          "id": "eb3d2d09-2b06-45d7-99ea-ed7e9f3713ae",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1c0fc79b-75be-48e8-931c-c285b056f95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df142e9c-fcce-411f-b608-9ed9eece32df",
        "cursor": {
          "ref": "36c75931-30c0-4ebc-bdad-15c3f533bfde",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "21dc9011-0f15-44ec-81d9-4b6ff04dd5f3"
        },
        "item": {
          "id": "df142e9c-fcce-411f-b608-9ed9eece32df",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "21b62553-e995-4dad-9b93-06c5c0f37c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4678aaea-454b-47a5-bf61-b77c96a2e547",
        "cursor": {
          "ref": "b7da218f-e2ae-404f-8f8c-c959cdada05e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "43b64a91-17d3-4ff9-bc70-90f106b98bba"
        },
        "item": {
          "id": "4678aaea-454b-47a5-bf61-b77c96a2e547",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e01de7e1-4fab-4a3d-add1-ea7ef24025a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d2a5bc-500b-42a1-b60a-8836f1d58343",
        "cursor": {
          "ref": "4171fa1c-7251-4557-9638-c576873a66fe",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "02bfc8ea-c450-45fd-a54d-dc4d47954be8"
        },
        "item": {
          "id": "00d2a5bc-500b-42a1-b60a-8836f1d58343",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "513f700f-fa87-4299-a6da-2565c71c386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de5f3c-9293-4e95-9a7c-25ef3446fb43",
        "cursor": {
          "ref": "d0c3d71e-0818-4044-a6b0-bf69a6e3a4cd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a4dddced-19b4-4dd8-879c-62981184d3fb"
        },
        "item": {
          "id": "d0de5f3c-9293-4e95-9a7c-25ef3446fb43",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d694d358-c513-40f4-bbf9-2f554d97e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb361eb-e6d7-4e2a-b4b2-f1c02b0ad6da",
        "cursor": {
          "ref": "3cca5269-b7f4-4885-a4df-9c14e011c652",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ab713b2-3a70-499d-bf39-62fe03588db8"
        },
        "item": {
          "id": "dcb361eb-e6d7-4e2a-b4b2-f1c02b0ad6da",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1e4cfe89-0750-4a9d-859e-d5200140af12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38543690-aa47-4afa-a933-f78b0200fd9e",
        "cursor": {
          "ref": "0603e975-6812-46e6-a793-81aa82257d1d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ebe2abbe-39b6-475f-a4d7-8bf523644564"
        },
        "item": {
          "id": "38543690-aa47-4afa-a933-f78b0200fd9e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8db6ed02-5b6a-4d39-a183-080c256dcf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf53e3ef-1f23-40e9-9192-4967fd91410c",
        "cursor": {
          "ref": "d7a58166-4095-4ec9-8882-a33023a6987a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "95a0d201-edea-45b7-84a0-4d699fbd32ce"
        },
        "item": {
          "id": "cf53e3ef-1f23-40e9-9192-4967fd91410c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "43a2f45a-bd30-43ba-b14c-754370dd249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e3bc1-bb5f-4577-bc3e-89e63a36b9ba",
        "cursor": {
          "ref": "29d16d81-2c8f-4043-a6e6-8316a57473d3",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "62d4b873-8841-476f-aa8d-368455ea2dae"
        },
        "item": {
          "id": "125e3bc1-bb5f-4577-bc3e-89e63a36b9ba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a3a7f73-794f-4967-8be0-a4c56c5d5a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7b32a6-2b51-420a-abd8-e182da39dec4",
        "cursor": {
          "ref": "70695b64-3fc5-4f0d-bc2d-47f375bb7a3f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ceb1271d-96fc-4bc8-92d4-6ac1732b8ea7"
        },
        "item": {
          "id": "2f7b32a6-2b51-420a-abd8-e182da39dec4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "afe9c903-84d4-4358-8f6d-0ee0ca59e877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a95a536-4e9d-4894-9f5f-4923aa86fa0b",
        "cursor": {
          "ref": "1ba90358-3513-4e52-9ebb-8393aa4fcd3f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4aa39650-9de2-44ce-a967-1efd046e48ad"
        },
        "item": {
          "id": "9a95a536-4e9d-4894-9f5f-4923aa86fa0b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b018c982-31c0-415a-9461-2171fe134e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c65cd60-c42d-4f3f-a9ac-c54b33001401",
        "cursor": {
          "ref": "e396d3b6-61a3-42ee-ba0c-1acbdee50126",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a8645870-5272-4f98-adaa-c9925312c3e0"
        },
        "item": {
          "id": "9c65cd60-c42d-4f3f-a9ac-c54b33001401",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b3f65b31-da49-471f-ad3e-68bf587c58c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4ae413-f39a-4c42-a937-9f244cd5d1f6",
        "cursor": {
          "ref": "30de0a57-254a-4556-861a-182cc747e2dd",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9e0fb7c6-57fd-46bd-bfbb-e7d5b290b2c5"
        },
        "item": {
          "id": "ba4ae413-f39a-4c42-a937-9f244cd5d1f6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e2a2d1dd-769a-4ada-9082-870d8713ae2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c24755-e800-4631-9173-633494368526",
        "cursor": {
          "ref": "1dee0d04-1539-4f60-b097-e412f27527be",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c06d58bc-2742-4b71-bfb4-c4c36ae4cbac"
        },
        "item": {
          "id": "17c24755-e800-4631-9173-633494368526",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "311237fc-d5da-4387-b07d-edbef87bccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8c2a09-363b-4624-9085-e775ae8035e9",
        "cursor": {
          "ref": "8afa0804-66d5-4da5-b3d7-16d1ed31b423",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3d9cbf3d-ef2e-4ab5-8492-bafb1cbbac91"
        },
        "item": {
          "id": "be8c2a09-363b-4624-9085-e775ae8035e9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f3f65d71-d9f7-41b8-976f-921072f0d210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3028e8c-338f-4472-b6eb-7120b84ba47f",
        "cursor": {
          "ref": "7e001dd9-f56d-4927-bcdf-5bbd141d1baf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d96db14b-c01a-4ae2-bfdc-95786059dd6f"
        },
        "item": {
          "id": "c3028e8c-338f-4472-b6eb-7120b84ba47f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "680f7a32-921e-4d46-8c14-05bc93bfc7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2aa874-ea3b-4b68-958b-889aa32837fa",
        "cursor": {
          "ref": "830cd084-6c78-40a7-b878-dda2e3cca306",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b313e44-ac4b-4888-b8e5-66c3aeda3abe"
        },
        "item": {
          "id": "1b2aa874-ea3b-4b68-958b-889aa32837fa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b2263d9c-f914-4940-aa3d-886d64930fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe96f757-3882-46e2-b66e-d32156bee6e6",
        "cursor": {
          "ref": "9d27de95-4021-419e-8381-82c7a35d02aa",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf470c85-b4d4-4b7e-a27f-8dfea0827f88"
        },
        "item": {
          "id": "fe96f757-3882-46e2-b66e-d32156bee6e6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0896a1d-6bce-40c2-b114-7535cb0bfadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db6ac3e-6122-4f20-b2c6-b84857d9cd69",
        "cursor": {
          "ref": "037e5e07-837b-4493-80d5-dbc97d2462b7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f953e9e7-b34c-4f63-830b-1078bfd81869"
        },
        "item": {
          "id": "3db6ac3e-6122-4f20-b2c6-b84857d9cd69",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "04d75ade-4866-4ebf-af69-a54117df1c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a562141c-71ed-4547-b695-ef99b18066b7",
        "cursor": {
          "ref": "74595dca-5654-4d00-915f-d4615b85b80c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5dc489ff-7bdb-42e3-9d8d-64e3cffccaf8"
        },
        "item": {
          "id": "a562141c-71ed-4547-b695-ef99b18066b7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9233bf1b-49ba-4f8a-afdf-f457489e8d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204d6b29-17bb-4dc0-ba8a-6d962091f565",
        "cursor": {
          "ref": "fa5c12d5-17a6-4d40-83d1-ceff17553862",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f18fd8e2-7572-4f57-a318-a2f899f1db01"
        },
        "item": {
          "id": "204d6b29-17bb-4dc0-ba8a-6d962091f565",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1e55e053-2b50-407a-a994-ccc518f8bb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35841b21-215b-45f1-88da-9371ca05ab2f",
        "cursor": {
          "ref": "44b1bf98-5891-4241-a06e-2390c00024b4",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "10cd5da3-6a13-4e7a-a8de-231437d2d25d"
        },
        "item": {
          "id": "35841b21-215b-45f1-88da-9371ca05ab2f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dd68dc7d-37df-466f-a23f-da09f069ae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2074ade1-18d0-4a20-a347-b6abd197c73f",
        "cursor": {
          "ref": "09992bcf-499d-458d-bd84-3efc7c8e80c3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5dd2b5cf-8536-4cf2-8f9b-132ade1a6459"
        },
        "item": {
          "id": "2074ade1-18d0-4a20-a347-b6abd197c73f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "86818c76-e4cd-4c6a-813f-a95170c9c389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1eff3e-2b44-4b0c-89bf-6079839fa81a",
        "cursor": {
          "ref": "d125272c-8e62-41ce-ad9b-d748d13c3bb4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "44f14d4f-2ba4-46b4-8e00-efa4ab7fbdde"
        },
        "item": {
          "id": "eb1eff3e-2b44-4b0c-89bf-6079839fa81a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9ac8a216-acd9-4c0e-8e45-85255b35940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0275b6-df8b-453d-ad0b-4eb803ce2b0e",
        "cursor": {
          "ref": "879d3d9f-2b8a-4d17-9e41-b8004ec72bad",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dacb8165-06c5-40f1-9428-8e6d111c996f"
        },
        "item": {
          "id": "3c0275b6-df8b-453d-ad0b-4eb803ce2b0e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5806b1bd-904b-4c82-8b75-bffa1a3aa5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f83b05d-3256-4f6c-b060-fe4475b0aeac",
        "cursor": {
          "ref": "a41010b1-4106-4370-8a6d-58860df7532b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "488f7a46-59cd-4d45-8464-14b93554dea9"
        },
        "item": {
          "id": "1f83b05d-3256-4f6c-b060-fe4475b0aeac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3911e50a-6b81-4a61-b3c1-a12a1c93de40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bca576-f97c-4633-8142-78951fbf4685",
        "cursor": {
          "ref": "9a6f6b53-a679-4a77-ab7c-676dcb8c0ca4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1cccbb6b-91a5-44ac-acea-5111fbb584cd"
        },
        "item": {
          "id": "96bca576-f97c-4633-8142-78951fbf4685",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "be36906f-7758-453c-9348-c8af3dd1e31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9e7806-cbe7-483f-a02a-f509fe17a767",
        "cursor": {
          "ref": "b1def7bc-97ec-456f-bb7e-7d730b6ce4ee",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "18eef303-854d-46b6-a31e-e75c65045d12"
        },
        "item": {
          "id": "9c9e7806-cbe7-483f-a02a-f509fe17a767",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b137420-6c12-4091-87ee-185a9342791d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee4f368-85c9-4f55-922a-467deddb9326",
        "cursor": {
          "ref": "c44e6377-4715-4538-8744-6585f1133b09",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "328815fa-09c0-41e1-91b6-1894affc5646"
        },
        "item": {
          "id": "4ee4f368-85c9-4f55-922a-467deddb9326",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a0e83f07-8ac1-4ecf-b61d-5d060302aea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49bc5b9-9d60-4744-9ac2-0aa4d56569ff",
        "cursor": {
          "ref": "79261dd7-20d3-4fc1-8b52-3e205853820d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4f1b56fe-222a-4cdc-9a83-5b97eb5e2c95"
        },
        "item": {
          "id": "f49bc5b9-9d60-4744-9ac2-0aa4d56569ff",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "77747645-c107-4cdc-94ee-8d2792821ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9a2671-d1de-4fd5-ad1c-5fbaab8644dc",
        "cursor": {
          "ref": "c744c770-aa9b-4356-825c-99e4c0c5ebdb",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "606dff5c-454b-4b3c-982b-32ba0d673238"
        },
        "item": {
          "id": "3e9a2671-d1de-4fd5-ad1c-5fbaab8644dc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3b4208ed-44b9-4004-b728-a91dd3d1509d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70441f64-e586-4be8-802b-0fe6eda5fdda",
        "cursor": {
          "ref": "0abb0f4b-5dbc-41db-8842-675f7caf2be3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4e92ea37-803d-4b40-a9a0-a08cdc8cb813"
        },
        "item": {
          "id": "70441f64-e586-4be8-802b-0fe6eda5fdda",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "de02ba65-df3c-4226-9c70-f9cd561b60bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba70b570-4369-43c4-b301-d8c90d04268c",
        "cursor": {
          "ref": "7b615bc6-2363-414e-8eec-4575bc0bc54a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "af808b15-5c50-43ee-aeba-a5ad5760fc66"
        },
        "item": {
          "id": "ba70b570-4369-43c4-b301-d8c90d04268c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "357e2dc5-0b56-4f7f-aa1c-cc7633ed4993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04592eff-48ac-4e7d-863c-9cd0891f5b5b",
        "cursor": {
          "ref": "b8015a9f-1486-4175-a094-080a15a37b8d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4ffde2f3-5b05-4ba0-b5ec-65dab4650d39"
        },
        "item": {
          "id": "04592eff-48ac-4e7d-863c-9cd0891f5b5b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d811c449-24eb-42d8-839a-630de9b95b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e185d-0b5b-4c08-9c63-f2619e43dbf6",
        "cursor": {
          "ref": "960c26a2-3dd6-4786-869f-abac6589c5fa",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0e1919e-b2d0-449d-bf13-f148c3b090be"
        },
        "item": {
          "id": "986e185d-0b5b-4c08-9c63-f2619e43dbf6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "910c5fae-3aa9-4a95-a233-4d251e93847f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f227f46-05d6-4571-b145-619d3df65aa0",
        "cursor": {
          "ref": "d7aabc4b-11ca-4f5a-937b-7ee1c92d86ef",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4a318a24-c9a9-4ec2-b67a-8472fc2cbfc1"
        },
        "item": {
          "id": "4f227f46-05d6-4571-b145-619d3df65aa0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bbf7affb-c946-4302-a77d-1c565b79a917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff6cce7-5f67-458f-90db-25fa3c107716",
        "cursor": {
          "ref": "09bd8b8d-cb5d-4ada-8343-338a60e092ce",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "949651a7-9a7c-44d6-8e80-652174572440"
        },
        "item": {
          "id": "4ff6cce7-5f67-458f-90db-25fa3c107716",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e42f6019-9d2a-455e-877c-c7bd255b9f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642c8551-212b-42d4-8092-a2ffda2d4259",
        "cursor": {
          "ref": "9836ddd2-339e-4784-b16e-b799bed8474a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "051cdc14-d9f4-4f6b-914e-a2a3ea0380e0"
        },
        "item": {
          "id": "642c8551-212b-42d4-8092-a2ffda2d4259",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d27ab0ad-3a57-49e6-9d51-ca48f50fd681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826d464b-62bc-4438-b87c-f9b23517d7da",
        "cursor": {
          "ref": "4531ac35-dcf1-4307-a26f-521ce3ee3634",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a997c1ca-2b05-4dd1-9681-b95e3e457761"
        },
        "item": {
          "id": "826d464b-62bc-4438-b87c-f9b23517d7da",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6cc23b99-3287-4f40-9fbf-4f283762dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cfb3f9-3cc7-4239-9168-ee3714224b20",
        "cursor": {
          "ref": "aaf3007c-d26c-4d03-a9d3-3b7964d423c5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7a9a01af-95a1-4850-8707-e409285df17e"
        },
        "item": {
          "id": "98cfb3f9-3cc7-4239-9168-ee3714224b20",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0bf5f2c3-a676-4fb9-93d4-c7e107e347b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004c571-79d8-482d-b031-6b51c97770ae",
        "cursor": {
          "ref": "c4e5ca22-05fa-491c-acb3-700ef3fb39ea",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f0e7197f-c3e8-4c0f-8c3c-35fc67a945f6"
        },
        "item": {
          "id": "7004c571-79d8-482d-b031-6b51c97770ae",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3c9835a9-3d76-46ef-8bdb-4bb8a0c9c298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89539aa-c722-462e-9cc8-9187b38daa6d",
        "cursor": {
          "ref": "97743fa3-66a4-4c9c-b2a6-2c1261629e1b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "34f78bc2-adc9-4c68-92ad-66fa7da10b62"
        },
        "item": {
          "id": "d89539aa-c722-462e-9cc8-9187b38daa6d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b51edd5c-24ec-404b-a201-757a14d38903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8702cc4-f6cf-4ab9-8a36-bbab1f736f94",
        "cursor": {
          "ref": "4aac6791-0356-4895-85d1-d78362e49798",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "429fb9a2-1e06-471e-81c4-9b178db8385f"
        },
        "item": {
          "id": "e8702cc4-f6cf-4ab9-8a36-bbab1f736f94",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dc98ef68-740f-48c9-9d6e-3cc282c0856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4461e7d-71dc-4878-84e8-176557cfb043",
        "cursor": {
          "ref": "919798ff-dfc7-49a6-b7df-669d46cf1021",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8f3a5525-7af8-4a03-97e4-be7f0ec6a623"
        },
        "item": {
          "id": "b4461e7d-71dc-4878-84e8-176557cfb043",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ccdf42e5-67f6-4967-901f-5775294e7710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86773517-670b-4401-9064-0887f4d2c1e9",
        "cursor": {
          "ref": "b9d621a5-fda5-4a87-a5c5-359b76aecf4c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "524b6fef-a713-4511-a83f-ef13d17b9919"
        },
        "item": {
          "id": "86773517-670b-4401-9064-0887f4d2c1e9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cab08da6-6ee7-4d95-8bff-0f114b76cc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4360ec9-3cbb-43fe-a7c0-ec9574e2f17b",
        "cursor": {
          "ref": "6ce55221-0cdd-4d7a-b989-3917cd70400a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eae5e54c-b5cc-408f-9e80-7dd717ec0f85"
        },
        "item": {
          "id": "a4360ec9-3cbb-43fe-a7c0-ec9574e2f17b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "eeeb0e9e-1d97-4a98-bc8b-1810e8057fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedcdb03-6520-42f0-b20a-33edac1bb7fa",
        "cursor": {
          "ref": "8991328d-9f52-4467-a63b-9a4492323c69",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a0643036-3bac-4e21-8728-01f9b84d4e68"
        },
        "item": {
          "id": "dedcdb03-6520-42f0-b20a-33edac1bb7fa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c3748a6-76e9-4d39-9e47-a3473b1c52ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321f18df-ff05-4264-9c74-6b8f13d9828d",
        "cursor": {
          "ref": "fdb1da2a-90fc-4a79-b378-a2f9202c21f4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a22bcb83-bb60-4c9c-9190-137cb5b9eacf"
        },
        "item": {
          "id": "321f18df-ff05-4264-9c74-6b8f13d9828d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8c479eb8-852b-409d-96fd-abf0aeeeaf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd257715-aa5f-48db-868f-c557d9e2991a",
        "cursor": {
          "ref": "6ec3c769-0503-4f65-bd7e-af5df1fcc361",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6fac830c-a77f-4399-8088-a4fe565a5a35"
        },
        "item": {
          "id": "fd257715-aa5f-48db-868f-c557d9e2991a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d430f77b-954d-4e88-a9d7-c2e0e5ee7fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17181406-0223-41fa-9d55-7c499235d14c",
        "cursor": {
          "ref": "1e5aa012-4047-4cb7-b628-22eb37ff7d1a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "003d5509-5fa4-4f9a-a263-ede65d60589f"
        },
        "item": {
          "id": "17181406-0223-41fa-9d55-7c499235d14c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "85e64f7f-4dee-40be-9086-a8cf6c3590ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310be5c6-d5f7-49f1-989b-54251f2ff02d",
        "cursor": {
          "ref": "34131103-303c-49d1-a495-e70a48d58689",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e5bbbbac-8f0d-4610-ad14-b106a2802d46"
        },
        "item": {
          "id": "310be5c6-d5f7-49f1-989b-54251f2ff02d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e43a504e-9aac-458c-aff2-197dca116d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b7a70-4325-4d9a-b891-74eb90c03b8d",
        "cursor": {
          "ref": "d483823f-c3ef-47e2-92f3-354a34a4128b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2b95d212-654d-497a-b015-93dbc8714f9e"
        },
        "item": {
          "id": "053b7a70-4325-4d9a-b891-74eb90c03b8d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "00d9d406-693c-481b-9456-e7068ae52362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd70428-90b8-4ca7-a4da-10f536a56bc3",
        "cursor": {
          "ref": "61528d77-cef3-4c84-9392-828af5928bf1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "23dee6bb-2fcc-4ef7-b4b0-2f9409ebca0c"
        },
        "item": {
          "id": "3dd70428-90b8-4ca7-a4da-10f536a56bc3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1c206bee-1ae4-433c-a981-4c42ad700c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d571832d-5983-494b-a23e-89958c082d0b",
        "cursor": {
          "ref": "325347a1-b159-4d1b-9e2e-25871b59be55",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7dbce311-0ac6-4430-8dd5-72dca4657f0e"
        },
        "item": {
          "id": "d571832d-5983-494b-a23e-89958c082d0b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c4adf84e-10d4-4af1-b0b8-7c80db11dfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e984c620-84c8-4000-af2f-7e4950a70e07",
        "cursor": {
          "ref": "38d5a98e-470f-4371-a7c6-2367ca69ab16",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c2545ed2-6c98-403c-943a-1157e557a4cd"
        },
        "item": {
          "id": "e984c620-84c8-4000-af2f-7e4950a70e07",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "23ba1fbd-0dc1-4502-bed7-d334cb65b73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059352cf-b841-46e1-9c1c-7091e3144046",
        "cursor": {
          "ref": "cacf23d0-e5ad-4289-a427-f60b47ea635e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d044f195-736b-4461-8e06-27212679bfa2"
        },
        "item": {
          "id": "059352cf-b841-46e1-9c1c-7091e3144046",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f26fa971-6460-4f6d-a047-55bb7d91ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c340a8c-05b9-4ca8-adb9-a67bdf57e901",
        "cursor": {
          "ref": "68c7fd86-09ea-4711-b9a2-0064ec83300e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "141eae48-d619-42f2-8ad5-7c90b792e66a"
        },
        "item": {
          "id": "8c340a8c-05b9-4ca8-adb9-a67bdf57e901",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0419b2f4-c2e7-4eba-9c1c-22cfa7692be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b0f05c-275c-4464-a08f-52794af0c9fc",
        "cursor": {
          "ref": "658fc7ec-cc5c-412c-92ed-356043e2fef9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0531233a-b45a-4c3b-be13-4deb7ebac5f9"
        },
        "item": {
          "id": "92b0f05c-275c-4464-a08f-52794af0c9fc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "638b6c60-93e1-4a1d-aa13-92a2a7548848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755eb5aa-ee71-4e34-b0b3-34060c3f6a2a",
        "cursor": {
          "ref": "1dc79742-52d0-4915-8b26-5eb98f263d10",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bb4a034f-daef-4b5c-891e-ff257e6a95ac"
        },
        "item": {
          "id": "755eb5aa-ee71-4e34-b0b3-34060c3f6a2a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c78d456c-cf1f-4660-9bb3-4567ce457b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6413a060-1a35-499c-abb9-04af6a8cda5a",
        "cursor": {
          "ref": "e06cf7c0-f31f-467f-a786-5ef34b2470db",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c3c1fa98-7936-4cd1-b1eb-764d660a5550"
        },
        "item": {
          "id": "6413a060-1a35-499c-abb9-04af6a8cda5a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2ee10b29-3a20-4c0d-a28e-ceeb9e2ab85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f7e9cb-5a0b-49c2-ad68-a86c4a322b50",
        "cursor": {
          "ref": "0d23e93e-8aaf-4ff6-87f7-6173204bc318",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "51af8d3b-643b-413e-beb2-d1bd7c082fa9"
        },
        "item": {
          "id": "86f7e9cb-5a0b-49c2-ad68-a86c4a322b50",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "690296d3-70af-43a0-a81f-cb5c113bf3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43576452-f875-4a96-9dbd-b9f068c719c8",
        "cursor": {
          "ref": "fbf3a89f-7a82-4aa2-9389-3cd056ce66c3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f0cf1a49-9b16-459c-9b4e-2b1ade77ef17"
        },
        "item": {
          "id": "43576452-f875-4a96-9dbd-b9f068c719c8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "daaf574d-b364-405f-b02d-5c6a4ed6250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec7862b-4ae3-468d-bd34-a73ebd8e6161",
        "cursor": {
          "ref": "ffd0dca4-54e3-43cb-8353-b58ebbb56adb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "59bb8359-469c-48c4-a677-fb2f9e6a4381"
        },
        "item": {
          "id": "7ec7862b-4ae3-468d-bd34-a73ebd8e6161",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d1d9c73-c7e6-4e93-921b-80c22c749cb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7249f107-91f2-47a0-85e8-fa0fb8aee04d",
        "cursor": {
          "ref": "dc88a72c-7464-4a8a-854f-967240969c8c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "df60f8f9-3852-46e6-b985-8f38f291e925"
        },
        "item": {
          "id": "7249f107-91f2-47a0-85e8-fa0fb8aee04d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b01b8ed8-177b-4bba-add9-7bcf4b40dcaa",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab73d147-aa00-461e-a0ad-3837dae6f5c2",
        "cursor": {
          "ref": "380ac501-d9ed-4512-92bb-0e5d2680a353",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78e9e70b-1fc9-4c5d-afbe-46f402ca7ce8"
        },
        "item": {
          "id": "ab73d147-aa00-461e-a0ad-3837dae6f5c2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "86cf554a-9a9e-4f76-a612-4a29d12b777d",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e348c7f-3510-4dc1-8807-42ca1ccaddbd",
        "cursor": {
          "ref": "52242add-bf14-44a0-9e8c-01f854a17284",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "99afadac-eb5a-4f41-a402-7c0718ea78b2"
        },
        "item": {
          "id": "0e348c7f-3510-4dc1-8807-42ca1ccaddbd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "25de352c-4d7a-470d-b3d1-0c1556837ba0",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b5f743-143b-49b6-970a-37fe230f3e65",
        "cursor": {
          "ref": "dcc1d3df-0502-4c53-a695-424e9cd14723",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9545e2c0-465e-4407-b195-2c26993d8cd2"
        },
        "item": {
          "id": "96b5f743-143b-49b6-970a-37fe230f3e65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1371ec52-ae85-4f01-bf0b-7644891953ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b5f743-143b-49b6-970a-37fe230f3e65",
        "cursor": {
          "ref": "dcc1d3df-0502-4c53-a695-424e9cd14723",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9545e2c0-465e-4407-b195-2c26993d8cd2"
        },
        "item": {
          "id": "96b5f743-143b-49b6-970a-37fe230f3e65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1371ec52-ae85-4f01-bf0b-7644891953ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae35b467-3f38-472b-8ba5-74e2f7bfe98a",
        "cursor": {
          "ref": "e7652c54-fc6d-48d4-9b98-16e88263f999",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9e7ddf9a-8a15-4a2e-b6ad-be39bc1086e1"
        },
        "item": {
          "id": "ae35b467-3f38-472b-8ba5-74e2f7bfe98a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f1762154-a307-4202-8bf2-1fdf1926a2c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcdb4b1-4321-4145-86ed-665df265e5a2",
        "cursor": {
          "ref": "5a64b2a9-d42b-46b9-b839-a5ea39c51c62",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ef792291-26d4-45dc-a213-2323a1311928"
        },
        "item": {
          "id": "ebcdb4b1-4321-4145-86ed-665df265e5a2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bf82f1c3-58f7-4c26-aeab-c328f7071b74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}