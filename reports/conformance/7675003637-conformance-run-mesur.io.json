{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f6bd6d1b-b709-4087-b79e-20fe0b35c327",
        "name": "Clear Cache",
        "item": [
          {
            "id": "25101d62-5b12-4dcb-ad44-497e26acf1e3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1ca62f9-14f2-4750-8263-dd41bb8914a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e1b68de5-3af0-4369-8cf4-909d1fc1fa80"
                }
              }
            ]
          },
          {
            "id": "d6b86e61-344c-477f-8bca-33f1245a51d5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39182247-227e-486d-ab29-b5f99c20cd70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d92c7677-4675-432a-99db-665d41f6f604"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c371f206-416c-4925-9e32-d192e0f4279c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9ac796b9-783a-4815-82c0-6202110d98e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51384958-f7bf-4f5c-9017-918f0c24a06e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "188d26eb-6503-4147-bf85-c5f4c78dab88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a366d2b-5f7b-44d9-96c0-ccdf776919f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b2db384-5253-4e91-a7b8-a84e2ee3e61b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80e209af-198b-4cc9-b77a-e22bc49ffe84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ace51d32-c5ab-4638-a700-d1da25cd1311",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09c9ac8f-effa-4532-ac2e-6b06b1dce993"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0845a7c8-4a47-4e10-948d-b0aec80706f5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "043cca85-bdd2-4e99-85ad-ec0c505ec75d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "627ba974-511d-4299-ad8a-ffc36f476a7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "912571f3-1700-47a7-aff1-d231fd4aa79b"
            }
          }
        ]
      },
      {
        "id": "b15316c9-2573-4efc-a087-942b2e768d5d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "38e87bdf-728f-4370-ac1a-61ea84537e9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b568930-9f93-4663-82ec-e1a2d8299f60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f727ec6a-394a-4e9c-b5fb-c6c7cfd1d03c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c23bb5-d886-4a76-8bcb-432a2d0772d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07b40f7a-8064-478f-87b8-faf8f091c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e271013-c046-4517-8f42-f81e0415283b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df9d7e0-ca39-40f8-95d8-9f58a94682f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "474e76fe-0ea7-4902-93b5-7e76ed4472c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edb0ff2-9c97-4d83-9cae-ca129b553db0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e14fabf-e5bf-420a-bf52-282b9dabfa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d6cb0f0-86ac-451c-af78-79b912b62681"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a145993d-f1ab-478e-af7f-c620f3ad3b72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfbbdac3-36c2-46c6-8487-4e350ca8b9b6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59fbe80-8037-4740-8478-af84c0c688f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d499c24c-b65e-49c0-b6ed-e8e8934a53bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f813ef78-89f6-49cc-bea6-5f1d85afbae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ad4a78-a63c-4c86-b6ba-e14690892ea8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0e5a0fc-be63-4c45-9925-baa7e584bacb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b7d8845-6821-4d8a-86b1-333007125847",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fc1ab5d-ee68-44f9-b9ab-da92e517b08b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b75abd3-ea7e-4f22-931d-a6cf73f39011"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1cd77ee-111c-445b-ad0d-d6db67340ad3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "db215785-c088-4579-94bf-483088d3fa6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "148838bd-d3bf-4be5-9ee4-926541c76141",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8500fed8-28a3-4d89-ad06-778c8711539b"
            }
          }
        ]
      },
      {
        "id": "244c8fc5-a476-43f8-913f-3f3e4b78fc0a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "86877df8-e570-4355-9ad2-8c9f9dc065b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43d29e95-fe62-415b-afb4-cc7ab13e0162",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "29368532-5710-443a-9bbe-388fb0787111",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5f8fc-51d7-4373-8b94-dbb7f5edb586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3464d0-f8d4-4bdd-9d21-9a8917cac01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3a924f-a5df-496d-abdd-4b823e226a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cb2dd1a-97f2-4403-9649-b4a18b858257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbc16a2-7556-499d-9f56-934720a69d7c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cfee4a-88a7-4d62-9b6e-2155a7ecc008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fadcad5-7d75-43ef-9059-d7ae79b103c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52189ad0-0906-4265-bb71-ea30fee4dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ed83689-fad0-4685-8b4f-cd782ef118e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c26e72-326d-47be-a40e-754077ab401b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8014304a-d879-4b02-8818-c47d5fe8f8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9309ca-c24f-474d-b3ef-5e80f2b8bf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e73d5fb-fd91-426e-aa93-cb9b6e68228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2d3d70f-e939-4638-800b-f4cf8c1bc5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606e9c34-68d8-4cdc-9208-7229f13e1466",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56326385-dee4-4325-aa09-39c0342173a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a634294-6c75-4efd-8a41-dbffa826329f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5128ea-5ecc-4247-bed3-140c93840934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb2bbcb3-a205-4287-b66b-c70a29d7ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3128d604-8d75-4a5e-afaf-5f6418fadaf1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fd2e08-f42c-4e83-a0a2-0dac4342e723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc24c7e-1070-4717-8ca5-d2b9327ffac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5615a8e0-5eda-4e38-8305-592a72248bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ccd647a-ffde-42db-9f44-63dbc1e84bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa64b777-fe13-4095-9497-29034d5da7fc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c430d388-5394-4665-a50f-e699404f06bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7777b8-94a2-4cc9-8efd-ef2048a84a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c123b3-9481-447f-bd67-3f9d46621d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c1bbc9-ca55-4d18-903e-2019a4f869df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a538f1-7f2f-4c7e-bfbc-3c3ce68d64c4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f720167b-3506-4823-8d56-06429df82fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7618e61-271c-495c-acbf-5571084ead96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4300a2b3-b378-4fc2-92ab-9ee3933f824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c3a325-5c86-45f2-b21a-a6819c2341d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db939b29-81b1-4f6b-a335-26d31e53d0f4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646f4be3-c3aa-4c97-8c6e-4bcce96b2635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4078c23c-2c17-4199-97e2-10778f28cdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e2bfcb-93ea-4a33-ac30-027ef94f4274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6049d5a8-73bb-4d6a-a196-da5e1a36fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ef8e10-abc3-4020-a825-0a3dbd75e9dc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7589a620-bde9-4f30-89b7-7aa8a10f3375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cd1122-c904-4073-a070-23352a06bb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec0868c-bbcc-48b2-87b0-19962d78a46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1715da-804a-48ed-811e-f803462fbe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d7952-08e0-42a3-8351-d151bf11b5bc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb9c058-77dd-44ea-872e-a0bacdc2976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c694c6-84c1-47b8-b228-73735bf205b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a764c-8cfa-47fc-87d7-86c090d6baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fc58863-ea87-42f5-a7f1-17656c9164ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40c2208-e4c2-4dca-a689-af7cacb425bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd85348-b5da-4bb3-9af6-5316542316c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859b13e5-9bd9-4a9a-9c92-36518d8d8266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521e9d42-21f4-47e8-9d67-ab6dfeb08168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f1d758f-10d2-4dce-ad13-a7bc2ff53dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974a0757-bb85-47a1-962b-d5c8c1194563",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239ad0b7-35d6-4a2b-af66-d52fa35e794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce34229c-23bd-4586-a5b4-1ac19d8a6c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b36db8-290d-4dea-ab18-0e4f755614e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1930c952-993f-4837-96b2-6c55e66cfa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6165de-a123-4071-94b5-5149c35fb882",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3258de25-ad2e-47c6-9433-cc89bbe047b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c671f84-b158-41ce-bfa7-972fc1713dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a752dcc-2927-4cf1-83c8-0c7c927859c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f86f4b7a-d88a-40fc-aeb3-e5130fd76fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b7143e-8396-4475-85e8-6401ba61a0c1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e66e84b-7e23-47fa-a1d9-3bc1b2c7c6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabe3295-9599-47ab-8d7b-b4078edc3998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b4f384-916b-45c2-b138-80b86c47e660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a64baffb-a8eb-4e40-aacb-a5d0f68e1fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc558170-adc6-442d-97eb-74aa747cf75f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdbc485-2936-47b8-9ad4-e22163b51e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965374f7-260e-43fd-a9dd-dc4d81538b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d94b194-4bf5-4d8f-a0ad-1aab6011df75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "761e6b1e-a9ee-43bf-b46b-dd85889d43be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005cc4a0-cf13-4821-80ad-4825f59aac0a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474c3456-60b9-4f29-aa63-aa1e1673f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a86bc0-297b-44ad-a085-429974386bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdc513d-b361-437d-9566-a49a6f71f374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a532a4b4-a684-489b-8f8c-56fdcfa8fb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea591f8-dc9f-4db2-aade-d86639048a8e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d76538-be38-4e73-8805-4310920ea0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41b01da-a0bb-4af6-8b5d-2b5116d8a878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f4589e-7c02-4803-853c-60a3094704fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a00ee84d-d014-42c8-ba31-ba24ef4dde27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60be62c2-f70f-4af1-8619-e4892a6ef199",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d8f7bc-c941-4338-bef2-ba9d94b497f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26b556b-bc08-46ee-a1b9-cb63e4426a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2511b6-b6e7-4516-b8c3-4a6054d5c7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df1db838-bcb6-4ab4-b4a1-5b52a7b2bd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447cc22f-73c7-4e44-9047-59fbbbbbcb35",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26054fc-3952-4346-b6dd-12555de2f7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13a74f3-5672-4cd0-a7c8-7fb7c646c6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef54054-9755-4494-b601-f85a275adb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b12b889d-a39f-4bb8-8b4f-bdf055865503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdde7e5e-bc80-4cb1-9e54-a8c1a6fdeb3e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c15686d-4db1-438c-8a95-98fb55ff0020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d292b0e0-bd34-4648-99e6-9c59fe97731d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be393516-6759-4cb1-9d6e-4d8c9dd4633f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95943fba-4326-4285-a539-25fdd4480b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cd46c3-3455-4e2e-b869-254099b5152b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c44a8a-c800-4fc8-b573-35d7f54f9cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7b3ee6-a9e2-4d2a-bdd8-5185e86c369f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab63b5e1-0e32-4863-80ba-0121664e86df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebb4ca4-a700-4b1e-95b3-998c93a3247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f35c1e6-5b60-421f-8366-f881c7b821b5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e561c04b-95c6-41bd-8db3-b6421fe518ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ea67d2-13db-4964-b56e-d1d6b3302fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1077acdf-dea8-4e55-af45-255a258f34f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06fc49e4-6c12-4c81-bd43-814867947d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc2f6f4-d6f5-4e2f-90c7-f44a7eb75d52",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e775e7c-601f-4681-acd0-43ba3bdba9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7322a0c6-e2ab-4222-b5db-577ee8582dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe3c71a-7410-480b-8592-cb6ee1361bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3149fb1a-2d38-48ea-8567-eb3710a42254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf8646-7189-4071-a1ee-df8e06c23e20",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2f8f3f-326a-4a47-ab11-11ed3007c134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c7998d-11bf-4f4a-95d4-fb2948cf098a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0a8c8e-7bda-48af-9b66-1b38772e8b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7089ac2-fa8c-44f5-915c-49e63ee5ab15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7821dc-6829-4b6e-b8c3-e5c50176bb2d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb04c65c-af6b-447f-a83d-6100ee212783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af35394-ac09-4113-834e-3d6d30250aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86315f6c-bc2c-45c1-bae5-7e8650679794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc5e096-74e9-47a1-9a55-1923cdb79193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be9a5ee-a00c-45cd-b532-430ee687b2a4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8e6977-8613-4aff-8473-6f70e5f8ef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de15c508-f21c-44f3-8a4e-d3c5400df6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b7ba10-09a2-4a85-9343-f570e00a2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c994d06f-1405-49b5-a1c8-fa160faf99eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a1dbb4-4702-400c-baba-e8e2b96a1239",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dccdd37-82df-4cbb-a202-eb973b6b7c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0ebc60-3a36-432a-be87-af8688b261c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7f818e-d3d8-4f24-9f88-975f782a92ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a1586a-a99c-4c71-981f-b439ce2e49d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283fb8e5-730a-46c1-b2da-53ce4ef3c0f5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07bddad-bbfd-4431-87b4-3f7f2f2ff55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0145fe-c7c7-4aa4-8c6c-e09cd3d03ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c3e717-106b-4e84-8ccd-71826c8215f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7976ac4d-0b07-4260-86c4-fbc84b13469e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e303f1b1-e8ee-4ede-88bf-a453453c2e8f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d557e993-21f9-4b62-bf42-35a20e50f9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0267289-7c9d-4b5e-b2de-8e9da192a03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db85617-ea82-4cd1-b8f4-260e8c9d97cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a290363b-7372-4272-8361-ac46a677edd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5cecc5-12fc-49c3-a9ce-e4fae443dd1e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df95a501-99c5-4a5b-9f2a-d8d4250169d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a657c712-11a1-4f9a-bfcd-ad597dd83375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8d6012-27db-4c85-8118-13bf332ec84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aac14a1-a129-49c8-90c9-06e8a97bb353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11af5fe1-a244-4e5f-b517-e7e6a2ad0ff3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ef08aa-1e88-4ba7-b762-063f49a4ea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01f686f-fbf7-4e07-b0db-1b3033a6271a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d26fff-cab3-4f49-bcef-48c8c06e82e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cddf2d68-7df9-4bd0-a630-3f8eaa77fc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706f682b-eee9-4b25-bc5e-8f2467145a0d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee11071-683d-44b3-87bc-0e6fd38cf1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6f0165-b7f9-4e9d-9044-de1a1ea69c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153211b2-0b6b-423f-ba38-5824bab3b2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b95e39f-d075-4db1-84a0-bb99702e246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6701098-ecf2-4e3b-80bb-1c1d4185370b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25caca2-8fd3-4c3a-bb67-95b2255e193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b30d25-31b1-41dc-9c1a-7c38aacfbbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b149c2d-838e-4908-8ac0-937045544726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29788bbb-0831-437a-bce1-8f23dc9ac77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e328072a-7a95-49ff-9a81-d72b7ab472e9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b559d640-f3a6-4fc4-9a9b-ca4613cbcde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de03b92e-0180-40f0-9d7b-a6032a9a79b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c511e8-8aae-42a9-8cdd-d6316e1b7bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1831a79e-d6ba-4152-bfad-cae92047f3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83a27a0-edb2-4ae2-9210-b68d5f6bd301",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdeee9b-13d7-4529-bb77-67387f92c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec588b08-0385-4a40-b388-70fb19381b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c303d437-2fca-4477-bdbd-7655380a5bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee7351f-3795-4d58-a078-3a36366b4cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a026428d-8d5f-4804-a17d-f44e2f9915d5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffea66ef-be5a-479c-b1b8-5b57c79810e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8acb7b35-bfd6-4df6-89de-f2551581e3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dbb0f9-f1dc-48ea-b398-0c345ca4570d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8a407f-3ec6-48e1-8802-6839c09d2c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800fd30e-652f-4c32-b7a1-2e6c558a0460",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00efeafd-2417-4d91-9b78-62f1680c1357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44c185e-09c4-44c7-9716-8ac27fcfa896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03924995-07b1-4e49-bc39-b716028de77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3221eacc-6743-4297-b96e-8f207aa793f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83165a7b-5f61-435d-b032-f054ccc91c2d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df528e2-6fb8-49fa-b006-abf987aed660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c131a067-6808-48c4-83d8-e6fe796faa6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf7644b-e760-4acb-be9c-8d6894394fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "872472a2-561b-4676-a67e-5e4d8b2d16b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aabeb62-f0ab-4aef-9eea-b79c168f850f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c9ac9-72d4-46e7-ba91-1fb423451014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84c9a6d-cbb8-424c-95e7-01385f40b130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83a9d88-8bd7-4e7a-bf6f-dacb4385a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f999a8a5-d086-4db7-ac74-bc2722fbd505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5332b8-de73-4528-ab5e-1701d41c2eb6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d646c1-d214-490f-9fa9-6da8b8c6d0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a1ffef-d5ef-490d-8081-8833c9ff2095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a436b1-87cf-459f-9f12-6f9b53b2582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "beddf637-f5d0-447e-aff5-e015e61c5f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5920273a-441a-45c6-860d-b954d1c4e600",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c23b826-4173-478f-a352-8e5a40823336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb00146-4ded-441f-9259-f04ce5cf4efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87fe2b1-b8f9-4282-8503-87bb494c74fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f95801-db02-41ee-b54d-a61565024a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc970e6f-8b83-43b1-9812-111fb308c523",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8696a70-b28b-4e48-a268-2028564a7bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f490621-ad26-46ae-9288-41c50e175567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f605e1-c0e3-4c6f-9692-332b61c417ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "133c2916-a865-4586-9135-9529c2549c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc55c3b0-4e2a-46dc-9e5e-2a13c05c2be1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108735d4-ceaf-4940-9029-32262a1c3866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d32c5f-3e07-480e-bea6-5c26fb9dce93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77082ccf-a3d8-4d5f-82ab-a433d1262201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe4f74-63be-42da-b3fe-cef7823e052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfd6713-f882-4928-aa7a-0a956497e1cd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceeeefa-c589-4087-bc91-3a9123f13deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4432fe87-9a40-450b-a961-8cc59a2a4a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ab1239-f3b3-4ae6-a5f4-2f5d872677de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bffee4-6862-4433-8f0c-addbe9b08924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf6f104-2531-4119-b514-ffc9e13baf51",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d0a49e-a16e-494b-ae05-2ed11d105bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd5f3ed-e245-4d40-8f04-8532d5fb9b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cb0498-47af-463d-809d-43e7feb041b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed13a3e8-3bb1-4c07-bf93-96a2f588b575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9e9195-39b8-4b4e-af08-29735ecd7cfa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdb9817-a5a2-4fc1-af5d-b1dc5d75099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d441d75-92ee-4a9d-a2a1-9690d323bb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b9eb54-fd06-46dc-8589-482b5fede8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a769de-865c-4707-8c55-9978b9dfd66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6258dea5-3757-4f80-97f7-dda84d0f003d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf8c78a-dcf6-4c60-bfb8-808e47c9ef03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5dfc8d-b4f6-4d4e-989b-38d745a251be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba0f230-5678-43f2-b38b-251101c4c975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14764f1d-e51d-46fe-8499-0ab5026006f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75934d12-e4b1-416c-a7fd-3bdd8de0b951",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054c404f-6e3f-4fcf-b661-5a20a3756591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9349c6-32af-4e1d-9650-26798abe8bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb3f0da-6e98-4d50-9454-ce3bef1ccc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa79b24b-f915-4fea-acbe-76791912b9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f304eae-6bc5-43ed-91cc-33e712fcf5cb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a4566-dbdb-42dc-ae6a-971773655e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af286b4-1e05-475e-bf0f-095a02467f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8b688b-f47f-4f2b-ab4f-f09b4c4b0d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d650c3a-01e9-4767-867e-b5bb82123fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10da475-e16a-4f90-9b11-ff171d22d62e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a402bba1-f5d2-4cd4-aa02-1776aae796d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce8b40f-f844-4c20-9434-24d372193ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c547af-b879-4747-b585-dbae4e58d97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af61e62d-63e9-4031-bb5d-c5b6839445db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc43b8d0-4c8f-4800-9519-7166e4d5c348",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8707448-dd62-4f34-8291-72063d911036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1aaf6b-e945-479a-9fbc-1bcde270509d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32912660-e752-42ae-b5ca-1a8a85c9087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b426a53-4788-4c31-84b6-2573fb98ed82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0f90d9-e040-43ec-a937-b4473a70ebf0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793a1b89-5282-4496-ba6d-6162a5f82aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3de67a-3452-42c2-90b8-8afe4b6f80e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a044f5-549b-48f8-8935-e28534f40a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61e7901-1ee8-4dc8-871c-b1b8024ca0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b2fff-0ce0-4472-8c7c-dd4cc78de64d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79c3cc5-1088-4062-b970-2cdf8eb4291f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6c3a2f-af67-4695-b384-028f7f8c4dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e94911-9139-4e5f-a6dd-7004d5f59773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a198680-3ff7-4c0b-8834-e3d78f5b255a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d913c6d0-f0a0-4051-a08e-7afb6788a94e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326cc416-819b-4564-91b9-722d6f51f51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c5e438-ec43-48f2-85dd-9e2a8da6cc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5a7ddc-62de-44ca-ab1c-80c72a9ba6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0a8587-2809-4b0c-b019-52095fb50ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a3eccf-5ae8-44e8-9b58-4267c91c2a4b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4022df4c-e021-4e23-91d8-5c00e02a2d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f161540-3e01-4bae-ab89-107e31af7507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795eb3dc-837e-450c-b349-3fa851d01e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7070e6a4-3f3b-4c01-a992-5e1038c85171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e83c5d-e359-47e5-8bc6-77f7e729f006",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfde63d-f041-46f9-b3a7-8bcac73a71bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047a4f75-5aa5-4ba6-a029-f28b99b8ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ddf5dc-36cf-46e4-a1b2-b21eb1881985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ba477e-cd04-4e33-a76b-e3ae42cff6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4897e662-9da0-4d84-ad48-9b19db68bcdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663a5d55-c490-4c5b-8e6e-98ec4aa79be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9255b6f8-9cc9-4c6b-8d53-b06823465209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d85d335-8c66-4cf0-b480-c662c4b941a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec46e85-ec3c-43a0-8f78-ab9ba24c0880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278c93e-97fb-47fa-83c4-4ee429086260",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c5181b-21cb-4488-9ac8-d757b2c980b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe6c7d9-3c81-4a09-92f1-1917e47aceb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c6c505-9a4a-4399-a06e-7fbcb372215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c86f9b3b-edb9-4540-98e9-0babd1a22c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dd62df-f884-4a54-8c74-598db1ca81a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc17fd10-402e-45d7-8a91-377619170705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cd4631-1597-42ca-89f7-7c2b28a3217f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2683b889-2554-4746-adac-ce434e13d4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "164fda17-65df-4a80-aba3-05e4e3be9d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382644db-899e-46b8-8ab4-70c04a391814",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18897812-2c89-4ebe-b300-dac0d82627ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c648beb-8132-47ea-8e89-1d880a249986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93052937-ade5-499f-8856-60c4b577436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "424eed7b-983c-46bf-a947-19030a898315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf8fe87-3504-4e48-8eb4-dcba9e76d3e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff813a3-fbb9-48d4-85cc-3602d68cb15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35743557-0438-40d2-a91c-81cf898e9bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08df56ef-e472-470b-862d-1903fa546dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df7f5951-d750-4f7c-9151-99ffb45ce103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46390784-4ed5-4fe9-8067-102655408fe4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df410814-b529-47cf-bf23-e59145209745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a00fab-09d7-40bc-be09-63ebcde3c859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3766f6-0492-44a1-8a5b-f01c3feb8968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b678271a-3686-4f8a-8fb1-21506293acd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f32bb13-4d3c-4f84-9863-02de02b32b96",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62005265-cd10-46e2-b5fd-e5a24f6aa2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede356c3-76a0-405a-8b53-1f309f606098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a771f14-ec5a-42b2-87fa-6e647e1f0502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e1c4b1-ce5b-4df1-b46a-498c88afbb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed6c16e-174d-4ff4-a453-4fa32ef3d71b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9982d62e-51b9-4f25-b63b-c855669abdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379d5c0d-65e5-4936-8e9c-05828d0699e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a2eced-2b05-4386-a342-882d468a4388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ea51ec-2d84-47d8-8b20-433457bb7654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a081cfc4-ab05-4b73-8798-148e066778bd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea7eaa1-bbee-4e69-a02d-4a0aa853b2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc83633-17d1-45e4-b600-daa100621e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04724ae7-ea83-4be9-a237-1b649ade3264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fe0895-3e94-4d4d-ab96-7c764577ab9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd953392-8b5c-493c-b66e-38b47cc7b793",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d49b42-ef19-4195-b726-6accea801598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0b6b7c-c499-4627-8b7e-5128b32a9127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17084bd9-d0a5-4049-b6c8-6c4d94303724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca49021d-e493-46ee-ae31-2cdfa41036d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9f0aa-237c-41dd-b38f-87d32824be63",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea63586-9f94-42a5-9cc9-418f769cdbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27efd955-5ee1-4558-80dc-4b828c51222f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf5e390-836f-48b7-814d-87c7d8c03ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfc3318-0b7c-488d-9613-b47e646941c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009d488d-80f9-4a1b-844b-3efdd1922251",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c055d80-22c8-4f22-8872-7a1bb6afffbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924ca645-7ba9-42bd-bba9-d92d620b9c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78146fff-d90b-4147-a902-d6cec25313d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0042d31-4a98-447c-809e-901519caf1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aa31ee-d3f9-4b2a-8af5-87bd54fde1cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e01ba3-51ae-4779-8a6a-21dca9880b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0cde3d-6db3-4543-9acb-31da6aa23878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146dcb2a-82c7-48a6-9724-6ab67ed1a458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e51a75-c1c9-43fe-9c47-804fd1837972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3101d02-839a-417a-8a0c-484b5790017d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cac3b0-6954-4b4a-af88-6b45f7a21abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c74b03a-cfa0-4a5a-8ee6-f0218d645ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaf57ee-62c2-4f1b-acc6-0b41da7a74d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93761155-3d3e-4d7f-bd8f-5bbb9b1b6b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae818961-5e75-4124-919c-60241c593c2a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0188bf-bc1e-43df-bfda-0c4ff6525bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c58b04e-68a8-4ef2-82ac-161a7de74c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33720040-dedf-450e-9d59-b367a23effa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c7ad62-581c-483d-8554-822ea8947899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efdbb52-cac4-4d2c-ae3f-860a4c165b5f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c98d57b-3402-4df4-bca0-b8393bb835e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbf9803-800e-47b2-8117-2ab28c866552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad37b5e-9c97-457e-979a-0557b69dd23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fd282d-3aa5-4829-9494-92d82acf1edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a72acc-2e69-42d1-8a50-6fadc7346d0a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aae3e6-b661-4d1d-9fb0-23edc1b336d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98907fc3-3146-4712-bc62-5d750b5b4488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c99d842-93ad-4d86-8430-c2b5283b112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e77cb5-a17b-4c53-9aae-0512d146666e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150949ce-2312-4db3-9c52-a60ad494ff67",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a464db7a-dc1d-4628-bfb8-45d2246dc86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de7968c-d935-410e-a37e-8f4c692b22f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b79a8e-e7f4-4a16-8103-9e9345670cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a662a885-b2b7-4d76-9e7b-dc36a5d30947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffa7744-f57e-4856-ae65-30b93bbd49bf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b7fe3f-7510-4c22-9bf1-915c649f8d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c83a6b-3fb3-4ae4-bf05-720a01783616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bba6de-255f-492b-9ca5-a55d0dea5988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f25b60-5bb9-4051-b5fe-ca123572da8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b90e89-1954-4bfa-b51f-d07a2ced6c50",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7d2f7c-965b-4f40-82a1-938517ba07b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264dfa72-0f66-46bd-9f8b-e0b1b979630a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320342a2-f8b2-40aa-9efd-4be029cb9b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfdf796-37a0-41f7-a90b-ed7dacbf3f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1c548a-664c-4f70-9137-2c210ae40ddb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99373a45-6fa7-450e-a7eb-05e5d8b2f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc051ed4-2621-47a5-9a21-67cb4e2fd3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ab4ff-7b8e-40dd-90cd-c420902e1bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e617205-3028-4203-b6df-bf9992f66819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ad2bc-f09f-4d2d-9349-fbd214b66af5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abc3dbb-a0e9-42c9-aa23-e3bd9362f75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac00926b-8b8c-4b2d-a8c4-3c9c92a9f6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f095915e-3c19-423c-b8a0-03b97795d59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2d83dd-0ac7-43e6-ac39-c6a040bec06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21863452-b230-4a8c-b9e8-e11888d3d7e6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f5290c-b730-4028-9672-dcc3fbf80408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b597ada-c837-438b-9018-77743c77b2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e984e33-0a9e-463d-8062-8031d4edea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "950d7062-0243-47c2-b7bc-ae7dc31186cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cace9cd-5ccf-4fbb-be64-f4b6d86a82e7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e059b8c2-4eb7-4e1d-8449-dc5b731b91c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4f5f92-8e13-4f54-a900-e40bb3b75258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1c0b38-6688-4925-8caa-13ce7ebddaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "900c8405-d7a3-4780-b12a-20b75a7b6459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05adbae1-a3ba-4009-bd63-e1679131ddf3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c9b975-7d79-4fdd-ae22-15fa75783a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621e75cc-aabe-48c2-93a9-21e1f7806779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a45a154-366f-4ea6-8ed2-c6ac502290f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db3c4fd3-0e88-4896-b6af-62e5ac3e6e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9cfe3f-5ce0-4a87-a1a0-431544724442",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9016c60-e504-4a0b-ae6a-98089e3e5b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935ef13b-a177-47ba-a0dd-8c7853daf338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211b81cd-3fba-48f5-a2dd-92477e22599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3aa284-0442-4035-b74f-83c3df6b6427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bee370-8b44-4997-9cf5-2ffce8628e2b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52b7e64-536d-41ec-a2c9-fbd0b102bafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894a3e98-60cd-41c8-aa63-7f9ab487b0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe23e44-1ffa-4f3e-a4de-55b851614624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2205ba4a-ad27-43a1-a76c-b4beb4a92fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c19e82f-2aa6-4b1a-b1a0-931f7797246b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c0b4a5-454b-4098-828f-58eb76fc48b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4449faf-a668-4ea9-931d-92edce4f0c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf43155-7c04-4d45-8632-32d9fe48095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35492a3e-081c-4ba6-b70c-8231491d946a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849e80b3-bb0c-40a6-8f54-81c8505ef7a5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d808a45d-d101-48a7-90a0-fa4394a70cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0276f724-7e19-4985-b61c-36d80bb4ecdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2826f9a-c915-4b61-8867-45b7e577f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb12ce89-1ab6-42ff-8791-7058917fb2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600fb56c-65d4-4ebc-8ae4-de583b7f0c7b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f98f73-51f0-4e41-8c86-4c9607095350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0742c6-b926-4e58-92c9-a8720c201219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d83533-4938-4323-9809-7018915e6875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8575e378-8bd9-4fd7-b2cb-475c5f392f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9683fa0e-b66b-4c13-a3fa-6eca80339769",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3770a217-8941-445d-8a0c-5ff29a22c351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab99aa84-044c-4211-9b57-aa0544dd194f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f644e3-9fd2-4c60-bf35-456893920c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cd7bb0-c824-4c51-947d-0ca3484baace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5395044a-a88d-4fb9-aa0b-cdb224afa433",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d00c02-22ae-4ae3-9b57-ca7507104b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ca369f-fcb7-458e-a1a7-c2dc2b06fc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b1826-dc3a-4238-b7d1-b1beb4fee842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9485c6-60b2-43d9-b34f-ad4243a0ee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27d4c60-94ec-4a8e-9b3e-121d9c84c0a5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248b5954-5dfa-496f-a272-e391b7a6fe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a771c8d-333f-4f51-b909-6b0fd1d340e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51741d23-d41d-4ef9-be8b-5d56b95935fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1f1ef6-9cb8-4583-910b-478d0e2a32bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3dc7f0-ee87-4941-ac4e-01493ac80836",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd4583f-fea3-4a74-8d1c-3d2c30d8af63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a16775b-199c-41de-860c-b2808ca04e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c9ce12-3f07-4907-9972-c80028edafef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "684b339a-7916-4dc0-a399-d38ee787e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f6fd41-95be-4074-a2ac-cfbdcc3ef3f8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf49b24-d0b8-49b8-9186-1ae01632caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8287645-d1da-45a8-9583-bf7a7aed822e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4cd55f-2aaf-4b82-a6c1-5611c58e3bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4517bff9-12df-4ade-b74f-acfa2f58f69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2d36ac-cbe0-400c-9ae9-9900e1a3be83",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271964ee-0405-455e-9d40-e1a4ed95cbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1a272c3-9678-4f16-b731-6737ef813850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b6a72-94be-432c-8e2c-487bd5b45eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "330aa241-3f09-441d-890c-0bbbe8a69442"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c5778d7-5c2c-46f0-b464-7d0a4e2aaf14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d417c023-0afd-407e-95a3-a5c90f3ebc9a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725e9ca6-28f3-489f-a0f2-b8ac5ecf66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62c7efa6-724d-4052-81ca-4b47695b4921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6bd53e-1fdb-4ab5-b54a-88d4b686da7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a044327-42f2-4c8e-8b35-4389dc099233"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24b722fd-a8a5-442d-8b56-9e1b4ede9964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "276baddf-81f7-4f63-99b8-02bdf5094045"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b53332dc-1252-410e-a0be-9df9e0683385",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e4cda3e-8029-4e3d-9dce-63739bb76e58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ce0f736-b4fc-4495-a290-6557fa670f23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d08d450-6b16-485c-ab0b-edbaaf94a128"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4cabaef-b11b-4f1b-b66c-a760660c5ed4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5687015e-02b3-423e-a7aa-075f57b7cef3"
                }
              }
            ]
          },
          {
            "id": "a021301c-00fc-4329-a85b-a63ef3fb6d9e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20952693-bf70-46df-ad79-e3bbcfbdf55d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f9b1640a-66ef-4da9-94ae-d90fcd05bea6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1c0a1a-462e-493d-8f29-1a284943615c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be83d27c-c19c-4532-817a-2da0bba1f574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc64cd2-08f4-4108-86dc-321f38e138ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938aad7e-9cc9-4647-8309-7b5700560434"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c59d157-22d1-49d8-8e9c-20545282c6d2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dae9f672-5726-478c-898d-57d8f23db9dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f195c6c1-c8f8-47af-abd2-03ca6fed6cf3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "237f4658-2637-4feb-995e-d58a057e830f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "caa3f9ab-ac5d-4915-9c19-10f47e04d40e"
                    }
                  }
                ]
              },
              {
                "id": "91b2f5cf-4655-4687-bc37-1fbbd8603451",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4392acee-c34b-4a90-a97e-1b3f8461f041",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2f70449-f7f0-497a-93f6-c0af2f7dff74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73a797a4-752f-4c25-83dd-8c174ebffc76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d614cbf4-6599-4f97-9d54-58897cf24bf9"
                    }
                  }
                ]
              },
              {
                "id": "84981434-a68e-4460-b31c-d4f7b3fbc122",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffe1898b-d76b-4914-a2b5-8775d3c4f9fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06a38518-ff9e-4e2e-ab3d-153bad02f40c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2abfdf65-7e25-4bfd-a100-7625a375530d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67e153eb-c6a2-4efc-b0a8-7091e288f77d"
                    }
                  }
                ]
              },
              {
                "id": "8fe9e6b2-7ba7-4439-8d2f-86633e6b680d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6320f801-2e75-4e6f-844b-e40e68295b06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a0de286-ee75-4f94-85e4-6f83a6915763"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01ce85f3-35b2-44bc-8e10-3dd96c616788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "540b5a26-562b-46e8-b5c7-0fbeaebc0e75"
                    }
                  }
                ]
              },
              {
                "id": "5d1552de-7097-47ea-85fa-52a439454d8e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "776f5103-e882-42a0-b019-ced3496f4389",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7fc0d74-bdef-4c5e-a34e-88ab432d9bdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0761e7be-e2fe-4a65-9d53-e2af2410ef5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "634171ec-e1dc-4ea1-a955-1ff1210e8423"
                    }
                  }
                ]
              },
              {
                "id": "fbc95016-07c9-4e7c-b5e8-afbf70c933fc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9ca0fe8-5118-4aef-b870-88ea0cc75fdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad99cbf1-0d38-471a-9ff0-1d087d752e9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ca3c0d6-5941-4261-b6d5-261f3aedee2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b7d9650-2b83-45a2-8334-821fae4a620d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ada094c3-4153-4daf-99d4-4feb9ea67dd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "622785fc-0687-4361-96f9-cb292a3cd8a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb72bd22-0d1d-4f82-bfd2-2f0b434df6c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17b088d7-8be4-431a-a8dc-65cf7b070bfc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a5c0a74-0d41-4b62-8846-11952fc641a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "98fa9ddc-5790-43bf-bf4f-9a7604621ebb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6b0d8d8-eda3-45cd-883e-af6afbac6a49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1a76a32-d79f-4d00-8b05-e6b09b6db40c"
            }
          }
        ]
      },
      {
        "id": "04d0cbba-c778-4202-825c-1f29e87b1e55",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "96b6ab36-c79c-4c0c-a368-8cc648aba8d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0be0f612-794d-47e6-b144-ef081dc86533",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cea3e94e-8501-4dbd-898a-4ca3b0895c14",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f2685a-e2e4-4800-81d7-003156d5672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a50642-eb45-4476-9459-4792a1256741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1662566c-38da-4464-894d-a2b51c0e9164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42023af9-7f0d-429d-ba2b-3611c5d84dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cf6a54-9d76-409d-a93c-e1765214a23e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08ac55-8e78-4952-b4d0-1e180045ff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f728535c-3ece-4ed0-8ec0-21ff9e1b575e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135d51a4-a347-419d-9121-b8e3189e6686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d6ec81-07eb-424f-8daa-f49ae59d0ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d573a496-ebd5-4dab-9b75-2ea95f4ce048",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8bcc40-1734-4f02-8386-0e19a919b103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b749b5d-99f9-47c6-892c-15e087eee7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ce30d-24fd-4db3-8518-a0d0c27fbc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce99b52c-b88a-4f17-8050-3658e436523c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20d752-2d0b-4e40-bb54-3aeee3ac3da1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc6b662-3a0f-49b5-b6da-6aeb48f4a057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e644118-a237-4645-9b94-1b35377443f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c40c425-9c0a-4bca-a93b-279cf7ae750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65138c92-9704-4c2f-b18e-d07e0fc3db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46decfc2-68a1-4e94-a9c0-06766834e793",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29599111-681d-4f95-8f5a-1cb885887a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fcb3d1-b338-41f7-8daf-09778434a1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa69705-7618-464c-9cbe-5baa122c63d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1d45eb-3ec9-45d8-a18d-6d7f123df246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5412dfc4-4c0d-4a57-b35a-f5c72286c5b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107b6462-96b0-4ac0-86b5-6f87bb6d7073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0f9a79-ab4b-4a5e-b87b-aadc6c06e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d94a65-2178-4537-a105-0f0ab1fa3cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e568758-35ea-4f0b-ad52-21329ff7cc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ce658e-b858-42d7-aa0d-376d8384d553",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c0d5aa-9d48-4548-9f24-2b7c5d262594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46ac95b-9f29-481d-8783-8815184668e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8122bc-14e2-4dd2-9e60-e0eabe497624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8540c351-39fb-451c-9f86-316423814f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41abf42f-250b-4f56-97e8-24f82b19b46e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199f9b9-e227-4f77-a452-f1b34af2fc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65664d5e-d640-4bac-9da7-4760f1d673a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a8ea62-584e-45c8-840d-2a2366a0ba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b410a81a-f058-45b2-8719-58d15565ec83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52acea1b-1535-458f-9592-cafe3d2c42fa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a2fbf3-c57f-408d-b44b-a63769c45959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a97cece-36f5-4c0f-912a-b0ea26787f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df36095-aefa-4100-9c74-bacecaad8335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7c7e3c-0ef8-4651-b6f0-31cc45757255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f9a4ec-53f5-46f1-9d02-e33fc2e581a9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f28f3cc-4da3-44cf-a1bd-3c3c88e49c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4906ede1-5b0d-4b43-8850-e08807678a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c18723-ab5f-4bc2-a665-2f82c6c6fdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da366fff-048d-4968-84ed-0a14923630bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a09a3b8-8983-4e2a-84e2-c738f2ce25d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a49c6db-725f-4220-b269-c1cc54664179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae2ccae-7f85-4d25-9f75-26d93dc06b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8fd5a1-f1e1-42b1-a1d7-e0df46626158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f595ec4-8a3a-4b0d-ae9b-de5035ae5000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36d4621-c330-4143-b4ce-f0bd6ab9d802",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641a194c-0382-448f-a7e5-faacf38fb150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeff1769-3058-45bd-a84e-91468c236e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f9c0b5-3a75-4d0c-b40c-21da8c59e768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1902a2a9-701b-433a-9818-cdd91a2c6710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ed8f21-19c9-4a18-be44-6cc3d22224df",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e382c643-73b7-44dc-864d-507e7b00efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ec610-1dbf-49ee-8c90-60ec288ee768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d448abb2-a7b8-4da5-8680-722226031621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb42543-1cfe-4fb3-847c-0c051e77984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df268480-81c2-4ed0-82ff-6dda095740b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c0f379-12c1-45b0-b0eb-7e2f5f6b8357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6adc85a-d7b5-470e-b386-68ede3b20f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31959684-7006-44d2-9628-47ef6acb92bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "42911997-3acf-4f42-acc3-2b33d03670d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248c11bc-402f-4965-a489-dc20c25d6aab",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da671c9-4595-434e-8657-fad0d7e8df65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a880188-1339-41fe-b9db-539a0e67f970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4680037b-995f-404a-8edf-10ef5956f493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "423e82c5-34d2-43a4-a21a-ac68e6499186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e9ef79-9b6d-4596-a3bc-7f58c9750313",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e9cfa3-51cd-4fe1-b494-09cc7166907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78088cec-27f0-4c39-8b4c-126b8ea808ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27aac52-397e-4d0e-86a2-f11026c1cd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b293f39-5b46-496d-a45b-4bb316922923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427daee8-61aa-45f1-9cab-f1d6fbec6afb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712e995f-f354-4586-9ec8-023273163330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca893d57-243a-4833-8185-15da8ce703bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc30a06-3459-4fdc-ab4c-581827fbdf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dae9cf0-fe85-4dfd-bb5b-b49bfdabe5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2321e3e1-fabb-4b67-8919-2ea55555785c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed50a00-d920-4b86-9b4d-3462fdb29b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bb0eb3-8033-4a2a-aa15-1bd3555150d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aac83d-0d87-4094-b687-9bc6e2e48a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0485e62-a125-42ed-a26e-751c812cd682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46aafca-df23-404e-93b0-3ef66d183564",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f364113-151b-45a0-91e7-42f00be4cd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd78d3e6-6c80-45a6-bf15-3651276a0773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2189eb9-9534-4525-bd94-0b6bac5822dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a4a3f2-0cdb-4205-9f51-f4ef6710f289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a123895-d779-4793-86b0-e73dc639bd44",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10965d4-f833-4fa5-bb15-bad5ed661b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfb573c-4f70-41dd-9890-fa3f6167487e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e89d6c0-b572-47e7-8336-4cba6e527dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac16f0f-539a-440f-a873-a9f8d5144a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe915d1-e979-49e4-a49f-ce42cab76037",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4001d1-84d9-4e42-8f00-98940ac33164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5e549e-4c05-4c24-b239-d1c407e5cad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a64d549-2f25-43e6-80e9-0d7c7cffa077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85372569-3ae5-4c52-8a91-408e73f54da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016fd355-bd93-4a8e-a451-a5f4bee1c12f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c22059b-5b24-4c7e-b0ce-97fdf78d41f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9f9abe-e568-4d03-896f-809a3072b832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb2e64-4360-4875-8058-a7dec19ee0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b3de22-ae01-4356-b555-2ae0787fb150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e12ec3-299d-4c76-8976-e00c25fc22bd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed08726-df2a-46d9-b473-58409ac4392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ff6498-a091-48db-b02f-107085797d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad39ff33-be72-4bc1-953e-ecde08a90182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bc9ba7-51a1-49c3-b853-7f716d65ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8132e1-1f9a-4e8a-b9fa-8a2271026a24",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0913f5-93ef-4be5-8cba-0764ad67c56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bcd36c-a77c-4d53-8eeb-ba8559f29a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82cccc8-d638-4ea4-9375-fde7cc139a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3379d2-412a-401a-98bd-70c761861951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f83a423-6fb3-4266-87bd-5c05db0d6905",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f37bfe5-3023-4a27-881b-1ca9799ea37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0121953c-05cd-47e8-b4e7-e864a548b1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa62fe9-f586-41be-b988-29063b605e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c677fa1e-c90c-4187-9509-52606a7f6ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f1d57c-14be-43a7-8f86-a61d81fdf2f3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2453d95-16ab-429f-958b-3f787923bd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4288f95-9a49-419d-899f-ac18c3ce6c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71cbf02-e364-43bc-9357-b62dbc630dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e473ee7-2e99-49db-9226-18de66073e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0b927d-a103-4ab8-8c74-3cd00a8cc49e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be6ed19-94ea-417d-82b0-f9839a2b99a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cb07d1-d4ec-4985-b1a9-e2b7724cf8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f780e9-1d2b-4887-9df7-4cc77bbc2dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063ef2a3-b3c5-464c-9dfe-5effcf5d9fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8f1256-70f2-4222-92ef-87b090894b3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5bbfac-2c4e-4263-8699-9c6c0ee1bd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a97116-0160-4972-815f-1387015e3f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba661d92-da75-43c7-8ff2-339899f69fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b563c6-3862-4ded-bd00-1dd4bb2d529d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bdc1b4-476a-43eb-8cc8-3f2ffaa0f051",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39115205-2b62-4314-8d94-e83590f49ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf7c064-ba5f-42d8-8463-f9800c9f19da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaee888-f751-4d69-8c55-44a48561bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfba23f2-03a3-44b1-a709-3899c88e99b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6deab1-e10f-4732-94c2-21d5138dadaf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee9f572-39c5-45aa-b384-f126f9a2c161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d03c254-1486-4dfb-a412-c1fa78ef9a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f67cfd-b6f1-45e7-9a49-8badcc393e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51d3eb78-5947-495f-b195-dfde678f870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2745fec9-f155-4599-a069-e53dcbb97b68",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b026e-34a9-4aab-b28d-33c433e08b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df3346d-67ce-40f9-85aa-2dae8cd74707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525f6c83-1ce0-47bb-af56-7bfae43e8e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff07518-0555-41bd-8c57-ae3165d702fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4027e44a-e929-4fa6-a40d-364e58dee291",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3ca5f2-3fc9-4397-8910-dd50cb7e8a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dfa10b-1f32-47c4-a6b4-fd83fcde63fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9520c8c-ef08-435f-99df-2b177588c8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6e3b20-b0a6-4b86-8bb2-1a6fa6151b3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de72c176-d8b3-4abc-a98e-3d6735b47d47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1348f68-3cd6-4b37-b9c0-9d2ffaef0df9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74b0ceb-792c-4f0a-aa6b-28d111f40ec0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e7c58f-f3ac-4399-98bb-64fc00de4faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9091af23-8095-4bfc-a568-895dc6d3b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b9c22d7-b778-4c08-9bdb-7fb9b705a051"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41baf89e-e5d2-46ff-a411-d754359374c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd23e3d2-4af4-42fe-832e-a50ed4be049b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f13f11-88de-4390-a0b0-941a33403c64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ead38261-3b28-417b-a760-d6cfd818911a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da2c23c2-5f47-42f9-b27f-813c8deee7de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55b72aa3-ab5e-4a1b-85c3-196c141d836f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59790a72-2ded-4dd0-950a-02b51f29a4fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2295010-a2b1-44b4-ab53-76706c143c62"
            }
          }
        ]
      },
      {
        "id": "9dd58563-3258-466e-bee3-b0e028848663",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ee363828-a493-4caf-9a63-86e0bb13a63e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68b6a8a8-aacf-48c7-af3f-36cb9b46fe2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13841b24-a1d8-4c56-86f2-b42578d5d188",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce215e3-204c-4be4-8aa2-469aeaa4f416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7aa041-f74a-4814-8783-44fbdadff1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04daa3f6-055a-4c20-a2bc-9a0e32fef3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e4c6ad-708e-4ab5-9c7d-14ee72e02757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347c7e2a-48b2-4a26-8af6-acf8daea4948",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49886e6f-2d9c-4b2e-8082-e9f81a6e2aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffe3270-8d91-4b67-86bc-cba813cdd329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39756cc9-cd61-44bb-be4b-684ab04035d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1738a0b-e7cd-4958-8f61-703dcf50d503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18946b5-35a7-4bff-8774-0955c0d101f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab54573b-82de-4c3e-baba-0d2a98b63a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6423c2e4-aefa-48da-89e1-0f3780010bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d50c929-dc75-4ea7-a23f-693731460194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "919bda53-752f-46fc-80f3-13a45f577eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ce02a0-0ec3-4fc8-aeb8-ff099fe8ed8a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa39215-1e59-445d-b80b-3f0220dc52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c79663-7e80-4978-b0c2-dc61a60e3dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c40ecf-4ec0-4792-852c-eb773633b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1bd4b4-4dd1-4338-9ef3-aad14dd88be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3482a6-e46b-4bd2-989f-f9b7857518dc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de899a-c35d-4310-990c-7d0206792077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c83de3-e20e-4792-aaa1-178eabadf770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d3343e-77a8-42cc-8e25-da86c8343858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ff45d0-700b-41f3-9c2a-ba1493761aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caed0c0e-021c-41e8-b244-94656c3359a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f8ef5f-e27e-494e-95af-25018b0c4b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2ad5ab-cea3-4459-b20a-d2152719b32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050f5b90-01b6-44fa-9c0f-4ddad5dc1583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29e412bf-4e1e-479d-912f-1d894cb30897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9783438-275b-4c0b-88b9-54b193456d62",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c01ed49-e715-4aa5-9dee-c9addfa386ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8184daec-1913-4860-9557-759ea25612e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efcc062-66e5-4a3e-ad4f-acde4b5aa692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b09b5d-90d4-4719-85a6-8108768661a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669a78b3-0165-44d0-83e3-2cbb006c6f42",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de47eb3-54a5-417a-b46e-8041a355cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19e3e94-01b9-4226-b1f0-8b6d44c4d98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b774a36b-236e-4dcd-a833-32a17da52fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "384467d6-9135-460d-960f-0dbc3629cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db04daf-17e3-4234-aa0d-5fc5596ad38f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23722d5-5f1e-42c9-8162-7339b86d2589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa71ea0-f264-4441-bb8b-3ca51605b5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aab533c-37e4-489f-b0e0-b8c23c0a5eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f2d449-df01-42dd-9cbc-ecab1bbe782b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91afed2-45c7-44b1-8e4c-387d0743c60f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d67fd2-d9ac-4711-881a-80f70f5d0c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6edf096-fd1f-407c-86ad-9e65d7c056b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da21d30-c6ae-47cf-9f54-339b8e90127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bde11a1-c60a-4948-a5fe-d513a8754a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37048401-b1ee-4f3d-8a43-798a6f694075",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2613e9bd-00ce-4c16-b537-6f422ce6e7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0b06f2-0387-46d0-9625-967619548e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a84f3a5-cccb-4374-9100-b9716294e463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5837ec-9fc8-4065-b53f-a00f54d29bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7909737c-56eb-44da-bd6f-06907010dfa2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c759657-1acc-4a62-a5bd-2b638017d76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77344c58-45c9-4d11-8e93-bdcd88e88a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f980a81-9257-42d9-a037-27bd5eaeb8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01e85e5c-d2a1-4a6b-8104-7abb435ef5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830858d5-b361-4381-b0d5-c090a999e640",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15063b63-12ec-4d92-b60b-1cd72fb43bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac82338-a071-4f82-ac65-c0d50435d166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2ebee9-d2e6-4095-b3a4-14fa9bd80c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "050ca6a9-b0b7-4dad-8ebc-6ab6bcaeaad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f6b388-b283-443f-b493-138199502da0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7d35a9-d318-470b-95e5-026505041867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049d5ab1-db71-4191-ae74-c8ffbf2568f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a89356-37d6-4c4f-9a46-4a141a1d9dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c06e5d2-f630-4d8d-a9a9-20396bdb6a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4994aaf1-3102-4a48-a6e4-b5c0635ce76f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e3239-26e2-4ddf-9248-a753de780be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d5e601-ce40-4a43-8e58-6dabd1261f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0cf75f-ff81-4fa6-a633-fc5179dd83f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05cf1922-16a2-415e-9f7b-c3465c9cde98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea543739-d181-4c76-865b-ec7f3001fa52",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27982a31-054d-44ee-aa24-c3cbad90e010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc19a28-4784-4b46-88e0-aeafdc85f02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a446e89c-3ef3-42a5-a83c-aefb48a6cda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83f7eea-cdc7-4618-a1e1-41fcdd004b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6247f78a-2a2a-447d-8729-1beb449fcf70",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1578ccb-6d4d-4c99-ab3b-9213874d109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5293e4cd-83fb-4942-93b6-178b6552a4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340ff673-997d-47b0-aaa6-f77b348eaa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a195121-18f2-4ad4-a3a6-c422a9e57030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8522cb17-e5e2-4bdd-93ea-2a67bbd97a0d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c62ea9f-688d-4fce-8769-1fb7a1f24e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396c5625-bf4e-4fc1-a1f5-a822d57020e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6297f4-f989-48c9-bf73-a6f4c180bb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1cd929-577c-491c-82ec-40fb8746f0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecf3ad6-d1c0-4e3c-a32a-3dde414f9ca4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d47d94-9cdd-44d3-9cc6-998118801726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433f1fa9-5a92-4a67-8407-11650d87f7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5202051-0281-4f4e-98af-ec6a511e5540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eae61a8-88d4-420c-ac84-ab8237726ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926b22f2-55d7-41aa-be89-be75bdd71d84",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936244ed-1419-4a3f-84a0-d7a65867d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240db2f9-50a2-4f6b-bd24-baa65f2cd69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329170e3-312d-4734-962b-bec6812cf1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "391653ac-38b8-4fd0-978b-aa4c3cb47edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a467437-7c3c-46a9-bd23-4261feddbc77",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a4994d-6042-4926-a0ec-8d2466cdd52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193a2efa-ce4b-4d33-9a2a-264f4ce20f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fce8c4-ecf2-448a-baed-9692cdf671ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee752926-4505-4f71-85fd-1fa3c9f5b3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5511f4-1a88-421a-8729-c7c5df7e90cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6533e3-8a2e-4446-ba00-cad73668a842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b620221-67b2-4757-a20a-77d8b879ae12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021eec5e-b9ba-4cf5-930c-a4ffc65dbc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa758a8d-92df-4e3c-b48b-32178636adfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112609d5-7ccb-4b84-92e1-e3f21fa8bae9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e1ffa-b797-4159-91cb-b29ca2467472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2091603c-ee6a-44c4-8031-7a5e91eeb5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1b356f-7c46-4ac3-8731-41db417a81ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2569783-45e2-4256-b687-ec6b6804ee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680f8f41-06c5-4e40-98eb-0f9938d5befc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35758d19-4f3d-4555-ab2b-08db6426e220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b593c0-45a1-4f4f-a2ac-9bacc016f3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebd7c13-51bc-4e0d-b806-c14680ee172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed6d609-2863-4b63-ba92-5d72f21d2b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6802c3f9-4bf0-4806-a170-c2d954e533b9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3ba1df-fdb8-4c0d-928b-c6e22bd2259a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05eb6fe-2ec3-48dc-995b-92d74cab11aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b34e61-0c71-40af-b180-de938e4bb7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c20426-0c39-4ea6-98cc-6fb370098c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43571c1-7962-4adc-9288-529c7287715b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa06ffd-7f26-41cd-a7a7-8fcbd165be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47947a99-c252-485f-8b06-daaa2147f757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd32abc7-4b0d-4514-b51f-15a467547415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8708b436-89fa-4825-a4a7-1ebd988f94be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34123f2-7a29-4125-9423-c1ea4bde73ac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6082ea2f-8297-44d7-b1b6-2d442482a9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5671035a-d034-4bce-9fd2-eb3c7f3d0e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7178e1-cb7c-4b7c-8dcc-83c9bb95e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a954f0-8e88-423e-bc13-1d620af52120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e9ffc-6267-44cc-822e-2ec43f9bc40a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9057afe-1ad7-4e50-9db6-24dba23cca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb32481a-1827-4ce1-99ed-ba98ff079f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78d7f5f-4e05-450a-82c0-74b7a76a6236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e894e8e-8fbf-4ad7-a5d8-19e1788dae5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117c689a-f2d8-49e0-ae85-b96b3bef2abe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8184da6f-87cc-4644-a6ac-1535a3cfc91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df24394f-b827-4fd8-a2cd-4230ec887629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe4082d-9ea4-48f4-a593-47737ca741bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c52e16-0a1e-47b7-8e5a-ca57e37b8a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abbac06-62b4-4ab1-90c3-30cb4898ab3b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48623f77-8bbb-4d52-9b4c-71fab6f4cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5582d7f5-637a-45a1-a13e-76748f0166e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7b381e-4a77-490d-b356-a72fbe8e2af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba524c70-ac29-4ba3-9806-060833054f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118c8e19-3a0a-431c-8064-072019d30e49",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2ffc2e-1eb7-4036-b434-4f463074846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5a97f5-4bbd-4d63-9e55-d2caf561eddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669b8c47-bd48-49f2-8823-9534fbf216d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "459626fc-76b9-4df6-b079-5798c3c08866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b63b52-d7ab-4e46-9b4b-bda79df11227",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22211d57-3f04-4581-bdd2-2a4e5d84aa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce7f97b-2ca6-4953-8036-b9b4ba6c5b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7496a9e8-e49a-42ca-b9c7-ec220671a193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5b1576-e72d-4227-a96c-ef635febdff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422a160-9b4d-424f-acf6-ddfc746c33a5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815b4851-83f4-400c-aacc-9f1c2b1f7afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222d696e-353a-406c-a280-bebd62be2e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6313ce8-5190-40b9-9d29-88386a0158a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a11148-d949-4851-bbd2-4dc5f4506ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5875d4c5-f56d-446f-8443-7f849ad48b7b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dabd799-0b59-4638-be6a-f6bd777f3203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23548120-ec22-4d05-aed5-1f0d61546bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9283fa-95f0-4996-a824-8df8eb1c92db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78af2fcd-6cfd-4cb8-986a-9c47f148eac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80c21e-b386-4439-b7de-d170b94b57c4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31670bb7-43c9-45fe-afb8-cf8107e0664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d8d6c2-f041-4f68-b4d9-6d4f704915e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9443e780-5c5f-47b1-800b-bb60982fb4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6d689f-1e7a-4d2c-b8fd-87dda7243973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf4b309-9d2b-4d43-9863-18b00944027d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209c964f-01ab-4746-a2b8-8148393f67e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e44bb4-5d31-4269-8a9b-330d16e315f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4d55e9-e75a-42c1-ab05-50e426f5cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf297e5-c137-488b-a152-f846dd8b3bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fd34d8-e40c-4551-818b-0b56345c5f67",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51544129-58f1-4837-92ec-15ba0b0922c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dffa82-6767-42b0-a0d1-150b038429ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ec7ec-a777-4984-98b8-a736499b5054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48e5371-fea0-4593-b935-6ffccb878b36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "153e5462-51cc-47d2-a070-beb396351d41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7019db67-1759-433d-ba17-61ee8746fbd3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c6fde-aeeb-4904-97fc-ccc3c2d34f9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb47d75-a1ce-4809-846b-e7c99f078843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ce022d-c025-4d8c-93f7-9c3d4445822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e394b01-59d1-4abe-ba46-dd5019e215a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfb7ec79-a4e2-477d-854f-58e1900784a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c728d16-aa0a-49a2-9166-35ad7bd909a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "820bc90a-5c5e-4b5c-9845-021f3bfc4087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4843cf74-3a70-4818-a46b-f21bbb92cf3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2968f416-ef1a-4e54-b2c0-bb9fe9ae5b1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73e0b7dd-47f7-4355-a090-e174b0090578"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6410e1c-1e7d-464e-8c8d-06a072198c22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66a23267-7c19-483d-bbfa-d5db524eda6f"
            }
          }
        ]
      },
      {
        "id": "b9d945c6-7f8d-4f17-9433-0a4fe4179e6a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6b6a1790-610b-48aa-b8ed-23ecd2d5128f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cf5b37a-7108-4548-b0eb-c5f2ae05e646",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "017ab35c-40ee-4406-8437-b2ca0e703294",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c22b2-9b07-4a31-b3ec-17db9a69b762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4985d326-53e4-40de-8ff0-fde1327b50e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc050cd5-79e6-41cc-9ac3-108361f20105",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479a5445-43d1-43f1-819b-5f7a299e2d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0590216c-1f17-43ca-90d0-f6fcbef6a27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b6be12-cc4c-4cb4-b813-c78cc96a1362",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba922c4-28c3-4c3c-a75f-aaca5cbc9d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ed2ee2-82cf-400a-95fe-875a38a745cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6261c0-82b1-4e99-8363-3f999702b0f1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452f79dc-1d67-4d51-aac5-0d44671d7532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b9d2e1-65eb-4a9c-8635-ef928f596b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d359aa3-f3e3-4c68-baf1-9c8c2a88ab51",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddd0403-be3c-43ed-8da8-f5b3ed59805b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60b3a32-eaa8-4661-8ea0-c85a6fcd33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c596ce7a-8692-4ba4-9329-b74bc259f35b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d4585f-b51f-4d9e-a6ba-866d415ace58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daa8d84-f6c0-40c1-9e75-9e67f8d0ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8618e81e-7a81-4396-87d2-834186501dd8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c91d3c-7beb-476a-97fb-4190a3b72a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518b0362-7d00-4cba-85de-9b27ef3159a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4af563-12c8-42d0-879b-106a3946fc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4604d4da-fa57-44a0-9b03-7204566776ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b23ef5e-ffbd-4b31-a9a3-98cf1686ae35",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974f9439-d22e-447d-819a-246555b09a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec67c3d-b4d6-4bc7-9db4-dc012175f537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda320d7-24c5-48e2-bc82-b56078f601f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b95b94-2e80-499d-908a-bd11a55782b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d11b6e9-0466-4191-a0c8-a2401e1ef768",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19685886-035d-4e37-92d3-42fc31709a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab36b636-c552-4a8b-b240-0ce138fbcf65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0964788-ab60-4093-a56c-0869c8e794e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3306e4f-614f-426b-9e90-6c3453fe7d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5969b786-7d40-4448-a023-a3aab321bbc1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93292fe0-3c5d-423d-b340-a3f4f1c08119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ff3722-459c-4091-bb00-18cdbee77b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45422b61-1f3a-402b-af29-dae93265a503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e0f20a-bb83-4b84-8e73-891392e550de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137957a8-1212-4945-ab54-3dc8c628a1e6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6809adea-bcf4-48de-9bb0-e0dacdff722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae0540e-c46d-4a33-b661-e643cae4a60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104b5b49-6804-4aa9-952b-2b38ca9ee15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d9a1b9-ddb7-4b80-83ce-b4aa2a170322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88448bab-27fa-48bf-857e-520178b51058",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e50e88-f298-4877-85ed-1e47fe4fc7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9eacbc8-285d-4db9-a6c6-62686dd90aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd344d0-ceec-4e48-b0ef-eee712a12a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9b34de-cfed-4629-a2f0-5a96a143689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fea560-dea1-41ff-80bb-66154b075a64",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf40cd7-96cf-4afa-89c2-4ddd773f3d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62061bca-d9e1-4a0a-b684-aa6e42ada089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a181a53-5c17-4946-ac05-bff681fc8fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae20cf0-5cb8-431a-89ec-0160f0f11c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef8d95b-ca06-4ca8-ab2a-6ade70fc9056",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342185d5-17f4-4b84-9d71-6de1e8a8ef37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4867b9e-6d1d-4fa7-b1e7-abe3dc6d5d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37283ed7-7332-479c-abba-9e27969da9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2589f65a-f7ce-4717-807f-7ed4f1d0b68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cee8047-bb30-4519-b874-c7530a4773d6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001edee7-8814-47c6-b8c0-9ac0ec04968e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ca7e53-ca0a-4abe-b514-c779b81965ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25644297-14c6-4fdd-9514-5e2b5f0101c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab82af96-3b53-46e6-bc44-2dc1bb99aee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fb5394-24e4-43af-9ec0-8fac7a05b2c7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d94260e-0e38-4951-a0a1-494983d55e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95744558-0982-4273-b1f9-277623b9bb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1741bf4f-b33c-4a61-a3c0-236cca370d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bbf918-66a9-40c7-b3f9-affd98ab3d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d626e1-8144-4727-ace4-4ec8610ad7a3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23939324-c8dc-42d2-8664-6cf533790e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8073089-e582-4377-b68a-dcd4831fe05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8a9582-da33-4b04-9825-50df088f8a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9ccf76-94f9-4cff-9a7c-2a91b178a4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf15c6f2-bff3-40d4-91de-10193230636c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8980527-c30c-4f0b-aebe-ec035e941a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1278a3ea-24d5-4856-affa-ba3da7cc5c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e0b87b-e5f6-4bdf-b21c-21ffaa6ac2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69cd9e0-92f4-4a0e-858a-7bb6fe2b3055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044b977b-9ead-4f17-8c5d-54471c6327e0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6129b2c-67ec-4fae-8c5b-e39029bf7bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45929b8-f516-410f-a401-2fa0a22c84e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ae3656-274d-4603-84d1-d7c7191652a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d34c48-eda2-472a-aa17-ac6eec9bdd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5180d3-d8d1-4442-9a2f-c7f4adce0edc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850238af-c755-45a3-94c9-634dbc23e75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e50362c-87cb-4ebc-8688-477a1c314d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4408de48-86c9-4edc-9fff-bb9280f332ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653b1f25-5e66-4874-9084-bb478ab1f0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cded78-3d58-437f-b828-ae8eb6b4c818",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c231a5ed-28c4-420e-93ed-e4aa8e3acf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2222329-d417-4584-bcb7-b97c746a3bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc326f3-039e-413b-ae8c-7a96e424b319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5bb5d1-3dd9-4eee-bfbb-0a1c3a7a31e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746eab20-4d1b-418b-bb41-804bb192705f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadeefe3-1955-45cc-ac4d-2100c5f0ce21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71dd1bb-ea63-4bd5-a950-c4f0f9d73fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a61792-baed-40d5-9c30-b3212cdbd82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae0216f-ba19-4ad8-b97e-69af6720e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eff2fa-a1c8-4b34-9565-37b8b5f90ab1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d6e449-786c-4050-a199-0b5c8acd1374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bf59bd-6661-4fc2-890c-b0a92d3a8123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adbdd52-1bd1-4ba7-80c4-f0749b27823a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7894abf-d969-4a71-98d0-3f044ff0fe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dbc13e-643e-44fb-ba39-ed24185a305e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f802468-231a-42d9-bded-f6062a410a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5372a9a-bbd0-43ff-92b1-1013188d63dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe67046e-a20b-49c7-b0d0-26ece951eefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba00686-8703-4064-88e3-3a8296486f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395d4af5-c66e-4ea2-bf1f-9d5bd7c54329",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f693121-46f1-4ee1-ad19-0650c097ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e4252d-aa45-4c9e-a2e7-af7e3f0fe63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b08b408-569f-42d7-be85-59325c435fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474016d6-80f2-4874-b282-19668f6c9a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e67a2-4d19-4c38-9577-d0f540720e0e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9119a579-c713-4549-a93b-31ed3fa24d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be26b797-6331-48db-a9c1-4e5c5d46829c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc136474-8939-4132-804f-dd5bbc36fa88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5deb5abc-080e-4b04-9e48-3f742e7286d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42e4a46-422c-49f7-957c-be576ee695f1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3582362-e6bf-48a1-8f1d-57f3225f8b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663bea8f-df92-4506-b8a2-743e3cc29f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25e8cd7-bee3-40c1-985a-76dc067dcd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e2b1b4-b43c-406c-a876-948ccf8ddfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58f0ba4-bee4-4b59-bb36-c371f1c6d072",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0217cae-2325-4a38-89f5-7cd10457128d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc98d7d-d402-4a7e-8167-cc8c7f7ada86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd3e1b-8278-4fc0-bc38-5a13e3df37c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3318fec-a0e1-4af0-8e1c-995475cec6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d461ab9-e35c-4ced-abb3-a198d4dd7f59",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b121960-8930-425f-ae06-87589ff91f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fce4a4f-d189-4018-a837-a416b16e6c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72c9bc7-9aca-4c83-8088-9d53b0dcf113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efa56f7-16bf-4c7c-86c8-b00473dbb0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51b137b-8d55-4e5b-a428-d6b12bd4d656",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ad4d33-64f9-453b-8e23-1d8de1b7e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ade6b73-dc06-4db7-b5f8-e552a1571394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b16e3b-e072-4953-a7ea-600b71bb169d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dba3a8f-f24c-426f-aabe-6dd324726ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53988814-5dbb-430c-bfdf-02bb33831b16",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bb6d19-1a82-4515-ad5f-9cf6067039fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80acb613-d16a-4a55-bfd4-8b6c8074b939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8692f53-dd78-4ba6-914c-7b5c4accdd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ceba0d-b09f-4625-92df-b4292ccd7f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f47f15-cc81-4716-858a-266c0349ea00",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8198088-10df-484c-8984-dab99c0bbbfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1c69d2-634b-470d-be3a-0173ba55f84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2bb38-a0cd-442e-9b29-d6a437eccaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c991a35-6ac7-406e-b25b-645387f609a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b01ebc-8b06-4363-ab59-69218abee967",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568f131d-ba37-4223-b4eb-6e514fed4251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cdd771b-bb9c-49b2-b338-a3c9ae4d696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1a8231-53ff-45e7-83e9-2ce8679379e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad91b71b-2f4a-45e4-b63f-783a95b3af39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d00f4c-9efc-4410-8eb5-fcaa097f4e43",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f527c17-c753-4993-8223-1317042be596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eda45f2-72f7-4e04-8255-85a33b8baa7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc2c899-4795-4045-ab30-43da667e1278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc901b9-1780-44b7-a332-20a414bd5e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d602f45e-0c80-4405-bbab-cb72a23b317d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7066be24-0fc7-416c-b7a1-c6ce93ae3661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2621c81c-7446-4828-896f-b281ab729c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f78776b-95b7-4aee-b09d-c54d7e70ff14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0112dd-0294-471a-ba4d-9523e653e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bf0040-a787-4fc2-a0b9-032a31c63df7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85608c9e-7d67-4ab7-be72-70f259468ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfde270-5e9f-4f63-a259-5a81ca8c7f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb449a5a-b7c4-4bb5-8554-b6b471696b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dee1c10-97d2-4e34-9a6d-a195bc672e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1c0bf3-2ff1-40f2-8be9-339f296c3889",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56c185b-a05d-42d0-8ffd-b6e5bbeccb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6911c45b-79dc-4c93-ad61-65887b8b596f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a65aeed-8e32-417d-9de6-1116db3d8264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f60d057-e08a-47b5-b767-2a2483863436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65399ddc-f5e5-4bca-85e2-b5577b7e39cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a02332-ab8e-4711-bf06-dd89825fe8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c76013-19a2-4a51-ac4b-5a86d88c5b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09cc987-956c-4ac8-8637-91b4616933c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4283c53a-aad9-4380-b565-c114f240fd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7028e458-2a45-4e85-aa9a-5dfa311e8417",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13efed11-d633-4e37-a6e1-321fc917e9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa651c50-497e-4eb7-8c5a-ad6bc7a03705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eebb96-c20e-49dc-bf07-035fd0c6bb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9552fbff-f569-429f-aa7c-e47bd0174576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe103d2f-3867-4adb-95fc-8b9d5bdbd3d9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e54c27-3c4e-4e9a-8189-6071a000748b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e3002a-32be-44f8-bf0c-7ecbb3c17b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faabf93f-89fe-45bc-be57-ceaf7afc93f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f63c6a0-3483-434b-98a0-2a94f28cd2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4c5ec2-d9d5-4b1b-a536-f465b88d6f4e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0eb1f8-db91-488d-b649-17819fc754b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a071e53-4997-4bd4-be24-2ff8f39b6491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea81ae4b-d888-411a-a170-b558e2b3dfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6870e68a-4c0f-4050-9485-c5d87f4f5628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d59f118-38d7-4f1c-9dff-a9f9f6778e09",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3684675-7eb0-4669-9b50-0cf126fc83eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd32eb8e-1560-4010-ac3b-d98270de66e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e80858-0482-4c59-820a-87fe6bf70b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ee9dda-cfc0-4479-8484-46d80e5e156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20da080a-81a1-4c5b-9577-29aae33f3fd5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7c533c-e57e-4be1-9cf9-25016e224229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e4b2a9-7454-4ded-91a6-15a8c5afb533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe2f1d5-8c3b-41b8-a16d-80fe6b6c501e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17be214-e6ce-4fc8-a95d-bc3fa11441f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1715d82-d26c-4566-aefc-aa42245c09f7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a6299e-35d0-409d-8b7c-874d0cc069b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea61252-c305-45d5-82fa-9c726543dc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74093c8-1987-431e-993f-5b30fab74302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92b0f64-eb9e-481e-b7df-24b101353793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7e9a62-0f07-444d-a5b3-bb1d5f113862",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebf5d16-5fd1-4aab-82ce-581a75921a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac5f77f-69d8-4320-9cfa-ecd3aa7556a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6a438f-fc62-4426-96ae-b88a487f22f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7ca625-cb57-4b36-97c1-0c90f8879b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5520ae2-ffd6-492c-9e8d-4e57ebed5b79",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfa045d-61e8-45d5-a1e8-7216b0c9c170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4629c974-27a1-481d-a8c3-0b7ab5296393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4e31c2-7d4d-4228-8fd8-6762487b7e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f062ab4-2abd-4d8a-a746-2c2e43a484e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96b24b4-b42a-4ece-a5e3-8d267366cb0e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304796e7-e934-4562-99bc-b8f0017f17f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac75956-ce54-4b8e-9461-955a73a7869c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dc6c73-1205-49ad-b043-a00acf412857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641e23aa-908c-42ac-8c26-b81169c37d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26e4f57-19de-4d35-842e-cc62571c5cae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e058b-9943-442c-8e1f-217395c4f429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6875405-a21e-4310-9607-90c9cd1d502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aacdbc-5aa3-40a2-8ff3-5c5870694965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee9ca13-0a25-48d7-9a93-cfc0806d53c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2c7d97-9797-4acd-8050-1ad5580b559c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23252677-c751-4b6b-9580-abc8c3a80793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb82a8ce-dce2-47b1-a454-015cb2a3b656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839c6548-028b-4879-994f-2d0c2ff914ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bac071-0c5d-4952-ac79-4a9d8e6f5681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8682de0e-3fe5-4908-8a54-20ad0ee0d249",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5c2dee-96fa-454a-b6ab-58632a6a566b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996c646d-9db9-4a4e-a650-fb8f268eea77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa46a532-b7e8-4e4b-ad82-099336f8540b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4473ac42-3b80-466e-b202-e1101aa3ec55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d120806-f0bb-4b3f-b15f-5ba01a0be2ad",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0c848d-6f00-40c6-903e-c782cab749cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a5eda7-645a-4d32-ab3f-b23aeaa53f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcb7df2-6449-4211-a393-142ac727dc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6ee792-7daa-417e-997f-a54ab824e229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dd1f83-a4a0-4ca7-88a8-a1f06d51a612",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2800424e-8d99-4429-aa38-4e9c7a354d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c414528-6ff5-4c09-8fc0-90ee1df93c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cae365-3f75-48a8-b1a5-462474bfe043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3361f62c-0ab6-4c41-90f2-418f4465ef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73de4154-2107-4f98-80e8-d1d93ba1a347",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aade9333-9380-4532-a933-850f69c4a99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817328cb-16ec-416a-9783-4a0b83224f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5f2af7-ce9b-43bc-8b0d-06340edc2915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6eaf20-a532-4270-a057-df668538a016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c141f7-e133-4403-b8c1-5812573c0dd5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bab796-1774-4b63-bb9b-05e3d64f6343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1c6c62-ff3c-4ac5-920a-cfe73e951c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c984283c-c937-42bc-b795-7598208a2bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7ea383-4024-4d58-ac7f-dd181d5fdedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d60f05-8f9b-4fce-8ce3-6151daad7a0c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f46d8-a293-4b29-aa0d-cb8cc466b413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0b6991-143f-4fe5-8d17-8903a2cfe0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c72080a-cfa5-4c52-b1f6-8a622180dca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfff5865-3307-4c35-8190-9bb2ba4ce7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7e9522-618c-42be-82ea-b943449c57a1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870042cd-1b17-4b20-8a9d-abed3fbc50b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3fc1a9-8373-4781-b90a-8f1ec01f598f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a18982d-e9f7-4221-8015-f2e3899c304d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b69358-dced-4c66-bc5b-94a0a6027e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ede200b-eb6e-46e2-8637-93553f3ae0cc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eafffe7-bb94-495e-a120-87b642f9b8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15695528-685b-445c-b689-975301dd358f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280eeb92-df4f-4123-b86b-0626b71baad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8c6f78-ee49-44f2-adf2-dad7a7c83152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d6141-191b-434d-9701-c9ed8cbe29ba",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c1ffb6-07d0-4521-adeb-9a0f56381636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a2bf38-04b2-453b-a819-0aed51d7eb77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0621eac-d70b-4eda-ad52-53828f912c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faec3705-1f55-45f8-a779-1bab7db37377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c866d35-a842-4275-a645-3a97e6e80c89",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e94978-f436-41f7-a8b7-0988d4ab189f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9302bf-9413-4938-876d-ba299a0a3e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffa9389-8366-48a8-ab2a-0af21181b045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fd4afb-989c-485b-901e-c9a4f3e1ca1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9725d388-0eee-4045-be93-b48f01872615",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f631be9b-d500-4374-842b-97e12b04fefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac17159-3920-4ff4-a7d1-9b53039ef99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce8bade-132f-46b7-8247-d877ce9ffe04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d104f45a-d5b5-496d-9d4b-1f14d6be48f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f374179d-e031-4286-86ad-0ebd97cb1872",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde9758c-9040-4f1f-baed-790472e58802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfe6347-3a71-48e6-a18c-d2faff49c84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96b8407-3b71-4988-9b41-770bcb70072d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905feae8-7226-4097-926f-4a45781b3d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcef5fb0-4ae3-4675-aef2-6ffb90b0c678",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb09db29-5033-403e-97b7-adc0c80939af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e19f960-fd5e-4125-bbc3-5e429d30d891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4db9919-a228-4f3c-9248-3e0abb3982db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5fbe4d-165f-418a-8ca7-047c6be1ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6368ad7-e6f5-45b2-a1bd-35a9bf25939c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bf0688-13b7-4b05-8d27-ec3c46aad56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461969bd-805d-4e0a-af22-ecaf3da56ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3d8e0f-5ce6-4107-9e2a-af31f8250f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39f31a3-c186-4ac9-8b6b-4ef00a28fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf96d75-5f67-4404-b83f-0787c709b9b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120220b5-5742-4382-ab88-78647a981fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a31885-9fb1-4823-9d68-d9097f0d7a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204d5fc2-4e70-4081-bf31-62e8562b5b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1316c0-7187-474e-bb1c-b533358d23aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ff9c49-ff73-42d0-91e7-2d2263fa6c7a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d902883a-6fb8-49e8-ba3a-f80b2669676d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b857a1d0-19d8-49b5-af67-27086352d283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c2119-1c64-434d-9ee6-d7571bf18f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2263672-0a08-47de-8b93-eb025b87576a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fd89af-0567-4492-8878-616d24d7363d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f8115f-cc8b-4ab5-8148-ac8fad31ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e5da2d-da66-4ad7-b054-0c7c69e618ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8ca5c3-0c6f-474a-99f6-e07adabb2cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ae8ddb-3078-4f61-ac9c-6dae74e0bb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a165b38e-8f8e-4af8-a09e-e10c5eb5d9d5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb6ca73-bfaf-45ac-9f5c-896d0e6f1767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661f4d51-3188-404d-be8b-f3f3505469d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041f76f3-8fdc-4318-9e20-f3302531466a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d19ef5-b8d0-476a-bc93-8341f09702a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc1139f-12dd-47fb-8c12-8540b38bc3d1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab31e20-e43d-420d-8d4c-015f61fd8c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a335c8a-1c87-4741-9034-d327aad3dd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee98e36d-117e-4368-bd1d-b929d32d8e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b10737-8921-4f13-bd72-e849db8e4e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b107af88-179c-4ef3-8a88-4f83a775eb26",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6088f1-8c60-4b0b-8030-ed7ffb979b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2491aa56-9c25-402c-9612-d110de917fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab11809b-e265-464a-9290-fa5b15ac0b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c696bb7-cf5b-47c5-8964-abc7cd5fc016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4eb91-1712-417c-8479-27e16981d546",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548150f6-c361-4cd6-a4c9-f3013c3f7cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbcac21-3703-463e-9820-1496002ef3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b169d5-4938-498a-a5d5-99282130a636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5afb39-84fe-41c8-80af-f461157cbbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e48ff-41bd-4131-8b9f-d6032a4ee9dc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc0e5b6-08d9-4f2d-a6fa-40c5b34b0829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2767e8f-f49b-467a-824c-73250ffe7041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796f2fe-e0f6-41ac-8bb9-6b9e9cf734cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30444bb3-51dd-4679-a140-3f671cf81e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c77df7-9392-431d-b295-1a4baa72f453",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f405e14-1644-4374-a723-9dd210a4a76d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c5a5eca-debb-4f57-bd4f-06858d78acda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144e074f-8030-43c1-8085-331f34f9582c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d10058-61b5-4527-a229-5668395840f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f926e4ef-4dae-432a-9eff-310368b43b74",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0de8ac-9f14-4755-88a7-7c66e0256caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa7f350-c4f7-45df-8088-75270f2cb6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0927779f-3545-4c36-9a3a-39c76d32c185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528a8333-912e-4923-b4f3-cf4b4abbeb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d49a18c-3a06-4616-96b6-08166d532926",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ccded4-b8d3-4b5e-8aba-82bbdf8ac1ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81b472c-2e63-46e0-b6f5-5e4c8ac0d420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd8618b-4004-4f64-bb8c-0da53f9677be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec68763a-398e-45aa-8566-e0dd6cf133d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a71be0-a201-4d56-9fc7-1c01dc5f9b50",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbca880f-c21e-45c4-b03b-f3da7f9fb31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d849ec5-c3d2-4a1d-ae41-43b13d6d2136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ec03e8-f07e-4c99-bee8-8eca324781f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf47b13-f9fb-4ef1-85c0-78cd5760887a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54989763-6d3b-4738-9f39-242fbb01c959",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81972eca-9070-48f3-b7ac-1c84232700c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee3d1f8-8d5a-40c9-93b8-1de1bdacbc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114107ad-9fd4-4a81-bc50-0635e12cdf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75da6a5-8c63-49b7-95e5-d6a9ce6f3f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fc2793-f8f1-425f-800a-83c9537037d7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0d8ae6-df35-468d-b76c-ebc68e39b280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8baf5066-093c-4f71-8b51-96d745daadec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aaa8c7-5e09-46df-a9ee-6fff811e72b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86255d80-52f2-47bc-9563-c9476fc0fad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfe6b7c-d5a0-4025-a183-45b8c0319bcb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74a899-9f31-4da5-9307-d259bfa9e169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2871222d-8afc-4796-ab68-d93e1ac4acc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4761de5-2847-46f5-a543-70c7cf43b002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57587c14-dff1-440c-b734-2b6af8bc9a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf0282-1de3-4d8b-bd6f-de98e08f1baa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5170399-e676-48e7-bb51-c60b85218558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61b4225-00d3-437c-9bd9-48f18fc7e242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635e6c40-7a55-4977-97c3-b52b5538ea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66da4fc0-d522-47ce-be43-808f8f3f70ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957fe333-ddd4-4ee3-9efe-23d19b06cd58",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f239e5-6e59-47d0-a04a-acf1248340f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58310924-203c-4480-af88-c962ac574f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca5d8e6-0e78-429a-a8c7-7c92ee616138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b88f4e9-c6f9-4d7c-8ec4-7e1e328edb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9689615a-050a-43ff-8da1-13bb682d2724",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49be58ae-c17b-42ce-8700-dd463a866501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494635e3-03be-478e-a575-45f84b83f6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d78a6-b039-4280-bce7-bd2288fa44ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a03e91f-c6d6-4289-8ac3-43d37615706d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecb4288-9d6f-494e-84d5-e1f2e39f3d31",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda8aef3-be7b-4b84-a4e4-964c4a50b584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8737ada2-6ccb-4be5-85f1-d3e78d77081f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e29c4b-4ca4-448a-9f45-207a099ce373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92cd070-81ff-4c18-9752-7111134fa808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cf9b0f-dd77-471f-870e-9f88412942eb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1445b-180a-427d-95fb-eaf68e7b269f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10005e4e-45f6-4c9c-a78c-64f615b033a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54fc10e-ca73-4910-88f2-cf558a31d952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9118f77-b6b5-4af6-9876-f1f3a6069033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e29031-3e2e-4a6e-8a31-b663e5bb7fb9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9825901a-6c43-4beb-b529-1323987a2860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93af420a-bbcb-4a3c-9906-ccbe35e5ef9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a3e496-955f-4370-bde0-c598a8bd42cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1f9878-aff1-4932-89ad-eeb843b27a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc47350-1ca6-456b-9b26-320c28c6da8c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90980d9-0080-4940-bb24-46ca5a85c992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36dc688-9342-44bf-b802-153ac11241d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7fa71a-7186-4646-929d-09fc07bdef9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c53c72-7df4-445d-b33a-78500113e78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6b8485-9a14-407a-a1c5-2e1525b8b790",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f205a4-04c6-4665-9818-6656bf38f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c7e76c-6207-4bd6-b581-f323b509cb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257abe7-16de-4a76-b61e-d377937b7a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcde27d-3308-4672-9c75-12aec643e075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f0153f-8f68-4030-9527-16d2f25913bd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5508a64-6e33-4535-99e7-fd6a40353d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ef0a98-5d1c-4ac3-b8bb-9db359970821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc554d0-3e3c-49c0-b681-45c7932795f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594b1f14-e49c-49fe-92b4-3bacf33bc414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbcec80-4749-4b7f-91ae-82d33fe6f85d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf4895c-a957-43f9-9753-6d96cb7de817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0f5e75-e475-4016-9fcf-eefbfab2340c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176cc08-b7e7-43b3-88ac-54f81615c065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3957fafb-62b9-47cf-ba90-749eeac34aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9876ed7-9194-4bf6-b7a1-7bae4d076355",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3246de02-97eb-4ed1-9157-fb20ac563f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c18bbb3a-c7d1-44c7-a791-122ccbabdcf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42450462-5fab-484b-b53d-7b743ce26d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c04e775-e8a8-49fd-b4bd-c6561cd03910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef74ca2f-0051-424e-9d60-7240abf2f400",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7250496d-9209-436c-8d05-2691a700b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025654a3-7347-4e27-95a1-4c8a382e5d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e0299d-0008-4188-b763-a03f5cabb9e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dce64b-ff57-4a5b-9ee2-87e241e6cd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac608511-83d6-469a-97a0-724077b93928",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87659fa5-3b32-43ea-a713-882439b1177a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdde6f55-fccf-43b6-bfd3-d4c8105310e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c49738e-f3b0-49e0-abda-4b3e7dfcd8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1677eed2-f239-434c-9bb0-06357c9ff642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0ec23a-b957-4300-948d-6730d58a6835",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea1dcad-5c9a-42d9-9be2-c8ece84e3103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b52a0f-2c75-4daf-9adf-003d8e5eeb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e86bcd-487b-4fd0-97e0-0a73af3db33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac16910c-b601-4857-a2d8-bd491908f476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1994bbdd-a29c-41fd-aecb-b0812cf5c51e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39913f7e-6e84-4b98-9d43-db3f1b9e7169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7fbf95b-37cb-42fc-8a24-dc2b6acf9ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b353f6-f32f-400b-87fc-b0a49f2b0414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ba97d4-e2ba-4fe7-a6d0-e6072d193938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6532d2-a5a5-4130-8df9-1c3788410d6f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3a22a8-7617-4293-a108-ae43a29d1636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720dca86-a4d8-45cc-99fb-f0d0ae1dc146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc94e30-2171-4873-9a3a-e74e27c12f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e2a881-6747-4570-b440-b39ec0c2afa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70d5ddb-2ee0-4af7-8aeb-33c0e994b165",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b66296-074e-48f1-8012-4dfee61e1f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255c30ab-fc10-4e44-8c00-080d4994c82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f286cc9-bc38-4f75-b285-8fde2d057f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c783371a-5110-4aad-8a1c-3c54c8f47fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02b1b5c-e507-4bf2-b750-9968bb44e02a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18a826f-3457-41fa-9213-fa2b8e36d85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93a3f98-8bff-4efd-ac9d-8eb4ade432e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff716b5-03db-4c5d-9adb-3614d6d41464",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386ec588-61ca-41b8-805b-0c90c3e0e8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ca2374-8128-4df5-8226-9551861781c7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b782b08-5064-4b1b-b630-653616dd49da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc9b0bf-3eb9-4104-9941-1339827a6b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce1d6b2-44e6-440b-97d6-6f04ee33b796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b0a18e-93da-496b-a85b-a234aa16ae74"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a91986cd-1901-4dbc-a5cf-99d6504fd209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bb2eab6-a4c2-4d7e-aadb-ec0357cc8754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e8e1dc8-a0ce-41d7-a73c-3745d1f0ca58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92ce5e53-10b4-4cee-a61b-ea8a6805a51d"
                    }
                  }
                ]
              },
              {
                "id": "01a2f3b7-ac21-4a29-a8f0-e12d2aeee2d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "986faeed-4ba4-4f8b-8040-09ca50aa28a3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddda094-dd3a-42ad-80ba-811e5d6f8ef5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "524ea896-1954-4a7f-80f1-4bf1c2a42637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc890a3-f672-423c-9a1d-f218553f477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5ffadb7-3cae-40f4-99a0-20fd4957e73b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "421b3dd5-b5fe-436a-9a03-d76c5499b007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd510596-f84f-4882-8c5e-0dea70b48636"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fec21684-3282-4cd3-b149-1f80161bef74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1255b92-10b4-47cd-a415-cb64fcc4defd"
                    }
                  }
                ]
              },
              {
                "id": "397381d2-939a-49d5-ab37-a5322e680db9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "594f9af9-6677-4a8e-b81c-56297c6ffd95",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40403bb-5299-4b3f-8d97-194c68a44a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "baf2d3ae-5094-452c-a74b-ae73fd862441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76a8d2e-ff7d-44a4-b4ee-3dabc6d4ff51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc7b575-3a85-462e-9852-11a59d98d750"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f4dae484-a454-4b5c-9b7a-bac39af2d168",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b145f165-02fd-4782-95a3-2aff4312b82f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63b20fe6-e60d-452f-922d-df0e35df079b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "058436a3-2822-41eb-9844-799c388173ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12aa26b6-6820-4da0-a4c0-6817fee0db8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "369647ae-fd51-4ef0-9dfb-f8e47a9f0967"
                    }
                  }
                ]
              },
              {
                "id": "036fc028-97aa-4be3-9af6-e57789af97d8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc1d0c91-063d-46c8-ab79-5fd2643639bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dc6b071a-1c4f-4209-8fe4-5ae9219b759b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05c2fcf6-aefb-408c-bf89-f7d7ef7596d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3949f160-d52b-4d81-84eb-f83831fda346"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffdcadd5-4e5f-47cb-a85c-ed3116621f6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2d8e5505-a4a2-48c5-82a9-e0c8d7a3a693"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97a1af53-5934-45a6-9ffd-770929d611ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2ceea51-32db-4bdc-9bd4-4a4ee0ad5baa"
            }
          }
        ]
      },
      {
        "id": "6dddb1db-7273-47a9-87e4-11d4ed3db484",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "54925cc1-c065-478c-88c5-fca898dd11e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fe0170f-5d4e-4cd6-9ae2-afaceb470277",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa7de649-5ae7-466e-a5f9-1cae82497ca4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2f2cfa-3950-442d-b3a9-0ce58ec0e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "197b242f-44ce-44ec-ac97-5f7c6f4fe5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d5376f-60fa-4749-b2c8-87cf4a7e02e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5368e3f0-c05c-45f4-96b4-d4447ca152d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1527bb83-c6e9-4e4d-a616-95a79ec907ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e776b04-283f-451d-9828-564a9015ce0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f34b2d8-424b-40dd-88d2-41d3d3847074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be0a50ce-f73a-434c-925f-4b1ce5e5f299"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "299a5baf-182f-4554-8aab-35630d856f1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9bc5d3b3-daf4-48a7-ab30-8fa46c42de03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9445d22d-4189-43c4-81fb-6de394a845bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6c41a7d-4366-498f-ab25-a5b55c72e9c4"
            }
          }
        ]
      },
      {
        "id": "dc808e43-d021-46a9-b29b-e8bb24e16b79",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b332abed-6a9c-405a-92a8-39dd3afab4a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ebcd649-d527-4aea-ac48-7596ca019a2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f49ccf1-7b52-4086-b8c2-6e9ecc9060dd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b495d6a-b578-4f3a-8c1f-deec4e7dc5aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c6e713-c1b8-4a23-acbc-92960bc00ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243051fb-190f-473f-836e-6c9663a4cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcf08109-2b9b-41f5-8a99-44ca34c1b59d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d95ec67-44ac-46c5-b0f9-14a1bd3ceb7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ff37362-ae71-4caf-9576-0b999d8d0b3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5ac4eb5-5d3b-483d-980b-03225710db23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5d6aae9-5bed-421d-bda8-9550cec45b52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44999ca7-245f-4c4b-a6fc-02f2ffa53794",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c68a914-29bb-4315-aaa7-f2e0c3d7412a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd039635-62b4-4eab-868a-e5b161ea84df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18c233fd-1d22-4578-8703-472596052324"
            }
          }
        ]
      },
      {
        "id": "c2c180c9-4c86-4464-a497-a64d3e3a634a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "94811166-f391-4496-bba6-ec6372f93d3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f26acdd6-f9a7-44f5-b8d0-518f846f9a2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c62ac517-8480-4de9-9a36-e206ad510918",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029d2c5d-819c-4cf6-8a36-846a2c177549",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97112cd9-4a2b-4a05-918c-675dbd84138a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5daa819-e2e0-40c6-a628-7fb5f9361133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f6a58f2-6276-43ed-8d97-417305472cb4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9d5638-237e-43a2-a92d-e6f6f92902eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95eda800-a2ac-46a3-98b6-5bdb64e9e630"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98c11c9d-d1a0-4bfe-a4b7-64d461a431e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89f26cd4-4bbe-423d-bc1f-6de4aeac0fb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c90ea868-ad51-45e3-9dfc-0ce57a6f5760",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5c5d66e-900f-4085-89b3-13c25658523f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afb8dbd3-eccd-4c00-a6a9-2d5e74e044bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "877de022-e2b9-4e0c-bd84-4a462f0274de"
            }
          }
        ]
      },
      {
        "id": "e345e7ba-e1d6-4499-8475-52b226c51954",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efa4be70-7a43-4da0-b752-754c88eac098",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50192d24-1cf0-4d48-8cc2-39982f97f8b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "753aef22-8c7c-4468-a170-e51e24064a8d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d75b81b-5dc8-44d2-b6b6-86b739fe54e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d606c8fa-79ec-44e3-b644-a6c776ac1661",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.442105263157895,
      "responseMin": 2,
      "responseMax": 252,
      "responseSd": 20.11024830269227,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706315656295,
      "completed": 1706315667095
    },
    "executions": [
      {
        "id": "25101d62-5b12-4dcb-ad44-497e26acf1e3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7727c60d-4d56-44af-b44c-fce9162f0d53",
          "httpRequestId": "633bdc0a-a993-4ef7-9653-545cade6649c"
        },
        "item": {
          "id": "25101d62-5b12-4dcb-ad44-497e26acf1e3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "16f5ca2f-f07e-4ea5-9029-04f960b0b080",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "d6b86e61-344c-477f-8bca-33f1245a51d5",
        "cursor": {
          "ref": "8c2d9fa4-2e96-48bd-adb0-a201c6538242",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a4fbb928-8f11-4f88-86b8-48450461a6a0"
        },
        "item": {
          "id": "d6b86e61-344c-477f-8bca-33f1245a51d5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2f597b3f-83d4-4388-bbfd-85b860ec8015",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "51384958-f7bf-4f5c-9017-918f0c24a06e",
        "cursor": {
          "ref": "2534149a-57b0-499f-bbf3-26e3c567252e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c0c3c6b0-80d1-4e98-ad7a-19fa977635c3"
        },
        "item": {
          "id": "51384958-f7bf-4f5c-9017-918f0c24a06e",
          "name": "did_json"
        },
        "response": {
          "id": "eb78e45f-f24a-4c0c-8471-be904cf61c91",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f727ec6a-394a-4e9c-b5fb-c6c7cfd1d03c",
        "cursor": {
          "ref": "ec2f5d07-9d9a-431f-954d-d3298594f289",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f6a7c6fb-755b-4562-a929-6bf9999fb874"
        },
        "item": {
          "id": "f727ec6a-394a-4e9c-b5fb-c6c7cfd1d03c",
          "name": "did:invalid"
        },
        "response": {
          "id": "77cb19be-dcfe-46c4-8659-8731caebb08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f727ec6a-394a-4e9c-b5fb-c6c7cfd1d03c",
        "cursor": {
          "ref": "ec2f5d07-9d9a-431f-954d-d3298594f289",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f6a7c6fb-755b-4562-a929-6bf9999fb874"
        },
        "item": {
          "id": "f727ec6a-394a-4e9c-b5fb-c6c7cfd1d03c",
          "name": "did:invalid"
        },
        "response": {
          "id": "77cb19be-dcfe-46c4-8659-8731caebb08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e271013-c046-4517-8f42-f81e0415283b",
        "cursor": {
          "ref": "48fb538a-55de-416c-a548-fee9d94e47e1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c4c0c5d-2cb6-43e3-9430-04f1e440672b"
        },
        "item": {
          "id": "5e271013-c046-4517-8f42-f81e0415283b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2b63c70e-ffdc-447f-8beb-5ccbae0abec4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edb0ff2-9c97-4d83-9cae-ca129b553db0",
        "cursor": {
          "ref": "ad721a6f-c3c1-4e97-9ed0-764ee848c972",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8861cef9-a574-46a6-b9ce-933fd80ccedc"
        },
        "item": {
          "id": "0edb0ff2-9c97-4d83-9cae-ca129b553db0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5648a383-775e-4850-b318-11468ebc8266",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbbdac3-36c2-46c6-8487-4e350ca8b9b6",
        "cursor": {
          "ref": "904b33d1-c459-4b8e-be3d-d1bad5d1e9e9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7ce0156e-56c3-4b04-bdc3-72b95236e8d3"
        },
        "item": {
          "id": "dfbbdac3-36c2-46c6-8487-4e350ca8b9b6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8587cc84-409d-4a69-a94b-b51990a9ce32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7d8845-6821-4d8a-86b1-333007125847",
        "cursor": {
          "ref": "ff1b9637-8473-4171-8b19-398b8f509c84",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "32da6fdc-8296-49a8-879a-50829d0c1909"
        },
        "item": {
          "id": "0b7d8845-6821-4d8a-86b1-333007125847",
          "name": "identifiers"
        },
        "response": {
          "id": "317ae5a4-f86e-498d-b71d-4c7d1aeff8b8",
          "status": "OK",
          "code": 200,
          "responseTime": 168,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29368532-5710-443a-9bbe-388fb0787111",
        "cursor": {
          "ref": "79a3c4d2-f9fa-4441-afce-2d3e4e3b7e05",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5801de29-c6dd-4e2b-9040-c6f34c3296f3"
        },
        "item": {
          "id": "29368532-5710-443a-9bbe-388fb0787111",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78221e65-c627-4fd4-9c4a-d3adaeb8ac0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbc16a2-7556-499d-9f56-934720a69d7c",
        "cursor": {
          "ref": "7cda1adb-6b50-47b6-a147-651139ed0a65",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d2a95ed-fc50-410c-a80c-2079a640eaa9"
        },
        "item": {
          "id": "7dbc16a2-7556-499d-9f56-934720a69d7c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "437bfdf3-c8de-4cc2-a9c8-f4bf7acd8920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c26e72-326d-47be-a40e-754077ab401b",
        "cursor": {
          "ref": "16fc04d6-2de6-4024-9fb5-99558a0e7042",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b027b550-04b0-4620-b31f-98ffb9fc741c"
        },
        "item": {
          "id": "00c26e72-326d-47be-a40e-754077ab401b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "800c8913-439e-4b87-a792-f50d4de28cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606e9c34-68d8-4cdc-9208-7229f13e1466",
        "cursor": {
          "ref": "a91d9f3d-9c9e-4935-93f9-3f6840b28a3d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0306b1db-5c8a-41ac-849f-417bab8c0997"
        },
        "item": {
          "id": "606e9c34-68d8-4cdc-9208-7229f13e1466",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "68a7cdca-abce-4a54-9718-ff4c8147d5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3128d604-8d75-4a5e-afaf-5f6418fadaf1",
        "cursor": {
          "ref": "e2f6cdbe-9921-4d4b-acb4-335c3f53442a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "de2a50ae-7d1c-4b11-8810-bd80604df659"
        },
        "item": {
          "id": "3128d604-8d75-4a5e-afaf-5f6418fadaf1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "02d7173b-5bf6-4f6d-8867-fdd40bb84131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa64b777-fe13-4095-9497-29034d5da7fc",
        "cursor": {
          "ref": "a3dff720-5491-48c9-965f-bd5da2c89138",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bb7d073e-da2c-4280-a3b6-3ccda86bbbd0"
        },
        "item": {
          "id": "fa64b777-fe13-4095-9497-29034d5da7fc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8331c337-8738-434c-9219-b79ab69b6866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a538f1-7f2f-4c7e-bfbc-3c3ce68d64c4",
        "cursor": {
          "ref": "256f6646-6ce4-4281-816e-69cb7f1d97eb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b05a6721-da84-421e-b16b-16f2468ec577"
        },
        "item": {
          "id": "e4a538f1-7f2f-4c7e-bfbc-3c3ce68d64c4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4400caa8-3aab-4b7e-9145-c87d857de46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db939b29-81b1-4f6b-a335-26d31e53d0f4",
        "cursor": {
          "ref": "47f6c660-1b05-4e0b-9ad5-1cdf36ab6d0a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "50fab263-d372-4839-83f6-4389f9da0d82"
        },
        "item": {
          "id": "db939b29-81b1-4f6b-a335-26d31e53d0f4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6260341e-edb8-4efa-8c01-bc83b19df43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ef8e10-abc3-4020-a825-0a3dbd75e9dc",
        "cursor": {
          "ref": "b3f66076-bd16-4607-bc45-54e636505961",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "df142194-f428-43d8-a98d-eddbafa8ccc7"
        },
        "item": {
          "id": "10ef8e10-abc3-4020-a825-0a3dbd75e9dc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b147e40-0a25-4a4e-8687-db176789c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d7952-08e0-42a3-8351-d151bf11b5bc",
        "cursor": {
          "ref": "d5cfa0db-8352-4a3b-997d-6879f00b7669",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f50f3cb-cae4-498b-8588-3bba08e87a18"
        },
        "item": {
          "id": "9a8d7952-08e0-42a3-8351-d151bf11b5bc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "18d603a7-b911-48fc-876d-0f8be0d81e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40c2208-e4c2-4dca-a689-af7cacb425bb",
        "cursor": {
          "ref": "d7e32bd5-9cc5-42c6-9e97-ea3db00a7f64",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ce9017cb-d913-447b-bf9c-7260f7e75b88"
        },
        "item": {
          "id": "d40c2208-e4c2-4dca-a689-af7cacb425bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6100f835-e180-4ab6-9a2f-499ab385b871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974a0757-bb85-47a1-962b-d5c8c1194563",
        "cursor": {
          "ref": "33e19805-04e4-42f1-a0ef-a9aa9484e48d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "49f2c665-7956-4303-b732-4186beacd61c"
        },
        "item": {
          "id": "974a0757-bb85-47a1-962b-d5c8c1194563",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4df6d9fc-7484-4ba7-aecd-23e8fe42f4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6165de-a123-4071-94b5-5149c35fb882",
        "cursor": {
          "ref": "83367ebc-c52e-4ae9-82dd-b47762403c09",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "60e23152-38cb-43ed-8586-b74987e480f4"
        },
        "item": {
          "id": "db6165de-a123-4071-94b5-5149c35fb882",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2e05f149-7a33-4cd4-a09d-9b9e5147865f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b7143e-8396-4475-85e8-6401ba61a0c1",
        "cursor": {
          "ref": "11a67c4b-7568-41b4-a5da-a02c8120222c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d374d1c2-5a80-46e7-bfe1-3f85a5d45128"
        },
        "item": {
          "id": "c3b7143e-8396-4475-85e8-6401ba61a0c1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "955ac937-eca7-49e3-bcee-0b997929c9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc558170-adc6-442d-97eb-74aa747cf75f",
        "cursor": {
          "ref": "5c56f0bd-645b-4738-a5c4-b08edc1b8ee9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e65a720b-4705-42fc-9d42-cc29cef3ac28"
        },
        "item": {
          "id": "fc558170-adc6-442d-97eb-74aa747cf75f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6b254edf-7d15-44ff-9d9d-6287b4ac5d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005cc4a0-cf13-4821-80ad-4825f59aac0a",
        "cursor": {
          "ref": "482e2012-2319-4a27-a20c-d0a7544dcaaf",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a8317847-5dbc-45de-84ce-b6ea4306dfad"
        },
        "item": {
          "id": "005cc4a0-cf13-4821-80ad-4825f59aac0a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e775665d-7151-46cb-94d7-f54f02d3c6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea591f8-dc9f-4db2-aade-d86639048a8e",
        "cursor": {
          "ref": "79e4d5fd-46da-40b3-a281-1dbcffbeca5a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f9fca914-b93c-4140-b401-41b154a0956d"
        },
        "item": {
          "id": "8ea591f8-dc9f-4db2-aade-d86639048a8e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ddcd0887-850d-467f-97e4-a4073fd81be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60be62c2-f70f-4af1-8619-e4892a6ef199",
        "cursor": {
          "ref": "6096ab8e-31cb-45b8-a213-c1e3b7aa2bf4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d75fb86e-7f93-4efc-8495-9075fce78f67"
        },
        "item": {
          "id": "60be62c2-f70f-4af1-8619-e4892a6ef199",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "009d6d44-1b11-4d16-8b8f-701b61c3e93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447cc22f-73c7-4e44-9047-59fbbbbbcb35",
        "cursor": {
          "ref": "52ebf8b5-cf14-46bf-a7ab-00152b501bce",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "65114278-e153-4034-85e6-c4a959eaf729"
        },
        "item": {
          "id": "447cc22f-73c7-4e44-9047-59fbbbbbcb35",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6886518-6ecf-4ab1-9c09-78d532c4be2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdde7e5e-bc80-4cb1-9e54-a8c1a6fdeb3e",
        "cursor": {
          "ref": "712a2e21-33e5-4419-bdaf-249093c5aade",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "935f3546-1f6d-4e63-9ca8-00732093bda9"
        },
        "item": {
          "id": "fdde7e5e-bc80-4cb1-9e54-a8c1a6fdeb3e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9154f45-0a1b-4f4e-be03-df568dd81ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cd46c3-3455-4e2e-b869-254099b5152b",
        "cursor": {
          "ref": "aa96a9d0-23c5-4e3d-97bf-931c9161351b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c309873-0f33-4c38-baab-78018823b4a7"
        },
        "item": {
          "id": "f4cd46c3-3455-4e2e-b869-254099b5152b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6ec2f4c1-5951-4d20-a99d-74aad95a99a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f35c1e6-5b60-421f-8366-f881c7b821b5",
        "cursor": {
          "ref": "b28d4fc6-04a5-48e7-8190-308afc6f52c5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8cc5a90b-5877-4807-a16a-447b1806499f"
        },
        "item": {
          "id": "1f35c1e6-5b60-421f-8366-f881c7b821b5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "239740d8-943b-46c5-a29e-6d2fde1a5a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc2f6f4-d6f5-4e2f-90c7-f44a7eb75d52",
        "cursor": {
          "ref": "4aeb8ccd-e549-42e8-b5de-1a43f11187df",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c89661f5-1a4f-449e-a6af-8881ff0e5572"
        },
        "item": {
          "id": "5bc2f6f4-d6f5-4e2f-90c7-f44a7eb75d52",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "580b1943-cc84-4469-9c6e-a0e6b0d75b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf8646-7189-4071-a1ee-df8e06c23e20",
        "cursor": {
          "ref": "75e0c939-cef6-4f22-994f-e0a8b91e30d2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8531a8c4-815f-42bb-8bdf-150cfae27fdf"
        },
        "item": {
          "id": "5ccf8646-7189-4071-a1ee-df8e06c23e20",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5504b141-c410-4f43-a27a-46b69a682384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7821dc-6829-4b6e-b8c3-e5c50176bb2d",
        "cursor": {
          "ref": "4da62f30-bf1a-402a-9135-9e96a763a58b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4248fd9-3497-4e94-9c87-3eeed8aec06b"
        },
        "item": {
          "id": "ec7821dc-6829-4b6e-b8c3-e5c50176bb2d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d5abcf00-c281-474f-9776-e73a26b295a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be9a5ee-a00c-45cd-b532-430ee687b2a4",
        "cursor": {
          "ref": "ce599e10-7015-40c0-b1fb-2041758a0c23",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "87114ae1-1710-4437-a686-efc272ff99ac"
        },
        "item": {
          "id": "5be9a5ee-a00c-45cd-b532-430ee687b2a4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0db4e721-e8e8-4fdd-8158-fd3584f64fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a1dbb4-4702-400c-baba-e8e2b96a1239",
        "cursor": {
          "ref": "9970f3b2-a096-4f96-b371-b272f7410c5e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1f73352e-b2dc-424b-bc4c-6b2803f29464"
        },
        "item": {
          "id": "f7a1dbb4-4702-400c-baba-e8e2b96a1239",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eba8f7b1-4b29-4ed1-834f-5122e7a8e4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283fb8e5-730a-46c1-b2da-53ce4ef3c0f5",
        "cursor": {
          "ref": "5df5936c-825c-4dce-9c44-8a8f71cd6225",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3d5c6590-42cf-4768-868f-8e4995c01a93"
        },
        "item": {
          "id": "283fb8e5-730a-46c1-b2da-53ce4ef3c0f5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb615d11-c2fb-4f85-8f43-0b26c46b14fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e303f1b1-e8ee-4ede-88bf-a453453c2e8f",
        "cursor": {
          "ref": "d69162f1-cced-4aac-bf6a-56a64d030941",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e7b1a67f-eef8-4b7d-b7f8-cb21d67cd6b1"
        },
        "item": {
          "id": "e303f1b1-e8ee-4ede-88bf-a453453c2e8f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "51d8f3d8-5012-4efd-84ec-c6da26dd4d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5cecc5-12fc-49c3-a9ce-e4fae443dd1e",
        "cursor": {
          "ref": "23abb7f7-84f9-41e6-bd21-d9e6b15c178c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "918f3dda-05be-4953-a6bd-a69541864c43"
        },
        "item": {
          "id": "ba5cecc5-12fc-49c3-a9ce-e4fae443dd1e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "07d431e4-5160-476b-8cee-152314e60d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11af5fe1-a244-4e5f-b517-e7e6a2ad0ff3",
        "cursor": {
          "ref": "0c258a4b-f261-4a90-afbf-06f077d73b5d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b6c36681-998f-4f1c-b3a7-b35233045afc"
        },
        "item": {
          "id": "11af5fe1-a244-4e5f-b517-e7e6a2ad0ff3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e34d71f9-2f10-4efa-b733-cc3e8e4b0c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706f682b-eee9-4b25-bc5e-8f2467145a0d",
        "cursor": {
          "ref": "cbba2ec1-a7da-4f77-88f1-edb6d0a4044e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "21e3a639-f61f-4d57-98e3-7922d9fed9e1"
        },
        "item": {
          "id": "706f682b-eee9-4b25-bc5e-8f2467145a0d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "05d367c6-3128-44f0-93eb-747a390de18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6701098-ecf2-4e3b-80bb-1c1d4185370b",
        "cursor": {
          "ref": "83ea71c5-ca4a-4421-a5db-a60e64f0eb8d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0fff416d-fd09-4db0-b2a3-29b80a32b5e4"
        },
        "item": {
          "id": "c6701098-ecf2-4e3b-80bb-1c1d4185370b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "df4ee888-6b9b-45f9-9f6b-ede1200e41c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e328072a-7a95-49ff-9a81-d72b7ab472e9",
        "cursor": {
          "ref": "20139f8a-8582-434c-a61b-3631e06f9f55",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ff0e0ff3-96f3-42b1-94d3-8f620b7da1c2"
        },
        "item": {
          "id": "e328072a-7a95-49ff-9a81-d72b7ab472e9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "508202b1-029e-474a-a2b2-2747d3e9efe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83a27a0-edb2-4ae2-9210-b68d5f6bd301",
        "cursor": {
          "ref": "7568c29a-a94f-4779-af58-aa824f1e6ed9",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "95516d04-213f-4bc0-a98d-dc3c756c230a"
        },
        "item": {
          "id": "e83a27a0-edb2-4ae2-9210-b68d5f6bd301",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "71fad3dc-e354-4c8e-85ba-1b7327b525ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a026428d-8d5f-4804-a17d-f44e2f9915d5",
        "cursor": {
          "ref": "140a3786-b29d-4f2f-9dcb-ac0d5fcbb975",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "831e495a-ef57-4352-a8ed-3d533410f175"
        },
        "item": {
          "id": "a026428d-8d5f-4804-a17d-f44e2f9915d5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "56b98922-e0a6-4b49-b22e-41c34dc874e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800fd30e-652f-4c32-b7a1-2e6c558a0460",
        "cursor": {
          "ref": "45e27147-3984-4a08-886f-a64c2cff53c2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "80834506-dbfe-4fb3-8fe7-36c2327a621b"
        },
        "item": {
          "id": "800fd30e-652f-4c32-b7a1-2e6c558a0460",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ed3b3750-a486-4175-a5c2-cfbf82dff10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83165a7b-5f61-435d-b032-f054ccc91c2d",
        "cursor": {
          "ref": "59ced69b-e691-4a83-8f9c-a8acaf8a8502",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3219bf08-6769-4f0f-b061-782a0ee6c25a"
        },
        "item": {
          "id": "83165a7b-5f61-435d-b032-f054ccc91c2d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0cfb1d8c-1146-4aa4-a773-7b94f8173ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aabeb62-f0ab-4aef-9eea-b79c168f850f",
        "cursor": {
          "ref": "c5adf1e1-c012-402f-85e7-aca0010b5d6f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c6952b22-be69-483e-97a7-781af5696d39"
        },
        "item": {
          "id": "8aabeb62-f0ab-4aef-9eea-b79c168f850f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "807a20f7-17fe-477a-bc95-8d1e0f9a4fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5332b8-de73-4528-ab5e-1701d41c2eb6",
        "cursor": {
          "ref": "3c078aa0-76ce-4d0f-a818-4739d87902e2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "922f58b7-be0a-4d9f-98b5-9b3e3cc01acd"
        },
        "item": {
          "id": "fc5332b8-de73-4528-ab5e-1701d41c2eb6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "37c2c405-8ba2-46d3-b4d9-1e3c72a002a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5920273a-441a-45c6-860d-b954d1c4e600",
        "cursor": {
          "ref": "6cee07c9-bf67-4420-b682-d13c53d0c4bf",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "99402f20-44de-4ca8-8655-f88b0cb308b7"
        },
        "item": {
          "id": "5920273a-441a-45c6-860d-b954d1c4e600",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f96c7b10-711b-4798-ad1a-2991fbb341fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc970e6f-8b83-43b1-9812-111fb308c523",
        "cursor": {
          "ref": "13ba4921-9d53-4643-a87a-fc10a607fbcd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "61021259-a1c0-4680-a5ab-f6843365e53f"
        },
        "item": {
          "id": "fc970e6f-8b83-43b1-9812-111fb308c523",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "754695ea-b546-45a0-997c-626f2fe3e795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc55c3b0-4e2a-46dc-9e5e-2a13c05c2be1",
        "cursor": {
          "ref": "54e0b4cc-d227-4c66-b628-f391b38a84e7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ea8c38b4-9b72-41b9-b4e6-56828755d15a"
        },
        "item": {
          "id": "fc55c3b0-4e2a-46dc-9e5e-2a13c05c2be1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "62bd3756-775c-4f8f-abcd-b8e715e6a270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfd6713-f882-4928-aa7a-0a956497e1cd",
        "cursor": {
          "ref": "18c0ffa7-d8e8-4143-bc61-975dcec01648",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e279b59-1680-49ac-bc16-451e6141966c"
        },
        "item": {
          "id": "bcfd6713-f882-4928-aa7a-0a956497e1cd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "05b53cf6-65ad-48a0-add7-4378d38cc2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf6f104-2531-4119-b514-ffc9e13baf51",
        "cursor": {
          "ref": "061912b3-54a7-4bd1-8eb4-c3ecb6a56f25",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6cd027c9-c1f3-471c-aa20-2297f08af77d"
        },
        "item": {
          "id": "1bf6f104-2531-4119-b514-ffc9e13baf51",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "67210f35-2b5c-4ec4-9ad2-a9374d9a7e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9e9195-39b8-4b4e-af08-29735ecd7cfa",
        "cursor": {
          "ref": "166f4959-0331-44b9-9b05-7eded31c80dd",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "42f806fd-14b4-40bd-b9d0-dcab265d0739"
        },
        "item": {
          "id": "9c9e9195-39b8-4b4e-af08-29735ecd7cfa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2fcb29c9-4af6-4add-ba39-2ccfec89fa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6258dea5-3757-4f80-97f7-dda84d0f003d",
        "cursor": {
          "ref": "ae54d611-ed79-43c1-845f-86b6657c33ac",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "93f39eb2-f36a-43ee-b876-a3a978f42e9a"
        },
        "item": {
          "id": "6258dea5-3757-4f80-97f7-dda84d0f003d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bf608867-90e1-4047-ab84-c8471aa09f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75934d12-e4b1-416c-a7fd-3bdd8de0b951",
        "cursor": {
          "ref": "c60e0f6a-881a-433c-af22-bcf58c93251e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "10116798-411c-49c3-8f7c-e82b0906fed8"
        },
        "item": {
          "id": "75934d12-e4b1-416c-a7fd-3bdd8de0b951",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35fa9d98-ba7b-445c-b5e9-a0eb4116fbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f304eae-6bc5-43ed-91cc-33e712fcf5cb",
        "cursor": {
          "ref": "2441cc51-5e94-437d-a9e5-941638fec473",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa7effbe-d078-4cbd-853b-148f7d5c2440"
        },
        "item": {
          "id": "9f304eae-6bc5-43ed-91cc-33e712fcf5cb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "def198f4-afbf-4aa7-b0b3-007b342c8391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10da475-e16a-4f90-9b11-ff171d22d62e",
        "cursor": {
          "ref": "22e730b0-c9c8-499e-8787-b36f47b64743",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "256881f7-2d52-489f-bf5e-84e5746f8884"
        },
        "item": {
          "id": "e10da475-e16a-4f90-9b11-ff171d22d62e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d4de4e4c-0bd5-40db-b6a2-748d7a3e1567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc43b8d0-4c8f-4800-9519-7166e4d5c348",
        "cursor": {
          "ref": "8703d796-a25a-4a11-9e87-ba6daf158381",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "50a3db02-2ba7-4a3e-b98b-dd9b7cc1f4f0"
        },
        "item": {
          "id": "bc43b8d0-4c8f-4800-9519-7166e4d5c348",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5b676083-6f52-4608-9324-da52698f7015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0f90d9-e040-43ec-a937-b4473a70ebf0",
        "cursor": {
          "ref": "0f96bc33-66cb-4fee-a249-f155867bac0e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cba240d3-5fdd-4181-bbb7-05f55720fe5b"
        },
        "item": {
          "id": "3b0f90d9-e040-43ec-a937-b4473a70ebf0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e3e8c700-50f7-4ebe-85b6-c83d976ed03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b2fff-0ce0-4472-8c7c-dd4cc78de64d",
        "cursor": {
          "ref": "0f87b4dc-3bf9-42b3-8f0b-3905c7d5b8c3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8e025103-0965-48a8-9ffa-7ebcba57719d"
        },
        "item": {
          "id": "a32b2fff-0ce0-4472-8c7c-dd4cc78de64d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5057cf6b-cc6f-40d9-ba95-d76f9c72fe96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d913c6d0-f0a0-4051-a08e-7afb6788a94e",
        "cursor": {
          "ref": "7e91534b-cdcf-4484-a1f9-5d47a32fca88",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6c8cf8ea-ae6b-4b7d-8798-cdfbe9e1d9c5"
        },
        "item": {
          "id": "d913c6d0-f0a0-4051-a08e-7afb6788a94e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "18b26b5c-f2f2-4d0c-91d4-87ec984d04e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a3eccf-5ae8-44e8-9b58-4267c91c2a4b",
        "cursor": {
          "ref": "0f9590c9-f958-4f97-808f-3949a8f9220a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b8796199-40fd-470d-8a11-f9bb155827ce"
        },
        "item": {
          "id": "d3a3eccf-5ae8-44e8-9b58-4267c91c2a4b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c1c270ff-91a9-448c-8e12-70ecb69dfbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e83c5d-e359-47e5-8bc6-77f7e729f006",
        "cursor": {
          "ref": "af259aec-f8fe-450b-88b7-357b9a0584ae",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ca3bf697-8537-4947-ba99-42255ff4489c"
        },
        "item": {
          "id": "e1e83c5d-e359-47e5-8bc6-77f7e729f006",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c8226ee8-d4ec-4702-9f70-7e5b1760a66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4897e662-9da0-4d84-ad48-9b19db68bcdf",
        "cursor": {
          "ref": "baa97672-1059-4845-9ebd-50af3921fcda",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e0e14bcd-d09d-4bcd-b732-a47d159fbdab"
        },
        "item": {
          "id": "4897e662-9da0-4d84-ad48-9b19db68bcdf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a92b24f2-b982-424d-b561-e9cfafe88e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278c93e-97fb-47fa-83c4-4ee429086260",
        "cursor": {
          "ref": "ae91eb6c-d6a1-4367-ad06-7871200f2499",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "27cdb8dd-c8ca-458a-824a-3b34321b723a"
        },
        "item": {
          "id": "1278c93e-97fb-47fa-83c4-4ee429086260",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4a306968-81cb-4026-aa36-db8bd6bc2ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dd62df-f884-4a54-8c74-598db1ca81a8",
        "cursor": {
          "ref": "1beff68a-ba87-4d41-be44-debd66e13c67",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "84ccb1b7-dec8-444e-810e-bbdd7eea471d"
        },
        "item": {
          "id": "61dd62df-f884-4a54-8c74-598db1ca81a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "72ebb07e-d8fb-4edc-96c6-837599c7d3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382644db-899e-46b8-8ab4-70c04a391814",
        "cursor": {
          "ref": "2b66e89b-1759-4ec5-b312-40ba3d55722d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "81f35cd1-52fa-43b1-b88a-34b8984d68d2"
        },
        "item": {
          "id": "382644db-899e-46b8-8ab4-70c04a391814",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "787f5c1e-28ce-465a-adce-a6f8fb9d7599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf8fe87-3504-4e48-8eb4-dcba9e76d3e2",
        "cursor": {
          "ref": "11e40cf1-f3b3-465f-bed8-ef028292aed0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4cce6181-b906-4acb-82d8-bde6fb6b14cd"
        },
        "item": {
          "id": "6bf8fe87-3504-4e48-8eb4-dcba9e76d3e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "675ed60a-1643-4d28-9674-6e064ce67a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46390784-4ed5-4fe9-8067-102655408fe4",
        "cursor": {
          "ref": "eacfb003-2e2a-491a-9234-f190a85907b7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b9dec7b5-ce37-4300-84da-0764e7dbbf0b"
        },
        "item": {
          "id": "46390784-4ed5-4fe9-8067-102655408fe4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b090ddc8-6251-42ab-9d09-130e4f875618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f32bb13-4d3c-4f84-9863-02de02b32b96",
        "cursor": {
          "ref": "10fcc744-bbda-4593-a088-e1aa7e04250d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d43aae53-2792-4134-a63e-316cd07cf116"
        },
        "item": {
          "id": "0f32bb13-4d3c-4f84-9863-02de02b32b96",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5913f5c8-f0fa-42a1-9616-a11dd30bcdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed6c16e-174d-4ff4-a453-4fa32ef3d71b",
        "cursor": {
          "ref": "8ba26029-f4a5-4ced-a478-df43566fed53",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7ca8ca1-278b-417b-8a95-3dd99688e9f3"
        },
        "item": {
          "id": "fed6c16e-174d-4ff4-a453-4fa32ef3d71b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1caf44a8-ef28-4127-a31d-94bf9ecc19f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a081cfc4-ab05-4b73-8798-148e066778bd",
        "cursor": {
          "ref": "42b5a2c2-9b2b-4aea-a2be-fbf49cd51a65",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6a6ca756-d724-4f0f-872f-4dc4d2e38d0e"
        },
        "item": {
          "id": "a081cfc4-ab05-4b73-8798-148e066778bd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ede83ef-0572-4d81-9eb3-cb44eeda2591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd953392-8b5c-493c-b66e-38b47cc7b793",
        "cursor": {
          "ref": "d9d505de-fc71-4425-9f48-ce2f1a66b01a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "16e9bc51-2d3a-4ac2-9274-9fef8a0c97e3"
        },
        "item": {
          "id": "cd953392-8b5c-493c-b66e-38b47cc7b793",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dd7f734c-a4c5-4c84-b67b-680cf1b2ca07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9f0aa-237c-41dd-b38f-87d32824be63",
        "cursor": {
          "ref": "c9b2c492-1d54-4de0-9d95-b897075dcf2e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3b9863d2-47a2-4a13-b239-eabecd28903f"
        },
        "item": {
          "id": "b9c9f0aa-237c-41dd-b38f-87d32824be63",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6e536ece-6b2b-4750-9856-be907a4e57bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009d488d-80f9-4a1b-844b-3efdd1922251",
        "cursor": {
          "ref": "5ce8bda5-e912-4a3e-bde0-13a0c5660f05",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b65e2455-b7f8-4386-abb6-ebac86c0f30b"
        },
        "item": {
          "id": "009d488d-80f9-4a1b-844b-3efdd1922251",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e212747a-f834-400b-b6cb-fd74864f635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aa31ee-d3f9-4b2a-8af5-87bd54fde1cd",
        "cursor": {
          "ref": "00ad9ae1-a391-46e4-bbfc-51758f709c45",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "757f36eb-24a4-4449-be3b-7eed2e890edf"
        },
        "item": {
          "id": "e3aa31ee-d3f9-4b2a-8af5-87bd54fde1cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2f564440-31fa-48a3-b4c3-8c25dbc3ac66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3101d02-839a-417a-8a0c-484b5790017d",
        "cursor": {
          "ref": "b03c3a44-46e8-4f97-8bca-01d5c13cf0c1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d263a005-6364-4743-9e3d-c925d0f2af57"
        },
        "item": {
          "id": "b3101d02-839a-417a-8a0c-484b5790017d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b60c37a1-f6f7-48f0-b555-ec1f7fd28aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae818961-5e75-4124-919c-60241c593c2a",
        "cursor": {
          "ref": "dcaf42ce-59e0-417f-bb9a-7b850114336c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "971155f3-0f0a-496a-bec6-4d32d652bc75"
        },
        "item": {
          "id": "ae818961-5e75-4124-919c-60241c593c2a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a6402e93-0594-48b2-8966-a8ad179a4005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efdbb52-cac4-4d2c-ae3f-860a4c165b5f",
        "cursor": {
          "ref": "62859bbe-b5af-45f2-bbca-d56930018e34",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b249442f-638c-413f-95b1-2dfa71a426a1"
        },
        "item": {
          "id": "6efdbb52-cac4-4d2c-ae3f-860a4c165b5f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d2bbda75-9eef-43a7-ad48-68fede69c05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a72acc-2e69-42d1-8a50-6fadc7346d0a",
        "cursor": {
          "ref": "9d8c8a0a-9264-4431-b20b-b3cca42d717f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41d504e5-953b-4a7c-a101-9dac82d2e27e"
        },
        "item": {
          "id": "e5a72acc-2e69-42d1-8a50-6fadc7346d0a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4cf83f21-f018-44b8-8e0e-936db46b7ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150949ce-2312-4db3-9c52-a60ad494ff67",
        "cursor": {
          "ref": "6c5cc7e7-65ec-480e-9072-17f1b2ce541d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5378cea0-23ea-48c2-8c38-3eaea7b91d69"
        },
        "item": {
          "id": "150949ce-2312-4db3-9c52-a60ad494ff67",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e6868ce1-c7ab-4c3b-a472-c94ea435b2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffa7744-f57e-4856-ae65-30b93bbd49bf",
        "cursor": {
          "ref": "37cc1dba-41c4-40c1-9bc6-abcdcd1cc7dd",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d1cb9a03-24ce-4ff6-88c6-f9886d47fbe0"
        },
        "item": {
          "id": "3ffa7744-f57e-4856-ae65-30b93bbd49bf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9aacdfde-0664-4d60-9426-079b3d72ca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b90e89-1954-4bfa-b51f-d07a2ced6c50",
        "cursor": {
          "ref": "76b6278d-2d9b-4aaf-9c73-cf1363486868",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6fe4f5a8-2d8f-4bc5-a2e8-ead22865d688"
        },
        "item": {
          "id": "27b90e89-1954-4bfa-b51f-d07a2ced6c50",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "98a91b05-90b6-44a1-bee4-f487031e2be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1c548a-664c-4f70-9137-2c210ae40ddb",
        "cursor": {
          "ref": "88d43d6a-e639-4c2c-8d38-b09b3e362191",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4f7e5f4b-217b-4d97-9db3-d6f32887f5b6"
        },
        "item": {
          "id": "7e1c548a-664c-4f70-9137-2c210ae40ddb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2d622701-c0ab-46e1-9391-666a0f74d82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ad2bc-f09f-4d2d-9349-fbd214b66af5",
        "cursor": {
          "ref": "b4138bc3-7671-4849-a74b-85a3fbaa6762",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dacfa861-4128-4e76-8d6e-d2662a382f03"
        },
        "item": {
          "id": "2c5ad2bc-f09f-4d2d-9349-fbd214b66af5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2b65e1a6-6551-47f9-87d2-369b11eb984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21863452-b230-4a8c-b9e8-e11888d3d7e6",
        "cursor": {
          "ref": "f3728b51-4994-469b-b81f-24205249dbdb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cd25dde3-a2c4-4b76-9829-5ee6c1cdb491"
        },
        "item": {
          "id": "21863452-b230-4a8c-b9e8-e11888d3d7e6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2214c58b-ab6a-45dd-85a6-40e42eb089e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cace9cd-5ccf-4fbb-be64-f4b6d86a82e7",
        "cursor": {
          "ref": "b67b1d7a-ccb8-4a9a-b7f1-76f64fb87494",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1973a09-c890-4ff9-9c40-3d834eac7dc9"
        },
        "item": {
          "id": "6cace9cd-5ccf-4fbb-be64-f4b6d86a82e7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dbee4e84-6ffb-4616-873e-948f33aec4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05adbae1-a3ba-4009-bd63-e1679131ddf3",
        "cursor": {
          "ref": "7c21c403-7aea-4403-847f-dafdc351b829",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0360be50-dad4-4fac-8856-f16ace0f8c73"
        },
        "item": {
          "id": "05adbae1-a3ba-4009-bd63-e1679131ddf3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "01210a9a-814f-4457-8b26-b8ce248253e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9cfe3f-5ce0-4a87-a1a0-431544724442",
        "cursor": {
          "ref": "a85ded36-02b4-4965-9373-974b2e07c0d3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dfad8785-5c90-4bda-9b5e-084db93442f5"
        },
        "item": {
          "id": "5d9cfe3f-5ce0-4a87-a1a0-431544724442",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7ddedb80-102b-47be-826f-e085f6caf51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bee370-8b44-4997-9cf5-2ffce8628e2b",
        "cursor": {
          "ref": "e6ed268e-12f3-4234-96ef-024a0b4a52d1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cf697621-a41f-49a1-a4ac-e50b004cd714"
        },
        "item": {
          "id": "97bee370-8b44-4997-9cf5-2ffce8628e2b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bf10bc2f-bce9-433f-91d2-93954f555500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c19e82f-2aa6-4b1a-b1a0-931f7797246b",
        "cursor": {
          "ref": "f778b2cd-fb2e-41e8-b483-6b293aa7b9ba",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d361e486-0842-4093-b614-4998dc217186"
        },
        "item": {
          "id": "0c19e82f-2aa6-4b1a-b1a0-931f7797246b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "40de2e4b-20f8-433a-98eb-e6e0ccd325a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849e80b3-bb0c-40a6-8f54-81c8505ef7a5",
        "cursor": {
          "ref": "3fb5d9d9-ed06-4ca9-8082-2a7772dcf0fd",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a100648e-581f-4477-86ba-ef51544cf3ac"
        },
        "item": {
          "id": "849e80b3-bb0c-40a6-8f54-81c8505ef7a5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fe232e8d-a387-4bb2-ad80-99ee99b23e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600fb56c-65d4-4ebc-8ae4-de583b7f0c7b",
        "cursor": {
          "ref": "48acb115-26cd-4cd9-99a0-fe0b5c577b57",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f33fe0a4-6395-45f9-8395-042c6bc9fb66"
        },
        "item": {
          "id": "600fb56c-65d4-4ebc-8ae4-de583b7f0c7b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "96016e1f-1998-4d90-ae41-01974175a520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683fa0e-b66b-4c13-a3fa-6eca80339769",
        "cursor": {
          "ref": "a39f6b3b-27a9-4a8c-b955-756c401e9f2a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5672bf0-0247-4374-90f5-ddb1fd536047"
        },
        "item": {
          "id": "9683fa0e-b66b-4c13-a3fa-6eca80339769",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "26d0706b-3069-4518-b060-9a407185ccdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5395044a-a88d-4fb9-aa0b-cdb224afa433",
        "cursor": {
          "ref": "0737332c-e460-4f96-ac8a-3d679172146f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "24666017-5284-4d7a-b579-7f82e3a01eb5"
        },
        "item": {
          "id": "5395044a-a88d-4fb9-aa0b-cdb224afa433",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "33409d8a-a5b8-4b4f-8098-1837aa54e141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27d4c60-94ec-4a8e-9b3e-121d9c84c0a5",
        "cursor": {
          "ref": "83d9ef61-5f20-48b1-aa20-a3b600380e3e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ff34fec1-dd43-4eba-b7f9-504c976bd5c0"
        },
        "item": {
          "id": "d27d4c60-94ec-4a8e-9b3e-121d9c84c0a5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "41f2947d-8b52-4947-abfc-1aad3c10f94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3dc7f0-ee87-4941-ac4e-01493ac80836",
        "cursor": {
          "ref": "2f7ed4e7-fafa-427c-89fc-fd8c4448bcc1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "96f6406a-f139-4bd0-a79a-b6aa3d78bc45"
        },
        "item": {
          "id": "4b3dc7f0-ee87-4941-ac4e-01493ac80836",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d7fca690-2b76-4ba3-8d46-5aa4f7b4ebd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f6fd41-95be-4074-a2ac-cfbdcc3ef3f8",
        "cursor": {
          "ref": "40b5adde-7eea-41ec-a458-8fa1abfef2ea",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a91fe568-7cf8-4ca0-b1b7-a20e16fcd91d"
        },
        "item": {
          "id": "25f6fd41-95be-4074-a2ac-cfbdcc3ef3f8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d26f2a6-4240-4e49-b78e-b7f625b84508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2d36ac-cbe0-400c-9ae9-9900e1a3be83",
        "cursor": {
          "ref": "984ad370-d510-4dfb-848d-13088d9cdb03",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ed0e8827-4b21-4b69-a061-4f39a3b1b237"
        },
        "item": {
          "id": "1f2d36ac-cbe0-400c-9ae9-9900e1a3be83",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3ff73136-9b4a-444c-8d57-c2c3f59c2e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d417c023-0afd-407e-95a3-a5c90f3ebc9a",
        "cursor": {
          "ref": "b5b070e3-a64f-423d-bbcc-69c0879b2171",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d391c589-a467-4550-8592-d5fd36acfb8d"
        },
        "item": {
          "id": "d417c023-0afd-407e-95a3-a5c90f3ebc9a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "db535ee9-b67e-403a-8e4d-eed4ca968145",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b1640a-66ef-4da9-94ae-d90fcd05bea6",
        "cursor": {
          "ref": "d5824f1f-f669-4948-a069-0fc7f2b1c25d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fc5cda49-7f12-4316-a795-a280db045d2a"
        },
        "item": {
          "id": "f9b1640a-66ef-4da9-94ae-d90fcd05bea6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ba2fe396-5481-498a-8a38-65276da1ff57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9c59d157-22d1-49d8-8e9c-20545282c6d2",
        "cursor": {
          "ref": "d3c3fe09-d8a1-4aff-8255-88ba6ce40e2e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2a2809b4-968d-46a5-8dea-1f1bd38e25ab"
        },
        "item": {
          "id": "9c59d157-22d1-49d8-8e9c-20545282c6d2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ac289c9b-3484-49de-8b9b-ed06ab8dace7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "91b2f5cf-4655-4687-bc37-1fbbd8603451",
        "cursor": {
          "ref": "985a942c-d88d-4a4b-9aee-07d39c5cc761",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "be140260-e551-4014-8d38-f5bb2b325242"
        },
        "item": {
          "id": "91b2f5cf-4655-4687-bc37-1fbbd8603451",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8182b889-2634-4401-aa2d-3e05ae314709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "84981434-a68e-4460-b31c-d4f7b3fbc122",
        "cursor": {
          "ref": "1557de18-9f4f-456d-8cdc-0499fd521719",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e6eb4446-3b3c-4ee6-8d55-fe1dde4da052"
        },
        "item": {
          "id": "84981434-a68e-4460-b31c-d4f7b3fbc122",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "057ee0ca-4763-4b1e-a5e4-1a8d3b29e958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8fe9e6b2-7ba7-4439-8d2f-86633e6b680d",
        "cursor": {
          "ref": "9152d4b1-5427-47ff-8514-30295a809f8d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a71d2fc8-661f-4e77-b6c8-3128633c2820"
        },
        "item": {
          "id": "8fe9e6b2-7ba7-4439-8d2f-86633e6b680d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e2b5610c-41dc-4ee7-ad1a-27ba567d2f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5d1552de-7097-47ea-85fa-52a439454d8e",
        "cursor": {
          "ref": "2cbfd111-74fc-4ce8-b905-47b0970bc8b8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "39b9ea7f-4160-4b63-ac52-f2d2facc4d66"
        },
        "item": {
          "id": "5d1552de-7097-47ea-85fa-52a439454d8e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "52b38059-e5aa-4085-a528-ebdf30bb6fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fbc95016-07c9-4e7c-b5e8-afbf70c933fc",
        "cursor": {
          "ref": "2d96223a-0a95-4922-833e-59a8b6fd97ba",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "775bca05-6f4e-411b-ab1f-269f3f177657"
        },
        "item": {
          "id": "fbc95016-07c9-4e7c-b5e8-afbf70c933fc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e6e727fe-52ed-4d8e-83fb-7e0df6dde7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cea3e94e-8501-4dbd-898a-4ca3b0895c14",
        "cursor": {
          "ref": "c43b67b4-dd30-4d50-8e0f-af5c6b794cc4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "58810ba5-e17e-4206-b3ed-d1779e6777e7"
        },
        "item": {
          "id": "cea3e94e-8501-4dbd-898a-4ca3b0895c14",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8b2248b6-b184-4b7c-84c8-5400d1294735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cf6a54-9d76-409d-a93c-e1765214a23e",
        "cursor": {
          "ref": "d68f988d-6f21-4329-a720-99eed2dbb402",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a0cfbb2a-79c4-49cc-899e-3f9f39b290f8"
        },
        "item": {
          "id": "e4cf6a54-9d76-409d-a93c-e1765214a23e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7a16af4b-bf41-4ecd-8811-54bce1db5a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d573a496-ebd5-4dab-9b75-2ea95f4ce048",
        "cursor": {
          "ref": "aabdee01-e8d0-4485-bb9a-fc433263fc7e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2abeb25d-c581-4cc2-b265-ec09ebcfcbfe"
        },
        "item": {
          "id": "d573a496-ebd5-4dab-9b75-2ea95f4ce048",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b2410908-0fdd-44a3-ba07-c50f3498144c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20d752-2d0b-4e40-bb54-3aeee3ac3da1",
        "cursor": {
          "ref": "928e28a6-3e0f-49d7-a4c7-0016b8579da8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "33fea707-b9f1-479c-8d41-479f3097b529"
        },
        "item": {
          "id": "8d20d752-2d0b-4e40-bb54-3aeee3ac3da1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "06bc641a-9b83-4f37-b55d-409ff3306a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46decfc2-68a1-4e94-a9c0-06766834e793",
        "cursor": {
          "ref": "50e5225d-73e6-4f20-ae30-3174e8752a2a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7abb3bae-bc97-48b3-9c81-e83d8f16bd28"
        },
        "item": {
          "id": "46decfc2-68a1-4e94-a9c0-06766834e793",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5501b3e9-278e-4f20-89cb-7acf60f2a12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5412dfc4-4c0d-4a57-b35a-f5c72286c5b6",
        "cursor": {
          "ref": "891be307-491a-4ca2-8e6b-dcf59dbd10c0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "88913ef9-c87f-4f5a-a884-f373a69a466d"
        },
        "item": {
          "id": "5412dfc4-4c0d-4a57-b35a-f5c72286c5b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "848b6a4d-0995-4a41-a897-3723454c69e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ce658e-b858-42d7-aa0d-376d8384d553",
        "cursor": {
          "ref": "9d76ae15-58e1-49ee-989f-1e78bda5fb92",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cd8f5ff5-b36c-44da-acf8-64f8fd186826"
        },
        "item": {
          "id": "b9ce658e-b858-42d7-aa0d-376d8384d553",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4da2a397-ba9a-48cd-89ba-84da681199ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41abf42f-250b-4f56-97e8-24f82b19b46e",
        "cursor": {
          "ref": "8039a635-4374-4cb2-9be8-47473286f2c5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ae92a872-9e57-4fdc-b1a5-432a490324ac"
        },
        "item": {
          "id": "41abf42f-250b-4f56-97e8-24f82b19b46e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "63e44215-83c8-4aae-bd2e-1a82923b18b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52acea1b-1535-458f-9592-cafe3d2c42fa",
        "cursor": {
          "ref": "6d56b484-2fc6-4dde-9532-57b0d2846016",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c5683b33-097b-42c9-aa89-599aaed7aa9c"
        },
        "item": {
          "id": "52acea1b-1535-458f-9592-cafe3d2c42fa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae854b5a-bb0b-4841-83f8-79b0207ab7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f9a4ec-53f5-46f1-9d02-e33fc2e581a9",
        "cursor": {
          "ref": "a99ab624-8aae-4bb0-89aa-eba8fdc35c4f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "94a3c9b1-da21-463d-8685-45d54ff5e9ee"
        },
        "item": {
          "id": "67f9a4ec-53f5-46f1-9d02-e33fc2e581a9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "83148023-9378-4450-8b79-a5bab339eaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a09a3b8-8983-4e2a-84e2-c738f2ce25d9",
        "cursor": {
          "ref": "3dac6ef5-1e5d-4ab7-9ebc-a3fb5d5eba8a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ca618702-d51c-4c84-af3a-16f998b8110f"
        },
        "item": {
          "id": "9a09a3b8-8983-4e2a-84e2-c738f2ce25d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3fa05327-c3a5-4b96-bc65-67cdac9651e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36d4621-c330-4143-b4ce-f0bd6ab9d802",
        "cursor": {
          "ref": "f51ccfeb-a5f4-4845-a4de-54ba63b0dcc3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c6157149-402f-418c-a834-d9e0a3853db6"
        },
        "item": {
          "id": "a36d4621-c330-4143-b4ce-f0bd6ab9d802",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ff9219f-320a-4282-b9fa-186e9819753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ed8f21-19c9-4a18-be44-6cc3d22224df",
        "cursor": {
          "ref": "e843ff3d-a265-43b8-b08f-4f885baef1ab",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "301b0a40-c29a-498b-bd86-d5ce8a9a77e5"
        },
        "item": {
          "id": "19ed8f21-19c9-4a18-be44-6cc3d22224df",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fad65d53-59f8-4d51-b148-cd07deecb071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df268480-81c2-4ed0-82ff-6dda095740b4",
        "cursor": {
          "ref": "ce0c82df-c5a4-4881-82f5-76786382ed63",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d60eadbe-85b9-4e70-a138-316e9a63671c"
        },
        "item": {
          "id": "df268480-81c2-4ed0-82ff-6dda095740b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3cf719a9-c9c5-4ebf-8844-20a3a9f23bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248c11bc-402f-4965-a489-dc20c25d6aab",
        "cursor": {
          "ref": "c78a1620-6231-4b57-a79e-dc49f25ead56",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "30759ce1-4ec8-4903-a499-43b94ef9fff7"
        },
        "item": {
          "id": "248c11bc-402f-4965-a489-dc20c25d6aab",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e38cc569-64e2-4961-8177-175c281f77c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e9ef79-9b6d-4596-a3bc-7f58c9750313",
        "cursor": {
          "ref": "683ee3a8-f6aa-44ce-a93f-76aeed3b8dd0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "50312a65-36e0-4f6e-9901-9cb02c5f39b2"
        },
        "item": {
          "id": "e0e9ef79-9b6d-4596-a3bc-7f58c9750313",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e2e10873-580b-42a4-b892-aefc556541ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427daee8-61aa-45f1-9cab-f1d6fbec6afb",
        "cursor": {
          "ref": "b4b49776-d86e-47fd-99bf-8858913c56d2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1395599b-15cf-4a7e-ad02-299c4929a1f8"
        },
        "item": {
          "id": "427daee8-61aa-45f1-9cab-f1d6fbec6afb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1695b8c9-7824-4dc4-9a68-2a59deea3e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2321e3e1-fabb-4b67-8919-2ea55555785c",
        "cursor": {
          "ref": "f944e484-b25a-41f5-9b15-c37c7fa37ae6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "36ab12bc-c7fa-429e-ab56-8e2de7573435"
        },
        "item": {
          "id": "2321e3e1-fabb-4b67-8919-2ea55555785c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ae53003b-2561-4684-86ba-86d7f9b13fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46aafca-df23-404e-93b0-3ef66d183564",
        "cursor": {
          "ref": "690fa25d-b603-4c6e-b08b-4a2cdd28c495",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ceefe9d6-833c-41b8-b171-56734cf21a55"
        },
        "item": {
          "id": "f46aafca-df23-404e-93b0-3ef66d183564",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b57b3775-952b-4a02-88e6-609b8214fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a123895-d779-4793-86b0-e73dc639bd44",
        "cursor": {
          "ref": "010e3405-07a6-4184-9984-4afd03b470b0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f95e8310-ef23-4ee4-9239-7d04f9204eae"
        },
        "item": {
          "id": "6a123895-d779-4793-86b0-e73dc639bd44",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4d584c92-91bf-4e65-bb98-85589434e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe915d1-e979-49e4-a49f-ce42cab76037",
        "cursor": {
          "ref": "584c6a5d-19f7-4943-a7b4-39efac19943a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "975345e8-d188-4e70-8beb-314af8ba9b8f"
        },
        "item": {
          "id": "dbe915d1-e979-49e4-a49f-ce42cab76037",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4540dee6-0dc1-414c-859d-22dec28c3ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016fd355-bd93-4a8e-a451-a5f4bee1c12f",
        "cursor": {
          "ref": "30bd4765-ee82-4c88-82a1-14f1e4683e84",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1fd3b61a-4092-4a51-b852-d021df203f5a"
        },
        "item": {
          "id": "016fd355-bd93-4a8e-a451-a5f4bee1c12f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "388c05cd-c564-4322-996a-1ec7d6c96a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e12ec3-299d-4c76-8976-e00c25fc22bd",
        "cursor": {
          "ref": "59bd1ba2-d83f-4d80-ae48-64dab307c5dd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "48ee979f-704c-42ca-a9d4-50d252618207"
        },
        "item": {
          "id": "11e12ec3-299d-4c76-8976-e00c25fc22bd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4a6b8651-6b7b-4b77-85e0-190778454292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8132e1-1f9a-4e8a-b9fa-8a2271026a24",
        "cursor": {
          "ref": "5aaf9466-9aaf-4fdf-a836-7f129d83d18e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aa2e41e5-8883-4713-bd6e-94376e15055e"
        },
        "item": {
          "id": "9c8132e1-1f9a-4e8a-b9fa-8a2271026a24",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78d504a0-4614-4871-9ade-2bc18db72fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f83a423-6fb3-4266-87bd-5c05db0d6905",
        "cursor": {
          "ref": "8ddb6c84-eb5b-417b-a6f2-d970661e87b4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f9649a56-49f8-4fae-97f3-6c023556dc6d"
        },
        "item": {
          "id": "8f83a423-6fb3-4266-87bd-5c05db0d6905",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "69a2b739-31ea-4606-9fbf-73b5fa5454c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f1d57c-14be-43a7-8f86-a61d81fdf2f3",
        "cursor": {
          "ref": "b8deca41-8f5e-4113-9fe8-5af250888ab0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3732abb1-51af-47f5-bdf3-511499e666e3"
        },
        "item": {
          "id": "63f1d57c-14be-43a7-8f86-a61d81fdf2f3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d46d12b-3906-468f-a5d2-80e5dca17cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0b927d-a103-4ab8-8c74-3cd00a8cc49e",
        "cursor": {
          "ref": "c0bdfaaf-d664-4f71-88d7-ae2cba8c0890",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a82d21fe-6efe-4ff6-972d-0705a857cb96"
        },
        "item": {
          "id": "9e0b927d-a103-4ab8-8c74-3cd00a8cc49e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "53a69335-9a86-4bdb-97b0-f9f18686562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8f1256-70f2-4222-92ef-87b090894b3a",
        "cursor": {
          "ref": "dfedb06d-2dee-4099-905e-3eb29aa40b77",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3fe9f27c-49f4-4e43-9fea-9de6442b76fb"
        },
        "item": {
          "id": "8b8f1256-70f2-4222-92ef-87b090894b3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d58d89c-01e1-4bd0-beb5-211d96650af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bdc1b4-476a-43eb-8cc8-3f2ffaa0f051",
        "cursor": {
          "ref": "61b209a0-7a53-4ff6-943c-39c22a21f199",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e1f4e2c2-928b-4df4-9461-bdf9e9e76710"
        },
        "item": {
          "id": "30bdc1b4-476a-43eb-8cc8-3f2ffaa0f051",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a75ab1c5-2646-43cf-9be1-35643a2c82c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6deab1-e10f-4732-94c2-21d5138dadaf",
        "cursor": {
          "ref": "8cf2503a-49aa-4a19-9a6a-9bc1ce8cb793",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e67460d1-2324-4946-8956-2f74f6843ee5"
        },
        "item": {
          "id": "bf6deab1-e10f-4732-94c2-21d5138dadaf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "70a18d2e-efbd-4d6f-9dd8-ad9172557a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2745fec9-f155-4599-a069-e53dcbb97b68",
        "cursor": {
          "ref": "171c10a6-d669-4666-859c-b3480947a3c1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "858df8cc-5b48-4652-a860-76abc02afee5"
        },
        "item": {
          "id": "2745fec9-f155-4599-a069-e53dcbb97b68",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5221feb0-db97-443f-9420-218e913d4760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4027e44a-e929-4fa6-a40d-364e58dee291",
        "cursor": {
          "ref": "8815962b-1cad-4838-a4b1-223b4d0d16f1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ee8cef80-9061-49de-ab23-a95c64864f4e"
        },
        "item": {
          "id": "4027e44a-e929-4fa6-a40d-364e58dee291",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9e397066-6871-4001-8776-393593051979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1348f68-3cd6-4b37-b9c0-9d2ffaef0df9",
        "cursor": {
          "ref": "e204406e-fa10-4f31-89f3-1ec4df054bf1",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a92fa6ab-f3af-4c58-9d09-0bf3cae08189"
        },
        "item": {
          "id": "f1348f68-3cd6-4b37-b9c0-9d2ffaef0df9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cdad7200-13a7-4d87-bdf6-79ca6a0c54d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13841b24-a1d8-4c56-86f2-b42578d5d188",
        "cursor": {
          "ref": "93d8faac-45cf-461d-a466-bf017ec69bff",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8abf8ac3-4e5b-4f13-8177-943e354bb37b"
        },
        "item": {
          "id": "13841b24-a1d8-4c56-86f2-b42578d5d188",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e39f0106-3f4e-4c3c-a641-7ebc75b79b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347c7e2a-48b2-4a26-8af6-acf8daea4948",
        "cursor": {
          "ref": "028825cc-2aa3-4334-83c9-d16379573be1",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e515ecc0-aa02-40b1-9e67-1646c6019d24"
        },
        "item": {
          "id": "347c7e2a-48b2-4a26-8af6-acf8daea4948",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef234041-1c76-49e9-a8a7-e754ca646c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18946b5-35a7-4bff-8774-0955c0d101f1",
        "cursor": {
          "ref": "cc347ad0-75be-496d-9e21-c41c977fa595",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "916e650e-7388-4198-a12b-e8ea82ecdd6e"
        },
        "item": {
          "id": "c18946b5-35a7-4bff-8774-0955c0d101f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "54f3ba11-589f-40b6-966f-4884af6d111f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ce02a0-0ec3-4fc8-aeb8-ff099fe8ed8a",
        "cursor": {
          "ref": "ccf98d73-e8a8-4cef-9564-c55f0b2cc265",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "418eed08-35d4-47be-9057-dcb4408b2b7c"
        },
        "item": {
          "id": "01ce02a0-0ec3-4fc8-aeb8-ff099fe8ed8a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d530db7-6df4-49ef-a4ad-b66c944f6cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3482a6-e46b-4bd2-989f-f9b7857518dc",
        "cursor": {
          "ref": "c62015c8-ddca-41e4-8bee-e78a08cb1e8a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f4a3780d-d738-449d-b53d-e64479bcf8a9"
        },
        "item": {
          "id": "1a3482a6-e46b-4bd2-989f-f9b7857518dc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8fb1341e-2c59-4400-8bf4-9f28e91a4154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caed0c0e-021c-41e8-b244-94656c3359a2",
        "cursor": {
          "ref": "4b92c20f-dc20-43ea-bd13-392a6f8c678e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d0e6cd97-3b47-4170-8db4-18942f41dfdf"
        },
        "item": {
          "id": "caed0c0e-021c-41e8-b244-94656c3359a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7dab53f9-dbc5-4124-bb41-150d758efa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9783438-275b-4c0b-88b9-54b193456d62",
        "cursor": {
          "ref": "ed262a0d-6683-4df4-a035-0d926f76ca22",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8347ec3c-0f3f-46fc-b954-05a8bdad85d2"
        },
        "item": {
          "id": "b9783438-275b-4c0b-88b9-54b193456d62",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da92fad9-5db0-47d6-860d-bc8c1240ebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669a78b3-0165-44d0-83e3-2cbb006c6f42",
        "cursor": {
          "ref": "0f32bba9-d6ff-44a7-b3ee-ca2c39d87b83",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0a901f4d-844f-4b08-ab03-5e22cfb2201d"
        },
        "item": {
          "id": "669a78b3-0165-44d0-83e3-2cbb006c6f42",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "73eaa738-cfa6-4dcd-b6a0-04b9c313a9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db04daf-17e3-4234-aa0d-5fc5596ad38f",
        "cursor": {
          "ref": "6540acc9-8d07-473f-b977-d8bf86d3c341",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "753d5dc2-da65-4691-8466-b97593027e73"
        },
        "item": {
          "id": "9db04daf-17e3-4234-aa0d-5fc5596ad38f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b04bbe56-d05e-4f48-8d8b-a1fded02679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91afed2-45c7-44b1-8e4c-387d0743c60f",
        "cursor": {
          "ref": "28d4f0d1-d96c-4f0d-b57e-ec6fbaf3a443",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "298be399-1ed6-4e67-a8fb-9432d4748977"
        },
        "item": {
          "id": "c91afed2-45c7-44b1-8e4c-387d0743c60f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2beb077-e8c8-4ec3-a15b-13f79e8f036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37048401-b1ee-4f3d-8a43-798a6f694075",
        "cursor": {
          "ref": "860f9789-f71b-4fa1-ae6a-76a185a5f671",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "54fd7cc9-e6ce-49dc-ac37-f2f78d91112a"
        },
        "item": {
          "id": "37048401-b1ee-4f3d-8a43-798a6f694075",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d8968b18-754a-4e74-bf2b-ba148175fe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7909737c-56eb-44da-bd6f-06907010dfa2",
        "cursor": {
          "ref": "eccf50db-a356-4254-8fcc-3b0a726e1c40",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "30c4524e-c69f-4fbc-90a9-649d4c59099e"
        },
        "item": {
          "id": "7909737c-56eb-44da-bd6f-06907010dfa2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c9ffe29-88ce-4f2b-bea2-4e6b8bd43d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830858d5-b361-4381-b0d5-c090a999e640",
        "cursor": {
          "ref": "a5aa6974-69d6-42a2-91ad-81b970511430",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eef5821c-b530-4ed0-87c6-e568f83697a7"
        },
        "item": {
          "id": "830858d5-b361-4381-b0d5-c090a999e640",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3f6b3134-323e-40b7-be85-5ff5055a0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f6b388-b283-443f-b493-138199502da0",
        "cursor": {
          "ref": "03d197ea-9283-430c-ae22-f91d163b8d8f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a1111d6-ca2b-493f-beb1-0fff58539c4b"
        },
        "item": {
          "id": "a0f6b388-b283-443f-b493-138199502da0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "30d2a461-c09a-48eb-805c-2e997cfeb4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4994aaf1-3102-4a48-a6e4-b5c0635ce76f",
        "cursor": {
          "ref": "1b9bde2c-8f32-4eeb-a467-b586e8c76a16",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "71f31fc5-b4d0-417d-b1cf-aba02ae928e0"
        },
        "item": {
          "id": "4994aaf1-3102-4a48-a6e4-b5c0635ce76f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d538f952-74a2-408b-bf2e-b7c426010519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea543739-d181-4c76-865b-ec7f3001fa52",
        "cursor": {
          "ref": "a4ef9956-73f6-4e56-b676-259212f8b777",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c7ff0b06-b8eb-45e1-897e-521ce44834b9"
        },
        "item": {
          "id": "ea543739-d181-4c76-865b-ec7f3001fa52",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d01ffb1d-eb63-4a2a-a746-9d83eb477d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6247f78a-2a2a-447d-8729-1beb449fcf70",
        "cursor": {
          "ref": "ebd31937-9958-4495-ab47-e698f923b182",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e037c98a-1758-49c1-91a5-44b61e794638"
        },
        "item": {
          "id": "6247f78a-2a2a-447d-8729-1beb449fcf70",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8c9e5016-6c5e-4ab9-80d6-4e70e5373334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8522cb17-e5e2-4bdd-93ea-2a67bbd97a0d",
        "cursor": {
          "ref": "7f0e362c-04d5-46aa-9b1f-6597b41b85c3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6444f535-eb55-4425-9ea8-7e0e1d3f7727"
        },
        "item": {
          "id": "8522cb17-e5e2-4bdd-93ea-2a67bbd97a0d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "483c3a38-50a9-4418-b8a2-751dae28dba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecf3ad6-d1c0-4e3c-a32a-3dde414f9ca4",
        "cursor": {
          "ref": "705ba1c0-5df1-407d-a2bf-2c70f6a06983",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18cd7d53-e760-4847-aa72-f0ff1f484e1f"
        },
        "item": {
          "id": "eecf3ad6-d1c0-4e3c-a32a-3dde414f9ca4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "390d495c-74af-4c95-9838-60b56609c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b22f2-55d7-41aa-be89-be75bdd71d84",
        "cursor": {
          "ref": "c18b7f1f-ecc2-4399-94df-3e4a09d874f6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3fa48d5f-d244-4ba7-bdad-a9929efbc1c1"
        },
        "item": {
          "id": "926b22f2-55d7-41aa-be89-be75bdd71d84",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5a46681-eb5b-48e9-9ad5-0a01c0d48244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a467437-7c3c-46a9-bd23-4261feddbc77",
        "cursor": {
          "ref": "3c97ee8a-9187-4158-aa7e-9775c84ce3a4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ad5f5238-5454-4d13-a98a-7e15b7ef02c9"
        },
        "item": {
          "id": "3a467437-7c3c-46a9-bd23-4261feddbc77",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c5a43fd4-0dc1-4979-a3f0-c59961f052bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5511f4-1a88-421a-8729-c7c5df7e90cf",
        "cursor": {
          "ref": "c6fef49f-a0cb-4f10-8675-e1b8f5e3204b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3b8f5ed3-e41d-4d77-abd9-a44402e90106"
        },
        "item": {
          "id": "fe5511f4-1a88-421a-8729-c7c5df7e90cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "043a27c4-a54b-4134-b12a-1300060096de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112609d5-7ccb-4b84-92e1-e3f21fa8bae9",
        "cursor": {
          "ref": "b61be51a-8e75-469e-b9a8-a0d4702daae6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "424bd1df-4172-4dc6-8fb0-3fc462b48dc1"
        },
        "item": {
          "id": "112609d5-7ccb-4b84-92e1-e3f21fa8bae9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "49f7a402-581d-4fe8-9f7c-65513dd6fb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680f8f41-06c5-4e40-98eb-0f9938d5befc",
        "cursor": {
          "ref": "b381ce88-58b4-473f-9828-07c2419d0d33",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "30226563-1e65-4859-b1eb-c682039a2d49"
        },
        "item": {
          "id": "680f8f41-06c5-4e40-98eb-0f9938d5befc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f4d312f7-8400-448d-be64-3b619d4e332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6802c3f9-4bf0-4806-a170-c2d954e533b9",
        "cursor": {
          "ref": "63dee1e8-a492-4dfe-a36b-bbc6ff89f650",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0f3d0f3f-fe7b-458c-a972-b35c4d1f42ba"
        },
        "item": {
          "id": "6802c3f9-4bf0-4806-a170-c2d954e533b9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d4747a66-3fbc-4996-b3c6-a07a189fd95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43571c1-7962-4adc-9288-529c7287715b",
        "cursor": {
          "ref": "99394487-313d-4e77-8474-00c1c3362235",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9dde9714-ac02-4b85-9592-3c95fe4db9a7"
        },
        "item": {
          "id": "d43571c1-7962-4adc-9288-529c7287715b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a9e63fd5-407b-4df8-abf9-68e5e50b3dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34123f2-7a29-4125-9423-c1ea4bde73ac",
        "cursor": {
          "ref": "05dee1b2-272c-436c-9d5f-a5a08c9c810a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "360020ca-65cc-4084-8047-92f846c8859b"
        },
        "item": {
          "id": "c34123f2-7a29-4125-9423-c1ea4bde73ac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "26222862-e951-4164-8877-f39aed859ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e9ffc-6267-44cc-822e-2ec43f9bc40a",
        "cursor": {
          "ref": "63ac4e79-46b3-439d-bb18-7d8eda494049",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a72ad643-079d-4ce4-a3b2-56b2901bae96"
        },
        "item": {
          "id": "dc8e9ffc-6267-44cc-822e-2ec43f9bc40a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ca915d4f-0926-4ff2-912a-03d27cce8214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117c689a-f2d8-49e0-ae85-b96b3bef2abe",
        "cursor": {
          "ref": "9b568c20-cf96-4bdc-b5f4-70f2bf5d68ef",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3faf6403-6bb4-49ae-b327-ed87f5872f7e"
        },
        "item": {
          "id": "117c689a-f2d8-49e0-ae85-b96b3bef2abe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9bb2646-6c85-4b57-bed5-0cdfc02876ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abbac06-62b4-4ab1-90c3-30cb4898ab3b",
        "cursor": {
          "ref": "847ec9f4-a021-4450-b036-558b21e0bb3e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2e91c8f1-780b-44d9-9dcf-22ee2e64751e"
        },
        "item": {
          "id": "4abbac06-62b4-4ab1-90c3-30cb4898ab3b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5fc6ae96-eb45-49bd-a9f8-6d675ba59734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118c8e19-3a0a-431c-8064-072019d30e49",
        "cursor": {
          "ref": "aee22795-9570-4edc-b0bb-de2d3584dd9f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b91dc3ed-27fe-44ef-86a9-e95cdd024e90"
        },
        "item": {
          "id": "118c8e19-3a0a-431c-8064-072019d30e49",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c34f44b5-cfd7-4ddc-bb4f-13d2a94e70c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b63b52-d7ab-4e46-9b4b-bda79df11227",
        "cursor": {
          "ref": "22951761-5936-4021-8f71-ae5ba776dcd6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4cab7cd-4a34-4907-a584-69ab2034011d"
        },
        "item": {
          "id": "59b63b52-d7ab-4e46-9b4b-bda79df11227",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8bc16f3d-0809-464e-835c-773f1f3d11bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422a160-9b4d-424f-acf6-ddfc746c33a5",
        "cursor": {
          "ref": "cdec7e8b-9599-4308-a436-7ea67b221db1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "226c489c-44cf-4d7b-ba4f-46f9700af4f4"
        },
        "item": {
          "id": "1422a160-9b4d-424f-acf6-ddfc746c33a5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9bcfdce4-1fd8-4913-8245-c48f538bea56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5875d4c5-f56d-446f-8443-7f849ad48b7b",
        "cursor": {
          "ref": "76c4b406-e87d-44c9-ade9-a0d786637057",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ddef5d97-4ad5-431e-a0c0-ab103c8bcfb1"
        },
        "item": {
          "id": "5875d4c5-f56d-446f-8443-7f849ad48b7b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4aa433a1-bbed-4a9f-951a-bfe5fbdfef1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80c21e-b386-4439-b7de-d170b94b57c4",
        "cursor": {
          "ref": "96f36617-5cea-4522-ad28-72771a90ec7f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d2de8add-8886-4189-9e1b-d516b3b33713"
        },
        "item": {
          "id": "eb80c21e-b386-4439-b7de-d170b94b57c4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "71cb33e6-b584-42ce-b4e3-093932fc82be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf4b309-9d2b-4d43-9863-18b00944027d",
        "cursor": {
          "ref": "03d3d01b-c79d-4fd4-b1d1-c85c16f36dc2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "777603c1-0ffd-45fa-a6f2-4bff28de0833"
        },
        "item": {
          "id": "3bf4b309-9d2b-4d43-9863-18b00944027d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f61e9d97-4c84-4f76-8596-e9d3a571017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fd34d8-e40c-4551-818b-0b56345c5f67",
        "cursor": {
          "ref": "8eec60ce-05e7-434a-89a5-8dc8f05e2a3a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "057c27ff-0b3c-402c-8002-f7a5d1dc2585"
        },
        "item": {
          "id": "70fd34d8-e40c-4551-818b-0b56345c5f67",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cea02a82-b590-4ddf-b140-e71a7582b38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7019db67-1759-433d-ba17-61ee8746fbd3",
        "cursor": {
          "ref": "b8bc4d54-00c5-4252-82d0-1cdbd9475bac",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4f4ea6ff-09a0-4701-95d9-972808520235"
        },
        "item": {
          "id": "7019db67-1759-433d-ba17-61ee8746fbd3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f02f8f54-63ae-4b1e-b886-a7c1d7983899",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017ab35c-40ee-4406-8437-b2ca0e703294",
        "cursor": {
          "ref": "5a93f0f9-f939-4482-ae39-9ea0c32487b7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d88d9d9-b3ee-4fc8-b3da-b3ae1bea3fe0"
        },
        "item": {
          "id": "017ab35c-40ee-4406-8437-b2ca0e703294",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "612fcb6a-c91a-4cac-8a4b-753a7217826c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc050cd5-79e6-41cc-9ac3-108361f20105",
        "cursor": {
          "ref": "02e40322-1634-4c3d-898d-75ab561caf3a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "01fc0d6b-210c-4722-bbd2-32a75690a3c6"
        },
        "item": {
          "id": "dc050cd5-79e6-41cc-9ac3-108361f20105",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "599a4881-361e-4eb1-985b-7cb0d85d110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b6be12-cc4c-4cb4-b813-c78cc96a1362",
        "cursor": {
          "ref": "f61c6233-96e5-44e4-87fd-22f220df3844",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb64131e-d917-4b1f-996b-2aba3430c1e2"
        },
        "item": {
          "id": "19b6be12-cc4c-4cb4-b813-c78cc96a1362",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a57a45f-f415-4064-b616-3ad1fe7251fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6261c0-82b1-4e99-8363-3f999702b0f1",
        "cursor": {
          "ref": "28c2181a-5783-4935-a7cf-8fdce2983bf4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d380c462-f479-48b6-b417-a2c7dec0c312"
        },
        "item": {
          "id": "0b6261c0-82b1-4e99-8363-3f999702b0f1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3fcd4c29-9702-487a-8b7b-a0809097bf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d359aa3-f3e3-4c68-baf1-9c8c2a88ab51",
        "cursor": {
          "ref": "063d32fe-81c3-4e8e-b481-5be0d8ee08d4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d3f9b42b-48d3-45ee-a9f3-3ed24cac2ec8"
        },
        "item": {
          "id": "7d359aa3-f3e3-4c68-baf1-9c8c2a88ab51",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e5d65d9-1e89-47c4-84e7-d826d1166092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c596ce7a-8692-4ba4-9329-b74bc259f35b",
        "cursor": {
          "ref": "bcb675d1-bf33-478d-8f5c-c2bd11b144be",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e5efff93-7bc7-424e-ae72-51bfb4a02224"
        },
        "item": {
          "id": "c596ce7a-8692-4ba4-9329-b74bc259f35b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fd1a64bc-ac7c-43d5-bee6-c4632c382e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8618e81e-7a81-4396-87d2-834186501dd8",
        "cursor": {
          "ref": "e6f79922-b825-4c18-b019-d506ebbb4026",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9273fd29-8747-44ec-967b-d8f47ea40ace"
        },
        "item": {
          "id": "8618e81e-7a81-4396-87d2-834186501dd8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ee58adcf-d7c8-44a0-a753-3fa303e093fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b23ef5e-ffbd-4b31-a9a3-98cf1686ae35",
        "cursor": {
          "ref": "75266938-d08e-4db0-b1f8-aab4ec537dba",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7d5d0e3-b9cc-46aa-a392-1fa7b3bccac8"
        },
        "item": {
          "id": "8b23ef5e-ffbd-4b31-a9a3-98cf1686ae35",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b94da5c9-5d95-411f-85c6-8231b85d2c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d11b6e9-0466-4191-a0c8-a2401e1ef768",
        "cursor": {
          "ref": "88db3e11-dcec-417a-bc65-1c863a56f434",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "535ad559-4c24-4724-8568-57a3a99a22ce"
        },
        "item": {
          "id": "9d11b6e9-0466-4191-a0c8-a2401e1ef768",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "594a2fa0-214b-43eb-8592-f3ef2268cae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5969b786-7d40-4448-a023-a3aab321bbc1",
        "cursor": {
          "ref": "8b9f01f6-23a7-4df9-8773-3fd164b1fdb1",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f1079b3-1c1a-413e-9f44-7fc8d88a507b"
        },
        "item": {
          "id": "5969b786-7d40-4448-a023-a3aab321bbc1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a69d7f72-deaa-4d92-a4d0-c8f15b6125f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137957a8-1212-4945-ab54-3dc8c628a1e6",
        "cursor": {
          "ref": "0a22377e-db4d-47e2-b243-3521d336f62d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09ffcb7e-0737-4462-817a-d19db7f19f22"
        },
        "item": {
          "id": "137957a8-1212-4945-ab54-3dc8c628a1e6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4a428ac0-7392-4684-b80b-efe880bf76b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88448bab-27fa-48bf-857e-520178b51058",
        "cursor": {
          "ref": "82ac27f2-3c74-41bb-b690-be13a486c9f9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "22a9ae2d-3fc6-4052-bd69-7dfa963aa967"
        },
        "item": {
          "id": "88448bab-27fa-48bf-857e-520178b51058",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "66105eb8-ae51-4020-8da3-42f2ea9a9478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fea560-dea1-41ff-80bb-66154b075a64",
        "cursor": {
          "ref": "a2792d2e-c7df-4549-be77-4e0cbc15bf9e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6f07e496-9069-45be-a7a6-4c459221fc66"
        },
        "item": {
          "id": "38fea560-dea1-41ff-80bb-66154b075a64",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "10e38e39-4ded-42aa-b56c-4fae705a9f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef8d95b-ca06-4ca8-ab2a-6ade70fc9056",
        "cursor": {
          "ref": "85d8c5c2-19a6-4aa4-a9ec-06e4d950da32",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "313ff2c3-e30b-4fdc-8016-1e7a4ecdcad1"
        },
        "item": {
          "id": "1ef8d95b-ca06-4ca8-ab2a-6ade70fc9056",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "367df485-0c01-4401-8987-5ffc597d673b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee8047-bb30-4519-b874-c7530a4773d6",
        "cursor": {
          "ref": "486a36d1-9bc1-437c-97d9-410d1e4edc08",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0efb44f1-1754-490a-9a74-6914ae5c762b"
        },
        "item": {
          "id": "1cee8047-bb30-4519-b874-c7530a4773d6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35241aec-ba5a-4469-a9ae-aec4cf3a65aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fb5394-24e4-43af-9ec0-8fac7a05b2c7",
        "cursor": {
          "ref": "f1e47d47-ff82-428b-88db-5111e0bb2750",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1cc58bf9-4e0c-4ae2-a9ca-4602e4c20d28"
        },
        "item": {
          "id": "f4fb5394-24e4-43af-9ec0-8fac7a05b2c7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4f07b344-407f-4227-aec3-89414b648620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d626e1-8144-4727-ace4-4ec8610ad7a3",
        "cursor": {
          "ref": "7c2f40b2-d8d4-48ef-af6d-28e2625ac7af",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b6d4fb9c-4127-43bf-b709-5b5c0f532548"
        },
        "item": {
          "id": "98d626e1-8144-4727-ace4-4ec8610ad7a3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df08e6b3-9b63-4364-b008-a0cf04261e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf15c6f2-bff3-40d4-91de-10193230636c",
        "cursor": {
          "ref": "1ec10421-c81b-4ab4-bc79-47493e27aa16",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ce688e92-6bc7-4c0b-8787-992b24049f09"
        },
        "item": {
          "id": "bf15c6f2-bff3-40d4-91de-10193230636c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7e0b666f-3709-416c-b18b-e4b1d30bafb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044b977b-9ead-4f17-8c5d-54471c6327e0",
        "cursor": {
          "ref": "bf586599-614e-4648-a56f-25dd7d468bd8",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eafd6f21-461e-41cb-bf9e-2f5436a284f3"
        },
        "item": {
          "id": "044b977b-9ead-4f17-8c5d-54471c6327e0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cd4d6338-3999-4112-827e-5bbe753da48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5180d3-d8d1-4442-9a2f-c7f4adce0edc",
        "cursor": {
          "ref": "8b71b3c2-af6a-4fa8-9c92-c98618fd9ee1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dba99393-7852-480b-a062-60df2562850e"
        },
        "item": {
          "id": "7b5180d3-d8d1-4442-9a2f-c7f4adce0edc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8347226d-8659-4fc0-9f17-6063ceba8a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cded78-3d58-437f-b828-ae8eb6b4c818",
        "cursor": {
          "ref": "bfd3e200-897c-4fd1-90ce-3151560aae0d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fef3b4e3-4a5a-4400-b06f-35497c6c6771"
        },
        "item": {
          "id": "43cded78-3d58-437f-b828-ae8eb6b4c818",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5797cac4-b84f-415d-a5d5-2560c75ce73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746eab20-4d1b-418b-bb41-804bb192705f",
        "cursor": {
          "ref": "be4c8f7a-2d7b-49cd-b5c2-5211bb9d00bb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7190045e-1f75-4bc0-9a3e-61f918e23452"
        },
        "item": {
          "id": "746eab20-4d1b-418b-bb41-804bb192705f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "00c3f640-78a4-4a74-9ff6-a4c96dd4bf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eff2fa-a1c8-4b34-9565-37b8b5f90ab1",
        "cursor": {
          "ref": "72af1fcf-38b3-48a0-83c5-7047ed14ea5b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ad8c8343-0d17-4755-9e3f-5813483ff425"
        },
        "item": {
          "id": "91eff2fa-a1c8-4b34-9565-37b8b5f90ab1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9252cf11-c6bb-4351-b5c2-0f9757d81f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dbc13e-643e-44fb-ba39-ed24185a305e",
        "cursor": {
          "ref": "f0c8a44c-4732-4f10-9a63-4af505314461",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1466a5e3-1725-467b-af91-a16e74b627f6"
        },
        "item": {
          "id": "c0dbc13e-643e-44fb-ba39-ed24185a305e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5db55135-3b71-446f-b8a4-517a7d0bdce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395d4af5-c66e-4ea2-bf1f-9d5bd7c54329",
        "cursor": {
          "ref": "3ccfd74a-3e7a-4ce5-a032-e2d31f5ada1f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d5c03264-a6fc-408b-96b3-acf669be1eb2"
        },
        "item": {
          "id": "395d4af5-c66e-4ea2-bf1f-9d5bd7c54329",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e22e30f5-aaf0-4f32-bd57-2757bd3f9464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e67a2-4d19-4c38-9577-d0f540720e0e",
        "cursor": {
          "ref": "4c661486-87d7-40db-868d-3a0c22ff8b61",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "72b8719c-25a2-4926-b609-18b4e3cf2af3"
        },
        "item": {
          "id": "ff6e67a2-4d19-4c38-9577-d0f540720e0e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2184f6f7-bfba-4d62-9396-f36d743d67bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42e4a46-422c-49f7-957c-be576ee695f1",
        "cursor": {
          "ref": "c06e3d9b-dfa8-43f7-8263-7f725e87de42",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3b2c74fa-3326-45a5-8e6c-c0c1018c2989"
        },
        "item": {
          "id": "d42e4a46-422c-49f7-957c-be576ee695f1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4e4c04a9-d75d-407b-8c7e-9e3a941acf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58f0ba4-bee4-4b59-bb36-c371f1c6d072",
        "cursor": {
          "ref": "fd4e3e8d-e609-4be7-9035-2de6ebd772f2",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "89ad75c9-6511-4041-8281-aae782da5bca"
        },
        "item": {
          "id": "e58f0ba4-bee4-4b59-bb36-c371f1c6d072",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5e84754d-76ca-49da-8045-3d24bd886156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d461ab9-e35c-4ced-abb3-a198d4dd7f59",
        "cursor": {
          "ref": "666205bf-6c1c-47a9-b64b-fed9972364fa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "066fcd8e-cfbc-408c-a70a-83dc3ab77fc1"
        },
        "item": {
          "id": "2d461ab9-e35c-4ced-abb3-a198d4dd7f59",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "81204a55-89f4-4f1f-860d-dac99f4d1594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51b137b-8d55-4e5b-a428-d6b12bd4d656",
        "cursor": {
          "ref": "ba19185e-0285-4357-b4fc-4882fead2ed4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "41af0a32-b960-4b14-a670-4d5447a45a65"
        },
        "item": {
          "id": "d51b137b-8d55-4e5b-a428-d6b12bd4d656",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d08edfd1-1ba2-4dcf-988d-a0d85d1ff937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53988814-5dbb-430c-bfdf-02bb33831b16",
        "cursor": {
          "ref": "8d4411ac-4d55-441b-adf1-f209eac09d57",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ab2b46fd-9f1d-497a-aea0-bd2fb30edde9"
        },
        "item": {
          "id": "53988814-5dbb-430c-bfdf-02bb33831b16",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "717aa423-ad8a-427a-9ba9-43469dd1a5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f47f15-cc81-4716-858a-266c0349ea00",
        "cursor": {
          "ref": "79beb11d-bea2-46b8-883a-e34e9f86d474",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0086c925-2e41-4617-8a54-25b7e4f731ff"
        },
        "item": {
          "id": "65f47f15-cc81-4716-858a-266c0349ea00",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "16e0fd80-f80a-46e4-893e-ea9b009b05a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b01ebc-8b06-4363-ab59-69218abee967",
        "cursor": {
          "ref": "f94f3f61-defd-4092-99cc-5c041753520b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9055d544-1253-48da-bebe-a1b493440226"
        },
        "item": {
          "id": "e0b01ebc-8b06-4363-ab59-69218abee967",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b9c54770-26fc-487b-a11f-731f06a7890e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d00f4c-9efc-4410-8eb5-fcaa097f4e43",
        "cursor": {
          "ref": "d2101e9f-3a84-4d9d-9a88-1599ad5acb59",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d4bbbc43-0419-4e32-9ec2-04ca49dccffe"
        },
        "item": {
          "id": "c6d00f4c-9efc-4410-8eb5-fcaa097f4e43",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5980923d-0bd6-4a93-a03c-154059beb08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d602f45e-0c80-4405-bbab-cb72a23b317d",
        "cursor": {
          "ref": "39c54c1f-3a5a-4f9d-93ac-ef49cadd3d68",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "330ea2a8-0e79-436b-8dc4-61a54f8a187f"
        },
        "item": {
          "id": "d602f45e-0c80-4405-bbab-cb72a23b317d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2afb6406-73e4-4eff-8e82-12dd28ca1e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bf0040-a787-4fc2-a0b9-032a31c63df7",
        "cursor": {
          "ref": "b08ba536-f18d-411b-bc35-84f280eb9752",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0c6e1000-0b27-46a8-a328-71a788aedf00"
        },
        "item": {
          "id": "d4bf0040-a787-4fc2-a0b9-032a31c63df7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "81871601-7ac9-4379-b97f-9222bebe20e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1c0bf3-2ff1-40f2-8be9-339f296c3889",
        "cursor": {
          "ref": "d3dd8768-784d-4cc5-97cb-9df749fe814c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c4ef1233-ac1b-4fb6-a9d1-4817e344dec3"
        },
        "item": {
          "id": "8d1c0bf3-2ff1-40f2-8be9-339f296c3889",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bae06a52-ab1e-49e6-a9c6-9e907d5d1770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65399ddc-f5e5-4bca-85e2-b5577b7e39cd",
        "cursor": {
          "ref": "48018b87-b71c-49b9-8815-4d1504695ce1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4805d64d-7ff6-455e-b46c-53ecc48ee345"
        },
        "item": {
          "id": "65399ddc-f5e5-4bca-85e2-b5577b7e39cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "26e88bfb-aae4-415d-9660-0b87f1c5c9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7028e458-2a45-4e85-aa9a-5dfa311e8417",
        "cursor": {
          "ref": "2041f2f3-7315-402b-b3e2-7e3c69120930",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4741c9b4-b2de-4db7-ba54-0c25f2bd484f"
        },
        "item": {
          "id": "7028e458-2a45-4e85-aa9a-5dfa311e8417",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8545cca7-6242-44cf-a6ba-18b7cd1416f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe103d2f-3867-4adb-95fc-8b9d5bdbd3d9",
        "cursor": {
          "ref": "4307c68b-5bfd-42c2-8ce7-6d29d7001882",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "70f24b1d-4ee6-4938-be2b-f7682a22ee10"
        },
        "item": {
          "id": "fe103d2f-3867-4adb-95fc-8b9d5bdbd3d9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7e4cc6a9-3364-4c01-80f8-2fb4f42aa689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4c5ec2-d9d5-4b1b-a536-f465b88d6f4e",
        "cursor": {
          "ref": "a8fc2947-715e-4fe7-aa41-e9f9eea11050",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ebdc41c0-9b9b-4a0e-b06e-7c1c1c8110b5"
        },
        "item": {
          "id": "9e4c5ec2-d9d5-4b1b-a536-f465b88d6f4e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "529e507f-6e26-4410-b177-47e39462f237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d59f118-38d7-4f1c-9dff-a9f9f6778e09",
        "cursor": {
          "ref": "5e532997-0b7a-4b8d-a480-d014b67868cc",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "521562bc-35dc-40d4-a3b1-486781523f18"
        },
        "item": {
          "id": "3d59f118-38d7-4f1c-9dff-a9f9f6778e09",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "18f9c0f8-6b25-4ecb-9e49-da29426e7f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20da080a-81a1-4c5b-9577-29aae33f3fd5",
        "cursor": {
          "ref": "9db4a431-cf20-47f8-a4f6-497495ec9d87",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9dcf0473-0e93-4305-9bdc-242f5673bfa8"
        },
        "item": {
          "id": "20da080a-81a1-4c5b-9577-29aae33f3fd5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "50ec844c-16ef-4721-93d8-2d0c28d7c365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1715d82-d26c-4566-aefc-aa42245c09f7",
        "cursor": {
          "ref": "81033249-e333-4435-9efb-5ccbdbb3214d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "107fa076-4aa6-40aa-a040-641efc80cc76"
        },
        "item": {
          "id": "e1715d82-d26c-4566-aefc-aa42245c09f7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dd8815ea-4f29-4394-b68d-62fa31f3adce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7e9a62-0f07-444d-a5b3-bb1d5f113862",
        "cursor": {
          "ref": "1ad0408c-c188-45e0-804b-912d46d54eed",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46e8d956-75df-4ba1-9a9c-128fdea55c0b"
        },
        "item": {
          "id": "8b7e9a62-0f07-444d-a5b3-bb1d5f113862",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6f63d651-c270-4f39-b479-bc8ecf815274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5520ae2-ffd6-492c-9e8d-4e57ebed5b79",
        "cursor": {
          "ref": "540d2fb2-2e38-4ee9-8c4d-d5eaaddcf5f4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e492e6c1-d34f-442f-b3aa-8f397638818e"
        },
        "item": {
          "id": "b5520ae2-ffd6-492c-9e8d-4e57ebed5b79",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4ad881fa-d356-4c14-bf2e-49feadc02f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96b24b4-b42a-4ece-a5e3-8d267366cb0e",
        "cursor": {
          "ref": "a8de939b-2848-4ba3-bb82-35a5ba64021d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "00c14a83-ed41-4ba5-8755-4128cd75649f"
        },
        "item": {
          "id": "f96b24b4-b42a-4ece-a5e3-8d267366cb0e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3d4adf6a-1a6b-46c5-b931-08e174fff7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26e4f57-19de-4d35-842e-cc62571c5cae",
        "cursor": {
          "ref": "0197bb3a-9d8c-4222-bfe2-ff05e3dbefff",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8b7788cb-03e8-4ae2-a18a-e5bd86862d94"
        },
        "item": {
          "id": "a26e4f57-19de-4d35-842e-cc62571c5cae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66eed023-9ffd-4be2-9ab6-3b02ccb06f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2c7d97-9797-4acd-8050-1ad5580b559c",
        "cursor": {
          "ref": "6121a6e5-eaaa-4420-8493-85f3bb42ff1d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ead8f9d5-1a1b-4ce5-9cce-d0a8a8a16c97"
        },
        "item": {
          "id": "ca2c7d97-9797-4acd-8050-1ad5580b559c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64b21ae9-ee7f-47d4-8e71-8b3483a8c408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8682de0e-3fe5-4908-8a54-20ad0ee0d249",
        "cursor": {
          "ref": "a5767093-1c54-49bb-a250-345e72a5dc79",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "afcf7616-d916-4001-8e31-f81ea8c5b6b6"
        },
        "item": {
          "id": "8682de0e-3fe5-4908-8a54-20ad0ee0d249",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4675ead7-7f2e-4b93-be62-1a5417175afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d120806-f0bb-4b3f-b15f-5ba01a0be2ad",
        "cursor": {
          "ref": "aa53a12e-1f6e-4feb-85dd-5f4e3cb5ad85",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5f6d7f8d-13bd-4652-bb93-7c12cfe1e3ff"
        },
        "item": {
          "id": "7d120806-f0bb-4b3f-b15f-5ba01a0be2ad",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "91d35f6d-5ca9-49fc-85c1-9682ad4693c3",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "34dd1f83-a4a0-4ca7-88a8-a1f06d51a612",
        "cursor": {
          "ref": "ab9d615b-5350-4d41-888b-6282e09c2b76",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "444b99c6-99b8-418e-b15a-88f3bc946a78"
        },
        "item": {
          "id": "34dd1f83-a4a0-4ca7-88a8-a1f06d51a612",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "31386b1d-fc57-49d5-9dc2-0ec7cfa324a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73de4154-2107-4f98-80e8-d1d93ba1a347",
        "cursor": {
          "ref": "611eeed8-b4b1-4401-86c3-bbc8c55c194e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "728f0a2e-e10f-4e11-9388-741528b46005"
        },
        "item": {
          "id": "73de4154-2107-4f98-80e8-d1d93ba1a347",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a836a240-5149-4e19-8a98-8aa5d14045c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c141f7-e133-4403-b8c1-5812573c0dd5",
        "cursor": {
          "ref": "4aaae5df-460e-4fe1-8447-1ff1c0b196eb",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "87e0b7d0-f2c2-4e8d-9e5c-3430021c7f5b"
        },
        "item": {
          "id": "85c141f7-e133-4403-b8c1-5812573c0dd5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "386c4bf9-33d8-47a9-a8aa-df14f7990598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d60f05-8f9b-4fce-8ce3-6151daad7a0c",
        "cursor": {
          "ref": "e49310a0-19a4-4225-be68-1fa467644c24",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fc581e35-e32d-466f-91a2-6efd6cfb41f6"
        },
        "item": {
          "id": "88d60f05-8f9b-4fce-8ce3-6151daad7a0c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f068bb0-2f89-4c7f-ac36-6e34ceb2fad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7e9522-618c-42be-82ea-b943449c57a1",
        "cursor": {
          "ref": "f33cd967-c115-4f56-ba43-8b57a4fd015e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6c2e6b04-32e1-4341-b5d1-486b8a5b2f08"
        },
        "item": {
          "id": "0e7e9522-618c-42be-82ea-b943449c57a1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "543c64f0-b54f-4f43-8242-df6ea17ebd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ede200b-eb6e-46e2-8637-93553f3ae0cc",
        "cursor": {
          "ref": "a07fe51d-7a31-4357-8268-b09a8d67420b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4df2f1db-d1eb-4051-be5a-53e65aa1538d"
        },
        "item": {
          "id": "9ede200b-eb6e-46e2-8637-93553f3ae0cc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "72943de6-21f2-44f5-84ae-50835ac9db84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d6141-191b-434d-9701-c9ed8cbe29ba",
        "cursor": {
          "ref": "297c0423-3c49-49ee-9a64-adff4ca69d35",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "25b7d047-c8c2-4d34-8422-8e47089f8827"
        },
        "item": {
          "id": "d60d6141-191b-434d-9701-c9ed8cbe29ba",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2e4020a9-04d2-44d6-b766-1d412f8c11cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c866d35-a842-4275-a645-3a97e6e80c89",
        "cursor": {
          "ref": "4d90ec21-af47-4a45-a497-bdf8e7f0caf0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a25ed1a5-aba1-45a8-a13a-c270eeacb2e6"
        },
        "item": {
          "id": "4c866d35-a842-4275-a645-3a97e6e80c89",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1dc1823e-e26a-45d8-b834-c9379995231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9725d388-0eee-4045-be93-b48f01872615",
        "cursor": {
          "ref": "820d073d-b2ff-4538-948e-32a01bc0ba21",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f7aa73b6-5a4b-44e0-b7f1-b12193f863d3"
        },
        "item": {
          "id": "9725d388-0eee-4045-be93-b48f01872615",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae6d91dd-300f-4869-9851-ff06a5075fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f374179d-e031-4286-86ad-0ebd97cb1872",
        "cursor": {
          "ref": "4d957c2e-c655-418a-aa14-569ae15004a5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fc422cf4-da07-44e4-b1e3-0166cf5c7b8c"
        },
        "item": {
          "id": "f374179d-e031-4286-86ad-0ebd97cb1872",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4980d4ca-f989-4cf7-bcf0-04b6751dcc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcef5fb0-4ae3-4675-aef2-6ffb90b0c678",
        "cursor": {
          "ref": "d5eb696b-a374-4d9a-89f2-23370da81fff",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a787dc0d-1c0f-481e-965f-a2268f455cda"
        },
        "item": {
          "id": "dcef5fb0-4ae3-4675-aef2-6ffb90b0c678",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f8b15f0-4cfe-4536-ba77-46b9fc680613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6368ad7-e6f5-45b2-a1bd-35a9bf25939c",
        "cursor": {
          "ref": "a17316e9-29ef-48c0-a968-2e4a49486dfd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "edff9eb0-c066-4245-b249-0910c1cdbb90"
        },
        "item": {
          "id": "b6368ad7-e6f5-45b2-a1bd-35a9bf25939c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "648ba9b4-b305-4d81-8cee-77dc290dbf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf96d75-5f67-4404-b83f-0787c709b9b3",
        "cursor": {
          "ref": "59ddb3ca-aaa7-4059-a5eb-8db828ab3a95",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b0cbb494-2598-486e-a6a8-1a6aa0a436d5"
        },
        "item": {
          "id": "ccf96d75-5f67-4404-b83f-0787c709b9b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "478e0c1b-874e-49b7-9eec-3dddcc65d61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ff9c49-ff73-42d0-91e7-2d2263fa6c7a",
        "cursor": {
          "ref": "5fa8b09d-aeef-4325-b522-fbc82a7e3ffc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "383653d6-3975-4f01-88fb-af8a31e2e28d"
        },
        "item": {
          "id": "30ff9c49-ff73-42d0-91e7-2d2263fa6c7a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af1c6bec-9ec3-47f1-8de0-7ac0198575cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fd89af-0567-4492-8878-616d24d7363d",
        "cursor": {
          "ref": "906986cb-b45e-4e6e-a9d8-a94bbb2fec46",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0c7f5298-388e-4d03-a10f-82d783bee5ef"
        },
        "item": {
          "id": "32fd89af-0567-4492-8878-616d24d7363d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "210459b8-1479-4ca9-812e-64ad1d40167e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a165b38e-8f8e-4af8-a09e-e10c5eb5d9d5",
        "cursor": {
          "ref": "f0503fbc-3a18-42cd-8054-f68cb9366a0c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e276745-32ae-44a4-b49e-763cce108a82"
        },
        "item": {
          "id": "a165b38e-8f8e-4af8-a09e-e10c5eb5d9d5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ee85c848-4b7e-494d-9757-1e830bb632c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc1139f-12dd-47fb-8c12-8540b38bc3d1",
        "cursor": {
          "ref": "483ac456-8d41-4d3d-841e-ba872c42c5d2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0a5f5000-85fa-4451-93de-2e8ec7d7bc99"
        },
        "item": {
          "id": "afc1139f-12dd-47fb-8c12-8540b38bc3d1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f699e07a-fe37-4931-88ac-0f99cb8eabde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b107af88-179c-4ef3-8a88-4f83a775eb26",
        "cursor": {
          "ref": "361648aa-2212-459f-93fa-be69c1eee126",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0d3cb0d9-8087-413d-9cae-9c114a84cb79"
        },
        "item": {
          "id": "b107af88-179c-4ef3-8a88-4f83a775eb26",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "29cdc3f0-f713-4b8d-adcd-7264f3d4ebdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4eb91-1712-417c-8479-27e16981d546",
        "cursor": {
          "ref": "ccb979d2-01a6-431b-9998-afa6e7a4fc8d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e49bc67a-7b33-474a-9284-c5a9649eef84"
        },
        "item": {
          "id": "f7b4eb91-1712-417c-8479-27e16981d546",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e290c582-1395-42e9-ad44-95bdfb2f6354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e48ff-41bd-4131-8b9f-d6032a4ee9dc",
        "cursor": {
          "ref": "7a2c630e-fc08-4ab4-983d-6d6c5f73e32a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ae916efa-7deb-4ef1-9aea-447b1e2ea74b"
        },
        "item": {
          "id": "797e48ff-41bd-4131-8b9f-d6032a4ee9dc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c28434c5-7db1-4b57-85f5-5f19e9a257b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c77df7-9392-431d-b295-1a4baa72f453",
        "cursor": {
          "ref": "f8a55f8e-798e-4f53-b3c0-92fb8c7eb0dd",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e6e8c78e-d587-4376-88f9-9dc0e1d3ab84"
        },
        "item": {
          "id": "83c77df7-9392-431d-b295-1a4baa72f453",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8ad89aa1-fbbb-4eb1-ac3c-6069f84c9bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f926e4ef-4dae-432a-9eff-310368b43b74",
        "cursor": {
          "ref": "566e3aed-a843-4bfe-9715-617b92a3c995",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "93985b6c-16fb-4105-950f-2bbbc21a4308"
        },
        "item": {
          "id": "f926e4ef-4dae-432a-9eff-310368b43b74",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d691c06-85bf-4238-9d3a-079543f3a2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d49a18c-3a06-4616-96b6-08166d532926",
        "cursor": {
          "ref": "7262e6f6-de0d-4e31-bfe6-06f762f8ab1d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "400c6539-b568-4dcf-947d-9b574860b771"
        },
        "item": {
          "id": "2d49a18c-3a06-4616-96b6-08166d532926",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef64730a-2b94-4fb2-91ec-195119ee2ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a71be0-a201-4d56-9fc7-1c01dc5f9b50",
        "cursor": {
          "ref": "b4833de6-1cdf-46eb-a566-41d00cc12f4b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1ce94d7b-a3e7-4b96-a12f-51aa7c4a5d40"
        },
        "item": {
          "id": "25a71be0-a201-4d56-9fc7-1c01dc5f9b50",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "21aad049-6dd3-444c-b8bb-f2f8eb7db176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54989763-6d3b-4738-9f39-242fbb01c959",
        "cursor": {
          "ref": "5583a162-e186-4c99-9d60-331bb0dad897",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cf99dacf-0479-455f-a3b6-3033c1691eb1"
        },
        "item": {
          "id": "54989763-6d3b-4738-9f39-242fbb01c959",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1a1d8524-a3e8-4cbc-ab6d-2c7b5fc4fdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fc2793-f8f1-425f-800a-83c9537037d7",
        "cursor": {
          "ref": "2e0c4df7-7591-406c-991e-adb06d1bd21c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4c15f0a4-0cd9-4470-b231-7a208f68cb4c"
        },
        "item": {
          "id": "f2fc2793-f8f1-425f-800a-83c9537037d7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d651802e-6080-4c33-a772-b71c355ae954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfe6b7c-d5a0-4025-a183-45b8c0319bcb",
        "cursor": {
          "ref": "27d478f3-fdeb-46db-8aaf-7d39c7751357",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a207616e-feee-4341-baa4-66e06a855fb9"
        },
        "item": {
          "id": "edfe6b7c-d5a0-4025-a183-45b8c0319bcb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c828c902-ef32-441c-97e3-4db15a1aea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf0282-1de3-4d8b-bd6f-de98e08f1baa",
        "cursor": {
          "ref": "70537e9b-8431-498a-86d0-f7c2a76a1247",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "824e2994-b10f-495a-83cb-29246b2c2b03"
        },
        "item": {
          "id": "36cf0282-1de3-4d8b-bd6f-de98e08f1baa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "550cc828-fea4-4f7a-ae38-b453cec0fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957fe333-ddd4-4ee3-9efe-23d19b06cd58",
        "cursor": {
          "ref": "3738f80c-b0ce-4cc1-b4e1-f0db138d544c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e14a3fe8-6c76-4445-8cf2-2bc671ca52a6"
        },
        "item": {
          "id": "957fe333-ddd4-4ee3-9efe-23d19b06cd58",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e819fa28-847d-41a8-aea7-045c6881c24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9689615a-050a-43ff-8da1-13bb682d2724",
        "cursor": {
          "ref": "bbec7fd4-506e-4447-adc1-322a94c9730e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "82e3737b-589e-4361-a492-102eb3e2ada6"
        },
        "item": {
          "id": "9689615a-050a-43ff-8da1-13bb682d2724",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3a0f7e5d-cf4f-4b71-9ca8-06b44616df49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecb4288-9d6f-494e-84d5-e1f2e39f3d31",
        "cursor": {
          "ref": "21dbd195-eea5-4b27-81a1-23c5ed98209f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "42e5570c-9bad-415c-8b73-19ef3cd04047"
        },
        "item": {
          "id": "eecb4288-9d6f-494e-84d5-e1f2e39f3d31",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d9698f61-7789-4b33-9436-55511d14cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cf9b0f-dd77-471f-870e-9f88412942eb",
        "cursor": {
          "ref": "e41d9e62-246e-4189-98b0-7a3975b1889f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a719d145-7b19-4c8d-9f03-f9d2b2257de2"
        },
        "item": {
          "id": "84cf9b0f-dd77-471f-870e-9f88412942eb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3d3e21e6-3533-4894-aa5e-f25d341922da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e29031-3e2e-4a6e-8a31-b663e5bb7fb9",
        "cursor": {
          "ref": "b68e2fa8-1c2e-4206-8fa7-3c62fd93e61e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f8730896-7bcd-4b6b-b9eb-1049697b358f"
        },
        "item": {
          "id": "e5e29031-3e2e-4a6e-8a31-b663e5bb7fb9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ad32dc87-c779-4671-bf9e-390c964a4a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc47350-1ca6-456b-9b26-320c28c6da8c",
        "cursor": {
          "ref": "a5b491a9-4957-428a-9107-ef7db0f381d3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a9a8cb1d-a240-4052-9a40-1f0cbaeb4aaf"
        },
        "item": {
          "id": "4fc47350-1ca6-456b-9b26-320c28c6da8c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0082f884-8e09-4c43-8cc5-37fadd52544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6b8485-9a14-407a-a1c5-2e1525b8b790",
        "cursor": {
          "ref": "eee2be48-11d7-43c7-9ffb-8e6aa22b3137",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "334553e6-1855-4f90-ae60-091ba44196f5"
        },
        "item": {
          "id": "5e6b8485-9a14-407a-a1c5-2e1525b8b790",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9f045be6-f701-4ec0-8d23-4bced6b7b9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f0153f-8f68-4030-9527-16d2f25913bd",
        "cursor": {
          "ref": "79a50522-4d7f-499f-a224-0ab473cdce39",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "35fac7a0-e4cb-453e-89f7-72381d1700af"
        },
        "item": {
          "id": "d4f0153f-8f68-4030-9527-16d2f25913bd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "93676b73-57a0-41c7-8df3-d1fbf06f52a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbcec80-4749-4b7f-91ae-82d33fe6f85d",
        "cursor": {
          "ref": "1d52c9ec-c891-42a8-87f3-0eb69e675563",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2ef99767-a6a9-4ce2-9ed2-71be4d8fd7b3"
        },
        "item": {
          "id": "bcbcec80-4749-4b7f-91ae-82d33fe6f85d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "159aab2f-8b4d-4a32-9be8-9a9b94282369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9876ed7-9194-4bf6-b7a1-7bae4d076355",
        "cursor": {
          "ref": "dc18e61c-5388-4310-a437-e4cd1a18f260",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "75493ba6-2a0a-4c47-9c45-2a6e966393f2"
        },
        "item": {
          "id": "a9876ed7-9194-4bf6-b7a1-7bae4d076355",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ffb4dd4c-72f1-477c-80f6-dbdb9fcaf0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef74ca2f-0051-424e-9d60-7240abf2f400",
        "cursor": {
          "ref": "5fcb91cd-fec2-4f47-a6ff-81cc35ced8b9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b6f246bd-7232-4532-ad9c-ab2feb2a05c5"
        },
        "item": {
          "id": "ef74ca2f-0051-424e-9d60-7240abf2f400",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0de2327b-64a1-413b-a421-f100b5560b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac608511-83d6-469a-97a0-724077b93928",
        "cursor": {
          "ref": "19cf54f7-ac8d-43f6-8e1c-4e57d20a94a3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1fc66f19-87bf-4af9-af34-1b14a24f37b0"
        },
        "item": {
          "id": "ac608511-83d6-469a-97a0-724077b93928",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ed6cc97d-631a-4b63-a32a-10771b9bec1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0ec23a-b957-4300-948d-6730d58a6835",
        "cursor": {
          "ref": "ce6cbaf7-304f-48af-a60f-66ab0ad4fad8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d1151998-9362-47cd-8fd9-ddfe2af8d25b"
        },
        "item": {
          "id": "dd0ec23a-b957-4300-948d-6730d58a6835",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "64f9d31e-b391-440b-b8ba-4c4e85c7780b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1994bbdd-a29c-41fd-aecb-b0812cf5c51e",
        "cursor": {
          "ref": "8d8e9b45-8528-4a7c-92dc-d58a01d27fdc",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a166bc04-e4f5-4eb5-b1ce-81491d75d49c"
        },
        "item": {
          "id": "1994bbdd-a29c-41fd-aecb-b0812cf5c51e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "87007da4-d029-4b4b-91b2-917de7c74270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6532d2-a5a5-4130-8df9-1c3788410d6f",
        "cursor": {
          "ref": "3ddfdd8f-bc7b-419e-94a3-9f66429b0ce4",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "79d04d03-e223-43a7-8bf1-fdb2c6938fd2"
        },
        "item": {
          "id": "ac6532d2-a5a5-4130-8df9-1c3788410d6f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7bf60b89-dc83-425a-9140-2c12659616f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70d5ddb-2ee0-4af7-8aeb-33c0e994b165",
        "cursor": {
          "ref": "25decc0e-7022-41fb-b7e7-171d65421595",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4f8478a9-0b2d-4ad7-849d-6a020060282c"
        },
        "item": {
          "id": "a70d5ddb-2ee0-4af7-8aeb-33c0e994b165",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "61b977f9-56b6-4892-9c83-13d720465c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02b1b5c-e507-4bf2-b750-9968bb44e02a",
        "cursor": {
          "ref": "50e4882d-33d1-4fd9-8833-3d36846c797b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "89e5fc1d-1558-4fa7-862c-ae127591f92f"
        },
        "item": {
          "id": "c02b1b5c-e507-4bf2-b750-9968bb44e02a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fffd76ce-01aa-4651-97f0-52dba3e19f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ca2374-8128-4df5-8226-9551861781c7",
        "cursor": {
          "ref": "90f08a7e-4a02-4510-8a06-a0425bddcd7e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "50c43f9f-c495-4b2a-8957-1ca73d2bb34c"
        },
        "item": {
          "id": "f8ca2374-8128-4df5-8226-9551861781c7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9aa2defd-a106-4450-a535-b9039e5f61ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986faeed-4ba4-4f8b-8040-09ca50aa28a3",
        "cursor": {
          "ref": "6e3a1b89-daf7-41d7-9a33-ebeb632a491e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5ee3b862-c3f7-4625-bdc0-4250f199200e"
        },
        "item": {
          "id": "986faeed-4ba4-4f8b-8040-09ca50aa28a3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1532887d-39c6-4739-96bf-dea75444da4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f9af9-6677-4a8e-b81c-56297c6ffd95",
        "cursor": {
          "ref": "3e882dc6-3e9f-4b56-920b-b624601fc6d4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "612a8fe5-79f5-4e2a-a578-a71f44f2e4e2"
        },
        "item": {
          "id": "594f9af9-6677-4a8e-b81c-56297c6ffd95",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c6c06827-a098-495f-a0ab-962e7679a05c",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b145f165-02fd-4782-95a3-2aff4312b82f",
        "cursor": {
          "ref": "2b99583e-226a-48a3-92ec-e30ffb6e4311",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f21438f1-fbaa-4798-9c75-ca74d38189eb"
        },
        "item": {
          "id": "b145f165-02fd-4782-95a3-2aff4312b82f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "65dc8884-2110-4eda-9d43-bc438240a5df",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "036fc028-97aa-4be3-9af6-e57789af97d8",
        "cursor": {
          "ref": "e938e95b-97e9-41fc-9789-06fd34035679",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a9ee444a-3a1f-4938-8ea9-0479420505bb"
        },
        "item": {
          "id": "036fc028-97aa-4be3-9af6-e57789af97d8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "806133c8-cf77-4180-b45a-b678eb75d951",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7de649-5ae7-466e-a5f9-1cae82497ca4",
        "cursor": {
          "ref": "8a0a9b3f-bc1a-415e-8126-8534b7d26a04",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "953be149-aa20-42f3-9712-188ea9059ef6"
        },
        "item": {
          "id": "aa7de649-5ae7-466e-a5f9-1cae82497ca4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b85a7841-c080-41d7-8620-7ca272d69049",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7de649-5ae7-466e-a5f9-1cae82497ca4",
        "cursor": {
          "ref": "8a0a9b3f-bc1a-415e-8126-8534b7d26a04",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "953be149-aa20-42f3-9712-188ea9059ef6"
        },
        "item": {
          "id": "aa7de649-5ae7-466e-a5f9-1cae82497ca4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b85a7841-c080-41d7-8620-7ca272d69049",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f49ccf1-7b52-4086-b8c2-6e9ecc9060dd",
        "cursor": {
          "ref": "aaf99269-1447-4729-a140-3a7bca141914",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "38bdaa8a-252f-44e3-9785-c3cad71e4e15"
        },
        "item": {
          "id": "8f49ccf1-7b52-4086-b8c2-6e9ecc9060dd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dc8f3300-fa9a-4faf-bcef-7ec7a914a18c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62ac517-8480-4de9-9a36-e206ad510918",
        "cursor": {
          "ref": "47ed9354-020c-4962-8597-1dee8a45d8d7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2b58472f-f83c-4614-be0f-5f95efff78af"
        },
        "item": {
          "id": "c62ac517-8480-4de9-9a36-e206ad510918",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae9c0988-efb0-4e86-a312-804356b98f27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}