{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "05d46f42-26ad-470d-8a50-7eb15f52cd7e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "09f06bd3-385f-4cbe-843f-71823c59e7e3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f453679-bee5-46d6-9638-75a6351bb1e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "637f2e55-9111-47f3-8117-ad6ff2f3ef8b"
                }
              }
            ]
          },
          {
            "id": "f618dbcd-07b1-48e1-a601-b6a8a3fd9441",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcb75050-7e54-4b47-a2a7-d8a9a4ffe7a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "173726bd-baf4-4c0d-9542-35da7638566a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "01ed5961-bcf7-4ab3-919b-891a9b7b62ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "01e8e1ed-e6a1-4728-8789-041fe38ffdcd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6e5a066-1a3b-4792-956a-b53df8fefefc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3191eca-a383-4723-a577-7b51085e2a80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a655a1b8-76fd-4ec7-ae63-eb44c93dc5c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56029ec9-67c8-4a6d-a422-6a4fb8d395c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f80acea-4bb3-4866-942f-9f19fd3b058c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c4683d4-588f-4a7e-8f31-fd09c8c3e519",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13049dc6-5479-4311-b5f0-53d6f4391dc8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dfe9121-32c1-43a2-bd78-0eb641b30021",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d0c485d0-f142-427b-9744-835ab51f4536"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44501b38-d978-4b16-804b-6bb339a9eca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "366d944d-721b-4288-a2e6-3be102215757"
            }
          }
        ]
      },
      {
        "id": "d7881216-d7d5-49d3-9df1-d6f52d2735d3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3409ea35-4ccf-426d-ae99-cd7633d78c7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2782337b-c7f1-4b57-98bf-4633b8aee534",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "483ca8a7-7f59-4735-8f63-fda29e750ead",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a8872f-e515-4dcd-9f45-6b2cb6c6a6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "122b4716-1ea2-4ac0-b28f-ac15dcb71c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33146cd6-f46b-4a7f-afa5-96b740745406",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271654ac-8534-494a-98d2-91b1dd787ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6964adce-5023-4285-be8f-2a5f98080a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7549ac1b-5a91-4467-8d2c-df545d811e0a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27022a-fda5-4ea4-b8d0-4f0b946145da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7173dbfc-9f97-4a58-9f2b-35b59f553209"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7490e2e3-e72b-4617-90d9-1f6cb0daf52e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccd7969f-1041-45a8-bfc0-47dc964b161c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db01709-56f6-4f66-9046-3c79036409f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2808c42-229b-42c2-80a2-960dfe131711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05b1cfe-d282-4af3-b10f-20e9027fa616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514dd50e-39f0-4e77-ab1e-1f8081184dac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ed27dedb-1d86-4752-a881-f43f3ec9948a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "226e12d2-5123-4f39-8d0c-fd15635d2a2d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eac043c4-cf5e-4fee-b9df-36132b24ab59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0ca59b38-3ac1-4b0a-88c8-528b6352b88a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f09eedb-7fcb-4900-8379-9fb8b1f860cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b7d7532a-1d31-44af-b9fc-c39fdd8afebc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "361cc5a5-2dfe-4909-84cb-3b6fe63f941d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9a0f66e-4a7e-4373-804d-8e915b364478"
            }
          }
        ]
      },
      {
        "id": "1768b0dd-f971-419d-ade0-67aa71543991",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "114f76b8-f087-4b36-add1-5d5a5be3bb1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2e3832f-e9d1-4b84-8485-e0fd05b1c737",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "030c016a-5174-4900-82b6-f68a17891fd6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a526ca84-9c82-4746-a1a7-f38f393a54d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a72aa3a-349b-4438-a363-275607069daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b385c2b0-36f4-4e55-a87c-b3724c889e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d91e1c55-d734-48f0-b0c5-7877f5851fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ed958-6bf6-41fb-9726-cd583f98e87f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f57a56-7ea1-43a1-b9ad-f1019d403282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f340b6-5fdf-41ab-88a5-430dcfa9d326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cee9e50-0c0c-4f41-8b78-ab09625316f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "216834fd-bff6-4e14-8aba-b47164ea4456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba156d3-65ff-4089-b80f-a6e30043264f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18721c25-79f0-4e86-8936-c7efc7f1d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113ff61b-254f-42f2-9c42-39f1d5bae580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceecb5a-bd3c-495d-bd8c-4d3754149829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46cdb7b9-554e-46ab-9ee6-edf244fcb47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f99899-69cc-41e8-b3cc-ac086d816d5b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4886ef10-1fe7-4c21-bd7a-b9973e17ee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c5f4da-1a9d-4e71-b36c-a789a070e379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c8f556-c861-4ab6-afa8-016487e27ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b6a5f26-df30-4c5c-b695-11ab5e77fb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0b10e5-585b-45c9-98c0-68e0763f496a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26d9be3-1cd2-4758-a393-eeb0b4144477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70d2237-2455-494a-8135-3882b92a2da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1a6be2-7c51-4a6d-a656-31770d5d66fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cccbd9a4-8948-4d83-8fac-149b247fa708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3321ef4-c79c-43db-9f19-ab0d13f22340",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291bf38-e114-45f6-a492-ce442dbb10a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10f6d14-8af6-4992-8bdf-6ac4394fa43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4d2b11-7371-4ae1-968c-0710d23aaf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6e27931-bafd-497a-9fc1-e69afdece7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fa3b40-81b4-45bf-b4ff-99308a1a7e3c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019e2778-4001-4075-aace-9c2885bbde6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457fab37-9153-4aed-be69-0132f7b08950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa87f6e-623f-40b7-9085-a1240f1fc0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3516ab50-36c5-4e1e-a046-bd83bde9fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406628bc-0acb-4c2e-925c-75ec5f3e96f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9dc9fe-9d0b-4256-809e-5b7cebf0af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834dc9be-c7f5-440e-bdcd-d0cf45d5ddc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c98dab-d38a-4d7d-a246-1dd550e4eaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b46efd92-b31a-440a-9195-0ce08e4a7735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a33d001-1c69-4282-960c-46b261ddc808",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f606d940-e17f-4e80-b9ca-34b182cba555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a58071e-b998-465e-9102-30cc7e5964e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b6356c-8a5f-4083-b692-c72ef2aa784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ded1ef6-dfbe-4a8f-baea-28c883a10c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526df52d-5932-4e89-b770-33f1500ca0ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5358d55-23ca-47b2-914b-26d6c91e885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733fefef-9a32-48c8-a270-732cf5ac8bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6ba3ed-9ad2-48f1-9265-bc9ace08e7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b6a22d2-568b-43a7-8375-57e2e8ad0d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbc3162-1212-4ed3-8295-11a464641e48",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8254b72e-e2bc-41f0-b8a6-f5a91a787a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47b43f5-1378-4b47-8b41-d7b7bd06b890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cee13a-55db-44e3-8457-08bac8e20288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2647a5b-7669-4aad-968f-471a1391f161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed87ac63-b358-4d57-a5bd-d3838d7577dc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50150922-a761-40f0-849c-77821fb2d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee04e9f-60f3-4b02-a1eb-0139efa9da94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263b27d1-529f-4894-b206-9183bf820ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a4f2aa-ebcc-468c-bd85-82ddbb091d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d479f0-38d0-4b2c-9b85-97dc1c389c12",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24c0296-40e7-479f-9b8d-e2f83039d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d9e9d9-b015-48e1-9a00-162d84ba0a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11ccfca-4b87-467b-834f-3f75008fec54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9705591e-2d3a-4468-ac41-05f938819cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08a8cc2-636d-44a4-aa17-8cf6eb0d2c12",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04601c7c-62fa-48bd-9546-65665277abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b16ac2-6503-4ef6-b5e4-7a4aa9d5ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f3da8-26c4-46be-8e76-c9e21f3568ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6be6186-3472-4d4d-9b1b-fc4743a536bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c48488-0990-4e86-9c89-d8a513368607",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b8253a-cddc-4ebe-9043-5e6e28849453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7286ec-09e3-4455-a15c-3a385c4fd10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1edbeb-00f7-48a8-8049-7a73e60d6511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e938b9ac-ceb4-415c-a70d-2aefd7565bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189859ae-fe71-46e2-b682-0284c9cfa2ee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b9ecf-0f5e-4232-be4b-4d5d3067f499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0008362d-60e0-4fc1-a880-930dab12287b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68130c89-ebed-4934-8fd0-26767de024a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e998f47-df0b-4eed-980f-7b883840463c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a56457-d4bf-4c3c-bfd2-17a233c279fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ae6a57-587a-48de-9e50-64bbe3cdd73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a390e93-191e-4af0-b333-33ad48d0b27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765b7811-dd77-4a7d-ae15-da7161d5f944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aa25292-fe77-4c91-baa2-c2c1765ce0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24c1495-5965-499e-9918-7588cab91612",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b80b5b-8a1e-4e83-a0c3-6727624462c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba95bd2-4210-4a51-a107-e776fb9e0283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abd5435-b219-4268-80f0-9dc67f393199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd007b14-c2aa-4873-aa5c-73d234a4f14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2b2726-33d0-414f-8101-4ec080b15402",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9264fb0b-d663-439b-a1c4-9b922a169bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b37ba43-40dd-4377-adbd-823c34360dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf68b51-e95a-414b-aac4-93e120314926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7006baf6-90a5-41cb-8920-9232debe29e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbcd63b-0a7f-460a-818f-47b85b7217e0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f141e6e-8ffb-47cc-86dd-9aa75c7d9a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73552fc7-71ac-47cb-a9dc-dd8bbf3d3504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca3820-58a5-4e3c-8383-381156d41ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7fa5a0-b8f4-4c4a-b341-ca85f37b3720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3540ec95-973b-411b-8628-38362fb265c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83582f7-e81a-4bd5-b04f-1c173efdface",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5b99e9-d260-4ed2-b156-1bff097d6724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2311cd4-b781-4d46-9702-a55dda371f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65816e6e-e334-40b8-bada-fd170c0f4e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730ddc3e-899d-4d17-b3ce-63677b642955",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd123983-6453-443f-8947-3414c4dfb839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5377e0-d1e3-4668-ac32-225cebaa760a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8811cbd0-e646-4723-aef8-cd0532b5b44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2112d44-46d3-45bf-808b-eb248317130f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86321263-c9cd-43b8-a6bf-a9158b34ccdb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49793c1c-2a5c-4a33-931e-023f837b27c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0393d7-14fe-4efd-8e9b-426698857cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a957f2fe-62c6-4586-864b-8369378e89ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca9a2df-8e42-40b3-9b94-8254204bed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a54c18-3b46-4eab-9607-206c3da14eff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67c92d2-e815-4e3c-a805-8e48fb0fdffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d9f9a4-e7f4-4e9f-a276-ea1753744a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd2c07c-187b-4b60-989b-64b9e3f03736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4884193a-643b-4417-a708-2bacc7bb21a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0586d744-7c82-4e48-beaa-cdc54f994a06",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28ebf94-a72e-4f6a-a783-4026044b280d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c798323-3637-4be1-b108-b31b773ed65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdec46a-d43b-466c-a87e-39456215f92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce5e420-f049-4a95-839c-10d7415a51e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f65ad0a-3360-40df-a3e5-283e5859692f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14212b56-d1f2-4910-9c80-2054369800c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ea7b3d-fa16-4097-9eda-b24203227f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6603c862-d7ed-4dd8-96da-88e4d409772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c986f4de-afff-4760-a82e-60ff426579d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84fc0e2-6b35-4f7a-a810-c92e8fa7bd74",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cd885e-e8ae-417b-8f0e-1d3fc1088c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c60a5b5-2422-44b0-8f77-2c3b8c712232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63e586b-0165-471a-a0c0-97159da0e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25466e7d-462f-4473-bc9f-3ce116adabfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b38711e-53db-454c-b911-08d9fe4216e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313d4bf8-7a57-4083-8566-4728727ec40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b21beb0-028b-4862-920f-cf9bc573d9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975719f8-38c4-483d-8bf6-5c5644c7c027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fbef6d-9c3a-4bdb-b803-f760bdd81322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ddafa6-6ffa-4871-a184-fc23907a11b8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5925fb-755b-43e4-8514-5885e4f20fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362cdd9d-7094-4a86-a31a-3f755a9f2916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cf0ff2-495a-4fe7-a158-333b9434bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ad1432-e5fe-44c7-85d6-bc6175a4f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56382d6-14da-485a-83ca-0f0814ae654d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f57eaec-1273-4a28-b756-9dfad12dc395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601edf5d-bf80-4c34-9a4a-627f66b3e1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ed8bf3-48cb-4268-9bc7-48245ba72e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdc3c2e-1ce1-4301-a231-2095c2d90f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c4410-51f0-4727-894d-eef2440e7437",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50eb5800-c5ba-4ff3-9fed-0bfb0575845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91abe1f3-f4db-4612-bd9e-b5fb0d65b9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc0fe86-f879-4ee4-b1bf-b443f219ab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f75485-0394-45ac-8af3-818a5535e885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85feeafd-9c83-4e3f-9e12-6b0848a2f80d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a192361-0982-4797-b264-4741a1d02868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7032b251-9858-4b4e-8516-2cb5b41844b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c46948-cbe5-48e7-8d9e-593293e23fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99985876-12e5-4e96-8049-2b3d941e34e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2500606-9d52-49ef-93e9-3f18b8344446",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0cb137-8195-48d1-a9c8-962bcc9b5700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfba555-f157-4351-b753-e18cb3b007fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef3e78-ff03-4323-a903-9a708e7612b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e238060e-1d7d-4ec9-8296-7c1a35ef0faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd03ae46-73cc-4f2c-b1df-6155d376b1ed",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541842b4-6d68-47e8-963d-5c116d031024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b168e8-8927-48e6-8854-4dfa3718f001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf0c2a6-d0ef-4ae8-bfb2-f82da94ae487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3687444d-b6cb-4b05-9e67-286a8b2c56f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a7a7d4-ad20-4831-9090-a650bc9edd2d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a13ac27-3fc1-493a-8e30-05eacbd21729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d315cf-d424-4fa9-879c-662c898a5c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a8659b-67fc-4043-a53d-c7da1a4713b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dca5cd-9c0d-417a-9235-c2bf7d15e187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de027613-05fa-4b5a-a626-19755b60f94d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb008d9-f4d2-4b8b-bf8f-e1d3990e6395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8577750c-a5d3-4285-af33-04d4ab252b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cdebf6-8762-4631-8b0b-77f11e158727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e99e9de0-e304-4a23-884d-a27db2bfe176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7199b65b-2b11-410c-8de1-22701c4797c6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c216ae08-412d-4ed9-9e01-1a9bba664121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081b8490-2985-4a0f-9c82-610ae640f2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ad14b0-86bf-4866-bf94-820091b08c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e62597-ada5-4786-af67-7e47ff2594ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c117c3f1-da6d-4e0b-8146-0c0a4e20bb92",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86223a2c-20ea-4a9d-9231-70e7c0d66bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbd2303-6760-4ca0-a959-1dd15b68db4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbc738a-0d7c-44c6-b214-b6c861632aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb14b24-4fe7-4c35-9516-2d03ffa44d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a817c6f6-6481-4919-b842-a442dd28f918",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1def13cd-7350-49f7-8d6e-5e35172792cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e7bec2-bea7-4d10-a35e-d7c538c05e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eab523-3125-4b7e-b83c-6c744560a0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5542554-06b9-4892-9808-c2d419fba64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4038897-cea4-4ec3-b031-1ac4a1b1257e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec4e045-908a-4bf7-b5a2-c3f09dd961d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eda200e-a07a-40d6-aba2-3a85a0b3b3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84c855f-c33e-4d00-8a1c-6dbf109f4993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc0571d-a790-4e91-b0f6-8194893ad430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7beb72b-2930-4fc9-9208-c9fafd3d7102",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471211af-0507-4e15-bfe3-0e249e97b3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c536f0a-b214-4419-b795-f533d52b97f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3974b5c6-b6b8-429c-9c93-df617af9adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa1e425-a0f2-4e6d-a94e-ae63c4cc518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cb98a5-ed55-431d-b4b5-3371e00818d6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51188784-5ee4-4c4b-889c-0221219fe9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94372c4-3ebf-4fcf-8fd8-03168f495101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cba4019-04be-4b49-aa35-755d0c063645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f37d3e2c-09bb-47af-8149-ff271c146e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4d4f72-27ae-4988-b807-ca6aa7daf6d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb18dcfb-b6e3-4c3a-83aa-2139183bc20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d560f1e3-9ed8-445b-99d1-50c4404e71ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6c2a4-0c14-45e7-b467-33db3fe92923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3227aee-7200-4b79-99f9-9ad2e1e56adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e9b5a7-5fce-48ce-8750-cc3250ea4bd1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222017fe-3126-442f-b063-99ae482d7567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fa27f8-c16d-4170-a99d-5557dc520f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90b3e30-08d9-4d34-892d-b4775a6b3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3687f3-0e04-44a6-b6fc-2c866d69d734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c86e83f-5da7-4e91-9ab0-b20a21eae4ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82aefc9-f0a6-47d9-8f49-2f0fad255088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2deed3b-916d-4d39-aec8-aef6b2326a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe533cae-764e-4c51-9ce0-db097c511f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d80962-31f1-40e0-84dd-17c532a4a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b826b2e-34dd-4bf7-9821-2bf830dc6697",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c65c51-d13e-49e2-8adb-4abf3af2bb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d01a14-2952-4db8-825d-d1f264f8db39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a04b50-ec1e-4ebd-89ec-2e70a931d878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c7d950-7533-4501-a81b-e008868ac7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dba051b-58ba-4519-b976-a1c6c66a67b9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988b7aae-8dca-425b-9e8d-438c93f1ac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178a3cb9-a2d6-4e25-93fc-78b1dac171f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8694c6f-40dc-40b7-9a1e-9b81d882de42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "412c82cf-1bed-47fc-afd1-b0013d6158ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7dd9a5-13c7-428f-8f94-1e45bd270545",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c55c65-4a6f-44f2-a372-2c3cefd1ddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c33ac7a-f5b4-4b80-a844-cfcffef90cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a15a04e-c419-4b28-9924-818e14cad065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05711f84-f1bd-46b4-94fb-7b49bcd90d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a54e29-5fcf-4c16-a13b-20ab35544725",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f48b2df-4eb7-49ff-a2a2-f3913ba168ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9d18e4-54e4-4651-a934-7f748bcfcd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16842aab-b12f-436d-98ea-f2ca0dd4dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7af750-4e77-4ad2-90a5-12335704844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2313fb90-1825-4c7e-8f55-a0dab07c377c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb585597-4f97-4db9-bbee-6c60e5a10998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89541673-cea2-4450-867c-c402efa2555d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118c77fa-1b27-4d76-a4f8-021ece79c65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "969354ec-7552-4abb-a774-5eb9199c4a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a929565-517e-455f-8244-f97a94450c4c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042f86a3-a4d2-4b2c-9934-ad729494b4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc84b98c-57b3-40e0-8c2a-eef6d22f3724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f149e6-794a-4530-873e-d3c4671a7b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f137801-e0ca-44bd-8156-7a7b4d1b1c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d36dd-d977-4536-adfb-d14daa760e3f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f527b7b-1722-4647-af89-ecad18ed66ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1653440-4185-4b27-b2da-6398ec5dd45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd0547b-bc22-4b4d-82b4-799133af3914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebf0a6d-62da-4223-bf49-38d22ed7546e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb76b09c-e455-4d08-8395-22deeb248fae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9536c92d-8ea0-4ded-8248-40318dcedc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2009a3bb-b009-40bf-99f9-d63471d4073b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d93f203-9c2c-4b0e-a758-5e846e9256b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeb268c-7c84-4676-a1fd-894b44fd28b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c165598-0e32-44f6-b6d2-ce3ab8f0b651",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ed0a12-5f61-4f61-afdf-a8ca34296154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16dab6a-6055-4586-a636-630f0dd2a215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73aad4f-7084-4acd-a00e-2a0b637f7867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b065307e-35a7-4426-8feb-1b975c9dea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd40342-5d4e-4526-8363-f68b005805c7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efdc4fc-d5ef-4bdc-a35a-a70ca3517d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c495de1-33de-46e0-9bba-7cceccd3822c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30031e13-a1f8-4764-917d-6a261e6a8156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92f9a5c-1aeb-4924-97e0-28e455db1d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b295188-99b8-4a24-ac03-0063ad7a7a1c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07b1ef2-7561-4863-ac99-50829574a78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07402c1a-f35e-439a-a17f-cfa28ca81442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d28ae24-9ab7-4fe6-b19e-9bbbd8e83e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a12a7c95-2138-457d-89fc-395048b51d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d044767e-adfd-4548-b934-b190a843252d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f78c25b-b850-4db5-a5ab-8707275f2fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5062ebcc-c82f-4c9a-b15d-1a0ab430dd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27733d31-7dba-430c-ae1c-09e2414bac7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d249e9a-404e-4152-a1b5-69632dbc760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab10d77e-c2d1-4d84-b4e4-495eb742ef34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c8b3e2-9c0a-42d6-8bc7-a81c9507bc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26487f7b-dfeb-4859-9ba6-dd517b9641c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38121a00-d59d-44a8-8be0-d3fb78fa815e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6ebaac-4781-4f23-a6c4-8497f61fe9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37707d44-97ad-4911-8ac3-118ccf3c93c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f4c7cf-2c01-4cc3-88c0-b0d732598896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecfdd01-6796-40de-8305-1d55762da017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154ab35d-f6b0-4f7b-bda2-1430376bda95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48d0aa8f-c644-4114-aa2b-2a2f8734e0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5331bc07-0d94-4d19-a33a-1554bd44bd4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126864ec-5f71-4231-8628-8f9bfa1d3be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2996cf8-308c-46da-b048-0741204ac43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34063e58-acfc-4dd8-b23a-81d577a09414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c54765-7b4f-4e9f-9008-7a5df9caf693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17457f08-a5f7-48fd-a3f4-3b661fbbffea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc973b3-2049-4a87-a85d-a03d9a717b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e57f6f-fed0-494d-90f7-4c9b439d1f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdab911e-2eaf-42d7-869f-ed563a53ce5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "616a3337-42cf-4a03-b73f-aa5e3658ef27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea9caaa-8bcc-4648-be08-1838b2c2c5f7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0473afe-3908-4405-b87f-f6ac01ff2cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae69c28-fa25-4655-a53f-945f027601fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac97d97a-d165-4d85-9b4a-ef85d8c2c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d5cdb1-65ea-4d98-9061-87df97bce171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a35e2a3-0a2c-4dfd-99ea-5a48e4aa0b6f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b153803-a6d2-4d28-98ec-ea349415d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d240c6-5a67-4e6e-8a4c-0ceb155e6433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3eed60-c1f1-4aa4-86cc-8bc471dcbaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45483e92-492a-419b-a2b0-a1926f32508f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c574f2-9c79-453d-9040-d4eea0aa7441",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb3082-8cbe-42bf-88c2-c5149dd5b563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1914f7dc-1d2d-42bd-84ba-fafaa339322b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23575b49-7fff-4c20-8f15-56dab40a6fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9f7c3f-1e62-4304-a428-0785de580640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de81add7-ee8e-4706-ab5b-660f9caf6dba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c69e94-5c8c-415b-9b0b-54aa095208a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14139fb7-db58-489e-b52a-972b20939716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb9414d-b373-43de-826f-8f5294f7925d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fb55aa-91ff-426f-9fb7-fa637a9d14e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c18ba57-f764-46b3-a7cb-9f62a5274e5d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d92fa9-9989-4e58-92e9-4e846c11def6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8a87ff-26c5-4dad-8cb6-61366a6f8a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b37225-5386-468f-9f06-563f87778800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ec84b4-9b2e-425f-8ffb-ef8c03abd617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e398122f-b526-4c88-ae40-2fbc84bb99d7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c87face-b743-434e-a3f2-45c2db0bd785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd011b25-1531-4712-97ea-9163f94dbe29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8157f2-2432-494b-a840-5fd444957db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5d3602-8f27-44c9-a6f8-d31e5ae05533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f19d3c4-055a-4fe8-8dd7-b65b74acf11b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f2802d-4c25-407b-b46d-48ea41d8c727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca286653-b3f5-4bde-88ae-26c3a6a84bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f01b29d-a9a3-4cd3-81d6-2ce2d1bb9f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de83cf0-16fc-49de-a6e7-abc49406401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f16eb3d-c2cb-4693-8183-abf224a85026",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506db0f0-d00b-4205-bc3c-39a4189f56e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8778c679-f67f-48eb-8ea9-ca59190f46dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85dbcbe-bb5e-48cf-985e-1232133910f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53ee32c-5b31-43d6-909d-a374e03cd5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5902d4c-44f1-403f-890f-e81bb3753925",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cd51bb-879b-4a05-8872-10345ee7df35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089c1906-f4a8-4265-9c89-b5e05e5e52ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b78f604-f38a-4012-88e8-0a17265a8aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4559004b-1e56-4a1c-8608-366107db9613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57cba4c-9e69-4e4a-9c73-6ba55bfb3dae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d603c968-7c0f-42bb-9844-565fd7e52768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c2cd4e-7577-4ba8-ae0e-24c893719015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3822ae2c-1036-4571-86d4-2463c8475df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c96e75-b932-46d8-9a08-00d3a862403e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb64500-bf82-4f8f-ba48-1cfc2d84c1ea",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa46dcb4-b266-43c8-aada-47d67c888336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32395989-b884-4432-ad39-dc6f5119205e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07a73e4-1623-4bde-8a80-29b72c60ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51582894-9fe4-4c89-91ba-3bec4cdca28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd706d0-091e-4fa0-890e-3f15a5e9da0b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81595fb-2c00-4021-a2dc-08b41c2f9a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ac34da-7358-4de8-8d51-2820d6692c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f687fc82-b27a-4fcf-ac8a-947c33a45cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "deee038c-af87-40bc-bb81-8f2b64267e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8106d31-ed4c-4f4d-9940-d9ac2d5750ec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce8052a-488e-4bbf-ab51-04285ec3126b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d46acf2-5f62-4ff6-bf30-69c54b654e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e073088-3bff-4309-aa1b-ae065cd1cc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df59bc2b-e28f-4d79-aa2d-b87e88d1a556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd2bcca-0e38-4f0c-9da2-3eba46521b78",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8463442-1e34-4c45-8190-2d18c8b78fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ac0a8b-adc6-40f1-b0f1-b589b9700997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594ffcc-ef44-401a-9d40-653905682c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b75d24a6-2aaf-4ade-956a-7fbaefdeb962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f6573-3294-482c-82f7-65a16370357a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a603f7-d387-4fa6-b5e9-378decf2f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4292714b-ee22-40e3-b0b5-027595b6b303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96777be6-2161-4ee2-a6b1-c2c09be8ec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcbd8cb-bb0f-4ffe-913f-246c7cd9f591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949eeced-73c2-4aad-8321-1275b9d51210",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a8d665-82e3-45a6-9ef6-1036aadbb2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a63d7c-ba8b-44b9-90ad-402d5d9964db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5d544a-9b40-41f2-b699-ead93d3a20d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96a3b63-a069-4cee-9bc3-85411dae5580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d93169-206b-439b-9951-ab500f7d31b6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d2e47-8876-40a5-b8c3-feda860def95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc04664-6e9c-4019-a74a-0a09e9ca6949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0821ad20-f136-492a-a72b-6685a7b944ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d2b8a-f29b-44c9-b142-5ce0774caf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caf9f5b-cbd4-4bd5-854d-9f84d3648d13",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f549f9-16c1-47aa-b77d-ef2fd5ac8540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f850493-edef-4dfd-a23c-b1cc2ea73ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93126a59-6c95-47c7-a45c-f4a3100ebf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6db286-560b-48d9-8149-c69b59ac3d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706b7fcd-1290-4498-948e-fb586722d75e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f98387d-e6cf-462a-968a-dac3e31746dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c991c3-0dc1-4076-8c7e-ea6faf76e01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132a8d9e-6618-4cd6-85e7-e5b866b678fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26094fb5-ce65-4ec0-acd8-7d4217d63732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e0530b-8f0a-418f-85b3-6254214bacda",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43b329d-264c-4fb7-a0b2-fce48af69b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840c7e66-be85-49bf-b615-a2e7edfb4be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4445b770-15e5-45a3-a427-32f5543cc748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24598ccf-4b46-4235-bd12-214b8a4e0b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea2ccd8-061e-4b88-bb1e-762bb99d73a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a5376-4728-4f18-806c-efef46776147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac17aa0-ba9a-4f87-a019-e47f67b68733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4da5ad-3d93-468b-a13b-6c26ab711c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03955ff5-1115-472e-b2a2-9e0edf043ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e5b355-cd33-46b2-8e69-b1c729805d53",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd28119-0c00-470b-ac50-8d8c688d244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099a3a28-b60e-481d-8661-1e7951211bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636c5ade-3ee5-4c12-a22f-460308710455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b11d23-242f-4a29-8b06-48ab20b9c44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2a3624-56de-47fd-8c2f-7e3dd05e0815",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a844e91-c769-4ea8-b8b5-77da71503342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f6d536-5089-4a3b-ac72-bc836e111876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8885c869-58a9-4d21-b7df-b6b1c5c10d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb11037-a9a6-4e96-a1a2-f1d0be8e3afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e10e995-61f5-4d05-a138-6d0d5bb3f124",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c6c65-4bb9-434f-83d0-8ad6d2d05455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a86cb0-2d2d-4a3a-bf9f-2770b1ae8b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5765cc-2f3c-47d3-92e4-9b9da1464060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfda7ef-a717-4572-a390-15cff1aef754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43934e16-3242-4689-acf0-a910aef4c508",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db496d26-b6db-4648-be58-c6f931549663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fc3844-e833-4a62-b984-7c5259dd4bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6ce2fb-6006-460a-a13a-256348120efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b952011-c000-48a1-98f2-45b1a66da42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa89843-f450-4b3d-bcb1-bf0e6b222510",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a256cc-c7f0-4fe6-93aa-32f3eaa50c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030d32e6-2c17-460c-999b-d4cfeb764d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a43cad9-3aff-454f-8fde-049f64adb2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07857e85-45c1-4c7c-ad9c-68d8ba3dd4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe636c4-a98e-4540-8ed2-a26dc0aa7ced",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a44d78e-ae84-48c5-ab9c-4e72d9bc434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32021c70-408d-44f0-936a-71ca06fdf6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53259521-2cf3-4633-90b3-8baa4de90114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a2ef88-838a-4d40-8d7d-d0cb7baf1bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3782fcc6-15ca-4c26-8ed9-bb9b7fa23a58",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec058b4-1315-43d3-b4ec-a85a9644b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723b251a-e5af-4abd-8268-dff1dddf1c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd050d5e-3ab8-4c99-80ab-b939106d014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a1ab5d-94ed-4b4d-977f-f5254c327242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063962fe-dc03-4666-b9a6-7368ab5d050f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879fa813-bd72-4c4e-9a75-bf4016770e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585db536-e8be-4244-b967-6be8d269239b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2672fb75-d0c9-4f3a-aa6b-b795d6c0d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d822f31-1dea-4cb1-af17-49f1fd6e1cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a691adea-fd42-434a-8d07-b590744f6fba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0487e90-bdd9-4737-adc8-276614f4c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786db587-fde6-4d9e-b46b-12ffad64f6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd470f5f-a421-44ab-9321-d5f47168b1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "909b7d67-448a-4977-ae6d-b4c0a0d3ad35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6050f7-1773-4f9b-9600-26a32f172477",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576eeec1-59e1-42cd-bec5-5dc40ef72400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0be01aa-f002-4744-ae30-a253a52b258b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b331b0-b2c1-4c8c-a0da-9a4886924b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc91230-37ae-4d3f-90fc-712a3b1290ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "077fab2a-7026-4f3f-9bc3-1b368a581f6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c3951f1-ac0e-4f79-bac0-9bf77976d626",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29fa2a4-b793-4957-becc-fa7388bd079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f377eb45-e19f-4e4e-9cfd-5773874ca5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbfc81d-2f3e-4ee5-a74b-cfe1d721eddd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25b08070-1dc6-4034-bbcf-ca3845314976"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d89ff3e-8c49-4b59-8212-cd9f9d3f6a02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7102cea5-cc09-4096-bc0b-5fce33412018"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3319de5a-b589-40bf-aca4-c617f89c8ed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8dc123d-bc2b-475f-a9f3-0538d5a1bd74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a1d3222-17a5-482e-bf39-04c63285b6b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1b5a86d-cd95-4f55-8c51-ed541cd01e19"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "57092c36-8f3d-41a8-ab34-cdb66eddccdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "577e17db-7afb-4a75-ab2b-5e2dba4773f8"
                }
              }
            ]
          },
          {
            "id": "9c1a417a-8d8e-491e-9cd7-7756995452d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d14f4fa-bbf1-49dc-ac7c-933c3366a4ab",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b91f633-bef7-4332-acad-12bea0fbbfad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11ca0d33-fa06-4ee5-90cc-569e71954bce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7871f2bb-5b7c-475f-8a02-207030a436c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98642339-e8d7-472a-8e00-54bcdef048fc"
                    }
                  }
                ]
              },
              {
                "id": "2cee0504-fc68-4858-a04f-7487f595bbdf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "639b3a46-0eef-433f-b6d8-bd23a16fc4a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1912166-d3a6-4050-b7b7-73da81a96e0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c843003d-e528-4bb0-918d-eea8557d4350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89f1bad1-db59-450b-b75a-a5e0579631c0"
                    }
                  }
                ]
              },
              {
                "id": "77b629c6-a6e0-47f4-afc4-4141e344e140",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "798fbe11-0817-4b04-aed8-b9441cce574b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a9bdfec-ad93-48ba-bd9f-3cf2bb5eda87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36cd0010-433b-4f2d-8fe5-9b70101a131b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eba3b89b-1fda-41c4-877b-4307bc912dd1"
                    }
                  }
                ]
              },
              {
                "id": "9fb92c61-26e9-429a-bb06-9f0a26c047d5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7010206-274c-4f05-a89c-41e1ea3426c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef4f9f78-9ec6-4283-8fbb-864af2fad93c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56bf0fa4-cfeb-4e02-9342-06d7ee66734d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1d377799-83d8-45db-b762-9ff44b19a538"
                    }
                  }
                ]
              },
              {
                "id": "1c08af55-9708-4263-858a-4c6c4610404d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f57b4dbb-c9a1-412c-8dd5-012fec0e258e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "510f980c-ac44-4663-9462-597c674175c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ed8c887-9ce6-4f5a-9569-f8bdf401fa6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7d686e23-e00c-4f8c-a2d7-930bb5d9ee32"
                    }
                  }
                ]
              },
              {
                "id": "9c5d2221-fd71-4d43-ba26-543e528a8d0e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45107078-2c24-498c-8fee-6a9edb04afab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79dc2b17-a6db-4485-a3a6-6915dcfc48e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "142abf21-a5f2-454e-b0ae-3976f6f9ed27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "361b5cd4-3f0a-4f1b-8e6c-3b7f2ecb34a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efa2f78e-784f-4ded-ba5f-02a48d8a012e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ceabcfb-d40e-49b1-88bf-ada5267493bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d54f06cf-e91b-464d-980d-53b35031804d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8dd0590-e027-4655-bd02-caa77c978176"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4990894-3390-40d3-b185-4e7076e96707",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a1ec71d2-b5ae-4583-b00c-be756a679e70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5b2492d-185a-4aed-ae90-f5f7ebbf065d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b1216c2-cb68-4a8e-ba04-3522bc52006b"
            }
          }
        ]
      },
      {
        "id": "59f79e39-5d63-4f63-ada7-d58a8b5ce3da",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8cc88b6e-b953-4afb-9598-b22be3920fdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d9cfa0f-424c-43c9-bd28-3fc49dc887ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "037338c0-4643-4b45-b407-3760aaa56fbd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4fe9c7-514a-49d9-a076-4b99e2d907ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108c5dcb-2640-488a-9665-a664b3c5ab73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9916a025-f3b4-41ba-953b-995e1a9e9a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d011577-810c-434e-a6f8-61602795c311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0856e79-a540-4824-9ba4-0b3ce10a6e77",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64710c46-ae1c-4d06-85a1-b7bac89d414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd52ad3a-b4e2-4674-9025-286d10e0b62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a4aca9-a80e-4f71-9b9e-9c8e85ce899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d191ef9-7e9d-46f5-9fec-61952ccf356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e34d63-8d6e-4eb3-8e2d-17c560b13954",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d1134f-ec4f-40f2-a4fd-79803dc1b61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a9b3c3-7234-4d74-8633-88e9da956a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73ad436-ca32-4544-9b64-b64f345494de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "539744cb-39e4-40d1-a99b-f0f811b22990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9047f0d8-88a8-4e52-8d4f-653ec51fd468",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5e8f4-e1fb-4bff-be89-9a968b1f95d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55caacc-e6db-4e65-9490-93fd18b9c2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d50d979-27fb-4e69-863d-ed50cfc8d0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17dbc758-85c6-4874-9047-6190662cb1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1644e-90d6-4a70-ab06-1163d1d98b85",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d8d163-34b4-421c-a739-92f3b8edf774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705bee0f-dc1b-4e9d-a075-9c8a94b46ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ae8d2d-5b67-41c9-8c10-770cd16f7c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51aec9b6-ea2f-4e1d-bc29-bce3fa61ab5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b990dfc-0025-4f82-8b22-a1fe9ccb88cb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b676871f-89b9-469c-a52c-6b3127fd3d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff54392-4302-4e22-a8f3-615478a957e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6852776e-14a6-457d-b7c2-1930b7b6c1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "178d3740-bdbb-41bc-8907-6f018181eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed9d0d0-3ea3-44ed-ac3d-fe62b2414045",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3697f967-a6db-43d2-8893-eb52321b2ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d744c57-4564-41bf-88dd-6e5969894dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e275c85-325f-4633-ad4a-1f780958e06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb161d5-5292-41b2-a3e2-945fcc691368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6632070-3ead-46e3-b3bc-6ac2551bb4e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608adcaf-726e-4829-b576-39e349600a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182deff5-a0c9-45cf-8e78-36e7eda6aadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21efe34e-9a08-4cef-ac85-20b1da834274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8896cc-db5e-46b7-9597-e0af8e198a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988b1ab0-7266-4ab2-b194-b9ff2026e4f8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc32ec0-c62b-4d04-9fac-900a59246775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3535ea83-18e8-4211-8544-5f2c0c7f4f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0962621-966e-43b3-87ab-9a2a950e4bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94a289ff-d5f3-4ba3-814b-0e46c5fb52c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b260e51-e216-414a-aa54-4a1067b43eb5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44804a-7bb0-491c-a35e-06b66c278225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c12c544-ffa1-47a6-a465-df1890ffc698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ba6526-a16f-4de8-9a77-46ad6638c055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bacd3a-dd90-49e8-9592-33e2dd942d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cc9bc3-fa3b-4e78-8463-f9893d042c2d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaccbef-79d4-459c-8f06-3321913caea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebf3740-1a8b-4239-8cb8-85cb43c22fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d5f658-c9b2-4a1a-8886-b72e1cb3c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4408e28f-1f2a-4293-ae2f-18d6552c505f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09874d39-b065-4608-9a4f-4caf94436220",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c9d756-569c-4724-8d3f-8d69c029ad54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee614c4a-dbf4-4c5b-86d1-9fd62214564a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27782b3-6d06-4b84-9c1f-ff49d8fdea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "527bad84-6863-4c9d-bc7a-32d72d5e2401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c85f737-5379-4b33-a9a8-dae8268724c6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba40cba-1f99-425c-814d-d7b26a87a5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bafe59-cda3-4b1e-9855-4af8ca2861b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2007a48-ba53-4abd-ac73-4a28b509d9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f051de20-d855-4a8a-aa59-7afc97315710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33d063a-e1b4-4eea-9c9a-c1fb29db15e5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f4b533-255c-4295-8848-c11a830772b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e6a7e2-1a04-4bd9-a6c9-c70d68f1ea8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15548ea6-aebd-4f84-a617-e36fce30008a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ecda7d-bc79-4440-8d28-ae8089488172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94f0535-1993-4e1c-82fc-ebbe8c16c6f0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f7dcc3-f335-45d1-896a-290a3d4db727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45762bc7-2e16-459f-ac01-26600c4fcbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12024dc0-4d53-415a-89d5-ece666075483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8695ea1d-b483-471c-9bf0-245029983e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21d7354-23d0-4580-9c78-88203da7a57f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02531ede-5ebb-4b56-bfb2-be009a4ce8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8e8044-fd83-4edb-8741-f4c3d12a9a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38e212b-d11f-4cce-ac96-7941bc452118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "49588574-b152-4864-90cc-82603e86dc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb5847f-72d0-4399-8b20-084e5be48f7a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f165ab4-d4f5-4e1b-b9c2-4f179732006c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18733c05-c1d5-47cb-b32e-c8270da9c2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966f3e30-2113-45e7-8807-dc47cca52384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae8a43c-543d-4442-b257-7a5ed04c4785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781eb43e-5e90-494c-b87f-9440021b121c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed578d-4136-4c29-bca9-72f4e279d09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ebb07b-370e-4d36-b5a6-bf1eaf3c59b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974cca98-f980-44c9-8cf5-767decc2f958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1685fc6d-5a8b-419d-b9a5-93619bb37f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ef6268-e8a0-4703-95e8-7abd113d2ae5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede382f6-fcad-49d3-98c2-8de777a1effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70370583-dda4-4642-9d3d-7ed487cfa79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc8755a-7f55-44d5-81b6-cca749940578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f95717c-5ce7-4e35-8d48-dd08152ebcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08832ef1-d8ef-4846-bc23-baf2c5fcc39e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e6a2c8-c9e9-4454-9788-6cce9f15b72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58d2bcd-6119-4861-ac51-5f3774143fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb866172-4f3c-4b32-91a9-6c7bf06063bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4e42cb-eca3-4b93-8bef-f8e850bfc76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca7037-0888-4be5-b364-b8b46d7b5190",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db798ca-a81f-44b8-9de3-3c59a4acd038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d234e2a6-bfe1-43a2-88dc-b8055e761549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab1c72d-ebc4-4e49-a047-6be7b8a9dd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc5448b-fa28-4e63-b3a8-10123b274965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688ce4aa-d800-4816-8313-30fc774568e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f739d379-f6cc-4b9b-9101-3e515a1eb911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1470c58c-6782-4ada-84bf-1ea134a3810f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6c5d95-0c9a-4bd7-88b2-ab268162f0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f35e441-ad37-4b91-a618-ed06a11315cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914f2b3-69a4-45b4-b609-cf7318fac194",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4771bb29-39bd-4380-8ec1-2ec43102e474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1e8133-57bc-4a53-9932-b571d3ff55b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f7b80d-f271-43a7-badb-3a2746ede5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9035cf81-a615-47c7-a33e-8acbb1b8942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75803a0-38ed-400d-9d27-8f4a2eb4e731",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24ffdf9-886f-4965-afcc-933df2f00603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18f6c57-67a9-45d9-8f26-6218cfc77fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8410b7-13d4-4eac-b2a1-0466d91e9c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3869633-dfe7-4ac1-b93b-18e31edfb0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75859752-bd1b-4c21-b95a-475ff61d3db1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbedec50-8c80-438e-ab7c-3360a9279c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97fb432-9316-45ac-aaa0-512e1a0511f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a783f1-8dc2-46c0-9e80-3521aaa14671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e23b38-e729-4e05-b609-65ac4b51f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7f0aab-c030-4091-bd18-3390ad442506",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d1d0ee-777e-4a76-939c-ebb43d4c5e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e1456a-cab2-4191-a93b-8c9399a66a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d40573-2af4-4be5-a19f-7eab7a19cc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "433f4520-6f2c-4791-830d-53166815ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8748d953-df4f-4b9c-8994-8dfc4d501008",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e641052-fc08-4c76-88a3-bdedb2fbaf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0144201f-9059-4652-9bb2-ec3308f76e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ad853c-c85e-4cbb-ab49-623cb4fa125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f1ce4d-65a0-446d-ab24-c8014e05ca1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f592d3c-7bb0-4839-8d12-725787f93284",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb87e77e-2789-47b4-8727-94b4ad030bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd67f5a6-690f-4c9f-8c9d-ea279d77fc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bf7902-295e-43f4-8896-8cfbeec49fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37673991-6a95-4208-b55b-9ec1b64bb519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859fd240-86fd-4032-8917-1665637dcc8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37f14db-d14c-4e1f-9739-19d810ec02e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71e9445-c853-469e-b6c2-3ecc3ed14c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4927da86-d37d-412b-bb09-08753f545a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28c447f-37fd-4665-a97d-d3ec1b57a19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df172ab2-151c-4c06-a1e3-5a85353151c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7476fdd8-fc50-4935-9e8f-708e919eb268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1097fa-8cb6-487b-8274-0bea64570783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3e0f38-c063-4996-9377-8dbfb0f50ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb509ce5-5e6e-416d-b6e0-7e7f47b880a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc20fe3f-67ad-4fe6-8842-0c4db813c2e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e168f10f-09ab-4693-9176-75fbe6bb2f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac33707f-3e56-43b4-9642-7c42d2cc1978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1970a65c-5074-451a-bcb2-8e764a9121cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5902983-4600-4fc3-9ef1-d095b2890087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48076d6-ca5c-46fa-b02f-0b508e93fd0d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bb5b87-cc4f-480f-accd-76f982677539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2949553c-5aba-4a23-b5ba-96440b2655bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d691518-280b-4888-a4ee-fa4db4531a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2b4428-d4ff-46ce-9d0d-2d8b2703cf1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5ee4378-5f85-4ff3-9509-aedb6334bc49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07a29a33-d1ca-469d-87bd-2b72c033347f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5224181-4e41-4213-8434-6fb9339b9759",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "edbbb783-ef8d-478f-b193-17fb02ef9db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48f96b4-f389-45c3-bee7-7e3d93d7f582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b79e08c-3c34-4357-89b7-c3bfe7342cde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16315510-6f74-4e31-aac8-3fc8922b5a6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396346cb-fd45-4bda-93b8-0412fb49403a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "802d9170-ec4e-4fa1-8271-96eadc592a78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e31b0fd5-a38d-4379-9eb8-f600ec6e79bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c6d58fc-5b86-44c2-85f4-15d3fbe01dcd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de548aa9-b8b0-46fb-b048-c19544031ced"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5e6c9c4-86f7-4943-9622-ed7259934811",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cc64210-84e1-4523-a6a4-d60c72e79aba"
            }
          }
        ]
      },
      {
        "id": "0dd145c9-047b-46c5-b58b-2edb9391f9e9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d57e8878-c678-4f04-b760-dad6b16ecc7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75854651-d883-4ede-bd51-3848e4351c8e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4876c466-4671-48b6-8003-ec3c46e0c102",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f605d9-e8ee-4046-ba22-f88b7b1bbf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fb122c-cc03-4793-864d-479d6fb4a4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50daaa0e-517f-4558-84b3-2a219a77acea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "63df99a4-5654-461f-b999-4dba8620c4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232e8811-233f-44d3-a24c-bb551b9ed3a5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcf8301-d3be-46df-8892-473fc15efeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ec42cc-3067-4560-a08e-0826df5c80c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab54e81-9673-4557-ba71-732d71b25e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca5ff72-3570-4983-8f26-c0211a81434c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b6ee3-c922-4f81-bf85-e582d50b5ced",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21db9882-d1f1-46c8-ac63-b3a5e2a67d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de05c499-b469-4c08-b1ee-a20377d6961d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8604fd-4e97-44cc-bb72-82088ad648d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fb982a-3908-4cc2-9be8-3c1c4d0c6f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d320fc7-91a2-4f97-a333-3cd6aa183bdf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bc65a1-5356-4420-9795-b3319058f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877c8366-cd9b-45b1-b3f2-fb6fbfac8a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e94b1c9-4040-445a-a58d-d472dce296d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab8261d-fef0-4159-8e7a-5d4d9c6955de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0a56f7-78a3-457e-b2f6-04b010ef5a3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492449ff-3d6c-4587-b39f-7c5913d67489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8d2e73-96f9-4e53-9a2a-6eab62918cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804c8f70-a042-4e6c-96dd-3029e3ef43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "625331f5-cf4b-4a10-afb9-0a4a1fe281ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14298e60-b000-4eaa-bb61-78b360422cca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3409fb7-9cbd-43c7-ae75-1bb04e1168e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b7c81-7f83-4ff1-9e00-99818b38aa31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc8e6a8-f774-425f-a01c-b5a982094700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3ecd9b-2568-424d-a215-fdae0ef59f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8383abd9-9bce-40ed-a933-dfd27f542367",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71f3c63-5b14-4154-81db-8a35eff7a843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1e8ff7-f23f-438c-aaa9-0da9fe18383a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7757381d-c0cd-440f-8bd3-e068c0af4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "56160f15-e014-47ed-8b75-dffb6a5d2eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc96ffe-868b-40c1-8553-40bad50300e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c07a902-e441-4466-a96d-b26dc687e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0986df-2ca4-4c6f-8187-08078d8e2a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364c2c29-21dc-481b-b31b-cbf22b10c547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f98efcf-b92f-43dd-8b0c-a9181d402f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eece27b9-25fd-45ae-bb83-c3b9d5c537fe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704157bb-b041-4272-8802-658cbdbcee90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aecda60-7d1d-403e-8902-6574acccf20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb974564-0821-462c-becf-bea1bb4746da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "452a9fef-4936-4c41-8057-2296fbd87be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cf1667-cd93-4ed2-9a81-4cf8eb1325ba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cae1f0-c5ce-42b7-939c-a0301e300be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0d93db-674c-47af-b92f-f70070450470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fc7088-90d6-4e76-873a-659cefa6a392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e34ed5-7e13-4b2d-850b-454642d1ba34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d789e8b6-3a67-469b-8172-e283d2ad4a64",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3402352f-dea2-47cd-b396-e722bab785a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fdd268-ecd4-4608-a9a9-69fa1d2e931a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d63b4c7-1c32-4555-9700-5a029a2327c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b25be2dc-2eef-4c56-b3fd-1c6ec2f5ca74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59d8507-ae2b-4992-9cea-07b4d54785a6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4749d50a-5018-49e4-a882-cbb3fd298f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464f33cf-efe0-49b2-bb04-e184795a9b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feb8bc6-a79b-46b5-8941-9a3e74914a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f09da0a6-1e1c-4049-900a-542fac0e7e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572a8833-8ca9-4b6d-a102-e58c1421706d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2a17dd-4437-42a5-b927-31ddf7ff0dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b70e20-a33e-42ad-829f-ae3b3b62f20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6f9928-3193-437d-b5c1-a8c21c78969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50665891-79b7-4010-a56a-3fdb102d7292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2facd8fe-107c-47ab-8145-76796b2f0603",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f4495f-c896-468e-8bd7-220a815b278d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8502ad0a-f1f7-4d0b-9063-908cd7d2ffdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e097fe0-eb9d-4859-8cd0-4ddaad8da5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd75a7b0-7d61-4f40-b2b2-f50e80baac36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460c0e3e-a50d-4947-825a-c817e0c4df27",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff74fa-73f9-4779-b6b6-383382664a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2859a1d8-83eb-4a19-a531-bc1867b9f44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f51da9-a678-48b2-8609-004b51f43adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d906890-308b-428e-b7cb-70fe171dbb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f900913-db26-445b-b745-ed2fe6e3eaed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71d4257-89fb-4572-9178-eb3eea6035e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bdc814-a93b-4e7c-aca4-5671a37ab922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6859fdc0-fc3f-4507-b1d8-aecaa16d820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdade59-3696-4833-b4c1-045dbc344e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d137311-d0a4-464a-ad69-d390de4d4870",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12865a56-e60b-4669-86a2-02aecbc0d803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db2a671-1e8e-4cdb-be8e-0b9c8bdb19db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112233df-2cb8-487c-82dc-9db44ec1a268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7fe31f-75de-4b0e-b477-5458951a1568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a7fca3-3337-493f-a8f2-4dac1b3d6a00",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9f30db-6274-4689-ac9f-1669130da404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c68376-4f70-40ce-93eb-d2afd3b56d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357b9db3-6c49-41a2-af19-8d27bad844ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ceca9f4-96ce-4923-8861-811c718fc13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d7b268-f0b6-4a32-bcfb-d8b1e906a081",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0773b8-6ced-4fa4-b2e0-b4f708e1fdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2ab3a5-1e23-44ff-b60c-e84e3ec23cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3038c71-e6aa-4de3-a0cd-e006301cdb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa305785-dc00-45cb-9945-a4e2899626ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7eb619-784d-4317-9de8-d4f972a84c5a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06536d24-47c7-4d2f-931f-349a5c6a13fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25fe997-c983-4574-b807-cef553f7a014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda7a202-67f7-40ff-b605-1443a6f33a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9214d3a3-a193-43ff-bb64-b493e99bc2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ac33c5-3fe8-43df-bd27-37dd80afcb40",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1a44e8-8844-436d-943f-2b38365b14fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10af180-6e16-468b-8cb6-10e8ea5fdf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f80224-ac92-4cf8-a162-0337f33e8653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed21baca-75ef-4cc5-8115-0f27d503924e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06528af0-802d-4724-bcc0-cb8f3fa06791",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bf976d-a4ec-4df1-bc8d-7090cb2d7106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7343822f-03a8-4218-b7a8-8fe550ab3a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1ef158-ec1c-4bf3-ab75-1b3c2bcb9838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33c82f3-b6ae-4947-ac1f-c84f7e4a8b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba55226-fadd-4e3a-87e4-ff02d0caa5ed",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d7ac1b-370e-43fe-b124-d37e6136d6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae6ea48-8082-40c1-8d6d-b36d44aa9fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e69e7c-83cf-4011-9bd0-edfb801be3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b86fc6-9688-4d97-a83f-48e7f4e2d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da7efe9-889d-40c5-b862-0ca03b6200ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca5d3a4-c188-4e70-aaaa-124384b3faf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c1b55d-337c-48dd-90f5-00c68432424a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626adfd8-ac13-44f1-b0fb-1784bc26ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b50c281-ae18-427b-86c0-afdef24fc7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12745d40-489a-43cc-b185-9b90b640a085",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeec0b4-5f29-4a6d-97c0-8f18eb1930cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de786aa-4f01-4a65-b014-d48dde3afdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6a8b00-19bb-488f-9963-8cb2fdf4d77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03275bd1-b6f3-4b91-94df-40b20a08a419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a700c0d0-8dfe-43de-8bcc-dfff98520b22",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ccdc1d-9481-42b7-baf1-2fbfda6283b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f22646d-2ae0-4592-9800-6faf0db91548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f2f4ff-5d32-4ff5-b293-5e8c5a5d29e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7632dbe-9647-4ad1-aab5-c54e66a66810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a56e30-d431-402f-8ab2-7863c081fe48",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea000980-1753-4a58-a397-14c86f1cd288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff50fd5-7d29-4b5e-8bf1-e40219b97fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0bd09f-dba9-472f-90df-a281106867c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af132d03-0ba2-4320-9171-2a7dfb74ba53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992b0078-640f-4dd9-8df8-27c01c7cd0ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b143c2-cb1e-4463-adf9-a13868739da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475d6012-694e-4bbd-8eb8-51f440939fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af366587-0a1f-428c-8ac5-913df51ae0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc8b180-457f-4ea3-ab48-64fe7630f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c9a873-33f0-418a-8119-3efc77475cf5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee7eafc-4aa1-4d48-8fec-0a629575509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac88968e-63d5-4e4c-8001-eb8641b401bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaced40-1694-47c6-a0f8-c130faea4b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "610a579d-f591-4ab5-a94f-340a645760f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5438b76-ac7d-409f-91b3-e084ae610672",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8f5795-b072-400d-8b10-7a6f90fed5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cfa645-82aa-47d0-b6c3-90901a273571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcd3ce9-592e-4554-a7cc-1f23e44560b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc303e1-62e9-44fc-9ff5-e6b6955262a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad5baf3-10df-4b48-a9e9-8c9757ba46c9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a4114b-d77d-42c0-b627-86d4614fd47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5313952-aa8c-4432-8e62-530c54bfdd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e426d7a0-1e39-451b-b49b-ff6ae3c4492e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "790e6f37-c0f8-40b2-b016-8ea6efeb357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388d2d1d-1860-43ef-b9f2-cff9d5bc6b7f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73460c66-79ef-4169-a2c0-a14626bcb104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c3c79f-4cd6-4e37-9109-27c209a8e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb01ae04-7edd-4720-8526-849deeca137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c2d3fd-417c-4b91-9d81-5ca6eae0906c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de599e2f-22ad-4b0d-b342-0220bbaf670e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b3fa21-e0bd-49f7-8eea-98f9f6acadb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb42281-da2e-4b97-9195-bf2287d9618f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d05b0-0de4-4fd2-a9d1-84b1365f520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f8cdf7-64af-47a5-b430-99459012d196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d432b4fe-3993-4a65-afee-b6a4fd23ee1e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77004ef0-874b-4490-91f9-b4b6ca0b7d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc73ac50-0c4b-4968-bb91-54e58e4849f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dbf5d8-c316-48ce-8b35-52ebc28ea6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "690a14a2-5bd5-463d-aa88-cf859e761a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2e222a-7935-439f-8f65-7f798affc928",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2456c01f-6031-4dc2-b226-b720bde519f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f5fda3-95b1-4b8d-acbd-67e7957994fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787ea3d4-68ca-4f4b-aae9-a62c07688d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55590fa-f949-4282-aaa2-46c438768388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363fbfbc-6ccb-4562-93f8-1c54c4218451",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3803ca-f9aa-4bb7-a234-9c671ede833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c85a0e7-89c3-43d8-8943-bbc57315628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff527e7c-13b4-4560-bc58-af0d463623d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "327b5b62-aad1-4219-a845-e40e453a918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9548a275-f117-4cd0-a8f5-08737a7222dd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6386d894-2d8b-47d8-b9dd-455baa42e41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77b79c7-94a5-4fb3-afd8-2c0723072150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee45a2-6c51-442e-8aa9-4c96d22f8811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33c3f14-7af1-4658-b029-3298bd3a7406"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fd40d1f-4f82-4564-9bde-78717ec9b835",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b287b51-366c-4823-8c9a-de66a08b4191",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72f66ad-0d54-4991-829d-221c004b7f0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b8ad13-1f9e-410c-9448-94f36337fb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e509c022-95d2-47ff-97b2-eba98a32c2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "accaff1a-cb48-46d2-a826-f3eb1740e08b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0963c8e-e103-408a-a2c3-74a09ec27d96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ff0049-538f-4bdc-ba1c-fbd1ef2075ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "091c1744-458a-4ffe-8b01-4d62755cd04c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7befadb2-3f2a-441e-b084-020443ab1dc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17929fbf-5bb9-4773-8ebd-9bc9ec272b20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ee2e4d9-7b1e-4e74-9004-2d364c76f23f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2451726-56bc-46a5-bd2f-6b6f1ee6e53b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61bccf38-c1c4-438f-95e7-3d9c25cdaadf"
            }
          }
        ]
      },
      {
        "id": "67968685-9acc-4019-93e7-dea5d126fd59",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ab2b59f0-ab85-418a-9916-4ad23490f623",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cafb8c46-2bae-42e1-adff-b3c668826597",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06b5bcae-3140-455c-9e2c-b158ea491551",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf473a4-516b-497c-b27b-64e26beb18ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c332abaa-0045-4814-b938-78d915492067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34538ded-d40e-4932-bd48-f672d5a172fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b8d7fe-8766-4495-8550-9297d9cd4971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61669770-4a71-44d6-993e-f4889d536403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dd6199-f9dc-46bc-8c0f-b79631b686a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d4558f-50da-4ddc-ba9c-367d1e462a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccb3495-3d72-4978-9b93-27da619555a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2413f004-225a-47e9-8d1b-14a1fcab0ee9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9f481-59bf-4b73-bdc8-482bdddc1283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c672bc-0a84-4e8f-a8b4-3888a77a11dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4644b5c2-af09-42a2-a3e5-b7c197017146",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff7e60-8126-49db-bf3d-018b75b3b7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01f3944-cfec-4810-aac0-a7e920795e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a573fe-5991-4f2c-89de-696cd7076bb5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd66f7ec-9420-4343-86e7-6402da0f376d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad7b5b0-dc88-416f-9db3-b8b431c618fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49adf012-d3bd-4e72-bffe-0b116f976f3b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3025fe3c-d5f6-40c3-89cb-fd26ec7c5cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a318448-b6b3-419b-a35e-dd4a5a0e150b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaf55d1-1fb4-45e1-bbe2-84baec6e777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeab6be6-c374-450b-8fd8-3cd75bf53de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f26a57d-d8aa-4c49-9d02-24b6c56df77c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113500b0-867a-4f86-9c7c-3323b7b603d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebcc89c5-ce0a-4078-9f1d-8ac5e560f5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e281083-9da0-477a-9208-035a46a36b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10840f6-462c-41be-bcf9-40c82f0ecb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7d2d2-e16e-4b81-87fa-71dc8d8df81c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d9f318-fc4f-42bc-8975-2babc98c892d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8334882-da75-4deb-bcf1-a6e3f868a24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c98465-7e72-4eb7-b2e3-1f191e0f1546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47092fc2-c34f-4278-9e42-56382561178a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a7e406-5d1b-45fb-965c-d064314a9180",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3632e3-786f-4a66-ab80-d10871994bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f458080b-cf9c-4048-a840-0f58b0c52ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8ee29f-2457-4462-ba0b-0fbf5c2642be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2657e833-d70a-4d26-909c-056431d09bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74e8c1c-e112-4b8c-b941-3fe99909d10e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb828f3-18b8-4c68-8f8d-e4692eb26836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b093841-fdd1-48e3-9f17-0499317d9cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7045bdb0-b0f2-414c-98ee-9eeab42fc5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc26a18-5783-4753-8f42-5c665ee641bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1854f246-3dd1-42f1-aafd-3ce24562c78c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f97295a-0c08-4c7a-b6cf-f61f80c66acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d723af21-35ad-4810-8d3f-78c743277c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b74da3-d3b0-4717-8203-008eec41cd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb9b254-c2f2-4755-b99a-3a0d7289d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e90b1c-f1aa-42aa-828e-8f329e9df751",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49d1448-499b-4c13-bf06-4480a431dc72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3cb2bff-2a42-427b-ab8b-01a5da900fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ea784d-e470-45ff-bea2-7d297188430e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c82e5e0-5fc9-4445-9a4e-805897ac9d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75ab9c8-f470-412a-a49b-741340389ee7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f704bc-fd0f-428a-8ca9-512f9323d7b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de50efa-07d9-4fc7-9344-932c2842a9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f864b-c78c-4d2e-a1f6-46fb2b24e385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c354d6-ef6d-4579-b682-cbbc40255aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aced11-57c4-4e1c-8271-4bd0c7727fee",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12465ac-0b31-461d-b63c-97a85e84cccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa1d5d9-9439-44a4-ac1d-4a27824f29a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d672aa4-b68a-474e-ae2b-ae9c33f00a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6532102f-c254-4f19-81ea-5d1c1e68953e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db08118-e42a-4219-9545-41e3602e6403",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70df9ab-8c3d-450f-a618-47b73d5dc5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae8709c-c238-4d4e-9546-5a9c2ebbc76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49362759-49f6-4993-af38-58509344dee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a914b174-a549-44f2-b88f-efa06a7e25af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46903e1-3298-4bf9-b1e3-b4a42fa9e5f6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298c0163-d28d-4f75-8dc6-8a84f7312689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee55151-cc7d-499c-9903-0584e65dc759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f19ade-3272-4cb6-b6be-caaf9c76c0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad36a56-fcdd-42f1-b11b-daa972413cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671fcdb5-36e7-490d-b016-d0cc9e136152",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293f698b-c112-4a11-9c0e-77959c80d138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d17470a-2083-47bb-b399-fc6fb2b69978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bba58b-b0b0-48dd-865d-a3605d1de38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da463795-8346-4668-8e2b-6af5d4327d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc78143b-6f06-45e9-a0a9-d839364cce78",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537f127-f6ca-44d0-9d34-34dc05396ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec607db-592a-42e5-b129-390182f10dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf91111-4417-424a-ac8d-8fc30cb10314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4352805-c830-483e-84f6-f311cd6e777d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d69302-2223-4c17-8cf0-c3226bf81a6c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5ce18e-d0dd-4a3b-a414-1f8b2b4b4d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66023796-21d4-4a12-ad43-d29e14f92c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c644f94a-8d9e-466f-957c-16eb54144f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8da9ea-d8a4-40cf-ad60-387252bce033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc65600-1fda-4d9c-9ea8-eea1055db448",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d63ae3-0430-422e-b97b-6b74caf86f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6e5cf9-b290-424b-98e5-58ec871acf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c042d9-03f3-48ab-9607-c0752eb5a696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2474428d-0234-4200-8bc1-cd9cb29e65fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc253e18-44b9-4e45-94be-55d2b7c65e08",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f1fbc2-cd2e-4785-8e53-53273e5e9646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d123c4f-fe28-4591-94dc-02dddc8d098a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb0d384-998a-44f1-85f7-65c38d66f2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186fdd5b-27ee-4cee-9410-bc170d33c116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580eea3e-b6c2-4ace-b994-759a8229a439",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e51bd6-e711-4ff2-87e8-c873a58021a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cc1a08-0c0b-4add-aa20-3d893f4be91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a656ee8-529e-43e5-87b5-db416f989f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d6af9b-c881-4613-a519-c5cf589e4a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3a3017-df5c-4004-9d96-7d7272fe1c33",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e0300d-2bc8-4a3f-bd2e-93d36120a026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acbb5bb5-4fab-4046-a960-dd9ea38c3561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bec8b87-e8bb-4fd5-9fe3-210de7c459c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3471a59e-665b-4ecd-ad7b-468591c75555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23594b6a-733f-4eda-ba8f-b26fe292b26e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0331b475-09e2-41f3-8983-2e06fc699a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb91d849-8941-4b41-a2fd-f9d9800443d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8a1648-a38f-447f-b5dd-4ec340c62544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887852e2-9f73-4b2d-af62-0e7ae7bfbd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca086f2-6d44-46f9-8430-98ce36ce225f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eded57b1-fb99-4eaa-8165-3cdc674fc91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a0a563-9d03-4bc6-b7c5-c2649a469c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb855ec8-2e43-4d9e-b61c-bb2a45eaee84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a7becf-5552-4ae1-8768-e5523b3ec1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e814c8-5d59-49da-87ab-af8807014364",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff7b5f9-1d3d-44d2-832d-fb04ddb4ae28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c100d2-0863-4200-b2e6-b7e4dd7cd08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0736e47d-b21b-4068-b98d-4cb77bbfaf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaa2d51-cb37-4336-8e70-6a0b414a71f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58f7b90-e969-4a3f-af06-1fdd58ac6cac",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9978e9d3-484d-4f30-8359-a03fd742ad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1ab5dc-e47f-4406-945c-14deca9624c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474d00db-34b6-4bf4-8da8-2492f0e9c6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7296a43-0efd-44bc-a75f-27a5c84a3732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ca5f12-2d40-4184-946a-384094172fc0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00a4798-6733-46ce-9611-8fd3383d778a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a76444bf-7628-479e-bf31-1781f86078b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf1adab-770b-456f-abd3-f08407fdee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dbfe5a-8a81-4600-b2ef-8b96c94fc85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adbdcab-b966-4454-a495-1c0489f0d0f3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba92c5d-598f-47ec-9466-7f9a0c1bb1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef09b257-d423-4b0c-9516-fc5c270a106f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a1e32f-a0bf-4ba5-afd1-c789a7270aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc81f41d-400a-4b74-920a-1b23ca0c88e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ea0c83-dd22-4cb5-931f-384cef99b321",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31adf765-6ca3-466e-9f6f-f7c285d09a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f7ef7d-7a54-471e-bf20-281f6e3e6ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b65bbf-f544-4503-9101-606bbb482dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7d835c-5184-47dd-8a37-56b457b22bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973236c5-3532-40ab-a1ce-fea71f8b77e9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ade22e5-6e18-4a73-8062-5af5db4f4a0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2649933c-ceeb-4fd7-a359-04d618716d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf404ba-430a-4743-b504-87f1140490e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd15c2de-e5e2-41d8-a902-1ca7df4732c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6486b0e9-89c2-4fc9-8808-626d8a66f738",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f894b06f-07b0-4b55-b342-2272989b70d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0366b75c-96c2-4b57-8f93-09c4cc9a2b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73935679-5f78-435a-acd6-d23e2d1a55b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c3ecb6-ff1b-4976-95a0-a739b8c4defb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2044bad2-fd8b-4ab3-8b9c-5642a32bed4b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef485542-7ba8-45c8-9b1e-0c802e5a1c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406c0a31-710a-4a8a-ab7a-74c97ea774ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de645a83-e15a-4248-9df2-e95278319306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a27f9d-1a2a-4882-8d3e-ce76a0ff7d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82d3647-d29b-40ea-96e1-439f7c5181ad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40649fe3-2d3a-4f11-b94f-c762f43f06a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6168c0-b058-4d1b-b272-a215da987108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452f44f1-1a3e-47ab-a64a-e095fe0e2dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d2bd83-4ddc-4fd5-a388-e73a46ab17eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cd3491-5c4e-4464-b014-451cdc84b77d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5d8ddc-4e66-4a2b-9fa7-e3dfd29c8cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb642dea-699c-44ba-82d8-aa05cf7375a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd12e50-6987-4479-914b-ac9ba7619d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535cc31e-b234-4111-9b17-7b4c7ffca56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4982b487-6aa2-4c86-976f-b516b7ae6c7b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3046d7-a20b-4401-a95e-abc525a34412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a87d51e-b90f-4f7b-8a15-8f22a952ba64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dca436-dde7-4b70-86e5-be3ad786bc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0349ae34-7ddd-4313-b970-1af617bcd79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d93487-311b-4a06-9fb3-8842416881b6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da4d01f-3eb1-4783-b2c8-a46ca18f025a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5b1504-7962-4f46-b109-4b450f03819a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88441d2e-38d3-4aac-97c3-f89b7275e3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ac7521-1cf4-4692-8b00-00dc5f2b33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e28e61-7e6d-4962-9ab9-3fe937023db2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f693a-478c-4077-90bd-dd93fffc4823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227c4d56-be04-4c06-adb5-3d0bac574003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133e8ffd-9ef1-4276-bc6c-4c1b2e516246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd397455-b5a0-4a49-9d29-2ddc001bcaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0741626a-02f7-4464-935a-b903279348fa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61ea9ee-fb49-4d91-af9b-ebccd1d7a154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5475bb-503d-4122-9d2e-5be92eb7b81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af131281-d43d-4eea-bcbf-8e70f05f390c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f5d60e-f0dd-4dbb-90f8-9087a6d81006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc15238e-8e8c-4657-a8a3-584f1411118b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcebf25-eda3-4055-8695-b577dab7f251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dccc83-0ff5-4316-981c-88f99771e85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03498f07-c516-4ff9-b21a-dcb28e8ce72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55e0fe1-7cd4-46ae-93a4-d1a170c03da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec0eb2a-4085-412b-abb3-be8014e25596",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56505642-d1d4-442b-b495-0a32a102c174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83afc53e-87cf-4e1e-afa7-0ddc541e3edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9719e8bd-b7df-435d-a395-0b94de83e759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135d8e34-9643-4ab8-acdc-8d2572a8899e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30930a62-2060-43ca-bfc4-579379802afc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de8a6d0-1c1e-4bd9-b02a-f2b0482edf26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1d3d48-f044-422b-91cd-9ec4ae8326f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc97a9ce-1aef-4ccd-b022-81d42694251a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040d3d5-a6ca-44dc-a26f-24446b0a6593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a76df48-e7b7-404f-af8e-cdfcbff86539",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a47b720-7032-4282-9b65-db2d23169dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2669baa5-9add-45b0-84f7-c64cd283a056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba9fef-8927-42f7-9f9c-21af468ec995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932c00d1-5835-4ae8-852f-3bd85541ad7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4baf027-8c8e-4a7a-a3b4-c1015459ff5e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f5863c-e884-44d4-8421-26862541c45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d14d1ac-b0b1-473d-88b1-366763e6e8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fe33dc-008e-4e7c-b4ec-7fefa7270e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8e8a90-f0f9-4d1d-93c9-a1d31072447c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b929da55-ba53-45c6-b057-3f02a140214d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5661b008-3bfb-41e5-94b6-8b1475f08532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e605d13-11a6-448a-b2c5-939e53c217d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f412075-a62c-4003-a45a-daa68b20878f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd1cfc6-d862-4975-b7d1-133fd2f7cbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841d8d3e-c908-49a9-bccd-989fc9bc1344",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbf16d7-803e-46e2-ad87-067556d07a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0815dcf4-ee63-49e3-80bf-52a8ce8802f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a793ae37-8cab-4132-895b-0a4252a29f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4bb3fc-1fd0-4397-8b54-f838336ea6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeb1db6-5829-49d8-adc4-fb5d78bfbf6e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1dd9b6-ecc4-4fa7-b282-3de2fd65c95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2449cd3a-41f7-4a6c-a69b-3295dd1dd4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5994087-b903-4b4f-af55-94c2da94b216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27973b8-f357-4e76-b01c-4c349217fccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83ba98b-1827-4d1a-9595-b07c3a487ec7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284cbf8b-4870-4d3d-841a-a432f59d86d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39bd68b-0bb7-43df-8fd1-5e5433062e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055bdeba-effd-4781-b2fe-ab878bc71b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d7610d-f838-4e15-91af-8660cfeafa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5139874-8987-4861-9742-4c9e129356c2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4825b36d-8446-469d-8ab8-4836992698ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80564b42-2fe1-49c0-824e-1010ac44827c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d49bf8-ff44-4ad8-b74c-4dd14e89eaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e6ca61-314c-4fa3-9073-e2741e6f0c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6acac1-db04-44b7-98bd-cf8a99f44472",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8680873-ee51-4255-a4fe-584b6c761a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d0abb2-8f11-4558-9a31-e7aeaf625747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29a019b-8101-4b9c-aed5-b36609f9178b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4ba5c5-99e2-4b24-94ed-8fe205d529be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185bbc85-deb1-48c2-8344-2543f2067d9f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654e1e72-e2e5-4619-9219-76063c9eed3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f819457-d775-4772-8ab4-c2fbbf49d4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35418092-52e7-4872-b505-f3553728c85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f532e8-5b37-4f0f-aa49-31b3291a7885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15dba23-1bf6-4742-ac60-bd8159341955",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff40c6d-0383-4f60-94fc-8fe6fc871771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2a2d61-8d6d-47eb-889e-cd8d378fd5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3150bb1-06a1-44c5-89e2-5bc0a5dba73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58419fd-1314-413a-83c7-ccd26f33431f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1a66f9-b77e-4090-bc77-6c7bce0ac417",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccdb67c-ff24-45ab-ba79-917cbdcb738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6001c8c-f6ce-4c74-9985-428dd2d3bffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f08157d-b53a-47ff-a610-ada1ccfd194d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b05427-a9ec-41f9-9145-88b8068a1de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10455904-8853-4fa1-9b7e-6f85d609923f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fc6e76-a1ac-44ee-9bd2-c5e98233c82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7780816-3709-4b64-9cec-b73d41c078ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c5401e-7a2e-4179-b5c0-16dd9d3d0559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca02210-fc49-46d3-ba12-dbf1c3678ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e6ddac-e005-4735-abc9-4c24b4b7b4b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20a7620-ef14-4ac0-8600-7fb49f08bea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fead0a72-29ae-4ca7-a441-3986f363e410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a484a-b00b-4f67-852e-4bc96ba8459f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28992139-34d4-4ede-8c34-eccc8ae68ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8194b06-6d38-4481-9d1b-ad5991483dd7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd57eb1-c586-4f18-9dd5-87f3f8bcaaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7142fdb0-cf4d-4ed6-815a-9500db8f61cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51ff188-5fad-458e-9787-756dbbba3fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d7acb5-0177-4efb-8931-a3c7ca819df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5428617-3133-4cd7-b0d6-f63fb6d59459",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1796c529-4e22-4526-88bd-8fc78298e1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b41135-df4c-4ac3-8d07-eb366784b28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955ec4e7-68ea-4604-a932-a75499163bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355ad404-5eb8-404a-a56f-7d59a3b6359d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457e8ae8-ed6f-4fe9-b90d-0d94d8213f53",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7172e008-44db-4938-965c-49176f5b118f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63661d0-3179-47d9-89e7-6e88af45e5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c4c462-d456-49a5-89a8-33f229d7a9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5703ca-418a-4a31-8a61-a0faf3c83cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5b4b9a-57e8-49d8-8ec4-0730ce0728e5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d9a298-d716-4b64-ac1e-9563841cd133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d582faa5-563d-454e-b41b-7bcb068051ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cca1866-ade3-4d83-ade6-5954049689a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9be677-e928-451f-a4eb-48518aed69da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8837ea-af36-4ae0-87e4-f0b4d1d6d603",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db87723-ca45-43c2-9387-dab7c2c34528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc58a30-c98e-454a-8e31-f8504b5c3675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65240032-3403-4809-9049-b953f4004c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b9108a-c480-45c5-8bf3-48e7cba65623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dca74d-1caf-4d93-aeb9-c926ef168e2c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c418a7db-f6cc-4fba-bfbd-d6cfa290186b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc74861a-fdfe-45ae-b23c-8699dbf09550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df909da-3cd8-4fd5-8ffd-3be6a624a341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6365034b-e521-4f74-8d46-d1e86f0249dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decf60c1-1104-46f4-8657-69b24fff1ed3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c2526f-1a49-4b2a-83e4-a615b322d33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78664d09-afb6-4a0a-965d-b816e101d778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72fcf97-0547-4e30-8fdd-af9ff7f45c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8053d62-ef81-416b-a511-7f8e31f98492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b88c5a-0042-4d21-81e8-6a39a6191096",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae0fb0f-c6c3-4e13-b27a-ce846ba58a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03315408-4ed2-4b71-abfe-ed4d81c153af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba26860-f216-4ffa-961d-dfd0bb6c1ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe533184-6af8-4311-ad7e-6458137fdf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301073e6-a622-460b-a802-d58b31ebf5e7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fce783-387e-4821-a36c-5d30847e494e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37efd0da-1c2d-42f8-a74c-7dd530d1ab2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc47aa9-fc4a-47c7-a53d-0fde1bcb91c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d62a6b-ee62-499b-bf28-c30ab45d8e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa527a0e-106c-40bc-af20-63b9bed5ae51",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3fbd2d-dd63-45aa-ae49-cfd103a4ee18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac82e525-87c6-4c4a-bfd8-0f1a12bd4309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dff50c4-55f7-41f2-b927-38dd2be5ed9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3fce88-ac63-4726-b951-4b1900c114a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08e0b32-2c2b-4801-8e81-961acb497f0f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11a4eb5-5e0c-4c08-a4d4-b547bb833d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe9e6e1-a7a3-40e0-8aa2-059e358744d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f857e452-ea82-4fdd-95d9-f5885d89b21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1aa4a3-ca04-4ca0-80f7-7f5064f1c331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3200fe9-fcf2-491a-b445-27776ed39c9b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b30181-e4de-4da5-8da2-3a2f2b2e672b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751cc0be-25f3-4d92-8a36-13a5eab78661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68083898-9350-41ff-b979-de3d40889ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6912e817-298d-4e15-bae3-6a8e792e66a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7ea6d8-f616-4f75-b2c9-241d79b26beb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d871c1-9308-4d5c-9543-cbf4297de467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802331c9-45e7-4251-a284-7a8bf71272e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431dffbf-275f-48d9-b9c4-59411ebcd08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd7c94d-383d-488e-9cb2-68e49713ce07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e464f58b-4094-4ec0-b1d1-773162a2f2c1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26059b8-b29f-491f-96bb-c0e4fc50b645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752623a9-4d64-4b63-8d76-75f2473eb027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1aa9cc-5c28-4790-89b4-0b0b8ee784d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8dfdf7-7047-4836-92e0-6b0f452e8eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f9e6f1-25d0-4462-b73b-d752e66d9f4d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb47ab2-9fe4-4d01-a500-9b508b10b4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb4db6c-889a-4965-b4d1-d42ca1139266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c302c2a-bb91-4ddc-aeca-f747e3d13f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4bd6cf-c4eb-40bf-94ab-f4f70220cbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751f83b0-b3ff-4389-9bb7-63a1ece0eb1f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d53ca6-9adc-4f61-adea-18b16c882b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6289f9d3-e07b-4637-82c5-88408f10143b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cf56ad-3a5a-430f-bf2b-915ada023693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa59e01-0902-4695-ba2e-5d1fbd7b7fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaad062-1136-4150-a6ee-a9f7a868ae7f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c255a7-07c8-4f27-a806-b5d4b910e221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b3fbd8c-2759-4003-9c1f-3aa47bc88b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0533e2c9-1e78-4d76-95a5-d3bb6bbcacbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbe4f6c-159e-4fd8-b1a6-2a80ad272966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6b7c8e-d904-495d-9423-2463dbd5e8ab",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575b4f49-0a36-42e2-aab3-887e528709b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a081ca-3abb-41d3-b0f8-9f9b30742caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849980d-e420-43da-a03f-54121f3d419b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dfa07b-29a3-4317-af7d-2b4c5438a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b504ea6-6342-44c7-8356-2faf2f7a5d88",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a924aee2-85dc-46c3-8b9a-dd2cd6cc22df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfe06f0-8a78-4efc-9e14-fb799dd955e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50de48-cc69-46d2-81c5-820776e1c9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccefd340-0f64-434e-ab01-c583b69a7df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d4e3f1-57c2-4ba8-88eb-b77fac2d4d1a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f380c0d6-fd42-4253-b668-260132c90a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8505bc-881b-46ee-99d1-7a59aab6879a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d390376f-3a5a-4b29-9490-d4fabf3095a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc1796a-b44d-449c-be48-8fa21bc61fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0fbae8-fb73-4224-9d5d-9fda47624d9f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622448ee-a356-4150-adc9-25aa6806ff66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0748b3df-23b4-4292-9ff1-3b98bf4f76e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e04de0-53bf-4894-95b8-36a48b738ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256194e4-7beb-4ab7-833c-63a127a0c472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eee7ec-3ae0-4481-8e59-c614cf025108",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d824e-5fc9-41da-afa3-99fca6a40b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6ccbba-a311-4413-ac1d-7b564162a961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2476228-230e-4e0a-9203-8e6a19209af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43307d5-d1aa-4cf5-a251-8386df49eaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79164890-1c37-49f0-9103-2cf816b70ec7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a6c13f-e37c-4f54-8d42-fd48b2b926ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a460d652-7b8b-4879-a83a-c75e1c46af77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d72658c-341a-4e88-a60b-02c44c71d4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7716af-1069-48c9-9206-b13bef045559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69076cd8-1f1c-47ed-931c-dd74986e1973",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe36788e-89b3-43ff-9ddf-c5a786f6a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2baddc43-b4ed-4173-818f-5ed609a72d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d18704-45ed-4c4b-81a0-288432c1dcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1dbcae-01aa-4fe1-a015-3f8f01234d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ca1adb-cc96-41b4-ab90-6436b3b79c40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9b55a7-f62a-4e2e-a3a0-f870d7b6267f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd07723-83bf-4992-a206-3435addd057e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4a02de-fd8f-436c-ba3f-e0b9df0fa3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fd20e3-9474-45df-9f2c-938c794c5821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ca20fc-c5ac-4945-81dc-89f8f34a46e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c17b1cd-8895-4e2d-b99a-d98fef996980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6e0246-3bee-4788-bf34-70debc9ef518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5087b324-d824-4c4f-a325-bd6764e006ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f583968b-e872-4e7e-a023-22192eb65774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc76443-ac35-44b8-8314-beb937514c15",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29fd25b-76f8-4da2-a6f5-0a88a83c5730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd636ef9-3277-447e-9ab3-0ede4877d89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6524c17-6e5e-4b55-9ad0-25f9c60ba6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e072c877-5e2d-43d7-979c-7e8ec4f8abcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9ecebc-0a0e-4e8e-b9fc-e8cb130a37b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c648a825-3387-4d2f-8ea3-a01ff7a40221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac728362-a0af-4ed3-9a38-fca159db0f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77521e60-5497-40df-8a74-07c35f45a534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e691c9-be13-4fbd-ba48-6ba7d8a45ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965aa056-c611-461d-8ec4-c2a0bdeb06fa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2761e5e-d909-4967-9384-6ce313c62f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "231fb439-53d8-4818-9967-c7a86c98e9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c5b4e3-0117-46ef-82aa-404d7ecf5c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70d1da0-344c-41b1-9aac-20a1d9066f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6feede5-5790-4898-ae84-47ba716cd481",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1711fc12-c39b-40ce-8a18-bfa9174a76f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a65c974-c779-4fc1-aa0d-8b0263e5df9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0267edc2-120d-4486-b068-9696ac7eed00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b43b89-81ac-4d40-9ad3-0d637566638e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78477be5-7e7d-4f92-b714-c0766bfb39cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16118163-d29e-422f-992d-14edafd0afa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d8f08e-31c5-4c8c-92fa-d021b18b7265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33bedaa-d03e-4396-9466-0ab4ca937a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c709061f-9d96-4159-a2e8-c6ee081fb0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8212b87-40d5-4d70-9151-f18258a4eea7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc276991-ab79-42df-a014-b34135b81ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904070af-5dd7-4203-bcc4-5fa76544f919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d75253-1ee7-47ed-b1ac-133fd65a18c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552d0826-0412-4b7d-ac4d-609ab54c0be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d73dc15-c890-4a81-a67a-79e3634bdad0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7bbeb2-6bcf-47df-9690-28a32a7525b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a757900f-b543-43ca-992c-38117d6f5721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202ea72f-de57-4c1e-a74d-192b828ddcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f996448e-8220-4757-9cbe-322918578ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a4cbc-7450-4d2d-81da-5a68ddc397e9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025f0442-0e44-4e3f-8310-b65c9ea57f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d8f058-b2c9-4e1f-84e0-90f19ec1db38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0243fb01-047f-4374-8450-2958b94cd856",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083a6aa9-6b7f-4161-8a26-e795378daaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e64598b-0665-4b50-8239-7ef9950456df",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad5e674-f1bd-4ee8-8a27-63d94b7529a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0919bdf-6262-4c2b-9145-ff6a4f35a967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cbc7d1-3db4-4eca-b0d6-a39a2889fe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb45524-d13f-4e31-bea4-f570513c564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d3153b-b531-40a3-b054-2f520a8d5b92",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7d2fbf-32b2-40e2-bbba-86567631a5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a042688-0a1e-4d63-8092-53cbda7fec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c016847-8752-49d7-9c62-cf81458cd8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0606c0-1091-468b-b432-ee6555ae3fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc67409-58db-428c-8670-35da82b20ad2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d64ec75-ef4b-4e2d-b235-a8dee2e2cf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b922ed-5221-449d-b996-bc98df82f3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f768817-71b9-4b9c-b6e3-bede96cabb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016c57e2-2cf3-461d-ae03-4455f9b1b0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d73970-4cb1-45c7-8004-b0b4e709c124",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeafc727-1430-49ae-b523-34682715dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9162d107-77a1-4038-953e-76822a6ef630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8eb16c-dd38-4eda-b88d-a563e7932d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81985f6b-9ed5-4c2b-8e58-b5b30f8fc713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2bd30-f7fb-4106-8dd6-9b27988fdff6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8b0da9-374e-4ec0-9946-ea8d3e2b47b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b14d0c48-36e8-4131-9780-6f0b0fdc066a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4a4e3b-40d9-4057-ac53-a8a4cd350e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32683efc-03da-4209-86f2-b92be561afee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ad593e-1c76-4c68-94c1-c83319ac87bb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d03575-b478-438d-b172-15623ecd1c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0729cfb-2330-4aa2-b707-038af9db1824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca79151-6950-45e7-b73a-815ffbb9aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93218e5-deb9-4af8-92a3-082607dfce71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a541ac9-8f6d-43eb-afaf-96521726dc1e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4547dcbe-02d6-4a96-87bc-d730b583aca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28cca50d-6d6a-4c63-a9fe-d5f643a82668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f48a7d6-4d51-4928-9e0e-6c582fd4e1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e096355-d46e-43ec-8aa4-419e856d0e42"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48ae648c-4475-4c31-8785-918b582642c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47c03861-1bd7-434e-9d71-0c0f0f56a371"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be66b9bd-7a8f-48dd-9ce5-47546ce4f5dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b2331d7-c01a-44c8-9d70-f7d73fcf407a"
                    }
                  }
                ]
              },
              {
                "id": "9f619be1-8cb2-4c18-8008-c84a05f7557b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3aa236f-35db-4885-8f19-ed0a7a3e00d2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c241b7-6d32-4c4f-a9c6-1d704dfb7124",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "172e76d4-477e-460e-b658-9474545f713b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dab366-deac-4a99-addc-3f3ae45216c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e0c9931-8171-4850-8930-a585ba5e5143"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "248838da-7709-4875-ae75-239324401759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33efc662-1449-4339-aeae-8be08ef6d126"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e21425-ab9b-4c4b-b548-3477e6782f67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5348ef91-fb8b-4807-a7bb-f5c9969994d3"
                    }
                  }
                ]
              },
              {
                "id": "201b9f45-dd0c-48da-923e-4b9e39be60c7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bbd6f5aa-4c85-4d00-bf9a-aef278889327",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72445608-453f-4a1f-88eb-f7eedc198c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6484fcfc-119b-49d0-8fbc-6140c81183f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3452e027-8b3c-4275-adac-ae7518e43a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e8758a-a837-4359-9438-4d4f70c1d385"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3fb343de-ba9f-4f64-8651-5cb40ca3233b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f168aa7-e660-4550-b0c2-9ce55fba1bde",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3b5cac8-8f42-4bf5-a789-18b291318f72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5da29789-ef61-4560-83b0-befae8a8b29c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72d3795c-fd6e-45ac-802f-0e4456c6ec11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ff23602-8054-4736-9fca-148b53f0ccae"
                    }
                  }
                ]
              },
              {
                "id": "87f2aef6-05fc-4049-b374-32762fa6d56a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "815a8b17-81ec-4664-bb2e-15c0e0cb221f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "57409741-297f-4c4b-9f8f-5971d33103f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adb3c633-3f13-4da9-9b9e-27bc82e1aedc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "158f96b1-c2e2-40b2-b286-8e6786e17d6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d00fe7aa-b177-44f2-b782-a1716557241d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b95d64df-d72a-47af-94fe-b1a6c311b359"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afd22d18-9e68-44de-9583-225a6f062075",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ca6f298-5b8d-4ac0-a127-990a73cce87f"
            }
          }
        ]
      },
      {
        "id": "5e6c9ded-b0d8-4927-991a-9b5a8e78dd0f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "74cfe84f-9e05-4127-8a69-2eb91decd4a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91261182-850a-4632-aeaa-3a772142a39e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5fbb9eb-a750-468d-808f-d2dcb6715eb6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f958a130-30c8-422c-9d21-b32f4ecd9c87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d496c6d-5b8e-4a62-a558-6360b77aef20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3667bf2f-e1b0-448c-a22b-ec1409aaa161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a32d6ac5-0bd2-40e7-812d-095581e8f557"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a10346bf-3630-402c-bc77-7e760194e5c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b80e080f-fdc9-4202-a9b2-1b5d86a5a75d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00c33f12-7033-4f7c-b546-cad91faf6533",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d368499-b0ba-4dde-baa2-bf2e740e1933"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38ef7591-440c-4bad-a3fe-071c4d2793ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e6e54d56-0db4-4a21-bfb1-cecd0fcd7389"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fea59772-995d-4b3a-8518-7ae4f6173bd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7149a690-262d-407f-bfb0-595a5b5a567b"
            }
          }
        ]
      },
      {
        "id": "edf7b768-7952-417e-aa4c-8b9189604ad9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "16475476-ce88-455c-9ba1-0c7bca3558df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e957d96-20eb-4c74-b903-4139fac888d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bb2c14b-28f7-452d-ae5e-c2a34eaaa9db",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c881c4e5-a395-4d5f-a863-9683f8ccfa06",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "527aee1e-8e27-4d6f-86a3-2134d89ad45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00c9508-f6aa-49ba-995e-441ccd7f510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "528529b0-1ca9-4da2-a9da-c35cf74cb1ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3a5a4bf-29ef-4be2-80f2-9f5d95dd687c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b80e36-1b80-4677-9939-c7d90f4b09b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5b3f752-a902-4bb1-9f9e-3f758c352fc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0a17e07-8ac8-4359-af1e-aa319ac1b704"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bed8220d-5abf-4cee-8193-0dbe5a0f7c31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f4c2dc9-2160-4ed6-866d-57e46683e588"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6bc206-cadc-4abf-814d-9d3fb2e3283b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "394db4af-addc-4ff6-a2fa-0c4eaa369538"
            }
          }
        ]
      },
      {
        "id": "fa5978bf-fab4-4d07-85e1-cfbb13397641",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e94f01e4-b5e8-497d-ac33-f830db7ed976",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85f0e16b-3c85-402a-bc2f-08d92374d330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db2967b2-877b-4b58-8674-fb5c2571842f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789b0f56-ef15-4532-8b2b-85b1ef2ae7c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92c0e220-79a1-40b2-9524-654388811d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c401a1-27f5-4f23-8c1b-3bbf5b412849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfaa210e-9aea-43af-9118-a243d3ea67a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d87c819-eeee-42ef-8f0d-14e3170c3559",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a8adda7-2805-4306-ace6-273344b3dfeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94ffef0-bd82-4fe9-a5a0-1cb3511b5bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1378934e-43af-4786-8e6f-c4098c17f34f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2445e3a6-042e-46de-97ff-08660b8515f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "abb9f7c4-fe64-451c-8894-34a56c7571fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf95789-927e-493c-a00b-57fac1695222",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "579b6f5d-1b28-4da4-ab83-9ae5a68bd0e6"
            }
          }
        ]
      },
      {
        "id": "ca759966-44a5-4373-b4bb-a68bdea86941",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "301e835c-61fc-4d04-9860-15a69e41efb2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f74124a0-5090-4898-8432-302026beffbc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4f48b5eb-859a-4de9-8a64-329963c9db65",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8140880f-46e1-46f3-8a2c-8269da8025e6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f20cfff-ffa4-4029-b112-d74f9481de0a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 77.14084507042251,
      "responseMin": 11,
      "responseMax": 4742,
      "responseSd": 398.9256009486525,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693096461933,
      "completed": 1693096495152
    },
    "executions": [
      {
        "id": "09f06bd3-385f-4cbe-843f-71823c59e7e3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fce3f623-edbb-4de8-acc7-eb8d38181c78",
          "httpRequestId": "b6d9dac5-08bf-4873-a03f-1cda41482244"
        },
        "item": {
          "id": "09f06bd3-385f-4cbe-843f-71823c59e7e3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5d13279f-5442-41dc-910f-cf58817e2b12",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 0
        }
      },
      {
        "id": "f618dbcd-07b1-48e1-a601-b6a8a3fd9441",
        "cursor": {
          "ref": "a0803d12-a2ac-4ddc-b1eb-19c395da90e2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba2da15f-37fe-4d2a-8425-c865cc7ad1db"
        },
        "item": {
          "id": "f618dbcd-07b1-48e1-a601-b6a8a3fd9441",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d977b926-f8f6-448d-bac4-37ab8bbecc59",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "c6e5a066-1a3b-4792-956a-b53df8fefefc",
        "cursor": {
          "ref": "afe48d93-8bfc-4b4a-aad1-93a3029bbdfc",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d0c11c91-3cf8-47e4-9693-da4dc2ac13fe"
        },
        "item": {
          "id": "c6e5a066-1a3b-4792-956a-b53df8fefefc",
          "name": "did_json"
        },
        "response": {
          "id": "3799aea2-60ec-4dda-9314-5e33b2e7511c",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ca8a7-7f59-4735-8f63-fda29e750ead",
        "cursor": {
          "ref": "386b1b9d-cef4-4eaa-83b2-49e3fcb95c0c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff374ec9-1dfd-4d7b-82e7-e480c7eb7c13"
        },
        "item": {
          "id": "483ca8a7-7f59-4735-8f63-fda29e750ead",
          "name": "did:invalid"
        },
        "response": {
          "id": "412b9eaa-1128-494a-b312-9b5c027d9dba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1182,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ca8a7-7f59-4735-8f63-fda29e750ead",
        "cursor": {
          "ref": "386b1b9d-cef4-4eaa-83b2-49e3fcb95c0c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff374ec9-1dfd-4d7b-82e7-e480c7eb7c13"
        },
        "item": {
          "id": "483ca8a7-7f59-4735-8f63-fda29e750ead",
          "name": "did:invalid"
        },
        "response": {
          "id": "412b9eaa-1128-494a-b312-9b5c027d9dba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1182,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33146cd6-f46b-4a7f-afa5-96b740745406",
        "cursor": {
          "ref": "c81c6214-b09e-4720-b0ba-80b38dfc6f12",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1a003a3a-bf1e-4672-b913-f3d3ffd41125"
        },
        "item": {
          "id": "33146cd6-f46b-4a7f-afa5-96b740745406",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8ed96845-6103-44a8-aa6e-50ca3ff4e51f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 20,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7549ac1b-5a91-4467-8d2c-df545d811e0a",
        "cursor": {
          "ref": "a53bcd26-d499-4152-8302-f8d806487921",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "58066fc9-c92d-4897-8d19-c4584c914a4b"
        },
        "item": {
          "id": "7549ac1b-5a91-4467-8d2c-df545d811e0a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98f059db-6c48-4b2f-99fe-74cf6b79bcd3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd7969f-1041-45a8-bfc0-47dc964b161c",
        "cursor": {
          "ref": "a58351a1-a814-4627-aa0a-f2f574ac08f9",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7149331d-19a2-46e2-9a4e-7849c2df79f4"
        },
        "item": {
          "id": "ccd7969f-1041-45a8-bfc0-47dc964b161c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b147df7-c99a-4096-ae02-fe505dde545b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226e12d2-5123-4f39-8d0c-fd15635d2a2d",
        "cursor": {
          "ref": "f69b1923-f495-49a7-af15-5f06bf8b6ea4",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b84b7737-30c6-4a43-8ddd-ecbb27d31828"
        },
        "item": {
          "id": "226e12d2-5123-4f39-8d0c-fd15635d2a2d",
          "name": "identifiers"
        },
        "response": {
          "id": "f6eed22e-6ba3-42bf-9ff1-77cf797e0e56",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030c016a-5174-4900-82b6-f68a17891fd6",
        "cursor": {
          "ref": "5edc5f59-c6a0-42a7-8614-51066e218675",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f336f25f-cf59-4061-9c5e-fb36ff4ada00"
        },
        "item": {
          "id": "030c016a-5174-4900-82b6-f68a17891fd6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3be19879-b9a9-42c5-ac67-de5f7235dd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ed958-6bf6-41fb-9726-cd583f98e87f",
        "cursor": {
          "ref": "abbb2461-cd39-46e0-add1-4f5acae9d410",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bb583bb5-67ba-4cb3-b7a7-80f4c234bca3"
        },
        "item": {
          "id": "356ed958-6bf6-41fb-9726-cd583f98e87f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "17c91585-6801-4eb0-9231-9cf3abec7f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba156d3-65ff-4089-b80f-a6e30043264f",
        "cursor": {
          "ref": "69082e48-f792-4620-9feb-95a6e54c6e7b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bc147715-ce86-4b8c-bad8-0bb4192d2bef"
        },
        "item": {
          "id": "8ba156d3-65ff-4089-b80f-a6e30043264f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8c48e325-3b98-419d-b821-4c5796228a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f99899-69cc-41e8-b3cc-ac086d816d5b",
        "cursor": {
          "ref": "b2e734af-e07c-4d36-a2c0-778e95611d74",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b53fceb-496e-4aab-ad6e-027dd1dd095b"
        },
        "item": {
          "id": "c2f99899-69cc-41e8-b3cc-ac086d816d5b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9887e17c-c0d9-4816-838e-c6104a7831b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0b10e5-585b-45c9-98c0-68e0763f496a",
        "cursor": {
          "ref": "54e5e72e-c21e-496c-812d-3cdfbc42a2bf",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b1bada9b-bbcb-4318-a962-ecc9b402e747"
        },
        "item": {
          "id": "5a0b10e5-585b-45c9-98c0-68e0763f496a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ec433fc7-7b72-4546-a432-4862e2046f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3321ef4-c79c-43db-9f19-ab0d13f22340",
        "cursor": {
          "ref": "7b03c78d-b9b2-4da7-b7aa-47c15126f6bf",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cc04147e-8525-4179-80b0-1dcd3d42ec6b"
        },
        "item": {
          "id": "b3321ef4-c79c-43db-9f19-ab0d13f22340",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a3cd9d9a-781b-487f-bdc8-9cee4c27e8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fa3b40-81b4-45bf-b4ff-99308a1a7e3c",
        "cursor": {
          "ref": "f35640c0-6a19-4daf-8163-b043d4a66ec5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "10470791-2247-4856-a2bc-4f827df53a5f"
        },
        "item": {
          "id": "24fa3b40-81b4-45bf-b4ff-99308a1a7e3c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "169c3617-1197-427e-95ed-0984f81841d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406628bc-0acb-4c2e-925c-75ec5f3e96f1",
        "cursor": {
          "ref": "b78edd82-a2e3-45a1-8852-605015430fe3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "82c62e6d-5e3e-42f0-939e-943c98103657"
        },
        "item": {
          "id": "406628bc-0acb-4c2e-925c-75ec5f3e96f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e50eae8f-216d-4880-877e-881e1b1b3c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a33d001-1c69-4282-960c-46b261ddc808",
        "cursor": {
          "ref": "59a1ca24-a86e-4a85-9f32-52519ccf6ea0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e49e464d-29be-4573-9c54-065a436d68ab"
        },
        "item": {
          "id": "1a33d001-1c69-4282-960c-46b261ddc808",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f4ecfbe8-c71e-4c14-a5d3-ab21fc910aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526df52d-5932-4e89-b770-33f1500ca0ba",
        "cursor": {
          "ref": "c3da3cce-fece-4598-9238-a6b494fa504a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4f52e753-5160-4fb5-ae54-12cb6348fc2d"
        },
        "item": {
          "id": "526df52d-5932-4e89-b770-33f1500ca0ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58c38828-d6c5-469c-baef-25dc8ba688aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbc3162-1212-4ed3-8295-11a464641e48",
        "cursor": {
          "ref": "6188a587-260f-44b2-b785-ec37849bcfd8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "63262a3d-b093-4184-a3fd-e1f769269057"
        },
        "item": {
          "id": "0dbc3162-1212-4ed3-8295-11a464641e48",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8b54e064-e653-435d-bd4e-ce936c3b5ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed87ac63-b358-4d57-a5bd-d3838d7577dc",
        "cursor": {
          "ref": "72f3a4f4-4da8-48a4-b173-aac46680e255",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "01b57a61-8a00-467e-971c-c854e838ba6f"
        },
        "item": {
          "id": "ed87ac63-b358-4d57-a5bd-d3838d7577dc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bf073868-85e9-40c4-8d9e-fa08f7526cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d479f0-38d0-4b2c-9b85-97dc1c389c12",
        "cursor": {
          "ref": "5ab5ae0e-c2dc-4181-890d-aa17ba26ac4e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8bfd65e-c9de-4ef9-a291-967e0ff47aa5"
        },
        "item": {
          "id": "20d479f0-38d0-4b2c-9b85-97dc1c389c12",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5a67538e-c602-41f8-a704-0f99cc61954a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08a8cc2-636d-44a4-aa17-8cf6eb0d2c12",
        "cursor": {
          "ref": "8b3d4ec7-4316-4735-9395-dc3b5da8db5d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c43fdc22-ce09-48ab-859a-1fd4a8efe2a2"
        },
        "item": {
          "id": "b08a8cc2-636d-44a4-aa17-8cf6eb0d2c12",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "988c193e-5401-4bb2-be96-dd95d7a5e4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c48488-0990-4e86-9c89-d8a513368607",
        "cursor": {
          "ref": "5f1ee315-94c0-4039-9237-54d1069b8f59",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0eb9f9e5-3efd-4a4b-809c-7c08d41f2a01"
        },
        "item": {
          "id": "76c48488-0990-4e86-9c89-d8a513368607",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "49877eb1-fddc-42b2-88df-167d36adbc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189859ae-fe71-46e2-b682-0284c9cfa2ee",
        "cursor": {
          "ref": "34d697a4-0f8f-495b-9419-97f6f17bf8bc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "86c89f3f-922f-4a7e-addc-c57c310baf60"
        },
        "item": {
          "id": "189859ae-fe71-46e2-b682-0284c9cfa2ee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4bd39158-bed2-41e3-8d37-3625c86b12f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a56457-d4bf-4c3c-bfd2-17a233c279fd",
        "cursor": {
          "ref": "5a52c2b5-19e4-480e-9211-eeb858e242e6",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "41cf42a5-5aaf-49e5-be81-c928cb031941"
        },
        "item": {
          "id": "39a56457-d4bf-4c3c-bfd2-17a233c279fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7793928a-8fd2-48d7-b1fd-137bdc307873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24c1495-5965-499e-9918-7588cab91612",
        "cursor": {
          "ref": "9fcf9d39-4a7e-4248-b9a4-a5f06032653d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2d5e6de9-719d-4b30-9bd7-95d8dcb4cfd4"
        },
        "item": {
          "id": "c24c1495-5965-499e-9918-7588cab91612",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d9a94d75-cf8d-436d-a876-0e104c545c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2b2726-33d0-414f-8101-4ec080b15402",
        "cursor": {
          "ref": "d2d2290e-f840-447f-8764-06f252e50520",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4c0de3da-6f68-495d-b9ad-94c95f1699ec"
        },
        "item": {
          "id": "1c2b2726-33d0-414f-8101-4ec080b15402",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "88413498-bd72-446e-8469-1a07a450ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbcd63b-0a7f-460a-818f-47b85b7217e0",
        "cursor": {
          "ref": "965ef19b-d5f4-4b79-b838-ee3dda51633a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "39ef71a9-e2f9-4122-8305-0f5ee9e26e1c"
        },
        "item": {
          "id": "ffbcd63b-0a7f-460a-818f-47b85b7217e0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6e4d1072-208d-49d3-bbd1-8181e76ba003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3540ec95-973b-411b-8628-38362fb265c9",
        "cursor": {
          "ref": "3758b5d8-9280-4953-a82c-baa9a891ccec",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6faf908c-5acf-4ab2-bac9-39bf2c83540e"
        },
        "item": {
          "id": "3540ec95-973b-411b-8628-38362fb265c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "30dfd0d2-4dd6-4318-aed9-b0b013ee3d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730ddc3e-899d-4d17-b3ce-63677b642955",
        "cursor": {
          "ref": "c4c8bd23-741e-4809-8c46-71ab04622ec4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e11de231-d61c-4884-bf1b-0f7fd011df62"
        },
        "item": {
          "id": "730ddc3e-899d-4d17-b3ce-63677b642955",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6548e06a-ae3b-49b1-ab4e-1aed029eb598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86321263-c9cd-43b8-a6bf-a9158b34ccdb",
        "cursor": {
          "ref": "4235334f-9328-4030-9460-b5c224992890",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "59bc63f9-1479-4310-82a9-e09ccba391ac"
        },
        "item": {
          "id": "86321263-c9cd-43b8-a6bf-a9158b34ccdb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e135fc53-483b-408d-b5ba-546a3573a773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a54c18-3b46-4eab-9607-206c3da14eff",
        "cursor": {
          "ref": "7c3f8da8-d870-427c-9de7-bdb343b0b578",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4c233453-420c-40b5-9ebc-1bfab28ee775"
        },
        "item": {
          "id": "82a54c18-3b46-4eab-9607-206c3da14eff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a56333ab-e887-4323-a096-50c64c63f7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0586d744-7c82-4e48-beaa-cdc54f994a06",
        "cursor": {
          "ref": "a3d36b82-5374-4a48-a476-328aa4dcae39",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5514d2fa-713a-4246-9bfb-ce5d27ece7d9"
        },
        "item": {
          "id": "0586d744-7c82-4e48-beaa-cdc54f994a06",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "191e8a55-8321-4562-b5d7-2d7e813aa8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f65ad0a-3360-40df-a3e5-283e5859692f",
        "cursor": {
          "ref": "89a63c2f-cb49-43a5-ac41-18a1f5b73041",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5ec09d86-2363-438e-bcfa-6749f5de2915"
        },
        "item": {
          "id": "5f65ad0a-3360-40df-a3e5-283e5859692f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5150beef-3c24-4876-b6f8-e945ac1079f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84fc0e2-6b35-4f7a-a810-c92e8fa7bd74",
        "cursor": {
          "ref": "18892066-65ae-4b8f-b1cc-b18a42349324",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1e24c9b6-6054-4af0-87ea-cd9e91d837de"
        },
        "item": {
          "id": "b84fc0e2-6b35-4f7a-a810-c92e8fa7bd74",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "457475ee-b5cc-4617-aa2b-9e7c7daf5cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b38711e-53db-454c-b911-08d9fe4216e5",
        "cursor": {
          "ref": "5551b2d1-0df9-412b-94eb-9908a68c92bb",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "df967613-3ca0-43cd-addd-73edf80a6954"
        },
        "item": {
          "id": "8b38711e-53db-454c-b911-08d9fe4216e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6a7feea6-f0a9-4373-b59d-25f9c3e1ea8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ddafa6-6ffa-4871-a184-fc23907a11b8",
        "cursor": {
          "ref": "946bc9ea-e9c4-49b4-97d7-fa115eb89db2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b0c7d75b-8ff6-4167-b6e7-e721052ec86f"
        },
        "item": {
          "id": "37ddafa6-6ffa-4871-a184-fc23907a11b8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a6012a7d-4832-40a8-bb9b-3694b20b731f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56382d6-14da-485a-83ca-0f0814ae654d",
        "cursor": {
          "ref": "54a75b61-b368-4782-bde0-1404e400ab26",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "67a8311e-6b77-4738-b50f-71d2ae22b329"
        },
        "item": {
          "id": "f56382d6-14da-485a-83ca-0f0814ae654d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eac6408e-9949-4a41-b548-f8d579c9ba4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c4410-51f0-4727-894d-eef2440e7437",
        "cursor": {
          "ref": "14ec040d-3a4c-40ad-b1f9-2b551498be76",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "33e5531e-3789-4b6e-a17f-548af80df374"
        },
        "item": {
          "id": "f41c4410-51f0-4727-894d-eef2440e7437",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b6f3a3bf-2bfc-42cd-9291-6f802cbe5d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85feeafd-9c83-4e3f-9e12-6b0848a2f80d",
        "cursor": {
          "ref": "1d93e195-0b59-40e7-bd70-2133afe14a6a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5cc00239-f059-4b04-88b2-f960574ac394"
        },
        "item": {
          "id": "85feeafd-9c83-4e3f-9e12-6b0848a2f80d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "82986c62-0ae9-414e-86f2-c149c61b2d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2500606-9d52-49ef-93e9-3f18b8344446",
        "cursor": {
          "ref": "0c8907c2-b146-47e2-8bbb-cccc878bcfa8",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4ffc6208-6c3c-4a7a-b2f3-835d07b566ae"
        },
        "item": {
          "id": "c2500606-9d52-49ef-93e9-3f18b8344446",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dd0958c5-0be0-41e5-a0f3-8af46c0aa12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd03ae46-73cc-4f2c-b1df-6155d376b1ed",
        "cursor": {
          "ref": "3ac62c16-7592-4cce-ad09-2e177fa599eb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f3874b43-1a39-443a-9264-a1fec673a1a8"
        },
        "item": {
          "id": "cd03ae46-73cc-4f2c-b1df-6155d376b1ed",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e0750f3c-3997-42db-bc05-58c79fe636be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a7a7d4-ad20-4831-9090-a650bc9edd2d",
        "cursor": {
          "ref": "c7536526-0289-4527-bd9a-674613509737",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "91cdc0b5-97e5-43a9-a362-79ea9a4c1397"
        },
        "item": {
          "id": "b3a7a7d4-ad20-4831-9090-a650bc9edd2d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2fca2b2d-67a9-4641-b9e7-240171469aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de027613-05fa-4b5a-a626-19755b60f94d",
        "cursor": {
          "ref": "cc02c4fd-0bc5-4d71-ac8c-a33869d96477",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c23a7946-57b4-47ef-85a2-b49f8f070a79"
        },
        "item": {
          "id": "de027613-05fa-4b5a-a626-19755b60f94d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "18262f9c-9c35-44ec-9288-b08dd58dd9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7199b65b-2b11-410c-8de1-22701c4797c6",
        "cursor": {
          "ref": "cf2329db-71e8-43ba-91f0-14367c0f1ff1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "286ff270-1e6a-4746-a0ac-70c119cec574"
        },
        "item": {
          "id": "7199b65b-2b11-410c-8de1-22701c4797c6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "45a40964-38b9-409b-a156-7c55ba7c13a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c117c3f1-da6d-4e0b-8146-0c0a4e20bb92",
        "cursor": {
          "ref": "27957f4a-90a9-482d-a08d-70f88838f4db",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9aefddb9-6331-4df3-ac35-71e311983190"
        },
        "item": {
          "id": "c117c3f1-da6d-4e0b-8146-0c0a4e20bb92",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "43f8d613-f223-40e6-9a17-0efe6455f5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a817c6f6-6481-4919-b842-a442dd28f918",
        "cursor": {
          "ref": "3df6d055-1c8d-40cd-a93e-0458ebb8f259",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8abdc9c4-66f1-4a0c-9e22-4741ea2c5bfc"
        },
        "item": {
          "id": "a817c6f6-6481-4919-b842-a442dd28f918",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b0d9090f-7253-46de-bc0c-02161cad8792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4038897-cea4-4ec3-b031-1ac4a1b1257e",
        "cursor": {
          "ref": "c7c4d38b-d5aa-4542-b4df-f7be32baa0b1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e2f44e98-25f9-4cf6-9f05-4b8094ba49a8"
        },
        "item": {
          "id": "d4038897-cea4-4ec3-b031-1ac4a1b1257e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9598f633-bb8c-4dfe-b457-6412dab73cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7beb72b-2930-4fc9-9208-c9fafd3d7102",
        "cursor": {
          "ref": "db6249db-18a3-4337-b925-95eb06311213",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "21d04b1f-3faf-4f34-a896-40de8eb0c59f"
        },
        "item": {
          "id": "b7beb72b-2930-4fc9-9208-c9fafd3d7102",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2e3d2fac-c506-4d2d-91ac-872be007907f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cb98a5-ed55-431d-b4b5-3371e00818d6",
        "cursor": {
          "ref": "8e77c150-519c-4356-b918-bb41247d9415",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "389f66a3-3712-4a67-b25b-405f156cc047"
        },
        "item": {
          "id": "44cb98a5-ed55-431d-b4b5-3371e00818d6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba15a9a5-85a8-484c-9268-b0c22aceb5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4d4f72-27ae-4988-b807-ca6aa7daf6d6",
        "cursor": {
          "ref": "ea35fd6e-e79d-4772-a33d-944bae59d0c2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3ba1dffc-e0d0-4242-af30-ea889900f36b"
        },
        "item": {
          "id": "2f4d4f72-27ae-4988-b807-ca6aa7daf6d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bfaa4174-8246-4d4d-ba13-a927dcb6caac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e9b5a7-5fce-48ce-8750-cc3250ea4bd1",
        "cursor": {
          "ref": "c7f3a692-9174-4155-8590-dc74f0369a75",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "71a5754c-ac9a-439e-93cb-0512a3c39635"
        },
        "item": {
          "id": "40e9b5a7-5fce-48ce-8750-cc3250ea4bd1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e75580c1-e6fa-4793-b55e-d9518a9b1f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c86e83f-5da7-4e91-9ab0-b20a21eae4ca",
        "cursor": {
          "ref": "55a6da08-5802-4ab7-97bb-cd1ecaee5775",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "523e5f55-6065-4bab-a319-ee749f82ac28"
        },
        "item": {
          "id": "0c86e83f-5da7-4e91-9ab0-b20a21eae4ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6e07936e-4589-4c43-8580-8af1c393361d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b826b2e-34dd-4bf7-9821-2bf830dc6697",
        "cursor": {
          "ref": "f83ae93c-7670-4fce-a6e4-f41d6552bb5b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dd0fe128-6b38-4f99-807c-be83aebaeec6"
        },
        "item": {
          "id": "0b826b2e-34dd-4bf7-9821-2bf830dc6697",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aed6798e-4f03-43be-a127-ccbf34d4a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dba051b-58ba-4519-b976-a1c6c66a67b9",
        "cursor": {
          "ref": "8d306e99-a3eb-476a-ae1a-65963df682e8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "30273782-436b-4866-8986-51bb8155fb13"
        },
        "item": {
          "id": "2dba051b-58ba-4519-b976-a1c6c66a67b9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5c4e524b-6927-4960-965c-9c392d6d035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7dd9a5-13c7-428f-8f94-1e45bd270545",
        "cursor": {
          "ref": "154ca188-a47c-430a-b4c4-798ab99d45ed",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "17e9f75b-ed57-4892-ac75-6391836823cd"
        },
        "item": {
          "id": "0c7dd9a5-13c7-428f-8f94-1e45bd270545",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "876f00c5-56cc-4473-969b-646406831c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a54e29-5fcf-4c16-a13b-20ab35544725",
        "cursor": {
          "ref": "a7990039-68a4-4d34-893f-4fc5b897af02",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b9266dce-91d6-4d77-9569-427cae80cc99"
        },
        "item": {
          "id": "44a54e29-5fcf-4c16-a13b-20ab35544725",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "772f11ac-c77e-4ba2-8b80-bfa0e8448508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2313fb90-1825-4c7e-8f55-a0dab07c377c",
        "cursor": {
          "ref": "f29a0b43-b60b-4999-bf25-783bc3aaf705",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7eee24ae-508a-440d-a6d8-be306f410c84"
        },
        "item": {
          "id": "2313fb90-1825-4c7e-8f55-a0dab07c377c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2f91a904-d967-4f85-8afb-42cb481f784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a929565-517e-455f-8244-f97a94450c4c",
        "cursor": {
          "ref": "1426f2f0-ce08-4092-8d4b-17f147345a4b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "24393d35-b118-41ff-a90c-51408467c5cb"
        },
        "item": {
          "id": "7a929565-517e-455f-8244-f97a94450c4c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6109f54f-24d0-4089-97d9-b2dd86e4c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d36dd-d977-4536-adfb-d14daa760e3f",
        "cursor": {
          "ref": "3fd979e6-8de9-4e2d-b795-bd6466b2c329",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "339d8b65-f2a2-4bfa-b9e5-5f238f27ed0c"
        },
        "item": {
          "id": "952d36dd-d977-4536-adfb-d14daa760e3f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6e2e6076-7881-42d7-95f9-2c23934f7183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb76b09c-e455-4d08-8395-22deeb248fae",
        "cursor": {
          "ref": "23ca3264-ee72-458d-b737-113fda1c186a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fe6d1fd6-f480-4921-881c-d5ae7c8953e6"
        },
        "item": {
          "id": "fb76b09c-e455-4d08-8395-22deeb248fae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e6c2c74-3f54-47ef-81a0-9ba786aef928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c165598-0e32-44f6-b6d2-ce3ab8f0b651",
        "cursor": {
          "ref": "ada6b29f-d11e-400e-88d4-8797a933845e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d601bada-19ee-4726-8fa5-f7f07f10c8fe"
        },
        "item": {
          "id": "7c165598-0e32-44f6-b6d2-ce3ab8f0b651",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e95d2521-85ef-49aa-ad81-7f08e86590b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd40342-5d4e-4526-8363-f68b005805c7",
        "cursor": {
          "ref": "d2934031-3334-4bbf-b3b6-09ce4efae5fc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a09219c0-3aae-4440-a5b9-cf717ee51803"
        },
        "item": {
          "id": "8dd40342-5d4e-4526-8363-f68b005805c7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "241b95e4-843f-452f-a6f2-71aed369b280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b295188-99b8-4a24-ac03-0063ad7a7a1c",
        "cursor": {
          "ref": "be522fa5-9209-473c-b12a-3e37f4936e28",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "83295440-a6c2-42b0-842d-95b0d3d505e0"
        },
        "item": {
          "id": "4b295188-99b8-4a24-ac03-0063ad7a7a1c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "957fec48-bbc6-4092-b9a9-fab65330dc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d044767e-adfd-4548-b934-b190a843252d",
        "cursor": {
          "ref": "963a68a9-fdd4-40e5-909e-55e9b2a83443",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6cc05eec-0be7-4a23-8c28-d1ece9e0b997"
        },
        "item": {
          "id": "d044767e-adfd-4548-b934-b190a843252d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "53b15fd9-79e6-430c-a1ae-d5b926d15522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab10d77e-c2d1-4d84-b4e4-495eb742ef34",
        "cursor": {
          "ref": "29f34874-5b41-4e8f-84b7-045ebb189db2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb609c09-feaa-4ba5-a5ac-b6b7088fe6c4"
        },
        "item": {
          "id": "ab10d77e-c2d1-4d84-b4e4-495eb742ef34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "34fb18bf-b75d-4c2b-bcde-bfa14b0e1a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37707d44-97ad-4911-8ac3-118ccf3c93c0",
        "cursor": {
          "ref": "da4184ec-240b-40ee-aa48-d857c11ea5f8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "51296a4a-34c1-4d96-ab0c-4f18b1f737df"
        },
        "item": {
          "id": "37707d44-97ad-4911-8ac3-118ccf3c93c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54c2b4d1-54e0-43a4-8c80-2febbcb59234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5331bc07-0d94-4d19-a33a-1554bd44bd4d",
        "cursor": {
          "ref": "319143de-ad80-4cae-ab89-41878f6e7f6f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "090c3b2e-b6eb-492b-b159-9eb18615203d"
        },
        "item": {
          "id": "5331bc07-0d94-4d19-a33a-1554bd44bd4d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "12299d8e-b50d-4844-9f97-b327352afd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17457f08-a5f7-48fd-a3f4-3b661fbbffea",
        "cursor": {
          "ref": "20e906a4-1ce2-4f69-890d-f519f1043634",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bf2da4b8-e836-4ee0-ae1d-da6284acf52c"
        },
        "item": {
          "id": "17457f08-a5f7-48fd-a3f4-3b661fbbffea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c0720b4a-185f-4d27-8808-f6f72dbcda2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea9caaa-8bcc-4648-be08-1838b2c2c5f7",
        "cursor": {
          "ref": "14b006d8-3ff2-4c1d-8260-ce4b76eeb284",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b8ac89de-6946-4319-9faf-1de866ca90d2"
        },
        "item": {
          "id": "6ea9caaa-8bcc-4648-be08-1838b2c2c5f7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0867afa0-50ed-41ac-91da-a6f590532ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a35e2a3-0a2c-4dfd-99ea-5a48e4aa0b6f",
        "cursor": {
          "ref": "2f9e8dd2-d2af-497f-916d-17ed9ec888cc",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "870b401b-7ede-4730-b2fb-755f18a8e330"
        },
        "item": {
          "id": "0a35e2a3-0a2c-4dfd-99ea-5a48e4aa0b6f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1f7a5628-01b6-4b20-a26c-df1e315435b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c574f2-9c79-453d-9040-d4eea0aa7441",
        "cursor": {
          "ref": "2b0e1e4c-d700-4d2b-9e0c-6c682b18e798",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ce8df91d-d5d1-49b7-baa3-8c10e654c178"
        },
        "item": {
          "id": "b3c574f2-9c79-453d-9040-d4eea0aa7441",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0bf70e3d-4e37-4445-bc4c-1f9498bf0cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de81add7-ee8e-4706-ab5b-660f9caf6dba",
        "cursor": {
          "ref": "2d6222d6-7227-4aaf-bcc3-6a233f1cfc8f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4d6bd6a5-a76b-482f-b382-8f0b545e11fd"
        },
        "item": {
          "id": "de81add7-ee8e-4706-ab5b-660f9caf6dba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e93dc5f0-e6af-411c-bedb-e82051b55557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c18ba57-f764-46b3-a7cb-9f62a5274e5d",
        "cursor": {
          "ref": "e8dda730-ce1b-4e42-b1e0-844995344dfe",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "47d9c1ed-dd42-4632-b11c-a8c507486efd"
        },
        "item": {
          "id": "2c18ba57-f764-46b3-a7cb-9f62a5274e5d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "76f2d89b-184f-46b1-90ce-fda58c49e74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e398122f-b526-4c88-ae40-2fbc84bb99d7",
        "cursor": {
          "ref": "e6a8ced6-499d-4de3-95b4-3a881b5e8c66",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea24b474-96db-480a-a06e-4c554591fc37"
        },
        "item": {
          "id": "e398122f-b526-4c88-ae40-2fbc84bb99d7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "48484971-2b60-4204-842a-f14306a0d68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f19d3c4-055a-4fe8-8dd7-b65b74acf11b",
        "cursor": {
          "ref": "d063184d-22dd-4e15-8c9b-b6645c28ae7f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "55d0e917-a663-42ae-882c-e3df157aaf6e"
        },
        "item": {
          "id": "6f19d3c4-055a-4fe8-8dd7-b65b74acf11b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "45e78862-0582-41c4-a4cc-271254e11148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f16eb3d-c2cb-4693-8183-abf224a85026",
        "cursor": {
          "ref": "3dcdfef6-cf00-4812-a979-1b96d85526a4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a25ad438-ddd5-4d16-b040-ca2023f406dd"
        },
        "item": {
          "id": "5f16eb3d-c2cb-4693-8183-abf224a85026",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e2dec9f5-662b-4900-b723-4bbe543a9def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5902d4c-44f1-403f-890f-e81bb3753925",
        "cursor": {
          "ref": "24b5237d-4978-4d42-b76d-62220e7d50b0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d6aa4335-20c3-4046-a92a-43dd61df48f6"
        },
        "item": {
          "id": "a5902d4c-44f1-403f-890f-e81bb3753925",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "19fa61b2-43e7-4b22-9c0e-3f19ae82697b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57cba4c-9e69-4e4a-9c73-6ba55bfb3dae",
        "cursor": {
          "ref": "27c861c5-72b8-48f0-9d5d-b21750488eaa",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e59f5591-e18f-4b9d-87b5-17fe4bdd712d"
        },
        "item": {
          "id": "a57cba4c-9e69-4e4a-9c73-6ba55bfb3dae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "43101618-4a5c-49b8-a799-da05cca19007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb64500-bf82-4f8f-ba48-1cfc2d84c1ea",
        "cursor": {
          "ref": "6d00259d-fca6-459d-9b2b-cf7ccce4c240",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7f48a16c-c162-4475-bb60-06b6d35c2bc7"
        },
        "item": {
          "id": "1eb64500-bf82-4f8f-ba48-1cfc2d84c1ea",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3e77f50b-37fc-4068-8bd5-9cb8e01dc690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd706d0-091e-4fa0-890e-3f15a5e9da0b",
        "cursor": {
          "ref": "03573ff5-bc4e-4cfe-bb08-7065f341a342",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8a75ced0-ea4e-420b-a310-620ac549424f"
        },
        "item": {
          "id": "0bd706d0-091e-4fa0-890e-3f15a5e9da0b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a5333160-2aa5-4ffd-b41b-4fa1c932bd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8106d31-ed4c-4f4d-9940-d9ac2d5750ec",
        "cursor": {
          "ref": "637a890b-8df7-4412-817a-33c8099e901c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9ec86fa8-2770-4bc3-908b-e48efa30c4d4"
        },
        "item": {
          "id": "f8106d31-ed4c-4f4d-9940-d9ac2d5750ec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "65f5f41b-a4b6-4630-9ac5-2d801720934d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd2bcca-0e38-4f0c-9da2-3eba46521b78",
        "cursor": {
          "ref": "d3374b16-43ba-4619-b970-aa63f6ea4eef",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1edc6acd-2c21-472f-bdbe-7b4c7ec88ad3"
        },
        "item": {
          "id": "bcd2bcca-0e38-4f0c-9da2-3eba46521b78",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f02aca56-38bc-42c9-becf-bf9563d9c1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f6573-3294-482c-82f7-65a16370357a",
        "cursor": {
          "ref": "67d8cc57-1324-49f9-bf04-78eb3790ee21",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1464a4db-dfa5-4969-b5e5-78c2c8cdb562"
        },
        "item": {
          "id": "602f6573-3294-482c-82f7-65a16370357a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c2013e35-704e-4514-9b3f-2fcd43b98a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949eeced-73c2-4aad-8321-1275b9d51210",
        "cursor": {
          "ref": "bb079113-5c2f-4574-b144-6dbc91ef1846",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ae9a3567-7ce5-425f-abfa-2260eac575bb"
        },
        "item": {
          "id": "949eeced-73c2-4aad-8321-1275b9d51210",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "411144fe-48f8-425c-b755-9e73d868fcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d93169-206b-439b-9951-ab500f7d31b6",
        "cursor": {
          "ref": "b397acd1-1465-4717-b10d-16eefd2600ae",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a0c23360-9519-4140-90d7-de18eef189e7"
        },
        "item": {
          "id": "85d93169-206b-439b-9951-ab500f7d31b6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "37ea49da-1b92-4904-8d27-d3ca62290a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caf9f5b-cbd4-4bd5-854d-9f84d3648d13",
        "cursor": {
          "ref": "3fb1300c-f404-407c-8ab9-0261e2037ec3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b21efe27-a0e1-4daf-859c-7b2068490741"
        },
        "item": {
          "id": "8caf9f5b-cbd4-4bd5-854d-9f84d3648d13",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7e17547f-e1e5-4f75-8306-74976e8af30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706b7fcd-1290-4498-948e-fb586722d75e",
        "cursor": {
          "ref": "f9e3bc12-7833-4cc3-b80c-ef49cdd4ff91",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "46996a55-f190-4452-88b4-1e9b46a01b53"
        },
        "item": {
          "id": "706b7fcd-1290-4498-948e-fb586722d75e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6ae09963-c8f5-475c-96f9-5c3d14a79030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e0530b-8f0a-418f-85b3-6254214bacda",
        "cursor": {
          "ref": "898369a0-ec45-46de-b1ab-1d2b818078e4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "82cd4e4b-9194-4bf6-8604-3020e9d6661c"
        },
        "item": {
          "id": "f0e0530b-8f0a-418f-85b3-6254214bacda",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5e5c798c-9065-4fd5-884b-4adc80fec64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea2ccd8-061e-4b88-bb1e-762bb99d73a2",
        "cursor": {
          "ref": "b9b570b7-3cba-46af-9787-ed278e5254cd",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dc3692ea-92b7-4d17-aa3e-866ace837b03"
        },
        "item": {
          "id": "cea2ccd8-061e-4b88-bb1e-762bb99d73a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7ccf61cb-e9bf-4e5d-8d4f-06656eee6431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e5b355-cd33-46b2-8e69-b1c729805d53",
        "cursor": {
          "ref": "04d29d0c-4398-4627-b2b3-596d25bc12ab",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3e62a7dc-914d-45f9-90c4-76bd5d1e3b5d"
        },
        "item": {
          "id": "38e5b355-cd33-46b2-8e69-b1c729805d53",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3f63ab7b-cd02-433c-8824-2055ee791314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2a3624-56de-47fd-8c2f-7e3dd05e0815",
        "cursor": {
          "ref": "f11dd0b3-2b34-467b-8409-87b835c3fd61",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ea76ea94-e4a1-4905-8512-cc6194a004f9"
        },
        "item": {
          "id": "1f2a3624-56de-47fd-8c2f-7e3dd05e0815",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b4d4d9ec-e233-4d84-98dc-08d2d7be03da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e10e995-61f5-4d05-a138-6d0d5bb3f124",
        "cursor": {
          "ref": "b269737b-6678-44b6-9307-69628ebc0e21",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "699e975d-071e-4082-ad4f-2d1478e2516c"
        },
        "item": {
          "id": "9e10e995-61f5-4d05-a138-6d0d5bb3f124",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "595c402d-21d1-4ea5-ae75-addbb3e97211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43934e16-3242-4689-acf0-a910aef4c508",
        "cursor": {
          "ref": "471a186f-13f5-49aa-9f4b-4cb6cc29e182",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "34e1ef06-2e40-4d92-b16a-b48a6ccdfef1"
        },
        "item": {
          "id": "43934e16-3242-4689-acf0-a910aef4c508",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "88029a6a-d353-4c51-abae-e0a7ea42445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa89843-f450-4b3d-bcb1-bf0e6b222510",
        "cursor": {
          "ref": "93961329-0ce9-4345-9924-6b44eb7ebc7a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a289285f-5986-4969-a996-c199f2bbf249"
        },
        "item": {
          "id": "6aa89843-f450-4b3d-bcb1-bf0e6b222510",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "055c6dc3-28a0-4ecb-91d7-6899fd764262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe636c4-a98e-4540-8ed2-a26dc0aa7ced",
        "cursor": {
          "ref": "c7e4ca30-53cd-4fe4-9477-b9341c61e01a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b465719a-d66f-4e38-8d07-b70d85b362b5"
        },
        "item": {
          "id": "5fe636c4-a98e-4540-8ed2-a26dc0aa7ced",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "873c8086-ad01-49ec-950d-b7cd9b09e063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3782fcc6-15ca-4c26-8ed9-bb9b7fa23a58",
        "cursor": {
          "ref": "279ae1a0-709c-46f5-a1b9-35172cd893e9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "026a3038-ca42-488d-92fb-4ae7a64493e9"
        },
        "item": {
          "id": "3782fcc6-15ca-4c26-8ed9-bb9b7fa23a58",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "142fa985-6771-4adc-b653-040b8afbee96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063962fe-dc03-4666-b9a6-7368ab5d050f",
        "cursor": {
          "ref": "727ed7fa-edd4-47f9-a47c-fec082a7876d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "75d58fc5-39c2-4c5d-a9c2-66e67d82bfe5"
        },
        "item": {
          "id": "063962fe-dc03-4666-b9a6-7368ab5d050f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c7f976a3-2590-43dc-9c7e-5d5b58d93ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a691adea-fd42-434a-8d07-b590744f6fba",
        "cursor": {
          "ref": "45528809-4ad2-4924-ab98-ba40756e9d55",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2968cb7b-c130-4728-8575-b14da3aa80fd"
        },
        "item": {
          "id": "a691adea-fd42-434a-8d07-b590744f6fba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "76f95b85-96b6-4e13-bb6e-294292c4f765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6050f7-1773-4f9b-9600-26a32f172477",
        "cursor": {
          "ref": "f5cef5ed-3870-44a8-801f-cd62c63fcd58",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6bfc57d6-f3b7-4b30-a5ed-40d1fda17f96"
        },
        "item": {
          "id": "1f6050f7-1773-4f9b-9600-26a32f172477",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "38b365f3-2a71-4dc4-8ae3-55009f5f2df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3951f1-ac0e-4f79-bac0-9bf77976d626",
        "cursor": {
          "ref": "7adbc69e-4a20-4c71-b4f5-33a24f666981",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9334f16e-b859-47a1-abe3-4e6c15ef6a21"
        },
        "item": {
          "id": "8c3951f1-ac0e-4f79-bac0-9bf77976d626",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e6ea1428-c176-4bd9-98d5-3f7f51062f0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d14f4fa-bbf1-49dc-ac7c-933c3366a4ab",
        "cursor": {
          "ref": "28237120-b480-4dd4-b2fc-3638a0c0ead4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dcf66770-f4d4-49f4-9b24-f12b5dd7e7b9"
        },
        "item": {
          "id": "8d14f4fa-bbf1-49dc-ac7c-933c3366a4ab",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f3590b88-f071-4f9c-aa82-7652d53af4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "2cee0504-fc68-4858-a04f-7487f595bbdf",
        "cursor": {
          "ref": "6055b787-5dfe-462b-b32d-bd769790f1f4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cd9261a5-1aef-4d42-874a-b053a0420cb6"
        },
        "item": {
          "id": "2cee0504-fc68-4858-a04f-7487f595bbdf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5efd45f4-52b0-4744-aaa1-7cda2e7eb611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "77b629c6-a6e0-47f4-afc4-4141e344e140",
        "cursor": {
          "ref": "67ee000f-93ff-40f6-a4ac-0fad4a193aa9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "653ae86c-40d6-458f-9489-eba5ca2ea28a"
        },
        "item": {
          "id": "77b629c6-a6e0-47f4-afc4-4141e344e140",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "10d46bb8-b613-4f0d-b3ba-0775b79d3ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9fb92c61-26e9-429a-bb06-9f0a26c047d5",
        "cursor": {
          "ref": "3c53b7f5-e6e3-4cf5-b531-174cb3b26980",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "72d0dffe-463d-48f7-bfe4-a5c6e848fde4"
        },
        "item": {
          "id": "9fb92c61-26e9-429a-bb06-9f0a26c047d5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "caf1880a-62c2-4207-9a81-1531fb5d84c6",
          "status": "Created",
          "code": 201,
          "responseTime": 4742,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c08af55-9708-4263-858a-4c6c4610404d",
        "cursor": {
          "ref": "34a9952b-048e-42ad-9252-ab1cd0ed1d8c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "25f682de-206f-492a-91a2-b84af0bc3f80"
        },
        "item": {
          "id": "1c08af55-9708-4263-858a-4c6c4610404d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d43a1f50-defb-4c5c-92c9-bac4d613c38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9c5d2221-fd71-4d43-ba26-543e528a8d0e",
        "cursor": {
          "ref": "ae241c1b-b1b9-417d-9962-d601b26272dc",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e36e7e53-0f73-441d-9060-8f12d759b237"
        },
        "item": {
          "id": "9c5d2221-fd71-4d43-ba26-543e528a8d0e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d95ce99b-e6d9-457b-aa59-c2c0715697a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "037338c0-4643-4b45-b407-3760aaa56fbd",
        "cursor": {
          "ref": "78d72742-e93c-4632-81fc-27855af269f9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3f2fb264-8f4f-49fc-8c18-0b468d580fc2"
        },
        "item": {
          "id": "037338c0-4643-4b45-b407-3760aaa56fbd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0433a566-4042-4eea-b0be-8a10969d8a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0856e79-a540-4824-9ba4-0b3ce10a6e77",
        "cursor": {
          "ref": "d5d07004-e843-4e46-9ec2-25552544755a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9d26a326-add6-4058-9f2d-1deedad4a0fc"
        },
        "item": {
          "id": "a0856e79-a540-4824-9ba4-0b3ce10a6e77",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b19086e9-d2be-414a-b85e-655bdcfadf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e34d63-8d6e-4eb3-8e2d-17c560b13954",
        "cursor": {
          "ref": "73f8f8c3-bd8d-476c-bfd3-2c624d9ed2ff",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d23185a4-fa13-4c01-aeed-e62643defd00"
        },
        "item": {
          "id": "c2e34d63-8d6e-4eb3-8e2d-17c560b13954",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67f0920a-a829-4f21-a1b1-70ae33b300df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9047f0d8-88a8-4e52-8d4f-653ec51fd468",
        "cursor": {
          "ref": "62bdf3eb-084b-454c-9745-adff5621cbc6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a5eb1690-7f44-461c-872e-cc56d630cc13"
        },
        "item": {
          "id": "9047f0d8-88a8-4e52-8d4f-653ec51fd468",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d52cbbbe-7c19-4245-bb19-0da5f8c476ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1644e-90d6-4a70-ab06-1163d1d98b85",
        "cursor": {
          "ref": "7b43458f-85a7-47cc-bda2-d47325f62586",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5a2b0e6e-964f-4349-abbb-d07875e73837"
        },
        "item": {
          "id": "e1c1644e-90d6-4a70-ab06-1163d1d98b85",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9886f385-b7ec-492f-8dfd-6817a17a9c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b990dfc-0025-4f82-8b22-a1fe9ccb88cb",
        "cursor": {
          "ref": "d205c996-0bdd-488b-af7c-b55c1d8369a2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "83b1122f-3bd0-4192-9790-2d3efb4ebb8d"
        },
        "item": {
          "id": "5b990dfc-0025-4f82-8b22-a1fe9ccb88cb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f7933e57-9fde-431a-93ab-490e022feda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed9d0d0-3ea3-44ed-ac3d-fe62b2414045",
        "cursor": {
          "ref": "d50c47b7-8ea5-47b5-acfb-641957f34096",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4341c0d8-cf22-4710-9d0a-800236ab6470"
        },
        "item": {
          "id": "aed9d0d0-3ea3-44ed-ac3d-fe62b2414045",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "51a15ed9-b155-428e-913d-4357b44e2334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6632070-3ead-46e3-b3bc-6ac2551bb4e7",
        "cursor": {
          "ref": "85c95342-6222-42ef-9307-edd655bf3c13",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bca3598f-e9f1-4469-b8c6-1c7d3b1cc57b"
        },
        "item": {
          "id": "a6632070-3ead-46e3-b3bc-6ac2551bb4e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83c10381-5f37-47cb-98ff-3f4fa4485077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988b1ab0-7266-4ab2-b194-b9ff2026e4f8",
        "cursor": {
          "ref": "b1dcc591-3f65-40c7-a975-6d925106cd52",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "134a0280-4148-4405-a8d8-4361d40d9d85"
        },
        "item": {
          "id": "988b1ab0-7266-4ab2-b194-b9ff2026e4f8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3df1c668-a359-42f2-bd0f-8163372e60d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b260e51-e216-414a-aa54-4a1067b43eb5",
        "cursor": {
          "ref": "88cb31fa-c0f0-4d35-8dc3-51e62e0296a0",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4c1b2348-6219-450b-b752-5ce29cad449b"
        },
        "item": {
          "id": "5b260e51-e216-414a-aa54-4a1067b43eb5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c70f3db5-f774-48db-9d4f-460b22f31382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cc9bc3-fa3b-4e78-8463-f9893d042c2d",
        "cursor": {
          "ref": "3cc9da07-970a-4ae5-a932-52ea9a801dc5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6fed08fb-344b-42b0-b9c0-276c64d1e7d4"
        },
        "item": {
          "id": "12cc9bc3-fa3b-4e78-8463-f9893d042c2d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "48a5e9e8-e472-4a2d-a0bc-77b8e08a54cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09874d39-b065-4608-9a4f-4caf94436220",
        "cursor": {
          "ref": "d5029867-c0a0-4f83-bff9-7edab811dee0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "53a8f7af-c571-4b39-a21d-e67c6f922008"
        },
        "item": {
          "id": "09874d39-b065-4608-9a4f-4caf94436220",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c85d8f40-e896-4010-9977-4a16bf96dd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c85f737-5379-4b33-a9a8-dae8268724c6",
        "cursor": {
          "ref": "185c01f9-7026-4a30-ab30-479d586ec45f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b6a083ea-fb15-40f1-97ec-20e3bf73c0c6"
        },
        "item": {
          "id": "7c85f737-5379-4b33-a9a8-dae8268724c6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "78f2b36b-6e6d-45db-84c7-4454efe32590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33d063a-e1b4-4eea-9c9a-c1fb29db15e5",
        "cursor": {
          "ref": "bf1e572d-1ea4-4277-84f4-689502f1a4a2",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "69321705-ef97-44a1-b2be-1e065f8d0af5"
        },
        "item": {
          "id": "c33d063a-e1b4-4eea-9c9a-c1fb29db15e5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e9af2556-ec60-42f1-9eb9-176f8537dd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94f0535-1993-4e1c-82fc-ebbe8c16c6f0",
        "cursor": {
          "ref": "f530c957-b319-4269-8bff-6bf76fa15322",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "93333c67-a1ea-48d8-a3dd-daedf43f1ef5"
        },
        "item": {
          "id": "f94f0535-1993-4e1c-82fc-ebbe8c16c6f0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc7c11b5-ca74-4ca7-9d98-29c8a2ba8c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21d7354-23d0-4580-9c78-88203da7a57f",
        "cursor": {
          "ref": "bf3fc468-55b1-4158-8d4b-599ce602cf1f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7e5718aa-3720-4528-90e8-d1c55711f19a"
        },
        "item": {
          "id": "e21d7354-23d0-4580-9c78-88203da7a57f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "53feb5f6-e485-47c0-b25b-cfcf562f3e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb5847f-72d0-4399-8b20-084e5be48f7a",
        "cursor": {
          "ref": "df091967-3cf4-4a8c-82c7-45e98bb22b20",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5a52ef0d-c287-4aa1-a15a-7a19698c088a"
        },
        "item": {
          "id": "dbb5847f-72d0-4399-8b20-084e5be48f7a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1674018-304f-433d-b667-a5fdd49ec7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781eb43e-5e90-494c-b87f-9440021b121c",
        "cursor": {
          "ref": "4903559a-66f0-4d4f-ba1e-b190ee813e6f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ffdc8085-924d-4ab8-bb9b-6dc3cdd697a3"
        },
        "item": {
          "id": "781eb43e-5e90-494c-b87f-9440021b121c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d4eb43ab-c624-4190-9f0a-b576eab1af30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ef6268-e8a0-4703-95e8-7abd113d2ae5",
        "cursor": {
          "ref": "43f57b09-9be1-4d47-b45c-12270620745c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3c8f4bc0-78a5-40f0-9afe-a78cd785d1da"
        },
        "item": {
          "id": "d9ef6268-e8a0-4703-95e8-7abd113d2ae5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39abc8f4-e876-46c2-8e4b-31bc323a02f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08832ef1-d8ef-4846-bc23-baf2c5fcc39e",
        "cursor": {
          "ref": "b8623b60-bc20-49e4-bedf-40cacb5f2f96",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "203c7ad5-9f75-4024-9ee4-234225784639"
        },
        "item": {
          "id": "08832ef1-d8ef-4846-bc23-baf2c5fcc39e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "931976d8-34fa-4fd4-a40c-eb924a50f7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca7037-0888-4be5-b364-b8b46d7b5190",
        "cursor": {
          "ref": "2a30c704-baf2-4d7a-aafe-659b0cc1be0c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2b852b44-dfd3-4e80-a4b0-ecb546628e7d"
        },
        "item": {
          "id": "beca7037-0888-4be5-b364-b8b46d7b5190",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99bf0ac8-6c53-4316-9b60-fa88667b9e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688ce4aa-d800-4816-8313-30fc774568e1",
        "cursor": {
          "ref": "c2fc8e57-679a-4a08-bb18-1a94a64d6a1c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f4ea2ef2-d31a-4af3-a6d0-43dbce0d7745"
        },
        "item": {
          "id": "688ce4aa-d800-4816-8313-30fc774568e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1a78ec2f-2801-47be-9eba-110ecfb5f734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914f2b3-69a4-45b4-b609-cf7318fac194",
        "cursor": {
          "ref": "c262ae5d-9e0f-472b-b19e-7f0931bc907f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bee09c79-fbc3-4b60-bef2-e7ab3913cf85"
        },
        "item": {
          "id": "7914f2b3-69a4-45b4-b609-cf7318fac194",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e91c8032-311e-4f52-b410-e9aad7955a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75803a0-38ed-400d-9d27-8f4a2eb4e731",
        "cursor": {
          "ref": "0bdde8d2-27d5-465c-987b-5b0629e0970c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2c0cead7-0d1b-4949-90a9-21c4998be9c9"
        },
        "item": {
          "id": "d75803a0-38ed-400d-9d27-8f4a2eb4e731",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5690348b-cb10-46ba-b667-4af9beefa568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75859752-bd1b-4c21-b95a-475ff61d3db1",
        "cursor": {
          "ref": "87bcd55b-ab00-485e-b1d2-f1ac675f24e8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a57c312d-535c-4ca9-8cb9-2dccd8f001ac"
        },
        "item": {
          "id": "75859752-bd1b-4c21-b95a-475ff61d3db1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "689e4ca1-c258-4134-a62e-284914213bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7f0aab-c030-4091-bd18-3390ad442506",
        "cursor": {
          "ref": "3873f6c5-bfa5-4d83-8bb2-f83089236b21",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "671528f5-f3a5-475e-b6a5-188a24e5adca"
        },
        "item": {
          "id": "9e7f0aab-c030-4091-bd18-3390ad442506",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c3b30d17-9e01-4819-94a0-96e7dea391e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8748d953-df4f-4b9c-8994-8dfc4d501008",
        "cursor": {
          "ref": "2b5134fe-b08f-4ba1-adfd-977a1ed79b2f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "81c25a8a-c7e8-4d38-93a2-e03191e27fb2"
        },
        "item": {
          "id": "8748d953-df4f-4b9c-8994-8dfc4d501008",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e0300c0-bf2d-461c-8cd3-030fd45c6ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f592d3c-7bb0-4839-8d12-725787f93284",
        "cursor": {
          "ref": "e8e5138c-49c0-49f3-8386-fb6be5bb8937",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7372c107-13d7-4247-b1a5-53633777a484"
        },
        "item": {
          "id": "5f592d3c-7bb0-4839-8d12-725787f93284",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e4a5d0da-4edb-40e3-9b7a-46749d7d44fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859fd240-86fd-4032-8917-1665637dcc8e",
        "cursor": {
          "ref": "b5b762c0-20e1-4d2a-aa9f-514c04664185",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c37e13eb-dfe0-44fc-83c7-b99b7faf8e4d"
        },
        "item": {
          "id": "859fd240-86fd-4032-8917-1665637dcc8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "be86e006-5190-442e-965a-4d8bc722731c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df172ab2-151c-4c06-a1e3-5a85353151c7",
        "cursor": {
          "ref": "c9553c1a-8b3e-4592-8fb9-7300c54fae95",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "777a9cc9-592d-4cf2-8a3f-ab4eab02095a"
        },
        "item": {
          "id": "df172ab2-151c-4c06-a1e3-5a85353151c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "26fc78a3-eda0-4a50-9424-1eb1eb15b0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc20fe3f-67ad-4fe6-8842-0c4db813c2e8",
        "cursor": {
          "ref": "af5ebaa5-59df-4219-8a07-499c6c4564fd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ad745806-34d1-4c11-889b-92df0dc7e313"
        },
        "item": {
          "id": "dc20fe3f-67ad-4fe6-8842-0c4db813c2e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "28388f5b-117f-407d-a2f1-957d09b66351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48076d6-ca5c-46fa-b02f-0b508e93fd0d",
        "cursor": {
          "ref": "a1588197-2c03-4b43-831c-3f05d8a49e77",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8c5e1734-f9da-4988-b4d0-d76aea0f137b"
        },
        "item": {
          "id": "e48076d6-ca5c-46fa-b02f-0b508e93fd0d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "06455242-9894-4bcd-a57d-58252efad9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a29a33-d1ca-469d-87bd-2b72c033347f",
        "cursor": {
          "ref": "9bf950fe-baed-46d8-b05e-e57657729674",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8d112412-da82-4a5a-8555-7b213e0247ee"
        },
        "item": {
          "id": "07a29a33-d1ca-469d-87bd-2b72c033347f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "867f8d3c-d56e-45c2-8eb6-c4338c1a9cf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4876c466-4671-48b6-8003-ec3c46e0c102",
        "cursor": {
          "ref": "7e086428-1b71-45c4-a941-789abf24fa29",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fb3e6fe1-6f7e-4f7c-853d-1b509d572ece"
        },
        "item": {
          "id": "4876c466-4671-48b6-8003-ec3c46e0c102",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4899f090-ecea-44e5-8112-8fafff59e928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232e8811-233f-44d3-a24c-bb551b9ed3a5",
        "cursor": {
          "ref": "b9de3776-8950-4d47-863f-225bebe9cdae",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5732550e-79c4-40b0-8ef3-564236a3bbab"
        },
        "item": {
          "id": "232e8811-233f-44d3-a24c-bb551b9ed3a5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e36a6cfa-945f-48ac-aff5-9ba989c142b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b6ee3-c922-4f81-bf85-e582d50b5ced",
        "cursor": {
          "ref": "d3339b6d-d5a2-4184-bd31-4eb2a00f514f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a1764c17-16aa-4588-97c4-a2b8efa4545e"
        },
        "item": {
          "id": "9e1b6ee3-c922-4f81-bf85-e582d50b5ced",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "47ba1201-9acc-4b79-98e4-56d17479afd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d320fc7-91a2-4f97-a333-3cd6aa183bdf",
        "cursor": {
          "ref": "6c08ae09-8566-4daa-8d9b-0d902c58f1c6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4a95ce87-2da6-46f6-8756-979ddb4f78ce"
        },
        "item": {
          "id": "5d320fc7-91a2-4f97-a333-3cd6aa183bdf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a625eb30-9c28-47f0-af19-5e764422c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a56f7-78a3-457e-b2f6-04b010ef5a3e",
        "cursor": {
          "ref": "d984e2a5-44f6-4e8a-9e12-c62e62a33a26",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b3f24f97-7a91-4d6a-b55f-b7096dfcbdf7"
        },
        "item": {
          "id": "0a0a56f7-78a3-457e-b2f6-04b010ef5a3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e696e233-6a1a-4ae5-9e4a-9ab333694543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14298e60-b000-4eaa-bb61-78b360422cca",
        "cursor": {
          "ref": "a0e43b53-461e-49a6-8526-1c8f3b1cdcb5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bb692b32-1f1e-4830-8a59-42b2d596c8e2"
        },
        "item": {
          "id": "14298e60-b000-4eaa-bb61-78b360422cca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3b01380d-c532-4a97-b7d8-45d50cf19727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8383abd9-9bce-40ed-a933-dfd27f542367",
        "cursor": {
          "ref": "4296a244-bcb3-445d-8a62-cbcf4079cda1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f4957c8f-e4e0-4d68-9366-0b94312be609"
        },
        "item": {
          "id": "8383abd9-9bce-40ed-a933-dfd27f542367",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5027cac-4c91-4b8c-85a2-083d72ecc948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc96ffe-868b-40c1-8553-40bad50300e4",
        "cursor": {
          "ref": "d183df4a-af3b-496a-8970-538769636d27",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "39d8aef7-bd4e-463e-8ec7-b97ae57fba69"
        },
        "item": {
          "id": "0bc96ffe-868b-40c1-8553-40bad50300e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f8a23611-ae96-45b5-88df-c316119fab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece27b9-25fd-45ae-bb83-c3b9d5c537fe",
        "cursor": {
          "ref": "c3412f29-f031-4451-9139-a84d361a0dda",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6ad7a7fa-7d21-46d3-b0ec-f78d81037787"
        },
        "item": {
          "id": "eece27b9-25fd-45ae-bb83-c3b9d5c537fe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aea63f02-5037-48ad-bba7-ca91cd49adc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cf1667-cd93-4ed2-9a81-4cf8eb1325ba",
        "cursor": {
          "ref": "006397df-781f-4ab7-ac5a-e63b649e9cb0",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "387202a2-dc61-4be6-8f76-608f2aaeb363"
        },
        "item": {
          "id": "91cf1667-cd93-4ed2-9a81-4cf8eb1325ba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "138a849d-da39-4fb2-ba89-aa4027c89ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d789e8b6-3a67-469b-8172-e283d2ad4a64",
        "cursor": {
          "ref": "165b8ab3-0b5d-4db8-97d8-a6d65f30350b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "416e91f7-6731-4dd1-9d7d-6276a2fab052"
        },
        "item": {
          "id": "d789e8b6-3a67-469b-8172-e283d2ad4a64",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3dfa756-53b1-4a35-a16d-ffca714f1aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59d8507-ae2b-4992-9cea-07b4d54785a6",
        "cursor": {
          "ref": "eb81ca93-9a09-4f05-a5c7-ffb05394202c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48ea1fe1-a59e-4e18-996f-f1f9db0eb52d"
        },
        "item": {
          "id": "b59d8507-ae2b-4992-9cea-07b4d54785a6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c033ba99-ec16-4c41-9a85-9bb02933775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572a8833-8ca9-4b6d-a102-e58c1421706d",
        "cursor": {
          "ref": "8ef3b02a-a647-48b7-9c23-4bcdb67ca047",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c036f96e-a6c2-4d9a-9f68-ddfe0d524bb2"
        },
        "item": {
          "id": "572a8833-8ca9-4b6d-a102-e58c1421706d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "88907d4e-b8d5-48fd-9b7d-c2cb33446a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2facd8fe-107c-47ab-8145-76796b2f0603",
        "cursor": {
          "ref": "2eaf4fe2-99c7-4eca-aaae-df0e9c245341",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "61c1840d-b4b0-4115-aad9-48aaa02a6e08"
        },
        "item": {
          "id": "2facd8fe-107c-47ab-8145-76796b2f0603",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3bd98cae-8365-4c49-a71e-73f10c76d37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460c0e3e-a50d-4947-825a-c817e0c4df27",
        "cursor": {
          "ref": "e0c1f5be-c496-457e-a566-1ee790882dd8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2de6c4c8-4424-4a52-bff8-a673752f2d2e"
        },
        "item": {
          "id": "460c0e3e-a50d-4947-825a-c817e0c4df27",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ffb7538-51ed-40f8-985b-caee5df4e526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f900913-db26-445b-b745-ed2fe6e3eaed",
        "cursor": {
          "ref": "c350dcd3-7a95-4b1a-93a6-66049043b5a0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a85ba6c-5895-4972-a58f-f8c08a0944da"
        },
        "item": {
          "id": "8f900913-db26-445b-b745-ed2fe6e3eaed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "57c35214-6fd3-4364-babd-c640e51c14d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d137311-d0a4-464a-ad69-d390de4d4870",
        "cursor": {
          "ref": "b34884e8-f2e0-42bd-89d4-2a3b2f86bc0c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "33ecdc09-27b4-480e-b86f-796fc8a567f0"
        },
        "item": {
          "id": "8d137311-d0a4-464a-ad69-d390de4d4870",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4f4d8df0-ec9c-4a12-8b41-1db231913313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a7fca3-3337-493f-a8f2-4dac1b3d6a00",
        "cursor": {
          "ref": "532d7398-13fa-4083-afb7-af20535301b9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "786c1c87-4240-444d-80cf-51dbd8e19467"
        },
        "item": {
          "id": "96a7fca3-3337-493f-a8f2-4dac1b3d6a00",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "da67d904-e60f-43aa-8273-395f15105067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d7b268-f0b6-4a32-bcfb-d8b1e906a081",
        "cursor": {
          "ref": "5adbe79a-bb70-4ffc-bcb2-3102d029fba5",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0e4ab5a6-7f12-4d12-b8cc-b41d6e74944b"
        },
        "item": {
          "id": "e9d7b268-f0b6-4a32-bcfb-d8b1e906a081",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f1c3c2cc-20aa-469e-a051-8a87b30d8e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7eb619-784d-4317-9de8-d4f972a84c5a",
        "cursor": {
          "ref": "4bec954c-69be-4811-b2bd-b10b87e5ca85",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "44072270-6bf2-4baf-b30d-0d62135caffc"
        },
        "item": {
          "id": "1c7eb619-784d-4317-9de8-d4f972a84c5a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d1982d77-852f-4325-bcbc-1dce6bcd46a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ac33c5-3fe8-43df-bd27-37dd80afcb40",
        "cursor": {
          "ref": "3f82e15b-6115-4c26-b455-d37d71c49130",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2d954423-477e-43a5-92a2-ba637ee7959c"
        },
        "item": {
          "id": "29ac33c5-3fe8-43df-bd27-37dd80afcb40",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18d20d53-f519-4b98-aba2-d02f7eff7c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06528af0-802d-4724-bcc0-cb8f3fa06791",
        "cursor": {
          "ref": "b345706e-5d55-4a37-8fd8-e9718282c1b6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fbaf17c8-b03c-4168-afc5-14db0d9b1fee"
        },
        "item": {
          "id": "06528af0-802d-4724-bcc0-cb8f3fa06791",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "97020216-4256-482a-806d-2d5c98d1d978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba55226-fadd-4e3a-87e4-ff02d0caa5ed",
        "cursor": {
          "ref": "cdcef6b2-bb25-44d0-bed8-b8388cb2e513",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c164371d-c034-45ac-9ab8-65cde528993a"
        },
        "item": {
          "id": "8ba55226-fadd-4e3a-87e4-ff02d0caa5ed",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c2e71b3-2aa8-49d2-b2b5-906b99be237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da7efe9-889d-40c5-b862-0ca03b6200ed",
        "cursor": {
          "ref": "8f3ef700-9fb3-47c5-aa9d-c1a4eb061353",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d4cf8930-6438-447c-9917-47f23bcd31f3"
        },
        "item": {
          "id": "9da7efe9-889d-40c5-b862-0ca03b6200ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "137a3d84-a6bd-499c-8563-02ab7582f606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12745d40-489a-43cc-b185-9b90b640a085",
        "cursor": {
          "ref": "acfabeb5-583e-4325-b404-5fe5123e00a2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c4ddf11f-23f3-4eae-b2a2-e83986f56de4"
        },
        "item": {
          "id": "12745d40-489a-43cc-b185-9b90b640a085",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31f14aba-9078-46e5-b10c-7f660f6dedae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a700c0d0-8dfe-43de-8bcc-dfff98520b22",
        "cursor": {
          "ref": "101febe4-d7c0-42ba-a929-d4563cdad8c6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "399bfc9b-31f9-4c92-89ce-cdec544a5af6"
        },
        "item": {
          "id": "a700c0d0-8dfe-43de-8bcc-dfff98520b22",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "65bb192c-9cac-4f4e-8fe1-59062863cc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a56e30-d431-402f-8ab2-7863c081fe48",
        "cursor": {
          "ref": "8b575494-491b-4102-8230-366d876b6ef6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "14f6439e-3f88-47d6-a3fb-eb1e8b2fa6e1"
        },
        "item": {
          "id": "39a56e30-d431-402f-8ab2-7863c081fe48",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70c2b101-3063-466c-8769-164ac07eed2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992b0078-640f-4dd9-8df8-27c01c7cd0ba",
        "cursor": {
          "ref": "967cacea-cf4f-4550-b457-6ce325162c39",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "37f9bdd1-36e1-4823-972b-46e05903dfce"
        },
        "item": {
          "id": "992b0078-640f-4dd9-8df8-27c01c7cd0ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b4692fd8-1b41-441f-9488-d5491192a341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c9a873-33f0-418a-8119-3efc77475cf5",
        "cursor": {
          "ref": "3ac25d16-30cd-477c-bc1d-00e445b32e11",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a77caa41-6672-4ae8-b76f-9313ec504be5"
        },
        "item": {
          "id": "c3c9a873-33f0-418a-8119-3efc77475cf5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86e403dc-889d-4f54-896f-1d38421ba0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5438b76-ac7d-409f-91b3-e084ae610672",
        "cursor": {
          "ref": "fdbe39a3-46c0-429f-8c32-20a0fb5a0f8e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0d97b3c4-4a80-4313-b9f6-62d49d66c328"
        },
        "item": {
          "id": "a5438b76-ac7d-409f-91b3-e084ae610672",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "435b20bf-e1f0-402a-baec-b4d43f2fdbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad5baf3-10df-4b48-a9e9-8c9757ba46c9",
        "cursor": {
          "ref": "f0c75cb1-47b6-477e-8339-83190491b154",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "39526289-dd7e-4b4f-99c1-e222b0fd4a14"
        },
        "item": {
          "id": "4ad5baf3-10df-4b48-a9e9-8c9757ba46c9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2878b37c-ec54-4f8f-9b87-1dfbb276192c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388d2d1d-1860-43ef-b9f2-cff9d5bc6b7f",
        "cursor": {
          "ref": "25b2dfff-62fb-461c-8ac7-0ecca422634c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80b6f79d-cdfb-4ad9-b317-6a75412b48ec"
        },
        "item": {
          "id": "388d2d1d-1860-43ef-b9f2-cff9d5bc6b7f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "128a3258-3148-4c27-b03b-0a2fb4d3fa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de599e2f-22ad-4b0d-b342-0220bbaf670e",
        "cursor": {
          "ref": "ff6f2d12-15b5-4f54-bbf6-f91ded3dea0d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "abf574a3-b394-4729-810b-6e2d86167e73"
        },
        "item": {
          "id": "de599e2f-22ad-4b0d-b342-0220bbaf670e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "af2ef142-5e3f-417c-ac3c-8b9dda61d4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d432b4fe-3993-4a65-afee-b6a4fd23ee1e",
        "cursor": {
          "ref": "abc6748d-081e-47a8-8509-15c197450d95",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a5e4c821-0e5c-453e-9f02-6900ba8eed7a"
        },
        "item": {
          "id": "d432b4fe-3993-4a65-afee-b6a4fd23ee1e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8a29a612-70d8-46e5-94f8-a4c964b76d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2e222a-7935-439f-8f65-7f798affc928",
        "cursor": {
          "ref": "dd99f97e-39db-4ff8-bc47-f982d35acb65",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d0241d4f-c70b-49dd-8d57-d012d7854ed7"
        },
        "item": {
          "id": "ea2e222a-7935-439f-8f65-7f798affc928",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "936030e5-cedf-48c5-953c-3ecbc7f0148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363fbfbc-6ccb-4562-93f8-1c54c4218451",
        "cursor": {
          "ref": "a1f786af-f2e8-4376-afae-4510b98c1488",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eed7ae9b-0d37-44e9-b2ac-b61cc553b678"
        },
        "item": {
          "id": "363fbfbc-6ccb-4562-93f8-1c54c4218451",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5493ef20-d22e-4f21-b816-f2f59bf22b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9548a275-f117-4cd0-a8f5-08737a7222dd",
        "cursor": {
          "ref": "527b7b38-30c2-44f2-a6c9-33306149a7ad",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8065d393-46f5-4eff-9834-1395934c4768"
        },
        "item": {
          "id": "9548a275-f117-4cd0-a8f5-08737a7222dd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "df744fa9-b1d6-4dee-ba5a-1a4dedbd2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b287b51-366c-4823-8c9a-de66a08b4191",
        "cursor": {
          "ref": "3d0695a3-e092-4a15-a300-121437ae5b48",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "50fe9865-9987-4d59-bf3a-46a3830eb9e5"
        },
        "item": {
          "id": "9b287b51-366c-4823-8c9a-de66a08b4191",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "56ba454f-6036-49b7-b4e8-8a1bb1e8a985",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b5bcae-3140-455c-9e2c-b158ea491551",
        "cursor": {
          "ref": "643022da-6338-49d2-87a6-31ef93f44c27",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "001f1ee6-0948-4ce1-8d78-ede3b9b1f3a6"
        },
        "item": {
          "id": "06b5bcae-3140-455c-9e2c-b158ea491551",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "583f26f9-15f3-4354-ba3a-d2911323d799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34538ded-d40e-4932-bd48-f672d5a172fc",
        "cursor": {
          "ref": "5fec5696-4c15-4715-8556-803b80c83559",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f4bb282f-6c8e-443e-a2a1-0cba8e354dfc"
        },
        "item": {
          "id": "34538ded-d40e-4932-bd48-f672d5a172fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "614da6e9-1cd3-41ab-8b3c-0ace160d7283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dd6199-f9dc-46bc-8c0f-b79631b686a1",
        "cursor": {
          "ref": "aece4300-0b7c-47eb-a116-1dfb317e3d98",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "00690c9d-8205-49a4-973b-b92cbba438e5"
        },
        "item": {
          "id": "c4dd6199-f9dc-46bc-8c0f-b79631b686a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "89beb891-dc06-4eab-bc8d-5abe944a58a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2413f004-225a-47e9-8d1b-14a1fcab0ee9",
        "cursor": {
          "ref": "4c402328-8995-4068-b87f-fb673523f00d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2699b879-5db6-4ca8-bc6f-df3a7f3ee825"
        },
        "item": {
          "id": "2413f004-225a-47e9-8d1b-14a1fcab0ee9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "30fb0965-aee0-4744-b83c-aef49a65f908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4644b5c2-af09-42a2-a3e5-b7c197017146",
        "cursor": {
          "ref": "cfaedabf-f112-43ca-b963-2fe2d99b0cb4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bd2a7334-01b1-41d9-9e72-0944955c36b8"
        },
        "item": {
          "id": "4644b5c2-af09-42a2-a3e5-b7c197017146",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "11a14aed-907d-43ef-be2b-e5ee9e7af126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a573fe-5991-4f2c-89de-696cd7076bb5",
        "cursor": {
          "ref": "aff547e9-7452-4892-a272-6bcd4bed9bb3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c6fffe95-4cbc-42cb-801a-af9dd58f1864"
        },
        "item": {
          "id": "e8a573fe-5991-4f2c-89de-696cd7076bb5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9c600a50-6ef8-40d6-87bb-654b3af4e19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49adf012-d3bd-4e72-bffe-0b116f976f3b",
        "cursor": {
          "ref": "97afcaf8-3857-4349-94da-5faf99a3e7f5",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f0abac55-80d1-4cb0-ace0-8b9ce794388b"
        },
        "item": {
          "id": "49adf012-d3bd-4e72-bffe-0b116f976f3b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "24bc7c6a-9ea5-4e8e-9e18-0142052e42d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f26a57d-d8aa-4c49-9d02-24b6c56df77c",
        "cursor": {
          "ref": "3c45aa39-93f5-40d9-a261-d0e3098c4758",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "15aa2f05-1597-44a6-a418-e3f1f8c62140"
        },
        "item": {
          "id": "8f26a57d-d8aa-4c49-9d02-24b6c56df77c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "30067db1-ac38-4951-ae93-612ee4c0abc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7d2d2-e16e-4b81-87fa-71dc8d8df81c",
        "cursor": {
          "ref": "28b074ab-6747-4c15-93fb-3137fad36695",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a185a1ac-30f9-435e-ac5a-42a962c8326c"
        },
        "item": {
          "id": "71c7d2d2-e16e-4b81-87fa-71dc8d8df81c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7ef4ed6d-d30a-4075-8336-87c5cf531470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a7e406-5d1b-45fb-965c-d064314a9180",
        "cursor": {
          "ref": "118ec032-9116-421d-866c-786e54e0f3cd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7c6c6c51-a270-43c5-97f6-66684b645cff"
        },
        "item": {
          "id": "91a7e406-5d1b-45fb-965c-d064314a9180",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a302e171-296f-4ccd-9de6-e74d3ee3af5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74e8c1c-e112-4b8c-b941-3fe99909d10e",
        "cursor": {
          "ref": "6350043e-1bdd-4210-aecc-ef12314379c1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "31aee25f-9a6f-4994-a632-ba82682b7f6e"
        },
        "item": {
          "id": "c74e8c1c-e112-4b8c-b941-3fe99909d10e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be27057f-5282-4007-8cbb-913a87393578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1854f246-3dd1-42f1-aafd-3ce24562c78c",
        "cursor": {
          "ref": "34969a58-1654-4120-aba6-f3e39f414741",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "42ed3de3-02b5-423c-8283-8b3ff6188d5c"
        },
        "item": {
          "id": "1854f246-3dd1-42f1-aafd-3ce24562c78c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "978b74cf-1723-4287-b638-3b28e3510eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e90b1c-f1aa-42aa-828e-8f329e9df751",
        "cursor": {
          "ref": "f1d2b778-e87f-4dd6-b791-57d02e47e683",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a8c3e926-7d60-43a7-9556-24d7e273daf1"
        },
        "item": {
          "id": "00e90b1c-f1aa-42aa-828e-8f329e9df751",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a79bb9fb-b1b2-4d8e-9fef-7fd8e9490939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75ab9c8-f470-412a-a49b-741340389ee7",
        "cursor": {
          "ref": "e0cd62d8-b10e-443e-bfb0-6cfbe6d92621",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "93d76950-7c8f-46ce-8a59-592b88cbf6fd"
        },
        "item": {
          "id": "b75ab9c8-f470-412a-a49b-741340389ee7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "50992ff5-84e0-4462-bfbd-6664b1b4cf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aced11-57c4-4e1c-8271-4bd0c7727fee",
        "cursor": {
          "ref": "63124880-55e2-4c9d-ba14-6452f82cf863",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b3e81e97-9bc6-49dd-9063-25530a3b53c5"
        },
        "item": {
          "id": "64aced11-57c4-4e1c-8271-4bd0c7727fee",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c76547db-ace4-4a19-a5d3-58859b9213b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db08118-e42a-4219-9545-41e3602e6403",
        "cursor": {
          "ref": "75675bb9-0ecd-4162-b4d3-3334d5fe294c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b46ead76-c917-45eb-9863-080a2594c37e"
        },
        "item": {
          "id": "7db08118-e42a-4219-9545-41e3602e6403",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "19aba7bd-f8e2-4958-86b3-3f81b1f4df59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46903e1-3298-4bf9-b1e3-b4a42fa9e5f6",
        "cursor": {
          "ref": "8ab22804-b778-4161-9de9-0608fa93591f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a11e91b4-d9d5-464c-a161-74709027220c"
        },
        "item": {
          "id": "d46903e1-3298-4bf9-b1e3-b4a42fa9e5f6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2aeb2a05-fc47-4086-ac27-584408f6828f",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "671fcdb5-36e7-490d-b016-d0cc9e136152",
        "cursor": {
          "ref": "9c0358bd-1721-45d1-955f-8c8b86fb4abe",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ce383342-99cf-4c7b-8985-3bdf702cb2a9"
        },
        "item": {
          "id": "671fcdb5-36e7-490d-b016-d0cc9e136152",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c23d7d86-f8b3-4ad2-9980-1f008eca4a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc78143b-6f06-45e9-a0a9-d839364cce78",
        "cursor": {
          "ref": "0fdb9040-1087-4a5b-8641-f18bad81c691",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f9266f52-a455-4774-ac26-9d62a54a2075"
        },
        "item": {
          "id": "fc78143b-6f06-45e9-a0a9-d839364cce78",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "794384a7-9326-4c64-8189-8831aa6e41f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d69302-2223-4c17-8cf0-c3226bf81a6c",
        "cursor": {
          "ref": "d4dc69f2-2bf8-4b68-89ef-9decfaed88b8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8cd38d40-276d-407f-880c-5102dec703eb"
        },
        "item": {
          "id": "a1d69302-2223-4c17-8cf0-c3226bf81a6c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d2ae82ee-9ec3-4755-9e96-f00f6c05e5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc65600-1fda-4d9c-9ea8-eea1055db448",
        "cursor": {
          "ref": "cc71c6f2-d812-4400-8031-6d9f28d3f4e3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "da6207a9-f04c-4d9e-90ec-24009bdba43b"
        },
        "item": {
          "id": "ddc65600-1fda-4d9c-9ea8-eea1055db448",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6dbb3fcf-5c55-4111-8d23-8b1c4806aadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc253e18-44b9-4e45-94be-55d2b7c65e08",
        "cursor": {
          "ref": "32192015-137e-4cd8-b422-329614ef61b1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "484a1679-8ec9-4443-9659-1904a5e5bf1e"
        },
        "item": {
          "id": "bc253e18-44b9-4e45-94be-55d2b7c65e08",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eb0740fe-7397-4371-8aab-3da718b80c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580eea3e-b6c2-4ace-b994-759a8229a439",
        "cursor": {
          "ref": "3bb117cf-0fb0-4d7d-8a6f-ef97565546f8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10ccbcd8-fb32-41ed-b006-3ce77be86886"
        },
        "item": {
          "id": "580eea3e-b6c2-4ace-b994-759a8229a439",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d46fa7a4-b2e7-4978-a1c8-20d7878c5721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3a3017-df5c-4004-9d96-7d7272fe1c33",
        "cursor": {
          "ref": "fbf55bad-0883-42fd-93ce-7a5c5c97df62",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8163aa33-0137-49be-b46c-62d8aa77e8f3"
        },
        "item": {
          "id": "3c3a3017-df5c-4004-9d96-7d7272fe1c33",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15201219-be64-43b5-b445-46c1480b63d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23594b6a-733f-4eda-ba8f-b26fe292b26e",
        "cursor": {
          "ref": "1e7fa935-c815-479e-9f85-2a228a612b7f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1cea6eb9-4435-4167-b05c-d7f4f2982543"
        },
        "item": {
          "id": "23594b6a-733f-4eda-ba8f-b26fe292b26e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8fd7e463-1908-44ee-b005-e188ac376323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca086f2-6d44-46f9-8430-98ce36ce225f",
        "cursor": {
          "ref": "ecf5c383-5a12-481c-8385-0477ee9808d6",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6f1eaa6a-daf0-4101-b51b-783dd5f11a3b"
        },
        "item": {
          "id": "fca086f2-6d44-46f9-8430-98ce36ce225f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a8a04ef-7fa2-40d1-a53e-aa000472a671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e814c8-5d59-49da-87ab-af8807014364",
        "cursor": {
          "ref": "e102ca24-d731-46a4-bad6-c87a8a7973ed",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1df52df2-df3a-4e10-b4e6-9100b216316e"
        },
        "item": {
          "id": "53e814c8-5d59-49da-87ab-af8807014364",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "04f9cf11-4937-46c1-90f5-ed6b6e96ccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58f7b90-e969-4a3f-af06-1fdd58ac6cac",
        "cursor": {
          "ref": "a46844e6-15d8-45e3-bda1-c73e606b86a8",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f4f8a03-174e-45c1-af85-d5ed0554aedf"
        },
        "item": {
          "id": "a58f7b90-e969-4a3f-af06-1fdd58ac6cac",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3b3eedaa-f4d8-4448-851f-96f6efd6bf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ca5f12-2d40-4184-946a-384094172fc0",
        "cursor": {
          "ref": "0541ea1d-0494-421b-a4f4-823c8217f390",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "06a49ff5-fc93-4cc1-bd21-71667a74a4a4"
        },
        "item": {
          "id": "12ca5f12-2d40-4184-946a-384094172fc0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0402b5cd-16f6-41cf-b32c-fdda6b5e4728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adbdcab-b966-4454-a495-1c0489f0d0f3",
        "cursor": {
          "ref": "0e82f468-5ae2-483b-8bce-a8051f76cf7d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ee0672ca-248c-42a7-8bc1-565897e5784b"
        },
        "item": {
          "id": "2adbdcab-b966-4454-a495-1c0489f0d0f3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bc7f41ae-7582-430d-9be4-9f6d5d3f4a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ea0c83-dd22-4cb5-931f-384cef99b321",
        "cursor": {
          "ref": "96a118d4-1dfa-4ad0-b9ac-c892fb1c5381",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "20f86c7b-a3f8-488d-aae6-791606533b6e"
        },
        "item": {
          "id": "f7ea0c83-dd22-4cb5-931f-384cef99b321",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "40f620e0-41ad-4d3d-a8ef-6ad4e6b22cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973236c5-3532-40ab-a1ce-fea71f8b77e9",
        "cursor": {
          "ref": "ef3ba2be-e969-45d0-820c-4fc7adfbb5d3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cff24aa3-b13e-477c-985f-792b0319267b"
        },
        "item": {
          "id": "973236c5-3532-40ab-a1ce-fea71f8b77e9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9c645e10-07aa-487a-918a-8bc8f82dc7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6486b0e9-89c2-4fc9-8808-626d8a66f738",
        "cursor": {
          "ref": "a8a9f368-5261-4723-a9fc-0b3d2a574164",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "45c1a493-ae8b-401e-9ec2-e3c27ecc70a4"
        },
        "item": {
          "id": "6486b0e9-89c2-4fc9-8808-626d8a66f738",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "001614d1-2ba9-4457-873b-fe33b82dd4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2044bad2-fd8b-4ab3-8b9c-5642a32bed4b",
        "cursor": {
          "ref": "086fb864-7553-4926-b300-46e92b42265a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d068eef3-9bf7-4439-95ab-fca7a7ccf7ce"
        },
        "item": {
          "id": "2044bad2-fd8b-4ab3-8b9c-5642a32bed4b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2273364c-b502-4bb9-a2a9-ad03fc25df2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82d3647-d29b-40ea-96e1-439f7c5181ad",
        "cursor": {
          "ref": "362a95cf-f2d1-4e3b-9b8f-78407e512c86",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ac1ba95c-853d-46f8-8c18-60b84aa4963a"
        },
        "item": {
          "id": "f82d3647-d29b-40ea-96e1-439f7c5181ad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5022138e-14cc-4bd0-a88a-750a3e1fde93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cd3491-5c4e-4464-b014-451cdc84b77d",
        "cursor": {
          "ref": "e23d9984-0779-44a0-81e4-5164d7d099f4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3ab10736-9428-4ca1-aaa8-a6554c43684a"
        },
        "item": {
          "id": "c5cd3491-5c4e-4464-b014-451cdc84b77d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6c3cfcb4-f2fd-4a5a-9720-baee1c5345e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4982b487-6aa2-4c86-976f-b516b7ae6c7b",
        "cursor": {
          "ref": "58931689-fd31-404e-84d5-993ef89d7223",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d18f914-d6d3-442c-adfa-214ba623f0bc"
        },
        "item": {
          "id": "4982b487-6aa2-4c86-976f-b516b7ae6c7b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "46855b3e-6118-4691-a518-e6cded6cec72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d93487-311b-4a06-9fb3-8842416881b6",
        "cursor": {
          "ref": "283463df-a44b-430d-acca-119fa5963567",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e2554456-d4c8-4d34-ba67-03abf7dd70a5"
        },
        "item": {
          "id": "32d93487-311b-4a06-9fb3-8842416881b6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "db6abedc-12d4-495e-bbe3-d9933bd32571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e28e61-7e6d-4962-9ab9-3fe937023db2",
        "cursor": {
          "ref": "b70bd31b-222c-4c0a-8992-7a11227b0bb8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ad273954-e511-4845-b218-b34dba80cf22"
        },
        "item": {
          "id": "96e28e61-7e6d-4962-9ab9-3fe937023db2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd2e43c6-045c-4542-ab6c-d6d90d10b822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0741626a-02f7-4464-935a-b903279348fa",
        "cursor": {
          "ref": "1733e096-cff6-44c6-8e6b-0a40d1ad55b7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3529c877-6f96-407e-adfb-67ba7d38f6b9"
        },
        "item": {
          "id": "0741626a-02f7-4464-935a-b903279348fa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bca07900-8000-4cb2-993e-d4cdd16b80c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc15238e-8e8c-4657-a8a3-584f1411118b",
        "cursor": {
          "ref": "c7628852-6e25-4948-93e7-7b524571b819",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "405fce1c-dd5e-4882-8947-e89fd1a5f69d"
        },
        "item": {
          "id": "cc15238e-8e8c-4657-a8a3-584f1411118b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a22d74c3-1d90-4d01-8654-fc549fbc5703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec0eb2a-4085-412b-abb3-be8014e25596",
        "cursor": {
          "ref": "c60394c8-b3f4-4e45-ad12-8c020541f703",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9cb1072c-65ae-4b52-b70c-ba130527f741"
        },
        "item": {
          "id": "1ec0eb2a-4085-412b-abb3-be8014e25596",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "018aa902-1892-402a-9e96-b77db50d52c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30930a62-2060-43ca-bfc4-579379802afc",
        "cursor": {
          "ref": "e9493cc7-2d86-42b5-a5f0-f5c46e375280",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e038289-c6e5-4406-b98f-6d11551cc1b4"
        },
        "item": {
          "id": "30930a62-2060-43ca-bfc4-579379802afc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0c9048e0-3219-4270-b477-ab3fd8687941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a76df48-e7b7-404f-af8e-cdfcbff86539",
        "cursor": {
          "ref": "5243aa93-f48c-43fa-88d6-8eb922bf6576",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "58f362fd-c762-4f07-90cd-7d1c46a501bd"
        },
        "item": {
          "id": "0a76df48-e7b7-404f-af8e-cdfcbff86539",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "27878b04-f39c-40ed-9418-0cdca6b8c0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4baf027-8c8e-4a7a-a3b4-c1015459ff5e",
        "cursor": {
          "ref": "3d7874c4-c809-4a0f-8a4c-d0e3a75fcbb1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cd620286-681b-46aa-8431-c0e1e7bf48c1"
        },
        "item": {
          "id": "e4baf027-8c8e-4a7a-a3b4-c1015459ff5e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8ed30541-1d5a-4162-abe2-0495eb125bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b929da55-ba53-45c6-b057-3f02a140214d",
        "cursor": {
          "ref": "e26d6093-a543-40fd-b597-cafab43c5162",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0184d2a0-8aa1-4298-8152-6a0d604e1260"
        },
        "item": {
          "id": "b929da55-ba53-45c6-b057-3f02a140214d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "88eadc5f-f134-494f-9690-48597fb1e3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841d8d3e-c908-49a9-bccd-989fc9bc1344",
        "cursor": {
          "ref": "16af2d6c-fc82-4d48-9506-3ddf2411d0aa",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e7854580-26ce-47cb-9de0-cdd78e8014e5"
        },
        "item": {
          "id": "841d8d3e-c908-49a9-bccd-989fc9bc1344",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "39f704e7-5a24-4381-8c63-e7e9163092e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeb1db6-5829-49d8-adc4-fb5d78bfbf6e",
        "cursor": {
          "ref": "09f3ea5c-af21-4ed3-9c2a-ef3e410f50e9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8d4c8017-6952-4068-861f-85a2cead409b"
        },
        "item": {
          "id": "3aeb1db6-5829-49d8-adc4-fb5d78bfbf6e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "936c3e2c-a286-47b2-9f05-14184b8a878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83ba98b-1827-4d1a-9595-b07c3a487ec7",
        "cursor": {
          "ref": "ee7d00d6-24a0-4fb7-bd7b-a9f734a460c5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "58d1de4b-acaf-408b-a597-c85e32cf429b"
        },
        "item": {
          "id": "a83ba98b-1827-4d1a-9595-b07c3a487ec7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "235cb7c0-f831-4ca3-85f6-a1405410ea3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5139874-8987-4861-9742-4c9e129356c2",
        "cursor": {
          "ref": "0a2706ae-0fb6-4863-a43f-a23aa93aad4a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0284367e-851e-44ae-8e74-8e0a0c21f821"
        },
        "item": {
          "id": "d5139874-8987-4861-9742-4c9e129356c2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bd10129e-c2c5-478f-8bd4-42acec2762bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6acac1-db04-44b7-98bd-cf8a99f44472",
        "cursor": {
          "ref": "c218563e-556f-428c-805a-2f523671b53f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bc9d7ca-c8c9-4b3a-b0d2-05c10fe20c22"
        },
        "item": {
          "id": "db6acac1-db04-44b7-98bd-cf8a99f44472",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "679f70bf-0d4f-4041-b3be-dfb089f320b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185bbc85-deb1-48c2-8344-2543f2067d9f",
        "cursor": {
          "ref": "f48cbeb5-e091-49d4-991e-b98bf776c4d7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73478916-c099-48de-93ae-307407ac31e6"
        },
        "item": {
          "id": "185bbc85-deb1-48c2-8344-2543f2067d9f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "df48ebad-98c2-4214-bea7-072b2f1a7bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15dba23-1bf6-4742-ac60-bd8159341955",
        "cursor": {
          "ref": "d3b36fb3-654c-4874-99d3-28fe52ce6c3d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "63476d25-a260-4520-9ac2-85e73a833af1"
        },
        "item": {
          "id": "b15dba23-1bf6-4742-ac60-bd8159341955",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "41d7812c-df8f-43d1-b9db-ac31b0d882a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1a66f9-b77e-4090-bc77-6c7bce0ac417",
        "cursor": {
          "ref": "deeb9ce8-6088-4625-9258-e9ac1c8f3ea0",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9aa941dc-79df-44e7-bf0d-a70473f74f13"
        },
        "item": {
          "id": "6b1a66f9-b77e-4090-bc77-6c7bce0ac417",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "653e0af7-8349-46a5-8664-bf162c5a570e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10455904-8853-4fa1-9b7e-6f85d609923f",
        "cursor": {
          "ref": "14ce1b52-c23f-47b7-aeb7-60d3a48fc502",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0b4555b1-43e2-4ff0-8f33-536be90d813c"
        },
        "item": {
          "id": "10455904-8853-4fa1-9b7e-6f85d609923f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "87b7414b-75c8-4f62-a12a-13c8618a4ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e6ddac-e005-4735-abc9-4c24b4b7b4b1",
        "cursor": {
          "ref": "666ff1ba-f8c9-4284-b0a2-ec94ae84202f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ece59728-7195-4fa5-90c8-13b4dc6c573e"
        },
        "item": {
          "id": "54e6ddac-e005-4735-abc9-4c24b4b7b4b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "23665f81-59fd-4059-b869-29da3dd4bf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8194b06-6d38-4481-9d1b-ad5991483dd7",
        "cursor": {
          "ref": "830d6ca7-f25a-4c3c-92e6-b680728e06d8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "92bc1d34-96d5-4eca-bcc5-ec1ea92d6080"
        },
        "item": {
          "id": "d8194b06-6d38-4481-9d1b-ad5991483dd7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bc4591b4-83bd-49ba-a3f8-ac162afa649b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5428617-3133-4cd7-b0d6-f63fb6d59459",
        "cursor": {
          "ref": "3ac3a8d9-a53c-45b7-afd5-55866f0446da",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "49eeacc3-ac96-4239-84f8-1ae14ec42fbe"
        },
        "item": {
          "id": "b5428617-3133-4cd7-b0d6-f63fb6d59459",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "64b4b25a-789d-425e-acc4-e6412a37f56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457e8ae8-ed6f-4fe9-b90d-0d94d8213f53",
        "cursor": {
          "ref": "6574c8fe-2b54-43b2-bad3-745661630f8a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5e27bebf-197b-4fd6-b093-6e33908ff3ca"
        },
        "item": {
          "id": "457e8ae8-ed6f-4fe9-b90d-0d94d8213f53",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "68957c93-a965-43db-a82e-69ba62300cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5b4b9a-57e8-49d8-8ec4-0730ce0728e5",
        "cursor": {
          "ref": "eba78736-25e4-4344-a360-695ba839929f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c82e17e8-1e14-4ae4-9056-a8269e09e426"
        },
        "item": {
          "id": "0d5b4b9a-57e8-49d8-8ec4-0730ce0728e5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6ad2db35-ee77-4912-9e74-4c6955dfafde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8837ea-af36-4ae0-87e4-f0b4d1d6d603",
        "cursor": {
          "ref": "cd75f445-3652-48e5-b731-5123d3b887a0",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a4ecde6e-5bce-433c-907a-c027f4fe2cdd"
        },
        "item": {
          "id": "6a8837ea-af36-4ae0-87e4-f0b4d1d6d603",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9291e9d0-9687-4d0a-af5f-aa93806b16a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dca74d-1caf-4d93-aeb9-c926ef168e2c",
        "cursor": {
          "ref": "b6129c2e-00a5-4e06-8d15-b9dcde011b8b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e9d7a672-56b9-4654-b1f1-364a5bfa6be6"
        },
        "item": {
          "id": "49dca74d-1caf-4d93-aeb9-c926ef168e2c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2d6c2b0e-d821-4a41-ad48-76fe7eec8998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decf60c1-1104-46f4-8657-69b24fff1ed3",
        "cursor": {
          "ref": "4876b34a-7414-4ce6-b3c6-028a14cb725c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a710c2a-59e2-4991-9ddc-d1de7fc1f2b6"
        },
        "item": {
          "id": "decf60c1-1104-46f4-8657-69b24fff1ed3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "93a7ce74-88c4-4dd3-9191-a102e7b9c665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b88c5a-0042-4d21-81e8-6a39a6191096",
        "cursor": {
          "ref": "993128c3-d8a8-495e-813e-cde7a6e2c7b1",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "49bdf536-edec-4278-8a5e-75b5e4783e85"
        },
        "item": {
          "id": "e9b88c5a-0042-4d21-81e8-6a39a6191096",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "96b827b2-49f4-432d-8d24-31ae50501746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301073e6-a622-460b-a802-d58b31ebf5e7",
        "cursor": {
          "ref": "eded736f-ed6b-40eb-8b74-185b1000f568",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6046cee2-26fd-4786-9e51-819bee5d57e3"
        },
        "item": {
          "id": "301073e6-a622-460b-a802-d58b31ebf5e7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "614b970f-2df9-4302-8197-dab98a3e2371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa527a0e-106c-40bc-af20-63b9bed5ae51",
        "cursor": {
          "ref": "d3522074-086a-4445-a5d9-0a95f244a782",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0edc4f58-655d-427e-9731-17cf54117ed2"
        },
        "item": {
          "id": "aa527a0e-106c-40bc-af20-63b9bed5ae51",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e112da9-e19b-4ccb-a92e-aaf86c0a48ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08e0b32-2c2b-4801-8e81-961acb497f0f",
        "cursor": {
          "ref": "c1ed88ba-8408-4515-a19a-7c5cb90c4bbc",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a37b1bad-8b5b-4c9c-849c-17d9e8fc3a7b"
        },
        "item": {
          "id": "f08e0b32-2c2b-4801-8e81-961acb497f0f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "15212495-3449-4678-a139-07441d0be1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3200fe9-fcf2-491a-b445-27776ed39c9b",
        "cursor": {
          "ref": "45120732-b0ab-4ea5-952b-a4afc7b46244",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b5e1a5a0-b577-41f8-8008-d54e0d10eccd"
        },
        "item": {
          "id": "b3200fe9-fcf2-491a-b445-27776ed39c9b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5682d13d-8959-42f6-9472-e79eaf03d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7ea6d8-f616-4f75-b2c9-241d79b26beb",
        "cursor": {
          "ref": "28b8da68-54a0-4cbd-a6fc-c831a3f602f1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "395ceff8-9272-4719-ba21-dee064567632"
        },
        "item": {
          "id": "7b7ea6d8-f616-4f75-b2c9-241d79b26beb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1ab0f7c4-35fc-4a0d-8b28-b17f96385f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e464f58b-4094-4ec0-b1d1-773162a2f2c1",
        "cursor": {
          "ref": "938de04b-579b-4923-80ca-0e08f29932a2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6870154-2abd-4cd4-953c-95870a4764c7"
        },
        "item": {
          "id": "e464f58b-4094-4ec0-b1d1-773162a2f2c1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "be2d773e-fb49-468b-9f6e-497ffaba79a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f9e6f1-25d0-4462-b73b-d752e66d9f4d",
        "cursor": {
          "ref": "1725b0ac-e98b-40f9-8b3f-a9d77d0f2d48",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "38e8e506-da45-4259-98d6-db216ef97b5a"
        },
        "item": {
          "id": "44f9e6f1-25d0-4462-b73b-d752e66d9f4d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f963cfec-f3d7-4573-ada7-de0c5911c26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751f83b0-b3ff-4389-9bb7-63a1ece0eb1f",
        "cursor": {
          "ref": "7f88904e-b472-492f-a2d9-b6fa83bc9d32",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a9d7f644-77cf-472b-8953-b24a199c6ead"
        },
        "item": {
          "id": "751f83b0-b3ff-4389-9bb7-63a1ece0eb1f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "99ef5a27-525d-4cd8-91e6-36a787d9e637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaad062-1136-4150-a6ee-a9f7a868ae7f",
        "cursor": {
          "ref": "a8536d1b-4690-4694-bf88-6e13f44b4d5a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9c2e7c56-bcf4-4a60-8b91-28bc5a88335e"
        },
        "item": {
          "id": "daaad062-1136-4150-a6ee-a9f7a868ae7f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e7fe9cbd-6ea9-43ae-adf4-e18a30da5517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6b7c8e-d904-495d-9423-2463dbd5e8ab",
        "cursor": {
          "ref": "d928cb58-5217-4bad-9181-07cdd069c4e7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "241bcf26-7004-430c-a5e4-7b729df672fa"
        },
        "item": {
          "id": "aa6b7c8e-d904-495d-9423-2463dbd5e8ab",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "501d81db-b998-483d-89a7-64a3c1f7fd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b504ea6-6342-44c7-8356-2faf2f7a5d88",
        "cursor": {
          "ref": "f4266dbf-464a-4445-81a5-a6fe4e4181f4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5618db5e-9513-4c04-a31c-e9e8933bfed0"
        },
        "item": {
          "id": "3b504ea6-6342-44c7-8356-2faf2f7a5d88",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d57d2991-08d0-4ee9-9067-fa26b2f60c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d4e3f1-57c2-4ba8-88eb-b77fac2d4d1a",
        "cursor": {
          "ref": "0637a75e-054c-4a41-90eb-450e5300a5ee",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7b0ca00e-fd9a-4ed2-aa51-c6f72eadb057"
        },
        "item": {
          "id": "f5d4e3f1-57c2-4ba8-88eb-b77fac2d4d1a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7d611a11-40d9-4ef1-af0c-7cf3e81211d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0fbae8-fb73-4224-9d5d-9fda47624d9f",
        "cursor": {
          "ref": "c2a63af2-08fc-4d37-a9cc-18b7e2bf700f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c491d937-2acb-4810-8743-b674a3a32d3c"
        },
        "item": {
          "id": "be0fbae8-fb73-4224-9d5d-9fda47624d9f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8e3b66e6-8130-433d-b250-8935449490d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eee7ec-3ae0-4481-8e59-c614cf025108",
        "cursor": {
          "ref": "257761f1-e7c5-4638-9d87-cc202ba7030a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "40b7aab1-09ec-4a12-941b-520f9dd54016"
        },
        "item": {
          "id": "28eee7ec-3ae0-4481-8e59-c614cf025108",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "95f980a3-507f-4dc8-bec4-34fe6e41a7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79164890-1c37-49f0-9103-2cf816b70ec7",
        "cursor": {
          "ref": "8ea8964b-b0b5-4ced-96ef-8174ad9c778b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e20af75a-5d3a-4866-9919-36347ad286e5"
        },
        "item": {
          "id": "79164890-1c37-49f0-9103-2cf816b70ec7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "40a7374e-e8e6-4a19-b8f8-e6c14e71a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69076cd8-1f1c-47ed-931c-dd74986e1973",
        "cursor": {
          "ref": "188de06d-e6aa-4bb8-a08b-d2b0abc4a3c1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d6d83c2f-61c3-42ec-b80b-f5c825ed274b"
        },
        "item": {
          "id": "69076cd8-1f1c-47ed-931c-dd74986e1973",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9847fc08-8d39-4732-a10f-bef88f5dd6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ca1adb-cc96-41b4-ab90-6436b3b79c40",
        "cursor": {
          "ref": "56a77b28-ec04-46c1-82d0-022bf3689aa1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3784da95-1d7c-4455-94bb-282b732873b4"
        },
        "item": {
          "id": "c2ca1adb-cc96-41b4-ab90-6436b3b79c40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e7b4dcb5-8fb8-4d3d-882b-35bd999524e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ca20fc-c5ac-4945-81dc-89f8f34a46e7",
        "cursor": {
          "ref": "96de9ec8-f8c4-4206-ab4d-c0c261620b25",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "29ea8962-dadc-4a9e-9c8f-3f9b96c72e69"
        },
        "item": {
          "id": "57ca20fc-c5ac-4945-81dc-89f8f34a46e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6855cce7-069c-4ade-88f7-280f8634b50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc76443-ac35-44b8-8314-beb937514c15",
        "cursor": {
          "ref": "0e734bfc-6f94-4f74-a02f-b5c9acedf0a4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e60f4f55-93e8-4231-b123-11d6f2ec3d83"
        },
        "item": {
          "id": "2fc76443-ac35-44b8-8314-beb937514c15",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2b607b87-a363-4e16-8dde-5b458fa49f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ecebc-0a0e-4e8e-b9fc-e8cb130a37b0",
        "cursor": {
          "ref": "76aca807-feda-482b-bdf2-b96fc485f8a9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fc31d9ce-301a-4306-87fc-84aef67e2de6"
        },
        "item": {
          "id": "3b9ecebc-0a0e-4e8e-b9fc-e8cb130a37b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "faf44f54-23f3-41b3-9087-f0359878ffd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965aa056-c611-461d-8ec4-c2a0bdeb06fa",
        "cursor": {
          "ref": "2c8c0b10-ad9d-4562-be83-2ab4a844b457",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f5c6233a-25c0-4df4-b9a9-4cab996beae8"
        },
        "item": {
          "id": "965aa056-c611-461d-8ec4-c2a0bdeb06fa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8688906e-d55f-46eb-8859-e535e9c47991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6feede5-5790-4898-ae84-47ba716cd481",
        "cursor": {
          "ref": "0431e5e7-7b11-485c-95b8-cc826e4d29ac",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7a6a3b5a-98cf-40cd-8d7e-6921a3bdb465"
        },
        "item": {
          "id": "d6feede5-5790-4898-ae84-47ba716cd481",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "397b5b90-dd56-4232-9708-125dfc5df8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78477be5-7e7d-4f92-b714-c0766bfb39cf",
        "cursor": {
          "ref": "e8f69d61-505b-4fcd-9438-3aac140b57fb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "108f9f66-60a9-43f9-9a81-bfe528229a7c"
        },
        "item": {
          "id": "78477be5-7e7d-4f92-b714-c0766bfb39cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d4f0b11c-bf6b-47b8-8fbb-1c2171e45aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8212b87-40d5-4d70-9151-f18258a4eea7",
        "cursor": {
          "ref": "5b348767-cfb2-4f74-9fbb-f9204bdd3ad3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7bd8a140-db2a-4f4a-8c94-4df548c50553"
        },
        "item": {
          "id": "b8212b87-40d5-4d70-9151-f18258a4eea7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0e42c3c0-81bd-4b43-aca2-c158f8a4eab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d73dc15-c890-4a81-a67a-79e3634bdad0",
        "cursor": {
          "ref": "8dbd36a3-97e7-44c2-8178-870ec9ca38b5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e6aa5a31-9ed1-43b0-a95c-4c5e0c62dd69"
        },
        "item": {
          "id": "3d73dc15-c890-4a81-a67a-79e3634bdad0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a33c98cd-4e15-4930-9cc8-0d82705b78eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94a4cbc-7450-4d2d-81da-5a68ddc397e9",
        "cursor": {
          "ref": "c6f1e5a8-b061-41d3-9bb5-444ee11257fe",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "44bb0638-b977-4c41-9a70-d7a40f75367f"
        },
        "item": {
          "id": "b94a4cbc-7450-4d2d-81da-5a68ddc397e9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cddb96f1-6e89-41c2-ada2-06065bfc5b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e64598b-0665-4b50-8239-7ef9950456df",
        "cursor": {
          "ref": "4832aa35-2cc8-46ff-b332-8f91c7903b3b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "153a8fc1-4510-41a1-bf55-9cad6edad808"
        },
        "item": {
          "id": "0e64598b-0665-4b50-8239-7ef9950456df",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cc4f39f2-a64f-4913-969f-f1045a662206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d3153b-b531-40a3-b054-2f520a8d5b92",
        "cursor": {
          "ref": "82d7ddcc-381f-42f1-a4c4-95a8d195f32d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "34ebd1f7-35b5-442c-ac40-3f986eaf0da8"
        },
        "item": {
          "id": "e4d3153b-b531-40a3-b054-2f520a8d5b92",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "da4f7904-e002-4cbd-a0d4-57a0bf6fcd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc67409-58db-428c-8670-35da82b20ad2",
        "cursor": {
          "ref": "cc9c74b2-a57d-40e9-a3a8-c722d8e064af",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a8a7fd71-e902-439b-9a98-00e1abff91df"
        },
        "item": {
          "id": "fcc67409-58db-428c-8670-35da82b20ad2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c1cf5519-fa38-4dbc-abea-11022376f680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d73970-4cb1-45c7-8004-b0b4e709c124",
        "cursor": {
          "ref": "fa5e4409-7f5d-41d4-bd3a-a8cc0b5f87e0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "16b3cbe7-4ac3-478c-ad7e-9540c1aaf725"
        },
        "item": {
          "id": "73d73970-4cb1-45c7-8004-b0b4e709c124",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c4d4277a-f20d-41b1-bd7b-2debc901f5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2bd30-f7fb-4106-8dd6-9b27988fdff6",
        "cursor": {
          "ref": "4beb8edd-0cdd-4ca1-8df4-6b26a8ffe7e7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "27730cb1-ac60-4cc7-b69c-5eeb06a91eab"
        },
        "item": {
          "id": "b1e2bd30-f7fb-4106-8dd6-9b27988fdff6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1cc2d3df-7e28-4f1e-b462-18fedaa0bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ad593e-1c76-4c68-94c1-c83319ac87bb",
        "cursor": {
          "ref": "ea08131e-995b-4108-92f7-b507e432ffda",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c48ad01a-b3c6-44ce-b4ca-7f6cbcccf4f1"
        },
        "item": {
          "id": "d9ad593e-1c76-4c68-94c1-c83319ac87bb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "99ae4f9d-416b-47b1-be64-dd926585f99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a541ac9-8f6d-43eb-afaf-96521726dc1e",
        "cursor": {
          "ref": "0b4062ea-f738-47ae-82c2-ba5273e4fcda",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "837bf4d5-2b63-4410-98e9-ce2251ccc398"
        },
        "item": {
          "id": "3a541ac9-8f6d-43eb-afaf-96521726dc1e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eed7909f-65fa-4d07-b832-4fadba922aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aa236f-35db-4885-8f19-ed0a7a3e00d2",
        "cursor": {
          "ref": "4111e0b5-7529-4944-b57c-65f9f2cdaca7",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0faf32ff-1c55-47f3-b6ba-903c02c8a665"
        },
        "item": {
          "id": "a3aa236f-35db-4885-8f19-ed0a7a3e00d2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0bdb0056-881c-49c4-9909-e323d26117d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd6f5aa-4c85-4d00-bf9a-aef278889327",
        "cursor": {
          "ref": "f176692a-1923-4115-8556-33ac82ab5a09",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "347eb0ae-df93-47ce-af62-5e0fc1c68d88"
        },
        "item": {
          "id": "bbd6f5aa-4c85-4d00-bf9a-aef278889327",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6c5f53c5-9e6c-4c1b-9dbe-924365266b95",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f168aa7-e660-4550-b0c2-9ce55fba1bde",
        "cursor": {
          "ref": "588c60d5-6691-46a8-af33-6e321f04e721",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c09f91db-0ac3-49da-ba05-af0e53f9607d"
        },
        "item": {
          "id": "4f168aa7-e660-4550-b0c2-9ce55fba1bde",
          "name": "credentials_verify"
        },
        "response": {
          "id": "66641a6d-5ed8-4f7f-bd6a-2f89ceec31b0",
          "status": "OK",
          "code": 200,
          "responseTime": 3699,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f2aef6-05fc-4049-b374-32762fa6d56a",
        "cursor": {
          "ref": "0b8e53d1-24c1-4d1b-bb07-366714dc0db7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "085bf471-97a0-4773-a40b-976d868c5dd5"
        },
        "item": {
          "id": "87f2aef6-05fc-4049-b374-32762fa6d56a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1eb49f01-1213-4bc8-a4d8-48639886516f",
          "status": "OK",
          "code": 200,
          "responseTime": 2604,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fbb9eb-a750-468d-808f-d2dcb6715eb6",
        "cursor": {
          "ref": "c6c9e9db-d410-434b-a2b5-afa3defd6e56",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f2e3e99d-c9a4-4dcc-9131-4775fcb38add"
        },
        "item": {
          "id": "c5fbb9eb-a750-468d-808f-d2dcb6715eb6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eba6756f-db61-46f9-ac12-90efc8ea711a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fbb9eb-a750-468d-808f-d2dcb6715eb6",
        "cursor": {
          "ref": "c6c9e9db-d410-434b-a2b5-afa3defd6e56",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f2e3e99d-c9a4-4dcc-9131-4775fcb38add"
        },
        "item": {
          "id": "c5fbb9eb-a750-468d-808f-d2dcb6715eb6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eba6756f-db61-46f9-ac12-90efc8ea711a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb2c14b-28f7-452d-ae5e-c2a34eaaa9db",
        "cursor": {
          "ref": "94d3865c-c4b8-4b4e-853f-07094a95062d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "427c5252-f333-41d0-b68f-f2459565113c"
        },
        "item": {
          "id": "6bb2c14b-28f7-452d-ae5e-c2a34eaaa9db",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50909fbc-f668-4fe0-be8c-af257b6de50c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2967b2-877b-4b58-8674-fb5c2571842f",
        "cursor": {
          "ref": "6dd7e158-db18-4c60-9a14-88b0096e92eb",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "49480f7f-46f6-4eaa-9d81-7df270ae9b77"
        },
        "item": {
          "id": "db2967b2-877b-4b58-8674-fb5c2571842f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c85c4a0-6ea3-4424-837e-331915533678",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}