{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9bbfb31e-aef3-4f9e-8005-c448665cb044",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1c1284fc-0a9a-45ac-ace9-bee816aebd90",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72bd1dc6-a7a5-4566-824f-9004b2cc5be6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dee31f31-17e9-43d5-902e-c138a0be3c9c"
                }
              }
            ]
          },
          {
            "id": "b04321b2-5833-42ac-a23d-807b7de9aac6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f7d7779-9f61-42d0-a688-789258c523e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac4d197c-37ea-4b12-a052-f23c5f24bd9c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8455a4aa-4185-403a-8d7b-6b7ea03bf71a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8268936e-a4a3-40c5-865d-8be3516467f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "296f3f76-543c-4672-8529-66c18b306198",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20b6ba5c-b86c-4465-a8da-b5d8abc1274e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bad437bf-65a1-492e-94dd-471947c87ab0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d17e6616-8bd9-422b-b298-f0e106069968",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "463e3072-7335-42bf-a8fe-e1eb5d8cc104"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c590b33d-2317-4a67-b36a-91a80b823a33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5aa31793-c1a2-47ce-b16b-efdde2fedb0b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba3c4859-2afe-4faa-b289-7da12ef2342f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8268401b-1ac0-4b53-9ef9-ccf89d254d24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fc69326-1628-442e-8820-d9a329829d65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32f7256f-0fbb-4fc9-b930-12462c59ec5f"
            }
          }
        ]
      },
      {
        "id": "3a4462d5-c459-4ce0-a02c-1125e07c02a6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "317bf6e7-d64e-463f-84b7-be77e6e7b10a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5a45f6f-f70c-4f84-a5d1-b04ffafe1252",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c5e72f4-5f74-482d-be04-16d536bf8931",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc9fa5e-3292-4624-b744-815dc1b952db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78caa7cc-02e4-4a91-8138-ef429b08e52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25d290a-c14c-4ce5-814d-dfeb07c7fad1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d714e1-4982-48e8-b2c3-83be45f8061b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3677f83b-80c8-4ab3-949b-87baa15df426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56178689-614d-4edb-9b5a-12a25c9cf799",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5da4ac-6596-42a4-8adf-bbb498ac4ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3397aa8-c0e2-40d6-9063-36deadb94795"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3842b280-6008-4f9e-a229-c44c383d35e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "636b8a75-2164-4eb1-bc18-76f153c6c052",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce9371b-8419-4fda-8e01-d7d2c82a472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "247aefa7-8eed-43ff-b9a2-7f81e46d2e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbef168-6f67-4c67-b03f-6dc56c3b83de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681e69f9-7ae0-4ee2-97f6-c5bcd4deeebb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0724453a-c1a6-4a6d-97c9-98362ed9df15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "097d4c1f-3de3-4dc5-a1d2-7f71bce9bf0a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b5b6b48-ef16-4765-9402-44c60081966e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b94b5d6b-ed35-4269-a674-3a873ce97a7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a6daa68-2bda-46eb-863f-5d1ad9b39d52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cfd20b57-37a3-46ee-a332-343afdbde4d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7e78b43-de02-4ed2-a1fd-7621773cb7b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce82287b-705c-4746-9d11-92bcc90ae479"
            }
          }
        ]
      },
      {
        "id": "1cdeb507-c975-4cc0-a8f3-b67b224f1f8a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "37b5c8b2-678e-4652-ae3a-dd15d342f11c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df300c2d-cb27-432f-b730-3b2f8898b175",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "de3390f2-6ad6-4163-9150-d121789e3b95",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9960b70c-3348-400d-bb77-c1dd57713733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd83e250-ef99-413e-85bb-d11d274907d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361c5842-b32d-4eab-a0d5-6a91bbdf2148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7f9051c-6597-4da6-b4c4-ca0d9ef38b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5bd81e-63e7-4498-bdcf-8a33bde15e2b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2b0fa-1166-4277-97dd-fe5bb5a28506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ad4661-ad28-41db-8494-4d9f331fd3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d8a4de-d76a-4397-8529-5a5f50480f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b5bdebf-24dd-4010-92fa-974c8a89331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abaf7ed-77a6-41a5-960f-de6b1bbd80aa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0704a1-090d-4228-a51f-4aa0144153c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84bed7a-6e14-482e-a5df-b9f580d6f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2225df6e-1fc6-4c3e-9cf1-f0fe21981b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9363cd-cc4e-4b4d-b311-200936d940c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6d29a9-b258-484b-9c81-f16124d7e24e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bb727-f6a8-4fed-969c-b9c88ee4e9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031412b1-ab2e-4616-987c-860b13a4f161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00de0bc-e081-48e6-a0dc-ba306d165981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "843a5fbe-2506-49d5-b145-87ed50b05c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422e4a9-e8ef-4133-83cc-e6951e2a979e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe7313c-d5c0-4c6c-8a03-d4bc70c79bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dafb02-601d-472d-882e-0db11c43a819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60382616-cada-4beb-b123-00355fdc50fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f6329e-6007-4f69-8291-37a6d70c4f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7fde8d-c00a-488b-9954-13c7f7e81cfd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eedf229-6cf0-492c-b0d3-35dbebdf4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba22a98-7463-43d4-afe3-af01805b48b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f6dcb8-4994-465d-97a1-0a7772379d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a6fdc26-da87-4151-8557-c0846f85e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6656c61-f827-4af6-8d30-3985102c1611",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c8ef5-ec29-4f85-a7fa-b7c7c90f7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36c97f6-5067-4d4a-847a-924998685c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e65a81-6afc-4220-ad44-f5717ac29f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c60d0d-b140-4720-b465-68fc65097d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfca575b-4907-499e-8820-59c24dce46fd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2ddbaa-2d4b-4b4b-9b84-04d6be95ab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa857c8-0082-426d-b203-f4007a49fde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f502e40a-f1c5-48cf-9590-3e5ca3275701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec10c7e-eb3c-455b-a972-b9e767e27f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e8b10c-8300-4d85-ada3-d32cf3ef6782",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce11a090-ad73-4c6a-9877-87db8308975c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a185df-b833-4212-9c4b-dac43c1083e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0720b2f8-1728-48f3-aa5d-d714335d401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dedaf0b5-c75c-4425-b12b-7fa80b4f809c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a711143-3d38-4736-859a-11586debc47e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50548aec-3b03-4017-97d2-3776e9b61dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f688022f-0ce0-4df9-96be-12325dc92833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c3020b-05c5-4138-bf59-6432e9ba1283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faa0b5bc-8a96-4ab9-9e5a-348119e3331c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89a47be-a5fb-454b-a298-517b69044340",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3a15f6-01fe-4ff0-bcb8-89ebefe27268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9b9cec-0bb4-4c85-b642-73f97e771c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225216aa-0d7b-443f-b224-77cdcf7ea35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa4108e3-0ed7-4f47-bfa6-cca8093e4d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae1d3d7-e52c-450c-b673-e0a580ab5d33",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd5147a-682b-40f6-b799-339d03e95c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a161dbf-5891-47f6-b3f3-5edd1048d995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781007ba-e577-4336-b36a-b7d6fb83b2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7615e761-3b6d-4f88-8b40-895b236fcbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df64a55-89f8-419a-a7f6-6ea3abd582e1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a032d21e-e532-48c6-a92e-237eafc99a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b6292b-ed70-4534-b563-3540887d0a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671efad9-0605-4498-ad56-7d15bb4cbf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59125ddd-3095-4122-9bea-44c68449a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da596547-46b2-4b95-b920-187ca386ab20",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382eb093-b63a-415e-bafa-28c0e2887486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe1d4c4-5c4b-475a-8f51-26a1cfd0b0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02cbdc0-7998-46c4-bf68-f344aef2318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "500b1cae-829e-4521-a46f-8a3dc5900012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc623b1-2616-4cdf-8189-a099785d07d9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc01daf3-8735-4b45-b04e-e662d67e3d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb61f9b-afa1-4000-a7e7-561642767d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6053e154-fa3c-468e-b24b-a7d288493999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587c959b-13a5-4980-8a8c-cbc5129dca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4002d234-89fd-4f55-9c59-ceaa3289da6a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a4773f-3919-48f8-9bff-a6051f1e28e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04377a2f-1c42-4ef0-8cf3-17ca1a464b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906d647f-1ab9-4ece-94f7-f810f8740d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c56840a-3163-485d-bd05-f56b7339ac22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30fbc30-b5fe-4494-87e8-ecd07c436486",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbcfd5f-2737-4c59-a3c1-077799928e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4dd217-ec42-4f7e-8dc8-547999abd973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf4ea5f-02ea-4f90-9d8d-2d59463f0be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3af2a0f-5e47-4ed4-bbf3-0962e596e9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b52280-4e77-41d4-8cd5-acbd75d6fef3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a63004d-d54e-45df-bfd8-ea13486ed8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7ff90d-c0fa-47de-b76e-849c39baeffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9305d005-d3af-4c5a-b460-b1cabe1b13aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97de2afb-ee32-4b48-bd08-74e3e8fba982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e33888b-2c59-40d4-9eb0-3745b1df62e1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c22968-99fe-436e-be5a-d268fdac660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c76001b-718c-4c32-a0bf-fa24dc221215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e959ee71-9843-4fbb-9ecb-28fa1a0070ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f422cc-dbd9-43d9-a163-e90228cde16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fdfd37-8b05-4309-aa2d-9d2bf308e42c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f47234-9202-4221-bab1-edc55c34394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806c724d-b31a-43dc-8f43-9766bbea3c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a45289-7634-434e-8f13-696b9fedbdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f0861e-86ef-41d3-89a1-76e51d6e498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268ea79b-919b-48af-907a-9e638de451d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11cda9a-acd2-480a-9533-0a03e7b3bfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4d9c36-5fcf-481d-8b32-50654316c175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9ef524-c64c-496f-abb1-1e4be8093a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a29dc6-478b-409d-9f7a-c0c2595e5605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751308f8-36a8-4e49-9dfc-2832e682a75b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae14943-aa28-4f6e-a83f-0cd28f5392c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68174752-940c-4767-9757-8907681dbfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65ae232-ff30-4ad7-b9f3-8d8aa4d37771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f23b703-ba22-4540-80eb-1c6839089a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591c4ebb-196c-45bc-b7fe-954918e55c17",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc3e107-56af-4bbd-b01f-ee170770842f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be511a37-afac-4872-9cda-99d70e90da94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc2a908-c547-49cc-bf41-55419fe7ff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3dcd46-367d-4b49-a5ac-32f3122ac39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0736a0-c80b-4d24-8fa8-cd676300bb5d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd4a54e-6dc5-42dc-a369-37afb465954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02eba9f-712e-4dd2-96c7-296e5136e606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91bb47d-467c-4a87-a6ed-0eaa6a71d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "836eb793-d515-4a0e-b8e7-c5a6c3cd8dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b24939-e38a-40f5-9991-451c0ef3e160",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2172c820-8402-4b72-a505-f78e959545b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cb2aaa-b509-42e4-b28f-ebdb9aa8112a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4f0dde-57d2-45b5-8eec-6740035123a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "979549cf-ada0-44b5-8a7b-7b0492511a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ebd85d-2d7e-44ac-98c1-5a1390e44040",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc476333-05b9-4957-b95d-d029bd973a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a92985-2c28-435c-842d-2087b1802e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd6921-52b4-43f5-a60f-b36a1af0c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c73cbe92-3019-41cc-bb5b-05e0c285955c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992ff550-99fe-4f81-849d-172e2473a782",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab220b1-5423-49cc-8e29-c632da210fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243e06c9-bade-420b-b195-99fc8b886c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b137a5-8a29-464e-99d3-bea782266fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a80d5cb-a81b-4828-af31-572e1eca093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af0b7b9-e5d7-4c44-b37a-61febc47e4c1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d6d4ba-d9a5-4905-9ffa-9b4fbbea2d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce043d2b-54ed-47e9-9bce-86b90cee947a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ccc34f-8029-4f21-86b0-8b79cd53c65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df9e79f-6e56-4f6d-a919-c3f8655ade81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772a3938-54ed-4ff7-81b3-221952ec9e19",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce374837-3be7-4d44-8965-81694e96506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d09fcd-0d35-408a-96e9-c70654d8f84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae93b3b-6665-4782-b229-c9d7b859f135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ef3e77-1caf-4070-aedd-6ab5435d82b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946f67ef-33e7-4d93-a900-268a763aa555",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12407d1-898f-4cb6-a4d7-ccbc6e9a16d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68b4482-c92b-4312-956b-a0e50d00a0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c40f40b-c6fb-48a0-a2de-0e1c01484886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35643942-4c1b-4fb0-b3f9-036645640fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088eb7a6-643a-48c6-8b04-7dfc14def08f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe9f6c-1992-4094-a829-2fcbac97c6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54f3af3-b3d6-4c36-b02f-debc6b8e98df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aede10c-a7cd-4469-8d27-dc91187a17de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17142cb7-a584-4e43-8418-4f43b2d80156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d286c6ae-353b-441a-b1a1-45fa19f4282f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80565502-23c9-4348-b27e-6d844e6b42a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc614aa-ff3e-4c2b-894e-331458d4b219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a0bfe3-cd46-4e0b-9994-09689028eb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63003f1-2998-482f-8f6f-9ee4e45ccccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40a1961-0a8a-47b2-a639-0d7752314cf1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a7e40d-a71f-44e1-b637-3f043e1bc719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e13eee-92a6-4d1a-a286-d05df4aca758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cf9adc-11b9-44f4-b483-b29195366fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9cebd5-4a9e-4748-a568-1ec3bedfb549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ed27c6-e596-4805-b372-4e5790a9fe51",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641ab029-cc53-44b9-b1cc-5d0d913929ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6272cec1-f052-47c4-bb83-8510b0ddddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e6e6df-d861-4c39-a2c9-6bd8fe3c1643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e79556c-fd7d-4e97-ac16-c6140a7977c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606002eb-3b3c-44bf-b853-eb40d0c63a40",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2056cc9-fb12-41bf-ad90-07d2639d085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768bf737-07cf-4076-838a-61ffba13760c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aeab0c-4e76-45b5-bb30-8af19d61a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "95fb8afa-f5c2-4a46-a8a8-801d6cb5f129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1331f2-1d32-428d-a174-f4974b57ad81",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60e52cd-1ff6-4969-b389-39b6012b0e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f98c92f-120a-4ea9-a44d-0ea21ae7a17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0398c07-4fdb-4935-b90b-a6e12b3431d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f11f68d-21ac-42ad-9e5f-b0ddf9dcf56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0707ed3a-2094-4976-9145-15a5bed027e7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4605fc35-75be-4bfc-95ab-7f3eb1f01ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5da821-c113-497d-b701-510cab4e350f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e668de-ea13-44ad-9a6f-3fb149f0e633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c649e8-81ab-4fd2-862c-29c28f5425ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64e6d74-6baa-4eb0-a09a-20f2f8042634",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feaa4bc-77f1-49d6-bb68-b2d4b9929225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45490a7b-eafd-4459-a592-6887224c9c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97d63c-da9a-4051-afb1-ca7cb0bd8664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9398c88-7e9f-4107-831b-2e3665a70398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add975dd-329f-4384-a595-c835cd50605b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dddf8a-42d5-4ab5-a158-65e4d73cd981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc764be-0a53-4bea-ad1e-d8ff0743948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224f8f84-ed21-46bc-a565-b2e9534a88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7daa614-e8c4-4f47-b67b-5edb105b14cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b2269c-f4fd-455e-aa0f-b5fd9c0c8018",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8318bbc7-8e6d-4e60-8acd-7331a9e477de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ae6af8-1b06-421c-8fed-ce710b3c19cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36ce8ec-a9e8-41ba-b0d9-185345494d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63173e60-3d17-4318-8d6e-f0dfc81cb36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4629d338-608d-4c87-8530-968efb973d2f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f31380-ab2f-4cdb-9b70-fa3f5de80e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca5716-eeba-40e0-a343-963c82d5fecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334f2599-816f-4319-8286-1eec7a4cdcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c422a502-8efe-4f97-90cb-2a0ef9d03f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d5b8bd-bb23-45e1-a0b5-afd069f2d7a0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f824367-21df-477c-9d79-c05e4bdf4c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb37972-2641-47ec-a99a-01925d3c7055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46526a3e-75cb-4c7c-b555-bff194962ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "41530b1c-f5ae-4499-a63f-d999871c7e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a143c-5f7e-4eba-85ec-42d52586eb67",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035f6411-4b43-4ef1-bb50-013b045a22d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300dc278-1424-40b0-a56b-4fba2b68f5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98279553-7b69-4a51-a477-895b2925572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e16ba07-baa8-44f5-853a-b78e74f5baeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a6c09a-5854-4d07-8b46-076d9913cff0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42d74ff-0e9f-4aaa-ada6-03d4b316cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec93f81-42fd-4162-9411-9630fa76b799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb335c5-b9b5-469b-a4dc-01593f6019e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b908726-638b-4c0c-a7c6-512aa7d7abfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244264e2-1fff-4409-b15a-f01288e5250c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98b22e-e4f5-4620-aa48-fae9177cb529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c37d569-f438-4b25-b964-113df881ec71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6544e81f-2a30-485a-b237-3a63cbf81851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd8cc84-7a4d-4846-9f27-e43d2a2c0f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764401dc-4576-4d0a-beec-055043392e5e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d55c71e-a715-4f15-a900-9f80b913e82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f26265-3803-471b-8023-3e7186904902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c45742e-90d0-492f-a7f9-440827ff7030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2b0ccd-9896-4ead-a486-99685d1be40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf327dc-0993-4d9e-9053-14eccd2be05f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6dfe54-75d9-4a24-83a3-3b5591412bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433a8e89-d470-4347-a249-239365ad364e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc99afc-e3fd-49b3-913f-7fb03343aa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5c56a3-a706-4d45-a24a-6fca4a73328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98c72e1-c7b6-4824-b5ee-dcdf0da07803",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb685637-f6f5-4ab4-b43c-fc1eb2b98e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d055e64-4768-4952-9dfe-423dcaa47be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7d180a-5b3e-40f5-a32e-55d2daccecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "093c25ec-ffbb-49bb-99db-af0d9d3d6027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab67ad75-87d2-47a3-9352-04d9169c0c7a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a91d87-f00e-4c0f-ae7c-129c377d98e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67819424-6105-4ade-b476-e2f08faa22bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09602597-15e0-4605-8e80-c1a9053ae0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "253cbed4-9501-4ee5-8e88-e4bb58006e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c650ba37-1961-4793-870a-ef5d52a31ec0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b009b9-31bf-48be-80b5-ee5df1355554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ede578f-b162-48b4-b62c-793a4dac2a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f44f626-15cf-4921-a855-c8ada22dfe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbb878b-0fd0-4e7c-92b2-62d094912d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df79ba0-095a-4ca8-8a28-49472f4fc430",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df17d976-a588-469c-b2d3-43eec2ffb890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f941f4be-dcad-4e4f-88f0-4014729b1ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8288c799-33a9-42bf-96d4-3c3a8d0e8730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eba228c-be65-492e-b96f-ee89a19b7bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d24df0-5c80-4505-b1b7-edfc35b12409",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c6c15-08ee-4971-8a65-cb1fb47eea2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8ced8c-b9ba-4bf8-8fe4-1e954008568e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e161fba7-e578-4f15-9993-31ca27819044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b2def0-c586-48c7-aeea-705df6b981cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b4b957-5b43-4f0b-b915-2daad18ab3ed",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829bafa3-b419-4eee-bfc8-646d10cb0224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792a9c4a-48c7-4c2a-a1e3-dcdd73446197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2df1a6b-e45b-4fed-95bc-4e4da746e07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f33abbc-359e-46f1-ae8a-b512966f6e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef77c1-501f-4237-bd93-f563358e345a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0838343a-dc21-4479-8e41-87b5a89b4f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d67b9e5-0104-483b-bc48-adec3627969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b47804a-f581-4948-a97f-391609d93bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aea077d-9d68-4419-afcc-44d9de254fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba39a4c3-5a87-4082-8ee1-bf2f01c5a3c9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93873bac-8213-4ed8-be20-b829aae79cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ade38a-248a-4ffd-949a-f4074d6040d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b39036-6a7c-4bc1-aa99-288b2e630f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d781f4da-33da-47ed-a7b9-75fb11b04777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cab1da6-cb47-418f-a7dc-1d37f326d82b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf5c28e-ea1f-4d12-8347-e216307d5a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944b403b-586a-4cec-9c68-11f1d57ad549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469ffc4e-140f-4b1e-a03e-6096a81d33e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f61741f6-04d7-42e1-b424-0405f60521bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd073495-6527-45fa-93ac-b869c8ee73fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc76d91-e033-46bc-9fb3-37edffd4184e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581a7d2e-1fdf-470f-a5ca-8e6251becf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74bde2-3e79-4682-9883-8b983177cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11eeadb2-b6f8-45b3-8efe-35b093a0489c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c43e86-c01c-4460-9504-b4f5f4daa551",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2b34f9-5402-4dff-974c-2b1ba9dcafe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3fdcf8-0fd6-425a-8d36-19e0b3bab0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9855650b-8acb-4f45-bdff-df570206d9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef19b0f0-00a4-43c6-b330-89363f61a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2e2fb8-e4f4-4015-8aaf-7296bf4b4a97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432e7426-f3ea-429c-924c-ab13bae696a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e159f8f-b31e-4432-94d3-5860cec972e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff2986-64a3-41a3-8bca-797db5d04fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a675e9b2-124d-472b-b08b-8caa389740d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b948cf55-0ed4-4125-a5dc-21c2eeb100f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef18d40-ae16-49c4-b47c-0ca9cd8187c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef27d337-d193-4a8d-a63b-9c4189bf4897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64bf86f-e2eb-40ff-859d-d185b880eeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d063ed-b2bc-46f0-9e63-27b5f22143c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f762bb-1c36-4121-9ae8-8c02237f163a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da155c-86ff-477e-bac2-92c4589c551b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b23b632-0d63-41a7-9434-d30c7564b9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9008ad2e-b091-47ab-a3bb-d24c1db64ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfbf458-2f0e-48c4-81ee-22c8502522e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756506db-0341-42a8-8e53-f2a284c1885e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c39ca60-9294-44dd-9dfc-f877cf304bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b74635-92d2-4dea-957b-51e998aea0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb05c702-04db-4fc7-ace0-beddd71e6367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf78677-a9e9-49eb-a94f-3258485fec8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd05b6e-abbd-477e-aae4-359c1d0631aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c0308f-ac86-444a-8c89-b7d0d2e5f941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6cb2d5-ce13-4b27-99ef-1199f739fec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e1507-5177-4282-89b6-bedfe9121fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c571f8-b51c-4e0d-9797-c726cfb8f7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb68cea4-0aa4-42eb-95f8-077f9ac15857",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14a464-3bb8-409a-8b5a-8d026ca9893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5eea26-c15e-4341-ae32-c05e56a23991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d81e34-914d-4fdd-9902-72a15499dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1b0c3f-3d40-4e54-bd9f-3c3e6f198d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d7069f-c68a-4eff-96fb-b70d65ce5891",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc49e913-a420-467b-b4d3-95a5e1b298e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a3de20-5fb9-49d7-8cb6-3142ecd9e5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41139930-a6a1-4e57-bd5a-7635f52cc6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbd6e5f-2620-43c6-ba46-09ab2e6a03e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baece4f6-d0b0-4804-8e46-db2186b07892",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472fbc8a-6d06-4636-a17a-3beb69c14246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbebea4-b752-4f5f-899c-50b3b9f2eaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d458e-9855-4599-a631-cfb75e08c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4233a1c7-c887-414b-adcb-973ff60ca741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cffc706-d2f5-4019-b524-0988844ff010",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f55f97-8e56-4da5-9332-8b7c843cdf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab042a9-3cff-49bd-9dee-896515b519fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50e121c-26a9-45ad-837e-8c1ddf1bbe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf697e8-5ef2-4c6a-9b6e-2706b662596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eb4852-e722-4aca-8a3c-8d1afe8d42b1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9dfe4d-a6e9-4f14-b322-1a1c378d9b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cd9450-b6d9-4ae3-a823-7215fddc84ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a768e4ba-4ae1-4a75-bf02-041a55ce5240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddecd22a-64a3-4b3b-b274-39022c8229ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f7e90c-4662-4b2c-a263-2bc6e235d9a0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9047318-524b-4b38-90d9-60b71d77bfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5f8d62-f010-4e35-8a7e-a417f9b8776c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59123d5c-37ad-4403-b6fc-993984fd64fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd35830-7c3d-40a3-9a11-203e9a52ca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec55a72-0160-4332-b9ef-c8089c7615ac",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd5f356-2f13-4c9a-b3a3-bb7302aedc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b373f11d-8fd7-45ea-a365-1a6f6dfe9fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ac4c77-a910-426c-89b9-29c7204e7d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bccd159e-834d-4134-bf7b-ccc6a8c12ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9958158e-f71c-4e0b-bfad-4d9411c53bb8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d38f91-80bd-45c3-8701-83d77b2724cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ece10d4-b423-4759-a6d9-b86e2e6dae9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43547a0d-1304-42df-8ed1-f33496faabd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "766d522a-7873-4c9f-bce9-a032ac72f0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc216d6-9ec7-4813-9d41-cee4591cbd9f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8fa040-3038-4ad3-96c1-9d90292e4340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734a34af-8359-4494-8c79-da0aeefbae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eb3a33-bed0-43a6-bf68-a08bc119b114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b47664-203f-40dd-b523-e00f2bcd22ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914276c-b1d2-42e6-b085-bbac8464b2ca",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fde842-48e0-499f-a4f1-8a4174328d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8800d140-2529-417b-a73d-50d6dc3bc753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdd32ff-b3b9-4628-9a6a-27a87104fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6e6f13-1c05-435e-b648-7179436a0792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07facbbc-2a81-4413-a06a-3243419e2f9f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff3be5b-7544-4aad-8d9d-793aac71f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb3c173-6162-480a-9c23-114cc411691d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f119e7f-e78e-4342-80b9-ca72539fcf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d65abc-1195-416a-bf2b-c67d929eaef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed8854f-339f-4342-9381-617e544b81c8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ed837-d2cd-4a35-9b2c-9df06b22f4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a029aa2-9ce6-4a29-9de9-07ab865b390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4439c65c-fd19-49d6-b611-cf8933f70613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0745d03-a10f-4477-85c2-234b22ae894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd4cca5-e706-4946-ba7b-8398ddba7a87",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6122c492-cdce-4160-8c07-c00168d99c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6734f9-3c48-4222-9722-33bf1ce16024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66010c6c-63f8-4040-b1fb-71b16e7c5502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27deb4a9-6242-40e0-8a3a-60c75ea3c538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064f33cf-933c-4e39-92a6-6699443c04b7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7518e211-cbea-4b9b-8447-c09a53f12e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ff2669-890d-4bb6-a00e-0b3fa04ac02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d86b1bf-a843-48b4-8b3c-766965495867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77653a5c-fa9c-4689-aa19-1730f832fda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef93fae4-97d8-4c71-9512-1d6d8de16ffd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faeb2ce-7986-4499-a8a6-6ca78083ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b78dd70-af82-4edb-9678-91aa279c35b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b93e24-c1dc-4261-bc8f-a2757d5cd654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ba3611-5963-4ebe-a84e-1880e2a00dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc36e83-c267-4992-994c-bd6c5123ca75",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58ad415-c1d9-4b14-9228-f2f87e3dea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e310c3-d715-4af6-9d94-d2709c40e4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5973a1d0-0aed-4b8b-94de-117b1fd6e9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2ffeeb-3866-4932-b397-37a0f3bde031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a6bb52-45ad-4418-a256-ed6c025ca084",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe611e7-405b-49d1-8653-0869556dfaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eafcad4-0c13-4872-bb74-4f29e3347d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c81bf0-b95b-46e8-88bb-b7cafce322ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbbc843-fde0-427d-845e-cdbba9553ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6500dc26-6ddb-4cda-a144-845d0aed25dd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2a281f-30eb-4e67-86f5-46476b8d0069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ccd2e8-3f4b-4b02-9ccc-6f683fae0ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a937f64-77d0-4e87-81af-c8d317cebe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33efd1f-fa2f-4f4e-a393-e982f1baa786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1067a250-0eaa-4e66-96d8-7f81295c2ee5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e783bf-706b-4a4d-8fbe-74083d6c2fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b8314f-672c-42b5-ad17-68c26108665d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8356e30c-030c-4e60-a2ea-ca3fc5510475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d1913e-8081-471c-835d-edac70225884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edabb548-0fd2-4753-b2ec-2d399d051461",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9430c0c-53bf-4b94-a5dd-56cec306d0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27770d75-f9fa-4848-84dd-6119ba22bd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46fbcb9-f7cd-462d-b28c-89115c28df1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f95caaa-345f-4735-a2be-ec9b2cb9a778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d23e8c0-3b1c-48ca-a5f2-3a1129c2f025",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461134dd-af31-46ee-b9cf-e8686a2f99fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba33ec3-7fbe-422b-945f-aa1b29a51e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ce149-d020-4ed6-869a-e6e174069622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "824c9836-3f82-4225-9d1c-a9cdbb00c115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba2c6b-0728-4434-a4fa-ca66d02296cb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f11eb-6bf7-4dc6-8dd0-42b478d02c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3647d3-71b9-403b-a35f-a5c754ddaeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8851d2-20e6-45a4-9216-f0121fef909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfac183-6ea2-4e37-bd66-9610e61b08c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118bda9e-2074-469c-bc9f-42f5e52faf22",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f8ab6-46c9-42ca-a648-00c70d500be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1c26d9-6043-4587-ab00-dd4c2b538995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d61f9d-1b56-414f-b465-b8b4697c465f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3214951-f9d5-47c7-99ec-6657d09423eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58897ccc-173b-45f3-b477-aca3e933b166",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4a8550-1ffb-4426-b756-05f5f63ac22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9d4b02-06a1-442f-b566-0ad293676370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f41e3c2-ae06-410a-b5d9-df699ae744c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1011a812-3bc5-44cb-b239-27bf7e561f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c06e27-f2c8-4bc0-b7ed-1c40ace5c0b2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c554ff2-2da5-4a5e-8511-b270fbafb7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447b5e7a-e2ea-401a-a52c-df03260050e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f360e-edf8-4f46-ad23-f50fa4b1d809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1caaf5-fe98-4397-bc90-639138e8cb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afadeca-4a43-43a9-84ab-edea471b8d16",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74209971-43f7-4bde-9efc-1240464f1aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c89504a-f847-438f-8591-9edef57cebdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880aeb56-bf35-4eaf-b55d-86d1a177ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99e8feca-56fa-44f1-a556-9da8beaf2521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19817a61-b344-4343-8e1c-9e8fd2b341fa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63365ac7-3082-451c-abb2-bd0489e5e307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e640be8-c501-4875-9b33-bf05268814ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef548fa4-2bb2-4446-bed0-11103f008591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "065b8dd1-6af5-4cf6-afd1-6a1f1af46a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca6c0c4-de37-4699-a71f-18c7fa1e11c7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103bb680-7e4d-4894-867e-e034be6d779a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eda13a-31a5-4dfd-b5d7-c6e82a05a9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5139aa8b-6648-4975-8cd8-d70d02c87090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "59fc46b9-5039-4603-bc3b-7ce876a0c80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a013f00b-1f7e-45ad-ad32-a69bf5bb5454",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb278af5-1790-4b2b-b8ed-a8f48fdc8a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7891a064-c22f-4072-a286-e8eeb849d299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76821eb-08a2-4ebf-b64c-17eb408f75bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb0ffda-7a10-496c-abb1-41020a44787d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1071ca37-d37d-4b73-bf84-32965a05b4de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a6a8b16-01a4-44ea-870f-115e417918df",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5698c98-4130-42b7-933e-2ed0de1bdf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "436b2aac-5e0e-4eb4-b57c-643f966e85d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba913c06-dbff-465a-b615-a6b815bd44f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be796a50-fe3b-4c30-91a0-784f450e91ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47b34db2-5f27-4f3c-9b8d-01c7ee736294",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "075dde92-6400-4ff7-a361-5d579c649747"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d73e7d3e-f0cb-4d00-9088-19e62776901b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09903999-d874-4c52-9a59-981c35ab7c23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42ccadb0-eefc-48dc-b40c-ee7ab8f96742",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77095542-483b-48d7-84a7-9492df1cf0bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8ad2c35-ca87-48f0-9bca-825040457a82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d8b3011-6eec-4ec6-aea6-5431de704919"
                }
              }
            ]
          },
          {
            "id": "9ff6e9c2-1372-46dc-83c2-025e791a7a26",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aaca96dd-d0eb-444b-bf82-be406a9288fa",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6a7f8faf-9452-42f2-892a-c4ae4e5328de",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2e2c5a-c139-4691-ae0c-e7d627cdc17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4692810a-4579-4ef5-82be-cc1f714caf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e10602-e879-4594-bbba-23605a2cffa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e414a51-b804-46ae-a8ae-c1852bc28152"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f2debf3-0e54-4aa9-8edf-91904407ee43",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72ec0651-bb38-4d82-8d59-5d0faf7bb3b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e4b40cc-5320-485f-b75a-9108635d3a2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83c40f84-af7e-451f-b91b-dba080fd2558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "854bd54c-30d5-42bf-8716-d42ab8deb311"
                    }
                  }
                ]
              },
              {
                "id": "bd2c5356-68e7-40f9-94b8-75e8bca9d8f1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b98a756-edc6-42a1-81fe-4737cf5e57df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91f2c45b-c9ab-4aea-86b3-29506dd0ae03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5edecd36-14f5-47d5-a913-7d16b75253b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af091772-19ac-4888-bee6-c8f1a1386378"
                    }
                  }
                ]
              },
              {
                "id": "8adb0bd8-fdd7-49dc-b6de-56836e19f0cd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94d99cf9-c87b-4a11-9e2b-1d79b1b5a77a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54019426-9258-4720-9309-5bf392211601"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab98588b-9ec9-419e-9f12-0e31e76ddb75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8071a5b4-c84b-432e-8958-043b070018bb"
                    }
                  }
                ]
              },
              {
                "id": "56c45bf4-773e-4433-8c53-19b5f0591e26",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c77a9d32-6e3e-46f1-855c-bc4f562a6710",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f798906-ab2c-47a9-9edb-ad40d68c82be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e302e9e-1b08-4d38-baf5-b1fad7495c48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "56971db0-579a-4134-9d1e-ee27fea67de0"
                    }
                  }
                ]
              },
              {
                "id": "13eb4621-70eb-4c7a-a1f1-0658e0b058a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45d3230-2f49-47d2-8559-f075f3401c4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1aca22cf-de2e-4516-9687-f4a3f763e327"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5aa3e4b-a83b-4d8a-a01f-6e43a9295924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c9d57da9-3b6a-452f-ae3b-fcc5c0a65e1f"
                    }
                  }
                ]
              },
              {
                "id": "4d09567b-5936-461f-bf71-506292689852",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4dd78f9-c417-4c28-b08a-540b38495168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8de160b1-ad64-439c-b853-1e7a035a6fc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d373f83-1f7e-47f9-87e6-5e9a308bb737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ddcea98-8f03-4039-b9d5-4ddb2af88a13"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57dea594-668b-4772-af3a-8a379076845e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39cd9747-0086-4a33-99e9-2b0a52576801"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0afde129-13a4-46bc-8caa-6840084a9559",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11139e18-789a-4dd4-aa25-2c0191f1329d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e11718e6-89fa-490a-9447-634110d7e1a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d054fb9b-c9c4-4f4f-8b78-5a16d83c529c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22c9eaa1-2214-44d5-a7dd-2f09261249a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "327971df-f26d-4ba0-b004-2859dbb5aa21"
            }
          }
        ]
      },
      {
        "id": "97b220d3-1ede-447b-a1d1-d80761e7e033",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "629b5e08-506d-421f-92b6-454efacf8648",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3de18aae-c46d-4a75-9439-b33bd1cb5095",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13ef4510-9018-4329-b89b-4ba8ea8c13b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678eca9-be7b-45dd-a3d3-293a905b287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4da5432-5f58-4248-8dbd-274445d3ec30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b81e66-bf8b-4504-853d-5038bf302a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d8a8f3-ed26-4c83-b2eb-174155dc8f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f42db4f-2c9e-4852-93b3-8d99bfcf9c3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0babf0-2141-4763-98b1-9f762758f849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d1b301-b90b-4be2-92c7-61297b726ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb2879-cd90-4dba-8187-4873fbb40728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb49d399-c0ee-4725-b4b9-affa2948ef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d46364-6537-4aac-a238-69f13299cde6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec3f571-7337-4f99-85f7-d90cc55a63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27153ace-9b7e-433c-8e2f-714d482c3fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a211760-1e96-4fb3-84ec-d5f9b5c1b0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "741af5f4-1066-488f-bc78-b7ad5c85f6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbae65e-da33-480a-9d2e-4915572b10ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f02c866-4851-4607-9964-d0de92c2a910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58046103-075e-4d74-bfd7-d9bad72e8e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa38797-1052-4509-ac4a-29a08963ad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc9db5b-04c5-4b7d-b658-fc2e1f18ecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543807ad-a352-4095-872f-29d80bffa139",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a97e14-20a5-4f01-9644-adae4f165a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a6ebbf-065e-45dd-9c77-7c6348168334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af710acc-977d-4484-b7e3-e22cdd2d13de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd6390d-f341-45ef-929b-95acfcf5ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b32ef91-93b7-4aae-a9dd-b2e32c34ca54",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886b7cba-a2aa-4ff3-94cc-44bf2903d752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b66ae9-e57e-4ea8-a7d1-346c0d472e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1247a7-4380-4737-98f6-bb4d39919faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b0ac87-1bfe-4a7f-b736-6bfd34da1767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d386eff7-681a-4c00-9ddc-1ba02626b9f1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7701bc14-af78-425c-a5d4-dfaa31c3c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e021944-9279-4724-91df-4176fc25ac2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3d738e-3ab6-4488-8683-71d86b149eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee99dff-5121-453d-aef7-3ebd92398ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab591ec8-81a5-4246-bea8-d3bcf2a97238",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43726200-469b-4cb1-8f6b-4e4129652a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c7b546-f1a3-4983-aa56-2e52c6a40042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377ed585-f2f9-491d-b87f-3ea6be017325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66e2108-3b7f-4fc0-8b05-0db67269fd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e609d8-becd-44fa-98ec-64650d3307a8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c988942-e320-47c3-9a36-c7bc9624183d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215687b9-e37e-4b1d-bc51-08f6991102b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08d1a4e-1f18-4e01-953a-9c7f50559ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5bdd4f-1222-452d-9bd3-a5c50c9999fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b57f095-732e-4b43-b2b2-4f821262fe2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c10a02b-f332-470a-8d7a-3884c0be98bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0824e47-0936-484c-854f-b2c88fe3db4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796490e0-516f-480b-8852-899686874646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf94ea9-a45e-4c09-90b3-bb1234af2d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbfa2e9-828a-4a6a-a1be-7c694de2d21c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c272b-f5c8-4e41-aa53-2b1d0acdc6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46474874-425f-47eb-b6b1-12394c6c8197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa80ead7-393e-4ff8-b39b-c328e5930213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "963ec906-3556-451e-8706-4b585b2aaa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c85e6d-c786-4e22-9101-6053016cf2f3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0e4483-bb5b-46ea-a21d-3b2f2e19a3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a39a74a-3714-4680-bbd5-d31df0aa9093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d98a8a0-8a56-4911-b4e6-cc39e6bb666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3467502b-816c-4129-affb-a74aed2ddfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c634784-1d16-4aeb-8e75-896925c06113",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4669454-4614-4d0a-b8f5-079f4b37e897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5a2499-2d88-428a-b992-c5dd858d0de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444737c3-e68c-490f-8490-a164d230b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "362544da-89c7-4bc1-8934-765023ccf63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48481d1-aeb0-49ae-99e1-1920827b443e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8e7368-b130-4a3f-b404-85a73ec0bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c60653f-6b95-4c58-8d7f-451a725f0b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c302cfb-db96-4ce1-9f56-d58ef0a607b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "89e51bcd-b0af-4e31-94f9-2c4fcfc56e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9b3052-c3a0-4e73-a00e-e654fb0f5b66",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9134aa2-07fc-48f6-9f5e-2f57f789251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2d2560-dfe5-4776-a42c-d5563ae8336f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ae1e5c-1722-41c0-8449-ed73bf6c03e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d314e680-5ec4-4fa0-9141-4bf69b7ee945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ef6ff3-8c3e-4819-8633-1df7e06b6f2d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f71ed-684a-4611-86ad-6a4111e15e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81c4d0e-9416-491e-a9f3-aed02762d299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d305601-7f07-420a-8017-dc6af6b970c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "480b6750-9e72-48ff-b31a-d20defd1a685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8398c397-2242-44f3-82f1-bae74113e1c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d32cec6-9a3c-4da8-be00-613107b82799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6445b957-fb81-4c50-b81a-b5d266de97aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6e04f0-b32a-4826-a451-1f567a12b504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "96955d49-7895-4372-94ab-ab7a62cbc74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed744408-09cd-4814-95f3-8ac2657c33a7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bac971-e208-4959-af50-168c63811492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4aac261-e22a-4924-8e54-e670993bd88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4240e12b-4866-469e-a896-c1d3abdd58f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a5c8ce-b48d-46df-97bb-18a525f8eacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5755188-53b0-49e5-90cc-4d6d9c2d6311",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b95d0c-507e-4977-8ec6-cebc19a4a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4883c34-93ca-43bb-88bc-82174345ae05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b40670-dab0-48f5-803e-6cd251301023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52cb06ef-70f0-4b40-8054-e1bc0976e7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1305deb4-55b3-40cb-a28f-8fd720a7e8a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c49bf52-ee8c-4a9d-8c7a-13b32e669705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7260658a-d6b9-4161-acea-b988a499d119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd4121-47bc-4bbc-a606-1b61c6edec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a30eb6a-2a89-43cd-982a-ae8f3196b45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60506cc6-9780-4542-9470-51d2dd2556d6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c072da6-cb69-423f-929a-36134edf2ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967b0536-8e81-4ccf-9c49-f3111cec4e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f180bd7-38f0-4676-8ca4-85f6f37872bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288c1b31-50c2-4341-b871-70b6339bdefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c551c8-c3e8-40c8-ab92-c03ffd9dba29",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7cf26-ccfc-4526-967c-4bc68d093fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416851aa-2dfc-49ae-8bf0-3af5645107de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4083e2-1c15-4036-9257-1c9d055ba535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d4670a-309b-483c-b1b9-6931d14bd706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45f4e2-9ea6-46c6-b39b-90e145b8c136",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f2f835-aeb2-43d5-907a-e5bf92bdc082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a10e336-b67f-47da-99c7-d2bf7f87cdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026eaeff-97f0-4c5e-bb1b-ed3a1351bf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04024705-bc0a-4e6b-9a97-98f5d85c705a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86492266-7979-4a64-98b3-bdcdd63dbd05",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2a4154-81a1-4d03-b144-ec72b951c72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfb55eb-58d6-455a-aba2-d53606db416e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5988f799-2151-4d1c-b019-b285faae3c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdad953-3284-4302-a02a-4500294249be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcfcc45-8985-4e4f-a622-3e976d7102cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed2c451-8bf0-41ef-a8ec-4b56fbfefe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea898e0-3eff-485c-8a3b-60d327a82598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ccd709-679b-4432-b090-e094d67509ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7f33da-9c51-4fe2-a402-0ae5f03276b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2e4dd7-7fef-4dca-b1aa-d9e45807455c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c80e2-4b15-41cf-a6f0-6b4b4523ed67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eccbf3b-ed3a-4467-8fa7-3c5e7784e4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec9d3fa-20e1-4c67-b6aa-507e812cc40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7f25a7-bc6a-4ea3-891e-e5efe7315e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fcc240-a26e-4f25-a70f-8f9220ef52b2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4679002-efd9-44d1-a19d-60dc3c786000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f47e1c1-2d16-4f01-8b46-2ff0c9e82874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a8cb88-fffd-4a99-90a6-cb99577f9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5264e531-5624-41c8-9e99-596e5c0764ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a658b90-f98f-4995-85fd-b6c2cc707a19",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110e3b8c-d133-4516-b17b-b9f022a0d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be0ea4e-f05d-4190-862e-c6457dbbb8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e8587-1c5a-49f8-b276-e0d1c33cfc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd11611c-8ea7-4d07-aff1-df5695eeeb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1198e2-5044-4633-8408-ef7c61961831",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffce251f-35f2-4c65-a96f-4727ab945735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace1ec39-50b7-4ece-b6a6-ad602db4a7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5596c45-7592-4b55-b5c0-25eb28fca0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65cd7807-190e-46aa-ac50-32b5c0d5e8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e182b-07eb-40fa-83b6-e4845d764453",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8cd463-39d1-4c83-9d5c-fd0193efada9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc7c166-4236-4daa-8de0-bbf51fd6a3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b1afdd-a84e-463a-95a1-f2819f688b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1c06be-5b21-4f91-b3bb-b32adc591348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9012e7fe-d175-48e4-b04d-0012d231187a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9d9d52-44f6-405e-b1ed-33b37ccd64f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2f5063-0c11-433d-8d04-8014975f22ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e01ebc-1688-4a99-bbfa-b78d1872be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "204ac1aa-fc4b-48b1-9945-6c3a55749ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b583f43c-dab5-48de-b342-8512bd6dc101",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b23e63-de15-4659-b1e0-31874d0d5ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539c3c81-b7d0-442c-ad24-87f4ca7696ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097f8b32-a1d0-4ea1-8f8e-8b67e5bf02d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "010afbb3-971c-4f2e-9ad5-866e6e1ec96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed93f25-1b1e-4254-89a3-2b6f4770081f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aa8f29-a21c-42e4-ae62-4e67d8447fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4d0256-ad1f-411c-8bd2-4b01f3e08481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29384e63-d398-4771-a832-181f54f604c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75546d89-56d2-4246-aec2-47d1d0da0c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed2c98b-aebd-4c51-9d43-8c395a297e12",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ee262-ff46-49a1-9e33-a26cec78962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db020b9c-02e1-4b7d-a714-0618e32e112d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5f6233-82f4-4b46-8fea-10ce85a9c6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a84387d-a468-4791-ac39-031c071c48a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43d1250-a796-4d68-b1f1-2c176966bee2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1c4082-468b-4d2f-af6d-4bc00912e726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8efc43-a6c8-4d45-be02-2d9816c4b838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f7b25e-4971-478d-8e82-bac0b832f1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a1b57a-b768-4e5a-b8f2-301eadd81fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2cc7ba-21ae-422d-9c2a-f840897c01ba",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91d3d8d-2618-48e1-bd3f-56f144191ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9f571f-a172-43c8-81f2-b2ce44f415a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bd92da-82fb-4aa9-bcd0-e5bd59812515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0547f077-4644-4a96-894b-0f2acb958130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ccf522-2144-4386-8fed-e6f4c3df08e0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e298e3-9821-49b9-9c1c-fc4073243438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0285c762-0856-4081-bcdc-46470f3961d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dd2bd4-adff-4824-aafb-6faec9d3693c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb7db43-e713-49f8-9ccc-c366fc912c26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac7a7633-9a3a-4248-b564-7ed26509124e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bce867b-318f-4e98-b43c-b830742fbc44",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293744bd-fb40-4c39-ab59-9a05eb28e121",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "574d0d5b-dda9-407d-9bc8-316a37ef9eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f29a20a-7677-4b44-9a70-a733f60945e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dcef87b-0fab-4a9b-8e44-0ab889638560"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95012189-dc46-42b8-92a2-20d40af2248f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e4f038-25b7-49e2-bc78-18de51d7e37a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1a0e33a-b91a-4700-862b-ac3ae09b42cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "367f7c5f-f6b1-4d55-b1fd-12d08d390b8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3323902-a466-4b2f-8ea2-b41e32ac1be7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3fb8ad0f-f7f1-4e4e-bf61-c66f9b229a47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c581c005-7e01-4f08-bc3c-dfd62217f86e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9de0e8d-8f5b-4b67-a4e8-bb70997083e2"
            }
          }
        ]
      },
      {
        "id": "b4904218-ff5f-4e72-a71e-5d7ca2beaa3e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3627717-3796-4187-afa3-60cd1028b795",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9b685f9-d769-4292-898f-7dab37085d7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9060654a-1693-4f17-bc47-4648ae96580a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099f755b-81c6-404f-a491-6e90f1ee6ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f40975-4c71-4e8d-befa-0b5f3907d95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51320f8-7cdc-472c-ac11-6db526904b82",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93156662-8957-4b41-8613-f6367640f64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a0272d-b99c-48cd-9965-533a2ac8a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a15121-08e6-432f-8599-ef70ced03975",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607c2f1b-4326-40c8-aa83-fa4e8610296e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53923f5-9696-4a43-a49e-bf16c477a79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36be9da1-2f8c-4698-af76-f7f351cca19c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c22f98a-06dc-46d9-b399-a0a946c3c1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e28387-0363-4f40-b9f7-8bb3e70941f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ed900e-93a6-483a-82da-58ed0a96b692",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b1be16-39e8-4b1f-91a7-f28c5f90b83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b31bca6-2500-4a49-abf8-25290b011234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b75210-067a-4611-a62b-037a054630dd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15bceb0-5e3f-4b8f-99e8-f5e11fc2c383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1dc0bc-beed-44ae-be9d-3af61e69b4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8066b9-9515-4b18-8e34-7810e4e97513",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f93d84-3479-4d0d-aee9-7569a6fa743b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95de1177-42c4-4164-b339-a034b5dd2ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf1c9b9-ce2d-43cb-aa98-4e7fc5ac2003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa929c1d-6a1e-473a-b5a2-ea02ec77761c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d118b0-dc47-438e-9580-1e2008df6859",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a103e57b-33ce-47ee-9145-0ac779d967e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0603ac2f-78a3-4e14-8f36-34674d15b9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb9db2c-73b1-45a0-897e-9a693d9b032d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c540dd6-7994-4c27-9407-ff3a6a6967d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5877898-4919-4fc2-b369-5fbbcfb533bd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae38084-ed5c-4b30-bbc8-0a167cdf0cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565b44c8-1dd1-44d6-8e6e-949599143124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f951b5-2f52-4d7a-b1aa-89b6aef8b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d4c177-efc5-4123-9641-56d26d17888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54517f0-a795-4251-8f67-12849dbcd367",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba02241-a18b-426b-8826-7e3ccaae7d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a202b769-18b0-45a3-9f30-6078ab56e39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c729c2ad-0647-475c-b90a-34a974db740c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12accc7c-eb11-4c6b-8995-3daf24d45ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502141f8-2f40-4f1b-b0f5-b66ea5c390bf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4d8eb2-6f54-4fa7-a38d-7c6607114e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24374e13-f21d-4c8c-a4f3-c5671c06d4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f5d5f-1ab5-4667-a076-2ef199103bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023afa31-9fcb-4761-9629-027efc276d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c170572e-d81b-416b-b74b-8ddfe39f469a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2917e19c-6285-481c-b4e6-b3e6208e7c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa25d555-a8fe-42b3-92a6-8917794da934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc891da-2736-4d53-a7d1-75acf2684bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2bf9e3-42cb-45cd-bdfe-1b2b657b25d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6035507e-28cb-4dc8-abf2-d05d4dc7d039",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fde428-dff8-4c90-82b4-a402932ec96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e81176e-4d3a-4277-b3e0-76fb81498426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9390b4-d330-4b5a-bc4a-2c2db2402f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bca633a-ce16-407c-a05f-cfda0a5ab5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d626616-88a3-4259-9486-c8121ca0b960",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ef430b-cd67-4dea-a552-5b3a4937bd44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bba8d6-bfab-4eae-9789-1a5d64302837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96147554-48b2-40d6-8e47-832266b625a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded1c373-a501-40ca-aa8a-80fe5e48bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a052937-748a-4aac-8f92-3a9cdbb0686a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64f7609-78e8-42ac-8ce3-9f861d85a42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56716b9-b773-46be-b04f-5073b6faf9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4908773c-3808-45ea-93ef-0d3c3785456c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3a3778-09f3-490c-8ac3-76ef539d483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901b3355-7945-45f2-8928-a6e5b7924746",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45134d5-e855-4785-870a-d43e195e9583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26884a7b-9d28-48f4-862b-b8c83b94197d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a1bb68-b3ec-4628-8fa3-e78ef6faa838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bae2f35-6c38-4f5a-9ff4-9b6b2b0b190c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747d08ec-352e-4ac4-a83a-a4e0ffeae079",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd26fd1-8b45-4aa0-8194-09e5a4c97db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bc2fd2-cb14-48d8-a94c-60d5366708c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f66a1fd-6dbe-44ef-9ae3-0ef943420c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a68c098-4637-48e6-b19e-2eadda508ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e8860d-66a7-43d0-83e5-303e694e8888",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8933a1c0-dde6-4c6a-8837-ece044ddb6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9673d87f-df05-4cde-ab05-b8cf780beb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1455b07b-4d7b-4e68-9588-26d3c9a1e750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e54ba75-0abf-47d8-b51d-9af31064d573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1191f1-69b1-4e0c-9b23-c5af9ac7039f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b5c3fa-cb1a-4fad-9671-bea15a5bd310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4faedb-24d3-450b-944e-542afb25301c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a72e56-cd5e-4136-95ae-c366494b1e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c92e3ff-9cc0-48a2-9fde-4b8eeef3c89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d7be60-ed75-4133-a622-f65102ad2ea5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abca9ba-6938-4764-9247-cc56ea16e044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21467a3-691d-4dad-a742-1cb8ae49b103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e442222-6508-4406-990a-84473c48d309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6671c605-0a47-485b-a40b-ac9e230c373c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d2ea1e-ecd4-472c-bae1-228a8bb530fc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a33663-0deb-45d6-9d78-b7add17ae9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed82ee19-fd4c-4df0-9135-7cd863fe3095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a86b427-2d3f-45fc-8656-6de31fcf63f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43a1637-09ff-4bc2-a53f-9f1e8b94bb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f1e0da-fd21-4551-a281-dce7af4420c5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71af0be-658a-404c-a9b1-4902504d0aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1490432-ea57-400b-8c34-c2c99c970ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6f66ee-60f7-49eb-a323-ed5f2fb0a5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf18ed1-3ca3-4415-a565-f5ba41020d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc558e6-10b9-434a-ad3e-7784843813cb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed1639d-5148-482d-87d7-162010395b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea33bae5-9a24-4faf-afc8-2535d265d5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f56ebc3-df0b-414c-b7f3-70eecb2bb751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c390185-e47d-40b3-81a0-42764cfbfd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e562cb1-9715-42e4-96aa-9d97738dd5ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9722e70d-7a97-4d28-b890-d5fa6b7b77bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387d41df-7d0a-4ee5-bdc8-7b98854f0e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5543e2a-4d48-4999-b38e-a4e561bea48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c7085a-ae01-4d00-9943-bc0b233e8f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6a5518-659c-40ee-922c-70923881ea1c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c20dae-e415-4307-ae0f-875ddc368465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9889f6e8-0130-4bc3-911c-54b547ddd422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6c39c6-e60e-4827-9df7-8d9fba634608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4017b3cd-82dd-41af-abea-64f54bd1b756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6523f8f8-3da1-487c-b6e5-ace94831cd1f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a794ca2-03b8-47b6-a3cd-1bf5af0e4dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e38d4359-a808-4cb7-8876-98400d712a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e74c3a-5df8-4c84-821b-c1eda3e0c120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a1b145-f1dc-4bdd-a2c0-333e3b2f6434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eda0aab-533d-43ec-96a0-9d4a17eecd7f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b923f442-6e68-4363-842a-2a0dd1051087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9ed9ce-7db6-44e9-97a3-56b5a0b07e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc6aa1d-1425-4d09-84a4-f5ce0972b616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93567b66-d2ca-4dd9-8307-2713c476e661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf9f91c-5c68-4b0b-80d4-293a1b30e392",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47248dd-087d-4de3-84d3-fc2b7fef6e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3537102d-7da6-47bb-adf6-e19f38e1e04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201ad241-5451-4c65-9c4b-a7397733152a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bd6f06-cca6-4ba8-9564-f5d8892f6bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6930a7c-0bd4-4bd2-a45d-bc902db8f884",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad0f2de-bfd1-4e9b-b553-5c880e0f6aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b6ec20-cd0a-4368-96bf-127a2b09807c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f00482-b714-4a9b-98f2-d8bc7c87a3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c0ffe4-fcdb-4653-b1bb-f4722ada3c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b79f0a-dc4d-42f1-822e-f4610ad3adab",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ea322c-ee6d-4043-b509-f2b2d448edce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc32fb43-18b9-4c0f-add4-ec1623e0e5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be100e67-7380-4b88-a944-a8b16c05548f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06c65f1-f51c-48d0-ba24-4177e44463ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a92a04-1e28-4a4c-8c07-1926602282c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02afc40d-e22a-4de3-841a-5bb9b60b76ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60216fe2-3189-4dc0-b106-f6511fc86fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a309e44-2039-42f7-a211-6a4c31354ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000eaf2f-694d-4fd7-8856-289315da5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380a1058-bb83-42e0-8ba1-f7f9f8456a72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f9c873-aa04-46e4-bdd4-61913bf2221f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0596f0db-4dc5-41cb-ad0e-c67617eaf9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce707d53-01a6-4209-b507-3fea506f4f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2ca893-1229-4091-a6ca-4ae625acb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45811c18-6fdd-4a97-841d-a5e29d787e9c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0049d1-fe03-4ec2-a071-03c2b08e57d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3e8dba-d427-4c36-b9cc-9d6fd150ddd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd65683a-c492-4ad3-84b1-bec2b647106e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761977b9-db3e-4e7b-b509-c03109bb2d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53355c7f-84ea-4e5e-b116-0a8dd35dd308",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50765894-310a-466e-a984-039ed717b891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0154f7f0-03f1-4e7f-9dda-30fc45757562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dc6f05-e579-452d-a81f-0b82a6d9055f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daee3ec8-2b1b-4c9e-a5f8-d8afb6c4bc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611054b6-8831-4ff2-aa55-fb43b376435e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9a9536-b7e1-44c6-938e-d811a15585de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570ee8c7-50f6-4786-8a76-561f6308c3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af675be-1004-4451-ad89-b0db4d9edc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd45073-ca3f-4133-93a2-909ee5596671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c67c5e7-07b3-4b3d-8274-f105461ba73c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de9d452-3686-40ed-89bb-28bca22664f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76948d0-d67a-447b-979a-9df89fa133c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7221b3f-6cfc-4625-a06c-4a6294416567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b130ebb-831e-41b6-b9d7-b0dc8b1599ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5990ba-6972-46e1-8456-fc7cfff6761e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5662ebe-bcb0-4e43-a87e-eda850d2ec1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10977376-4f10-46b4-b33b-1f24015c654b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0f3088-2135-47ef-91c0-65e62b69e596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2a8b9d-07b8-4903-a6a3-045d16c82815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b00b12c-83a8-4772-ac9c-158bb89fcfbc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b181cfbe-2763-4661-a855-deb8be5554c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1fd0c7-4ce8-4aca-bd2d-c3b9449c3d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c49ebcb-e87b-42a1-a9bb-29a852897138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee66ac1-68d9-4c44-a8d4-592afc84bb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0256be34-aeba-4b07-ab50-a94bcc5f238a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bebd07-e046-4712-a1b7-d9ff7f1520ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23aa9f05-5ea3-4ac0-8c74-4fbd04d0f754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22fdf3d-a6c5-40a8-9074-a796733068de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7db368-58c1-4388-884a-b81498dab133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b38dd3-8ae1-49fb-a4c1-b3e622296aea",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10174ef-d168-4755-85a6-f09aaa6abfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7720c5de-df62-4759-9631-08323b3a2c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e065370-2001-4da0-9ff0-dab8b2a33323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9f5dd4-507d-4179-bdb5-b6c1b706d2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ed4a50-c9c3-464e-b05d-b87398e484d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec54d646-bfe1-4eca-ad45-e104a2e8fa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3749506-260d-4e07-a0a1-91ed107eadb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50195e6a-7b55-48ee-8760-39a29b082055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1391ea8b-1ae2-42d0-aa35-c774b302b326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e274dd8-8ffc-4dfc-9a4f-6e6c79b798e9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e8db60-aa63-4d0c-b533-7eb1529031d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb71e85-f7f5-4735-a999-34c98c096fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad972d46-010e-4ded-9e94-f17051e1be50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a355bc93-a70f-4eb2-82d8-8ab57894fae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27042246-c513-47c2-85a2-aec8f8d21ef3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4cc1b0-1666-4769-ab6c-b3f0caf3cdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40140e03-3a45-45e4-9363-b7d2e198549e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2730352b-7ef7-42d0-b213-7bb44c111722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3742a4-48ec-49f1-826f-f10c75fae1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0591c375-a8c8-405c-be29-fa659746eaab",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27430f39-79c9-465b-94ba-a935c50489aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fdf061-8d1e-470c-b82d-2c6ae37dfe7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7430d02d-302e-4a6d-91df-a2af518b4988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb93a710-87d7-4f64-a56c-9442039ad14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67c63ea-034d-41b7-a5b8-95e5d9d67179",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f5d51d-572c-47d8-85cc-8ebe493c2fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf91899-2000-44a5-b66d-da371cbe6b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2d0563-6776-4d86-a8b0-73db24694157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8da17ed-aeec-4cc0-a1b1-cf0246d40d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce7a6e7-c1fd-44a7-8cf6-506ff50ad399",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6d8ffd-f099-43e8-9de9-00e7b5e3341d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e52ae5c-cb73-4597-9bec-a715e947f147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045c3caa-9a93-4e89-88f3-94038ec84c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcf16e5-864d-4bba-bf25-53b1eab63b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e13f86f-1f47-480b-b599-db209f744b29",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc4f712-2440-4172-a771-42baa8b60eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140f5b9a-8813-4774-8e1e-e3a4bf64511c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c2bd36-2d14-475c-89ae-36a8e8bcc756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80341f3d-2a79-41f0-95a7-92696f6e27ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e197aa2e-1aed-4009-a8e4-26100a2eff81",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610ad8a9-4520-407e-8b60-518771256fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1058965a-b5a0-460f-b622-c7a21a499f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab70948-a76d-400c-bc4d-fc26bbacf112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c05f18-4e3d-4e71-9523-a240a34d551f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00123134-b64a-4d85-a3d5-914002507f22",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfba7cda-56fd-4a7b-ba57-34e82a9a4071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13d5649-80d4-4778-b5af-efe58881fa06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f9b11-a818-4ed4-8907-521c44e6020d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f199a24-9ff9-494f-a560-7f7213b1fef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fdc421-4960-473e-8c5e-02ebfd2c3e31",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabe06a3-d222-44da-93c8-9f0859106bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed344b70-e576-4bfc-8307-9290212c3b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7c308a-7d6d-4a89-8430-2b3b4b1f835b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0ae1d9-2a85-41e8-a71a-97cfd7f94b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca15099-f6ea-4a4c-a725-858a1e048db4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14df1fb6-579c-4cb7-81ef-e6904e37d138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481db276-c548-475e-88c6-155a7c2cacba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2fbd4-fefc-4b58-ad24-861b71eacf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bd1653-1db4-49e8-8a65-e4051bcf2024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d6d695-5cc1-4f26-ae5b-f87b584261a0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa43573-0608-4cf6-9fd4-9b46f03327ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4646500-b871-4312-b327-3fafc9223910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979c4448-c423-418c-ad03-6bd9ad40184c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2189a88b-4b8b-453c-91c8-d2d36994f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5066ad32-9051-49e8-abfe-e40b177efb3e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bd93e9-bc4f-409d-aa24-2f88d7088342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19de5b5a-5662-4d20-b2c5-69a345cf404b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd660c3-d233-43c2-b19b-06225bccc094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35824605-677c-4104-89c2-c49dda3ad1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadf9faf-ded3-401e-88f8-2c21874cdb45",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863c95f3-04d2-45a2-a567-68337cdec2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbfb29d-d72a-4859-8e6d-11b464337582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6152f3-fa99-4d63-a2c3-8d3f994d71a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119e5eb1-fa70-4b1c-97c1-3aa2de825d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd647b57-689b-496f-afc4-8c1d23d47a3c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60185dda-127c-44d6-b81a-678c32205638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b7800a-01e6-438f-9b03-377ccf6dc7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb87de0-f4f2-4d60-be1a-9f27ac61e60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c9cfb4-1f45-40f3-8491-0c5366a1cb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b1b42d-d8e0-46e7-972a-87f630e5853d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b13e465-fed7-4cbb-9f9c-d81d2ea944b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aebd524-f1eb-422a-840b-0b1b9e926185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3781155b-4278-4a8e-96f4-802349b61151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ade448b-0683-4fde-b486-4161c35ef94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9619d2d-c783-4acf-8d21-856722ac4a92",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03637f5d-8915-425a-8371-4d6abf882879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc49407b-f43d-4789-9fc8-aaa044183a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804d4c44-83aa-4149-8630-d54cee7f5e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018362d0-7a05-489a-bdde-0a70bd6c6ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca3c5d9-4c65-4fb0-baa9-1c2a6bfa1631",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9bc76c-bcf1-4e78-aa5b-5ecb93e637ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd89d875-a8d4-4c58-8881-0145d53c4d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e247ef-5cf8-4e02-9a5f-be2e5d10d93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1f2a28-963d-43ec-855d-bce523f71ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298408c9-ce65-4605-89a0-9ff3558fa125",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baf0423-8151-4779-8c02-109870ae970d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86898473-9c3c-427a-8cf7-51689e6412e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e66024b-b3ea-43f0-96ed-e9f9fc8deaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a0bc8e-4ee4-47e8-a256-6d2d548be7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28ef55b-60d2-4293-b4f9-ebb54bf6793c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c258f034-90be-4eea-a461-92471897d5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af60ea4-954b-4583-8304-fe69c12b9571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28bc776-b81f-4db4-b421-134a486922cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35af7b7-ef65-4374-823d-dc0bb0e76f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e1f02d-e530-455b-9c7a-1621ca11f6f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdb19f3-2bf6-458e-9b42-341a9c5c210d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175c2f30-5f76-4e08-93dd-3bbd1852f949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6a7221-ef04-4636-8ac5-ec114f43a015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b834a4e8-4515-4196-8156-f0ed097b4b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daba601d-c2ff-4e4c-82cf-d4aa71fb1fed",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4275db82-91e4-4a86-9d56-5df7035f8888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56bafa0d-cef4-40af-80ab-aacfc33bd123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175feaa2-c6b6-46cd-8a40-1355fe8b66e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c35515-1f6d-4e1a-b014-31c2aebbcef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bf4503-cc32-46d6-9b02-656347493fb8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceb4af1-fc95-4ecd-9483-ca0de05667cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52a76ac-3125-4c63-b0f1-ee86e48ac036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f98a57-01a4-4e38-8ee5-25dedbb9afb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c059b89-f863-4228-a50f-c302c5f70cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e8b59-0f1c-4818-ab83-bc60ba06524c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef15350-a96e-4ac2-aa1b-db679a231f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50034121-3b27-4f8b-b30a-2abf31c4f45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f227a9-28e9-4b1f-b24f-286438fd87ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c5eb1c-8df6-4169-8d53-8a787e0ce894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51afedd5-704a-48bd-9cf0-b8db0937d2f5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d7ace-4e8f-429e-9b4f-721f5554b986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d78820f-fc78-4212-b96b-2571df7e9d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a024ebd-3c70-4490-8bbc-d737425591a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8ad1f8-9979-4362-aaec-53af1c2a059e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e003e03-aaf3-4168-a6cd-a7f511756f5a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d145b07-48a6-4179-bf96-755610c893a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad3f990-6e85-4c76-808f-9391954646e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db1ce1a-d35c-4bbb-8deb-a3ceb9297670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cbbdb0-3f1e-41b6-82f6-4bd3040452c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb2dde1-08d4-4ce4-81a8-924acd570c05",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553463d-811a-4182-a51e-82f97b5050e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e38c1ef-8f5a-48eb-a158-2bfb00634f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d724fde-d4c3-433f-9331-5efa95b2330b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298c82a5-7e20-4a16-bc8e-3058157034e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b01addb-ddd7-4d0d-bce0-c977b176103b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f16f4f-5aa9-4292-89ef-12111bfba6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3ec156-6c3a-4950-bd6a-ad8c476d55a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f3c11-77f9-4a05-825d-85694d003a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38925607-dadb-4950-a781-1a6c49e1a256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66272a7-fb5d-4493-8df8-383ffa131b69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22509aeb-7670-44df-a38d-72004693abf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "126c00e7-7c28-4505-b300-23c6ecc0838c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35a83a8-0188-4d19-adae-c64f5c6da265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66764d91-2d04-4a1f-9025-f86b7d586476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ea22aa-3fc5-4b15-b199-a483cf0dcc91",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238fbb09-84ac-4405-8475-042be25cdae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fdbb17c-338c-4481-8802-1eda66ff02fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e11234-f81f-4c06-bccb-36417d2e4bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3852d586-cbdd-439f-bdc1-b181a9c908dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b3532a-72e4-4802-a637-c701b676175a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa2f1bb-826a-48fc-9c1e-62aca3438182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc35377-b59b-4417-9a11-f74cca899b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c05b038-590e-45aa-afea-25c22d848f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772d0ae5-74ac-42be-b325-ad0acd0b9dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d8b38b-4799-4e74-8112-8951eea7c003",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2405c34-f59c-4dcb-bbed-e17065602bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8de27f9-5bdb-4b08-b35c-efa3007c177a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f32de6-a9ff-49b8-a53b-cff216e48861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb6044b-fcb7-4f71-a01e-0536450fc263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011f3e3f-2c32-487f-88ab-aee7e498a6ea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84afe7a1-6102-4112-8396-7cfc8ca8a119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cede12-7f3b-44a6-8fed-716eec59b3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b9f117-737c-4f8b-955b-240cf2b8ca8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb8d8c3-ffc2-4aa3-974a-9676651860f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb34539e-bc6c-4602-b096-e501ff7571fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b79602e-46e5-4b7f-943d-97b32744b754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15887a38-86e4-4de3-82a1-7ba5d0e904a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fabc95-a465-4247-a464-4370fa18c056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162c9253-ede8-47d3-a6c2-85f548724961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e03ce64-43c3-4596-8af1-585050239499",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4960c32-62cb-4601-9964-1c677b9094fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b653df3-906f-4c8f-97ab-08b2799cdd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ea1a43-99cc-46d9-88e7-f023ab2f8ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7559dee5-bcf7-4cb5-90d5-10e112fc57e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47358429-a851-4ea1-a471-7c53a045bf3f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe16116-ba4c-43ec-9d1e-bdc1eb6d4f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2400e8c3-5744-4167-a3fb-2ca93571a5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c1e60f-2421-42b1-bad8-48293f59fa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883bea92-de9a-4049-9312-e1b7d26faf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5704541c-233a-48e9-8531-29abe1e0e6b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164bc2d4-ea18-45af-801f-b563a2d4ab36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4693e264-c9ce-4e2e-a97b-ea6b25d3d3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f42b124-67cb-4033-b07d-58651ae99a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec3c8ba-ea3e-42ce-996f-90db2b60d217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f78b62-f056-44dc-a0af-6864088f0c75",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52700ea8-7090-44c5-9d8e-f22ac263d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ab6acc-c6ec-43e3-9718-fb50b5ae937a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61bfff-977e-4ebc-8dd1-57f2daac4eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5943be-1079-4e44-882b-43a803ffe14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d29c24-ca76-4712-af33-e5a4e3c557d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246cca96-5178-46c0-8a00-11560034fabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a37de9b-3803-408e-b61d-edc24616ebe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5c892b-5544-4851-87da-fa78c034b4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8760bd80-862d-4c10-b83b-b53b1f7115c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03a5e8d-1808-40cd-aa6b-bcc80492cfdc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf363367-f333-41e2-a5a2-7371027e6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5fa223d-f212-4cab-a6c8-89dd297ef567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be66c44-2fb6-4874-8aff-1b8c5f3fc035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4df2ed-35a0-4365-a498-3999f58d079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73148152-6e4f-41c9-b2d8-9a53da5a78c2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47df8077-32f0-4ed3-8a9d-6b65731a488a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48fae36c-a214-4fb8-aa95-c028e4c99ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1508721-df38-42a3-9a7e-1c322f3a5bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2571c538-32cc-4b56-9c57-c72be39c00b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8620e199-3990-47c4-baf4-e2df07aa4846",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6eb13ca-c1e0-40ae-972f-71a9b1274f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e134a809-e7a8-42db-8509-9e3d49426359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dbbfcc-7e27-4b37-bbbb-23b6a21e1d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5b036f-381e-4c94-a619-3dfa4c527a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa8f150-1a7e-465e-9736-bc4b66c03799",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e382eac1-6e34-4d38-8832-d6bb87388824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8859e7d2-1d57-469c-9b09-ce20329e8093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d72e7a-fdd3-41d1-9dec-515976686e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2b9154-93dc-4c26-8163-3d296943d2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be91cb51-7cbe-4b27-9a37-0733a34d610d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf44a01-1b2f-4b41-8673-8a070dc2a90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b8b5fa-554c-4efc-8b74-fe99428575d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11366679-ac1f-474b-8086-94a6eb94be90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecbce19-1a7b-496a-8608-dea3d2b24513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df3d15d-01f1-4afd-bf20-40db7b138bb2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc4e5e3-1e47-4a64-93ef-a53470854ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1707ef7-edd7-4c3c-a02e-0125b0d16bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd971e9-4958-4703-b04d-09617a1950d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253e4734-19b6-4148-a1fd-8f85e67a7037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638eed42-ed55-40bb-8da4-72f2da1c1583",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7d348d-964f-4044-ac39-db3cccc648ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c294e452-67a7-4d43-b544-468b41686a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a12892f-ef3c-4bf7-a824-4b2cc6b2910b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5056be7e-8876-44c3-b6ef-fa7b9645b322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe02964-15c2-4f47-be07-d8929dcc0279",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cbeaa5-6a5f-4201-8142-e0874402c11f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8982f133-c01f-455e-8d5c-711a4aec40bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dacfbce-74b8-431f-a3d3-07e76c4f86f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ca6363-3af6-408e-bf44-55eb1a6ae947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0873280-56b3-4109-8b6c-fc2e64f429d3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674e7cc3-5bb7-4e60-9966-07a281056e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58aaa76f-731d-457e-bfd5-92fffb1f6fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235bce32-4766-400d-bfb7-492987aa23d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ada31c-2a34-49ba-ad76-a08575bfbb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d606404-b52d-468f-9f9a-d0ef689aa23a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bce4d3-ae6b-4100-9f43-ceb104c408af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1351673-41dc-4070-bf5f-711606697552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9da5d0-5cc7-4388-a053-effec3cd618d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7a8d89-b97a-43e3-bf53-2fa36a9cf094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c5edd-4dd0-4df6-bfe1-ee9e7bc36100",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d314934-fcd8-4010-98d9-7067a1344cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f00419-25f3-4bae-b495-36bdcd8256d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40677b5-038c-44c5-ada4-72d555b14e41",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390f709a-2a9d-4c72-86e3-2ca489320c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcac4a2-77a7-472d-8371-3cef3d4c0a7b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c106f2-e92c-4b06-ae6d-476ce0b1eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b835d964-3244-494a-97ea-90f9a412d406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7879e40-c069-4a22-a762-ab18184ab79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb471474-a689-4c1d-983b-05d43cba89a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c1d69f-8343-4dfb-8f85-5877cb51ed21",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23ced60-2b0a-4b67-a13b-36ddf6a6e60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd9a22d-4379-4d11-92e9-0e5f7bb3c72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2853079b-16df-42b8-b812-cb77d33964fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba7832c-9fca-4d55-90f2-e2371b6c5352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2babcb0-f1cb-41a3-a63c-b31d5e38abce",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ef5f82-d135-4fe1-9e9e-5980b7d23186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75dcef7-940b-42e8-a13c-9968a0c676e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8456ef7d-dbec-4eb0-97f5-c55cfd31f279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd76639c-06fd-4a08-8b83-2aa07f111802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6b85cd-2a6d-4fff-aba0-eaf08c2f660c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49260d9d-6190-4af5-b14b-1568b3d1d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ce6948-1e99-42c5-8e0f-7bbc5040272b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8748a2c3-5d90-485c-9dee-da679e59fed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28311956-1663-49ce-b644-4b724878fe60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a33943c-d31d-4df3-a91b-8073ca8ef5a0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644fce02-9e52-4076-b73a-78ac62c9ceac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a18fb15-2b8b-48f1-b892-eed450773878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed16fdb-1e60-4d35-a412-d21f2c6ae0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15f8f5c-fee8-4fac-b5e4-e34b755c5545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7b747f-2b7a-44af-b788-df7a3a9f1ba8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35480264-5a7f-43f5-a106-e6b7d38c8697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3718262-6b74-4d1a-8f07-ca875282f225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400bc3ca-2f3d-4f5c-86d4-9aca0f212bee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebb8431-3ba1-49d2-bcb8-895218510abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5aa2a2-b557-49ce-93b1-734c2b36d36e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a62193-37e0-45b4-8001-ad060aa7aab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be636d7-8122-4ce0-9473-f5da6b3596c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5c4300-6cb3-4e2f-9362-aebc9f6e76d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04b8c46-c25a-45ee-b6ab-cac2b9a05808"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd982d92-7e74-400c-8ea1-3d019f031408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "420410ed-e803-447f-a488-d9abe9d352c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8cd17aa-0873-450a-aef7-1933fe97f855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24b8ef71-cbff-40a2-bb85-368b52e493a7"
                    }
                  }
                ]
              },
              {
                "id": "a33f16b2-5987-473d-adf3-e95c0ecfd621",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cb5200d-8c64-43d9-9758-09c8a002754a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2496205-3640-4efe-9dc9-3cb7481446df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "777ea665-b00a-4e16-bed7-d263ad018e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00e7ffe-7a35-483d-9dea-8c18f4b300b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dae18a8-6980-4b99-9f52-e69ba1888095"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e6bab10-fb9a-4405-8335-23ff58b0c173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03b32fc8-ab57-4a40-9c31-d673d053af50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "355d5736-7e65-44d6-b44d-7cf113fe7f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1969de28-1d03-4cde-9152-130a0cab7972"
                    }
                  }
                ]
              },
              {
                "id": "efa3d468-ebfb-4ad4-ba1b-7987dc498c6e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd54d7b3-d768-4f7b-9bd0-3a7d47bd246d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102f4ce4-8a77-4922-b176-948b8e4d192f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9382564-3667-40e1-a613-d203f6e6633d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de8cbb5-ea37-4992-96b3-cf5df1c2ae6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93462563-1589-4345-b1e0-a9e55ca2e76e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10912e68-05a7-422d-b2c9-4e4531fffd3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b72c055-1673-429e-83a4-52891d7725a8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50c19e85-00a9-4022-ad43-cbbf8db923cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6802cbff-0c4d-4104-90bc-b978ce78d71e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "553280a1-f3f1-40fb-8030-ea1154931f33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d365b25-1001-49cc-9500-e5cf1dd7aaaf"
                    }
                  }
                ]
              },
              {
                "id": "db384620-0163-4511-80ce-36d3d23221c1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "953da643-ec10-4e71-a7ea-ea50587b70ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9c314b3e-d19e-498f-8042-3aba5934647f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "152d2c53-0934-4a89-b9e6-8ce9f5061c27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdfed991-da0f-41db-862c-4ddc359e273e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ff7920d-4e6c-4e47-a458-158cc946840d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "45192ee4-e9e8-41ef-99d5-8ddbbec3816e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec8b7683-f0b4-410c-9e1f-7f10d2419e7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b891352-3272-4566-b5f3-03ee46a3ce51"
            }
          }
        ]
      },
      {
        "id": "0d26ef71-f753-47ef-a461-9ac345e21e17",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6b716205-9bb5-4163-92c3-2a4fb84a8375",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c09430e-35a1-4639-8af7-681520ab4ee7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "383345bf-84b2-4d37-bb64-d91ddacc160f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96937388-8ebe-4ed0-b5d8-42bbc024966d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7ebd7d51-5fda-4ff2-bd2a-c6ed332c089f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97d0bf0-a683-4728-adf9-9de59c537963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5303ac88-ff3e-455b-b338-76b73b680303"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea947636-5b0d-4e3e-9759-11d90a1aff1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5aab7199-40b0-40de-8dd0-35e32b211f41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b524408e-d4b3-40bd-85ef-c634219d9458",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "080768e4-9afe-4c9f-824a-1e5e8bc7b120"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f75a771-eddc-44d3-b9b2-2a1baadcd29f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "12d5bfaa-fe9f-4432-9eb4-91eae5883a23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "213b9fe1-ae0e-4faf-ba6c-fffc25dcfe96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26520ff1-a0f7-40a8-942d-04e785d1a18b"
            }
          }
        ]
      },
      {
        "id": "40b05c37-059b-4a14-929f-a2244a0d6092",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eb7709d4-750e-470e-8d88-2ad9e6015bc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ef4fe06-0e73-4d6f-bd01-2132fe3cd5fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "650a7733-e575-45ab-acce-c4d7da00316c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff25c30-ba3d-416d-8bdc-04a845eeab34",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d371cf83-bf25-48c2-b057-b35b14e9c597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb96ef79-2692-44c4-b24c-590ce5d1c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4180cbd9-a289-495d-9ecf-cb4cf8a4bde3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84487855-afb6-4c16-94c2-a6b171bad84c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16a2cc1e-8d48-472c-9369-150c12109c7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ddfbe00-552d-4f34-99bc-3528d85f8fd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83dae103-6dda-4390-b270-ce293f3e3206"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "213bb5fa-ac30-4753-a24d-93a99c962774",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2fabaeca-7512-4b72-9f44-abc4d8968022"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85d8eaba-d3e2-48dd-8129-e72c6c78d113",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8093a677-baa9-40ab-a11f-0e531011435c"
            }
          }
        ]
      },
      {
        "id": "65a4fecb-3f3c-4e6c-8e92-2c43417aa155",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9e7e573e-1cf1-44aa-8f4d-e03aaf57950e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6265761-037f-4bb7-ab5a-762da3a9ba54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1df5d967-d4ad-4b94-bb05-1a97b30b5d56",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c80de27-3534-428f-b800-cd12e65ed5eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6124559-966a-4ed8-8e20-021c6e0933dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c329e69-cccf-41a3-965b-ba9b6f008a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b59bcaff-095c-4242-af0e-d62a7facf62b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7dc829c-289e-4c64-a7db-f711482fbeae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2697ff1-1c51-4048-be95-fd5102ab8bd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6931b1d-fdfd-497f-b1f0-309d25eabd5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18261572-35f9-4d7a-ab4f-80e87863e06a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c89a977-ea9e-40cc-8524-51c76871c251",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e24d1a3-7ce5-47be-90e1-80be4dd488fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92ddb92d-990e-4096-9edf-e589c5d4d832",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7611b98-815f-40d5-9287-00428c7275ba"
            }
          }
        ]
      },
      {
        "id": "2ce7c940-1a8a-4091-912b-9a9fd3031776",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d07d8b0-c05d-4830-bef8-9b774d1fa684",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a08008db-e503-4036-abd4-c1511bf5906d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8b6fd440-8c4d-403f-83e3-0017f0a4260f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f66427c1-f984-49bc-81a9-861254debfde",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61bf3bfc-f43e-40f2-ae15-4a8171257082",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.210317460317464,
      "responseMin": 2,
      "responseMax": 761,
      "responseSd": 49.83679129484444,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725842692888,
      "completed": 1725842702962
    },
    "executions": [
      {
        "id": "1c1284fc-0a9a-45ac-ace9-bee816aebd90",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c1404830-9302-4bd7-848a-1c640498d419",
          "httpRequestId": "f7dae9b0-4a7e-4e28-aa4a-0cc9ad6bb4fd"
        },
        "item": {
          "id": "1c1284fc-0a9a-45ac-ace9-bee816aebd90",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b73f2ca0-bfca-4341-af81-54afbe2cfdaa",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "b04321b2-5833-42ac-a23d-807b7de9aac6",
        "cursor": {
          "ref": "f74866f0-b8f5-428e-9bf9-7d1ce54386e1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b599bc8-c407-4948-9d49-b3ce6362e56f"
        },
        "item": {
          "id": "b04321b2-5833-42ac-a23d-807b7de9aac6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36a2b955-7c99-4fe1-843f-6835164ef6c0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "296f3f76-543c-4672-8529-66c18b306198",
        "cursor": {
          "ref": "4b95ba84-d678-4bc3-b354-1826b411823d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9e3fb60b-1041-47b6-b31b-7f8e1d8f80c6"
        },
        "item": {
          "id": "296f3f76-543c-4672-8529-66c18b306198",
          "name": "did_json"
        },
        "response": {
          "id": "c9dea28a-18e6-4ca0-98a6-94367d83bb2a",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e72f4-5f74-482d-be04-16d536bf8931",
        "cursor": {
          "ref": "5f9dec0e-dd71-4d3b-bb12-1a9803e37576",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6123250e-7518-4552-8942-228d52d126cf"
        },
        "item": {
          "id": "8c5e72f4-5f74-482d-be04-16d536bf8931",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c937654-7892-45a5-9b49-0e4acc0e48d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e72f4-5f74-482d-be04-16d536bf8931",
        "cursor": {
          "ref": "5f9dec0e-dd71-4d3b-bb12-1a9803e37576",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6123250e-7518-4552-8942-228d52d126cf"
        },
        "item": {
          "id": "8c5e72f4-5f74-482d-be04-16d536bf8931",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c937654-7892-45a5-9b49-0e4acc0e48d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25d290a-c14c-4ce5-814d-dfeb07c7fad1",
        "cursor": {
          "ref": "c91d932e-fa24-44a8-95ff-529cd2a17adf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f3042c40-d9a4-482c-b2a4-aab79baec3d0"
        },
        "item": {
          "id": "d25d290a-c14c-4ce5-814d-dfeb07c7fad1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2e609c62-3dfd-4bb5-a751-3d516dc6562d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56178689-614d-4edb-9b5a-12a25c9cf799",
        "cursor": {
          "ref": "cae6e4a8-e2e1-417f-8f47-5f575aa95010",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a4dec6d7-e22d-49ce-bc2c-5a9549cbadb8"
        },
        "item": {
          "id": "56178689-614d-4edb-9b5a-12a25c9cf799",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98cf2529-6f84-4c5f-996c-88bdc8b01aa8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636b8a75-2164-4eb1-bc18-76f153c6c052",
        "cursor": {
          "ref": "d5b91d3b-10e1-428b-8712-1a064d3e7e3e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "80b57e98-5d12-4485-a0e4-23a321324b85"
        },
        "item": {
          "id": "636b8a75-2164-4eb1-bc18-76f153c6c052",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "37382ab9-5b9e-4a6f-a309-44fe3522319d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097d4c1f-3de3-4dc5-a1d2-7f71bce9bf0a",
        "cursor": {
          "ref": "601a3bf3-cc9d-46ea-9da7-41f4615a59b3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "30b98f42-9c23-4982-a0b2-7040114d73c0"
        },
        "item": {
          "id": "097d4c1f-3de3-4dc5-a1d2-7f71bce9bf0a",
          "name": "identifiers"
        },
        "response": {
          "id": "11f1afee-17b2-4472-9815-ea53371da6a9",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3390f2-6ad6-4163-9150-d121789e3b95",
        "cursor": {
          "ref": "c0812b61-d7a9-4da6-a997-35d9a6716e1c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bc828763-4c7d-4b2d-a9b6-e16030953c76"
        },
        "item": {
          "id": "de3390f2-6ad6-4163-9150-d121789e3b95",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e3519f9-629f-4396-8315-9552fe501866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5bd81e-63e7-4498-bdcf-8a33bde15e2b",
        "cursor": {
          "ref": "e9a8d8c9-cacd-4042-97cc-44ba5d2a6430",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fcf73b4f-14ae-4ea8-836d-87a6e6963bce"
        },
        "item": {
          "id": "df5bd81e-63e7-4498-bdcf-8a33bde15e2b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7fb4cb27-6a02-4a5d-91a3-7c1337f0d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abaf7ed-77a6-41a5-960f-de6b1bbd80aa",
        "cursor": {
          "ref": "aaceac37-6813-4f71-89b8-1b68e896a2d9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dffc4c23-bf08-4df9-9fde-3fea0812e188"
        },
        "item": {
          "id": "6abaf7ed-77a6-41a5-960f-de6b1bbd80aa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e1a0be3d-f347-40f3-bf88-f2889d554294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d29a9-b258-484b-9c81-f16124d7e24e",
        "cursor": {
          "ref": "832d2ed5-04f3-4fcd-9468-ecc942c3a173",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "516375a4-1152-47f2-8861-67bec21c613a"
        },
        "item": {
          "id": "3a6d29a9-b258-484b-9c81-f16124d7e24e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "21a4e23d-8b19-4000-a04b-2543c955c153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422e4a9-e8ef-4133-83cc-e6951e2a979e",
        "cursor": {
          "ref": "ee74fff9-07a3-47b1-bc10-651b87b459c7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4246137e-2f10-43ff-ae7e-7a6b914aa6aa"
        },
        "item": {
          "id": "1422e4a9-e8ef-4133-83cc-e6951e2a979e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9026b467-bb9c-4d68-a584-b6bd378d9649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7fde8d-c00a-488b-9954-13c7f7e81cfd",
        "cursor": {
          "ref": "f14f6137-13c5-4aa4-b5f9-1867aedc502e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cd6e6baa-1125-4614-b369-3a5a8e467997"
        },
        "item": {
          "id": "4c7fde8d-c00a-488b-9954-13c7f7e81cfd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fd58a865-ef35-4e82-b48f-bb1ed9dd30b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6656c61-f827-4af6-8d30-3985102c1611",
        "cursor": {
          "ref": "8255c105-f5de-49aa-9dcc-bee140ffdf8b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "94a19d00-5179-4fad-a798-256a0fca4961"
        },
        "item": {
          "id": "f6656c61-f827-4af6-8d30-3985102c1611",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e7ac7771-cf53-43f6-aa37-c62db26a0694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca575b-4907-499e-8820-59c24dce46fd",
        "cursor": {
          "ref": "ddacc1ab-24c7-4e5d-b1f3-6a4b7c4d222e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "35d885d0-9c34-4cd6-a718-39e5a6814581"
        },
        "item": {
          "id": "cfca575b-4907-499e-8820-59c24dce46fd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c6c41fd5-a5b2-4dc8-8083-2fe7a39ca2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e8b10c-8300-4d85-ada3-d32cf3ef6782",
        "cursor": {
          "ref": "0c69dde9-53de-40c1-92c9-a4e78b306e31",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2cff8c4f-ca17-4f7c-b6bb-1ec7ea1345f9"
        },
        "item": {
          "id": "d0e8b10c-8300-4d85-ada3-d32cf3ef6782",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dac4151e-6490-4a3c-ab0b-0d7f7d31bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a711143-3d38-4736-859a-11586debc47e",
        "cursor": {
          "ref": "fbbea883-45e5-4410-866f-acd9c087a425",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "27bb8124-8616-4490-b9b6-bef991fb922c"
        },
        "item": {
          "id": "6a711143-3d38-4736-859a-11586debc47e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a4b31dfa-c351-4480-962a-e366de549264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89a47be-a5fb-454b-a298-517b69044340",
        "cursor": {
          "ref": "55f2e635-b131-4d12-9485-1cbf79140af3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "24f084f4-e5b8-41b8-ab1f-07991e3991ef"
        },
        "item": {
          "id": "a89a47be-a5fb-454b-a298-517b69044340",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9eaaf9b9-dd69-40a9-976a-ca64f146c6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae1d3d7-e52c-450c-b673-e0a580ab5d33",
        "cursor": {
          "ref": "21018db8-3be7-4931-bc8d-81a65f87b4df",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2db3147d-59ad-4297-b894-43ec20012610"
        },
        "item": {
          "id": "fae1d3d7-e52c-450c-b673-e0a580ab5d33",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "46e80fb3-22cd-4717-8eb0-83ab3753bcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df64a55-89f8-419a-a7f6-6ea3abd582e1",
        "cursor": {
          "ref": "9ff13f6e-d645-4ae1-ada4-f1381de88ed2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb987ff3-4521-47ac-a17d-a4f85ddf4512"
        },
        "item": {
          "id": "5df64a55-89f8-419a-a7f6-6ea3abd582e1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "60f4d946-bcd9-4b25-87db-725b40b4200e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da596547-46b2-4b95-b920-187ca386ab20",
        "cursor": {
          "ref": "0dce5211-f89b-4b20-8824-4e7553a6f420",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7de45727-c302-4895-9546-5c68b9059e6f"
        },
        "item": {
          "id": "da596547-46b2-4b95-b920-187ca386ab20",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "70c8f72c-f2b9-46af-8822-813643cb68e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc623b1-2616-4cdf-8189-a099785d07d9",
        "cursor": {
          "ref": "ba70c0ef-db2f-4a31-bcbd-932322a805b2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "29fe0257-50de-4621-8f7e-ec6b2e164854"
        },
        "item": {
          "id": "0cc623b1-2616-4cdf-8189-a099785d07d9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e5550cb3-46a0-4a1b-8a15-0aad3d5366e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4002d234-89fd-4f55-9c59-ceaa3289da6a",
        "cursor": {
          "ref": "1917d430-6184-4aad-89ed-da484322c978",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "108c20d6-5857-4099-aa42-9111ac3cb096"
        },
        "item": {
          "id": "4002d234-89fd-4f55-9c59-ceaa3289da6a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bd0759b8-4497-4e7d-af8b-9a8e950669e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30fbc30-b5fe-4494-87e8-ecd07c436486",
        "cursor": {
          "ref": "9ddcd78b-ece8-4132-9373-e418bee8f34c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b6a069e4-9d90-4146-a7a1-6e9ca73f7217"
        },
        "item": {
          "id": "a30fbc30-b5fe-4494-87e8-ecd07c436486",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4273e208-f1d0-49e1-bc2d-7b35f9a1e0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b52280-4e77-41d4-8cd5-acbd75d6fef3",
        "cursor": {
          "ref": "5360f229-5573-4db2-81cf-1fa92b40c75f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a4bc5df-5f0b-4ec0-be42-c58aa14051f8"
        },
        "item": {
          "id": "35b52280-4e77-41d4-8cd5-acbd75d6fef3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1492bd4-ae32-4fc8-945f-0bebff1e4eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e33888b-2c59-40d4-9eb0-3745b1df62e1",
        "cursor": {
          "ref": "aa19b090-3990-425e-89ce-330166c5d1f1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8b23cb0d-5871-4015-985b-f8a40e3a2534"
        },
        "item": {
          "id": "0e33888b-2c59-40d4-9eb0-3745b1df62e1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "700575d6-2990-4c88-815c-f5e1b6ae38da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fdfd37-8b05-4309-aa2d-9d2bf308e42c",
        "cursor": {
          "ref": "e0eb6699-d8c4-416f-8ed3-d1d6868c7683",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "639e17e9-1709-4ea0-865a-fd774e1854ca"
        },
        "item": {
          "id": "98fdfd37-8b05-4309-aa2d-9d2bf308e42c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "12738b2b-e37a-4ff6-ab04-d9567e6cda13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268ea79b-919b-48af-907a-9e638de451d1",
        "cursor": {
          "ref": "9d88e4a6-8c04-43d2-ba4d-c572063a1de3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d3ead923-34dd-4060-854f-e8e9eadb1fb6"
        },
        "item": {
          "id": "268ea79b-919b-48af-907a-9e638de451d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "416bee1f-4edc-4e36-97a7-48f966949fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751308f8-36a8-4e49-9dfc-2832e682a75b",
        "cursor": {
          "ref": "896356ea-2b10-4d42-a25f-dbe608aa808a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "08fad0e6-4563-4453-b54d-b16c1aa07569"
        },
        "item": {
          "id": "751308f8-36a8-4e49-9dfc-2832e682a75b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a97db53-2e1b-44a1-bf44-62da92de768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591c4ebb-196c-45bc-b7fe-954918e55c17",
        "cursor": {
          "ref": "41a34e3e-22c6-49ae-a7d9-46b6ed31e3a9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b0a9d533-c7e9-4d2a-be51-a3e1e2b43fa4"
        },
        "item": {
          "id": "591c4ebb-196c-45bc-b7fe-954918e55c17",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c18ea72e-ef48-4252-b239-814f70a9b534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0736a0-c80b-4d24-8fa8-cd676300bb5d",
        "cursor": {
          "ref": "23e21471-6c65-4d61-bf2b-e6bb591d66d9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dc0e0f45-4a13-4699-96d9-4b1d4aee9e6f"
        },
        "item": {
          "id": "0b0736a0-c80b-4d24-8fa8-cd676300bb5d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "adf54a1c-9db8-4238-bb1b-93f882cdb05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b24939-e38a-40f5-9991-451c0ef3e160",
        "cursor": {
          "ref": "dc7a7540-63cb-4ae6-b4fb-5560911fe182",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3c7d4e35-26c9-41d4-aec0-7b220a8e030a"
        },
        "item": {
          "id": "83b24939-e38a-40f5-9991-451c0ef3e160",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0e0c370d-cf84-43a3-8763-7961aee5bc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ebd85d-2d7e-44ac-98c1-5a1390e44040",
        "cursor": {
          "ref": "e0d31981-b66e-41a4-a201-436e1be651d5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "76e66b4e-3f60-4f3e-b28a-4e40f0aece79"
        },
        "item": {
          "id": "48ebd85d-2d7e-44ac-98c1-5a1390e44040",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1499de02-0272-4183-9f50-a421d44d2b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992ff550-99fe-4f81-849d-172e2473a782",
        "cursor": {
          "ref": "7b34a21a-d81d-4cec-9a91-b985603426e2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e6c02b4b-ae39-4de7-ab52-9e2f7d88567e"
        },
        "item": {
          "id": "992ff550-99fe-4f81-849d-172e2473a782",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "96514541-f02c-4c10-924f-c2a2e87059a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af0b7b9-e5d7-4c44-b37a-61febc47e4c1",
        "cursor": {
          "ref": "32a8b4a4-77a1-4050-821d-658c7cf58e1a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ad6f0f69-8fc4-4c59-8ad4-b0bdf018e933"
        },
        "item": {
          "id": "9af0b7b9-e5d7-4c44-b37a-61febc47e4c1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28c95e34-d4ce-44e3-99c4-dc642a73b894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772a3938-54ed-4ff7-81b3-221952ec9e19",
        "cursor": {
          "ref": "c693ae07-742b-4ae2-a2b3-6f6bcfda4d8c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "901e7b25-57ea-429f-a9f1-3aa5cb054f33"
        },
        "item": {
          "id": "772a3938-54ed-4ff7-81b3-221952ec9e19",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4f81f4fc-cea3-4633-b3e8-7069073c6033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946f67ef-33e7-4d93-a900-268a763aa555",
        "cursor": {
          "ref": "2102345c-e607-4fc5-b9bf-4c92c9613eb5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "11d29cbb-a1ff-46da-9e0b-d235e033790a"
        },
        "item": {
          "id": "946f67ef-33e7-4d93-a900-268a763aa555",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0262109e-d11c-434b-9805-6c643b2d16ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088eb7a6-643a-48c6-8b04-7dfc14def08f",
        "cursor": {
          "ref": "eb2dc80a-5757-451e-8fe2-6b5b0c2c67ce",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ba3b0194-8f5c-4ab1-9011-dfbe0bffa65e"
        },
        "item": {
          "id": "088eb7a6-643a-48c6-8b04-7dfc14def08f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "af4493f1-bd66-4abe-9984-975be9cba487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d286c6ae-353b-441a-b1a1-45fa19f4282f",
        "cursor": {
          "ref": "915f63db-d475-4c77-9b3f-cb2609787092",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3ea278d8-c0ae-48de-b6a5-b9029e6b690b"
        },
        "item": {
          "id": "d286c6ae-353b-441a-b1a1-45fa19f4282f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "be72395b-3575-4131-bb45-93c3bd8296e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40a1961-0a8a-47b2-a639-0d7752314cf1",
        "cursor": {
          "ref": "30382dda-9b3c-494d-802c-b8ee9c48b800",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "81781c97-591e-497c-9bb4-866c3da05fde"
        },
        "item": {
          "id": "b40a1961-0a8a-47b2-a639-0d7752314cf1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "db3a7ec2-ff40-4cc3-acfe-d1139d9eaac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ed27c6-e596-4805-b372-4e5790a9fe51",
        "cursor": {
          "ref": "1156fcea-f392-45a9-b100-8d12beca92ef",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3467dfb3-d5e2-486e-9e7c-0e86dc3fba40"
        },
        "item": {
          "id": "a7ed27c6-e596-4805-b372-4e5790a9fe51",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "857e1bf0-e916-4974-bbb3-6c34319fcba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606002eb-3b3c-44bf-b853-eb40d0c63a40",
        "cursor": {
          "ref": "8c2aa802-c8ef-4cc4-9254-f40302de0616",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d94d1778-1416-4f41-84ed-52785db5cfaa"
        },
        "item": {
          "id": "606002eb-3b3c-44bf-b853-eb40d0c63a40",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1834622e-d7fb-4b83-9102-5f2ff7e37a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1331f2-1d32-428d-a174-f4974b57ad81",
        "cursor": {
          "ref": "b667492c-63dd-4d9e-8741-8061b4c633b8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ed0f183-2300-4704-97cb-3e16b85e7a18"
        },
        "item": {
          "id": "fe1331f2-1d32-428d-a174-f4974b57ad81",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d2d94016-f55b-4136-b482-f3851db77205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0707ed3a-2094-4976-9145-15a5bed027e7",
        "cursor": {
          "ref": "ea1a7420-dae7-4db0-973d-1abe0ed0afe3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f7d2259c-af33-429d-9bb3-b8293b8c2e05"
        },
        "item": {
          "id": "0707ed3a-2094-4976-9145-15a5bed027e7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b135da34-bb3b-4e57-a8ca-d41e9af84df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64e6d74-6baa-4eb0-a09a-20f2f8042634",
        "cursor": {
          "ref": "a8bff6fd-7e2e-4896-b351-7f646a0fb09a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d3fade9f-afda-4cdf-b31e-a4031078f11f"
        },
        "item": {
          "id": "e64e6d74-6baa-4eb0-a09a-20f2f8042634",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5cd8d14f-b863-425c-8335-4a378e946ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add975dd-329f-4384-a595-c835cd50605b",
        "cursor": {
          "ref": "24ac9a05-d32a-4ed3-a5d9-432455c5d2a7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd95501a-74db-4045-9ba9-3a2935cd1db0"
        },
        "item": {
          "id": "add975dd-329f-4384-a595-c835cd50605b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "486338f6-4d4d-428c-b255-4dc92b404a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b2269c-f4fd-455e-aa0f-b5fd9c0c8018",
        "cursor": {
          "ref": "2cfd0d51-2469-4dbd-93a4-2df83a6a1d7e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c869a10e-96fd-4102-8563-b94c35052296"
        },
        "item": {
          "id": "72b2269c-f4fd-455e-aa0f-b5fd9c0c8018",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61ab7c55-70d8-4730-aa0b-9172b1d9773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4629d338-608d-4c87-8530-968efb973d2f",
        "cursor": {
          "ref": "bdf5a1db-0ea7-44fe-ba8a-0572cff39f90",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "16c4c45a-e3e4-4d97-89b9-eba5f20b8b5c"
        },
        "item": {
          "id": "4629d338-608d-4c87-8530-968efb973d2f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "03bf555a-40f4-4ff8-88c3-ab9035701f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d5b8bd-bb23-45e1-a0b5-afd069f2d7a0",
        "cursor": {
          "ref": "22bb7853-57bd-4b73-8be0-2e5b7711778e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "013aef4c-d024-483a-bce2-b4c863695733"
        },
        "item": {
          "id": "f0d5b8bd-bb23-45e1-a0b5-afd069f2d7a0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c8829252-ae76-4f87-81ae-1e70c3181c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a143c-5f7e-4eba-85ec-42d52586eb67",
        "cursor": {
          "ref": "b85205db-0ef8-4584-9720-b67c9d920892",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2b830af0-97ba-4741-8e2d-06ad130c498e"
        },
        "item": {
          "id": "e29a143c-5f7e-4eba-85ec-42d52586eb67",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6596e61c-6815-4817-9669-9f7e52f0af83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a6c09a-5854-4d07-8b46-076d9913cff0",
        "cursor": {
          "ref": "bb35a2de-c154-4376-883c-3a2453556f2f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3a3234fc-2108-48b3-a80f-2b52d2a9e537"
        },
        "item": {
          "id": "c3a6c09a-5854-4d07-8b46-076d9913cff0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6de68e7f-1193-4e45-b0d4-36597e8b91d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244264e2-1fff-4409-b15a-f01288e5250c",
        "cursor": {
          "ref": "fbd62225-6085-4846-a9c1-42aedb8c9df6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f06a28ba-9345-4d5e-9f72-959c4abbc59b"
        },
        "item": {
          "id": "244264e2-1fff-4409-b15a-f01288e5250c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "792adbe4-804c-49f6-b89a-94943faae3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764401dc-4576-4d0a-beec-055043392e5e",
        "cursor": {
          "ref": "11239b9a-3227-489f-952e-a1aa871b9b92",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "13c6d93e-aa1d-4937-aab9-a0233dd37186"
        },
        "item": {
          "id": "764401dc-4576-4d0a-beec-055043392e5e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "994a2432-6103-464c-8fd8-327f1946e0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf327dc-0993-4d9e-9053-14eccd2be05f",
        "cursor": {
          "ref": "bc19ff41-848e-4958-a7c2-87e919b8f9aa",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "40d99cbc-a426-4b9f-9a07-86dbf665f0d4"
        },
        "item": {
          "id": "7cf327dc-0993-4d9e-9053-14eccd2be05f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "93fe45a3-4dca-4e16-8cbc-57c7bc5ff8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98c72e1-c7b6-4824-b5ee-dcdf0da07803",
        "cursor": {
          "ref": "dee557fb-0f15-412b-b9e0-f6dc042790a6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "da5de77c-9824-4982-b069-97b09364c214"
        },
        "item": {
          "id": "a98c72e1-c7b6-4824-b5ee-dcdf0da07803",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bbf3a377-4f3a-405b-a340-60210634b835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab67ad75-87d2-47a3-9352-04d9169c0c7a",
        "cursor": {
          "ref": "ef2ef3fa-e58e-4899-8bab-2070a0f7ead0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8f10dea8-edbb-4fd9-b040-267154bb19bf"
        },
        "item": {
          "id": "ab67ad75-87d2-47a3-9352-04d9169c0c7a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07630796-6520-406e-9854-3b689bd7cc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c650ba37-1961-4793-870a-ef5d52a31ec0",
        "cursor": {
          "ref": "03ab3fca-aca9-4816-88e3-1836e9fb6445",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1f7837c2-81f6-485d-a5fe-8eabce653df7"
        },
        "item": {
          "id": "c650ba37-1961-4793-870a-ef5d52a31ec0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "01b8c6db-3355-4228-bdde-a535a6df7a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df79ba0-095a-4ca8-8a28-49472f4fc430",
        "cursor": {
          "ref": "f3cc9098-dae1-476a-93e6-fe6788f71831",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce9b9502-35d9-443d-9274-8c5a013007bc"
        },
        "item": {
          "id": "4df79ba0-095a-4ca8-8a28-49472f4fc430",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b4f39eaa-e2fa-4723-b093-2827e1574365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d24df0-5c80-4505-b1b7-edfc35b12409",
        "cursor": {
          "ref": "0462505c-a559-479d-aa8c-0b2bf6fb662d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "05b04465-d72b-403f-964b-fb307fcf0608"
        },
        "item": {
          "id": "c3d24df0-5c80-4505-b1b7-edfc35b12409",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3a137a93-4a52-4dac-bd8e-26e2be3ab39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b4b957-5b43-4f0b-b915-2daad18ab3ed",
        "cursor": {
          "ref": "e7fff7cd-7e39-43b6-b2d1-b1129fe2848d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "789b6b7e-edaa-4a03-9f5c-e2db2afb3c77"
        },
        "item": {
          "id": "06b4b957-5b43-4f0b-b915-2daad18ab3ed",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb3c8232-d404-4fdb-8c25-b5b8b579d3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef77c1-501f-4237-bd93-f563358e345a",
        "cursor": {
          "ref": "11619aa7-12dc-4993-a047-cb098fe715b3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f9b79d67-d744-4346-87bc-88be84943fb6"
        },
        "item": {
          "id": "54ef77c1-501f-4237-bd93-f563358e345a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac0fa90f-f2d3-467d-a975-3234592d59ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba39a4c3-5a87-4082-8ee1-bf2f01c5a3c9",
        "cursor": {
          "ref": "c3a5d762-b264-435c-ae58-da2b77d5b690",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b5618c79-d43e-463f-90a6-f89378329138"
        },
        "item": {
          "id": "ba39a4c3-5a87-4082-8ee1-bf2f01c5a3c9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a89c6fd0-5f7d-4bcb-90f1-9b4576c4fe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cab1da6-cb47-418f-a7dc-1d37f326d82b",
        "cursor": {
          "ref": "9af92f4e-1389-47a1-85f8-f965649f51db",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5758b2dd-d94a-43bb-9a55-788cc2b1e95c"
        },
        "item": {
          "id": "0cab1da6-cb47-418f-a7dc-1d37f326d82b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c2228e64-0665-4e21-8e1f-d0f6aeb4823f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd073495-6527-45fa-93ac-b869c8ee73fb",
        "cursor": {
          "ref": "6f7d0a5b-12af-4b31-9ce7-48601de9ddc8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "445ad7ce-5bce-41f0-b8d1-676540ef24ad"
        },
        "item": {
          "id": "cd073495-6527-45fa-93ac-b869c8ee73fb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "99a28b2c-3076-4e5c-98ee-cdc58b985e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c43e86-c01c-4460-9504-b4f5f4daa551",
        "cursor": {
          "ref": "d1ab5f39-8111-48e0-b01c-80002de110b0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cc43ac91-3c7f-48cc-9092-9fb935f57804"
        },
        "item": {
          "id": "a9c43e86-c01c-4460-9504-b4f5f4daa551",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3af60c9c-138f-419e-96f1-26bc92020b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2e2fb8-e4f4-4015-8aaf-7296bf4b4a97",
        "cursor": {
          "ref": "2dd0f62e-bbf2-466f-a80a-2c2c50d1d360",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3464220f-3cb5-481a-b136-46ec6ead12e5"
        },
        "item": {
          "id": "fe2e2fb8-e4f4-4015-8aaf-7296bf4b4a97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0e1b9b35-d0e7-4354-85bd-fe946a0b39d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b948cf55-0ed4-4125-a5dc-21c2eeb100f1",
        "cursor": {
          "ref": "ea565a12-bff0-4fce-b46c-3674d448ac44",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dff3ac9d-a198-4cb9-ab32-95e48f7c851c"
        },
        "item": {
          "id": "b948cf55-0ed4-4125-a5dc-21c2eeb100f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d64a09c7-0567-4608-a07d-b3114dd70fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f762bb-1c36-4121-9ae8-8c02237f163a",
        "cursor": {
          "ref": "74d799b6-5606-482f-a78d-f0a75852e756",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "347d1585-fee1-4072-ab03-f0d0abb0cd2f"
        },
        "item": {
          "id": "08f762bb-1c36-4121-9ae8-8c02237f163a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "891a19d2-38c3-4707-9cb2-e262ef360b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756506db-0341-42a8-8e53-f2a284c1885e",
        "cursor": {
          "ref": "8e012c47-3f2e-4942-81e6-e73c38a8c23e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "63a88516-606a-46b9-842e-7450287c0c4a"
        },
        "item": {
          "id": "756506db-0341-42a8-8e53-f2a284c1885e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "459a9f74-c459-4db2-9421-53b661a5f244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd05b6e-abbd-477e-aae4-359c1d0631aa",
        "cursor": {
          "ref": "079deece-6f95-4a5c-9d77-23f39d8cc724",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c92af574-75e9-4097-b06d-14474913a72d"
        },
        "item": {
          "id": "7cd05b6e-abbd-477e-aae4-359c1d0631aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f7237e43-672f-404e-86a8-3d153155d6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb68cea4-0aa4-42eb-95f8-077f9ac15857",
        "cursor": {
          "ref": "4f0b1e91-07bc-48bf-bba6-459416cc1077",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a02a876a-b6ff-45f5-b993-e9ee46bd3d99"
        },
        "item": {
          "id": "cb68cea4-0aa4-42eb-95f8-077f9ac15857",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8e0e308a-35c8-4967-ba33-a7251fdd52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d7069f-c68a-4eff-96fb-b70d65ce5891",
        "cursor": {
          "ref": "4cfc1047-02be-4eeb-9e7c-1d5afa3a035d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "16e0049c-779f-40eb-9909-c8365a96223f"
        },
        "item": {
          "id": "94d7069f-c68a-4eff-96fb-b70d65ce5891",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aed9593c-3cb3-442c-9941-90c7339288b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baece4f6-d0b0-4804-8e46-db2186b07892",
        "cursor": {
          "ref": "022b5e51-78ad-4cc5-b8d0-00e8fba96317",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "65b5c415-d805-404f-8fe8-fbdef6949125"
        },
        "item": {
          "id": "baece4f6-d0b0-4804-8e46-db2186b07892",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cb8ecd8d-23f9-4a30-bcdf-29f84e466a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cffc706-d2f5-4019-b524-0988844ff010",
        "cursor": {
          "ref": "78fd2a3e-0907-4edf-b061-4bb773199cd0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca092dc9-b3a9-4488-bd7b-eb3ab1dda881"
        },
        "item": {
          "id": "2cffc706-d2f5-4019-b524-0988844ff010",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cce48ee2-bd63-4422-8b72-2d45850ee687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eb4852-e722-4aca-8a3c-8d1afe8d42b1",
        "cursor": {
          "ref": "e37536ac-ddc7-474a-bd60-deca0dee0eca",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "48a71410-8616-4805-8cac-66b819612e16"
        },
        "item": {
          "id": "c5eb4852-e722-4aca-8a3c-8d1afe8d42b1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7b4ad689-bfbe-4b5d-b280-c0875ed8c091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f7e90c-4662-4b2c-a263-2bc6e235d9a0",
        "cursor": {
          "ref": "ba75906e-471f-4642-a46a-860fd2a04ca0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1a522bce-f829-40ae-81a2-f489f94bbe28"
        },
        "item": {
          "id": "44f7e90c-4662-4b2c-a263-2bc6e235d9a0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "25c9ea9c-2672-4b5f-ac1c-b60ff10722cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec55a72-0160-4332-b9ef-c8089c7615ac",
        "cursor": {
          "ref": "f326eb7a-da65-4f16-b068-20154f14ba7a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a3af83ba-c664-4c16-9f97-03df360bc1db"
        },
        "item": {
          "id": "eec55a72-0160-4332-b9ef-c8089c7615ac",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d6169d67-8afc-4e45-810a-243cd40b62d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9958158e-f71c-4e0b-bfad-4d9411c53bb8",
        "cursor": {
          "ref": "14928aca-2f8e-47df-8dfd-861be806b805",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0e6e45e3-f43c-44e0-9992-db4225d791e3"
        },
        "item": {
          "id": "9958158e-f71c-4e0b-bfad-4d9411c53bb8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d0c0659c-98e8-4ac7-ab50-7047441fdd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc216d6-9ec7-4813-9d41-cee4591cbd9f",
        "cursor": {
          "ref": "348e97d6-2117-42bd-9e6b-e2e9d4121310",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5605e397-0f0f-4a30-b26a-e1236ac38e14"
        },
        "item": {
          "id": "afc216d6-9ec7-4813-9d41-cee4591cbd9f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c4be018b-0401-4f94-bfe8-f927c64b25e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914276c-b1d2-42e6-b085-bbac8464b2ca",
        "cursor": {
          "ref": "de598ca8-0923-48aa-a9c3-722d30726441",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0b4c52ab-7b6f-4569-a178-5ce3af6b2c2c"
        },
        "item": {
          "id": "7914276c-b1d2-42e6-b085-bbac8464b2ca",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "904c5fae-56ad-4cee-9b08-8bc0a622a158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07facbbc-2a81-4413-a06a-3243419e2f9f",
        "cursor": {
          "ref": "232d5b76-30e9-46aa-bcb3-83513befc727",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c69dddb5-e1bf-43bc-9cbf-901e96837ac1"
        },
        "item": {
          "id": "07facbbc-2a81-4413-a06a-3243419e2f9f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e47e321a-5562-4068-97b1-162df08d24c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed8854f-339f-4342-9381-617e544b81c8",
        "cursor": {
          "ref": "7b4d827a-0b91-4032-9a33-63da326ee060",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2d10c2d8-3150-435d-a57c-45608e92324e"
        },
        "item": {
          "id": "0ed8854f-339f-4342-9381-617e544b81c8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6dc80613-e6b1-4000-bdf1-6046ea2b532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd4cca5-e706-4946-ba7b-8398ddba7a87",
        "cursor": {
          "ref": "0d694444-507d-4529-adb3-05433d907cbc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bb7c10fd-9821-4d37-bd8d-39d0e4728dfa"
        },
        "item": {
          "id": "9bd4cca5-e706-4946-ba7b-8398ddba7a87",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a8d00d14-19ae-48f8-8b5c-4a5d2a89ba4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064f33cf-933c-4e39-92a6-6699443c04b7",
        "cursor": {
          "ref": "54848bf5-dd48-4810-8fd2-f94d02dabf18",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ec5a7bc2-c537-4ffc-9ad4-7262cddb2ff5"
        },
        "item": {
          "id": "064f33cf-933c-4e39-92a6-6699443c04b7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "45a3d3ab-171b-480c-b1b4-992f3bd617fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef93fae4-97d8-4c71-9512-1d6d8de16ffd",
        "cursor": {
          "ref": "615b3563-b291-46f7-9ebf-f8536152505e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ee095e28-864f-4f69-9e05-4a56753b5c0f"
        },
        "item": {
          "id": "ef93fae4-97d8-4c71-9512-1d6d8de16ffd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2fa68d13-08e2-4fd2-a397-498509a25fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc36e83-c267-4992-994c-bd6c5123ca75",
        "cursor": {
          "ref": "05eea86b-5fff-44d6-b689-064037b24553",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f50acf7-f516-42c0-847c-3c790b813a84"
        },
        "item": {
          "id": "bdc36e83-c267-4992-994c-bd6c5123ca75",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dd3b7be6-d684-42a5-9650-a41f15ed928b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a6bb52-45ad-4418-a256-ed6c025ca084",
        "cursor": {
          "ref": "1cc22022-e7f5-4dbd-b263-eb0c52b7893a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "352a3258-3ad1-4a42-88ac-b26107073167"
        },
        "item": {
          "id": "a7a6bb52-45ad-4418-a256-ed6c025ca084",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "373d95d3-c61b-458f-b657-b7820b3776dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6500dc26-6ddb-4cda-a144-845d0aed25dd",
        "cursor": {
          "ref": "2cbd5ccf-7266-4cd5-beb5-f3c7dab6dc7e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "096188f3-3dce-4670-8ee7-7f9228cef70e"
        },
        "item": {
          "id": "6500dc26-6ddb-4cda-a144-845d0aed25dd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8e98b2c-ae6c-430c-9a41-f118b276c896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067a250-0eaa-4e66-96d8-7f81295c2ee5",
        "cursor": {
          "ref": "95b53adf-3c11-4a32-8dfc-54e199c08214",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f16bf8c8-ec8a-4edd-bf8e-79a57f680962"
        },
        "item": {
          "id": "1067a250-0eaa-4e66-96d8-7f81295c2ee5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7eac01cd-67bf-463c-bd8e-4dd90313a838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edabb548-0fd2-4753-b2ec-2d399d051461",
        "cursor": {
          "ref": "b28ffa52-2ebb-4d76-9ce8-d0f93eba489c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "19c9f951-8c44-4e2b-a5f5-8fc8b945f565"
        },
        "item": {
          "id": "edabb548-0fd2-4753-b2ec-2d399d051461",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e6f22a23-411d-4a78-a6e2-874cf582d416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d23e8c0-3b1c-48ca-a5f2-3a1129c2f025",
        "cursor": {
          "ref": "78ef7ba5-8061-4f3e-b3e2-18dede12152d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f23e8564-1f02-44ed-85c5-121fe6c7bd4b"
        },
        "item": {
          "id": "6d23e8c0-3b1c-48ca-a5f2-3a1129c2f025",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "400d69b7-9052-44ba-bdf9-0cbb8e8575d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba2c6b-0728-4434-a4fa-ca66d02296cb",
        "cursor": {
          "ref": "a7645fc8-f7e1-460c-a32c-9897f9593bc8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f85cec96-e264-489f-9c21-4241e9d1c23e"
        },
        "item": {
          "id": "4aba2c6b-0728-4434-a4fa-ca66d02296cb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3c09418a-fe98-46a3-815d-90ac17d1f331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118bda9e-2074-469c-bc9f-42f5e52faf22",
        "cursor": {
          "ref": "112cd910-046d-4f1a-badd-0ee4ae106248",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8d595e98-8737-4b84-bf3a-d391a42b984d"
        },
        "item": {
          "id": "118bda9e-2074-469c-bc9f-42f5e52faf22",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb659ea0-c72b-4c75-ad6e-7189e6f8c75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58897ccc-173b-45f3-b477-aca3e933b166",
        "cursor": {
          "ref": "1220cd4d-cbdc-4e19-b5a9-25c96df9f407",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "397685c6-e150-434e-8624-9ecc98bdce20"
        },
        "item": {
          "id": "58897ccc-173b-45f3-b477-aca3e933b166",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eedee60b-0789-4055-a2ee-e33c699f1428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c06e27-f2c8-4bc0-b7ed-1c40ace5c0b2",
        "cursor": {
          "ref": "0c6ba4f1-a7c7-4205-9cd8-00ccb20054a7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ee897cc0-be9a-4539-a98f-af235de5ac5b"
        },
        "item": {
          "id": "43c06e27-f2c8-4bc0-b7ed-1c40ace5c0b2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1dd7c1e8-4ad0-4493-b068-b48f5113b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afadeca-4a43-43a9-84ab-edea471b8d16",
        "cursor": {
          "ref": "707eaa6b-accd-4a61-89ee-99d184b806c4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "087dd230-05f1-468d-8418-6eea7ada1d02"
        },
        "item": {
          "id": "4afadeca-4a43-43a9-84ab-edea471b8d16",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "23e18fdf-663a-43d4-bb24-e01c5bec514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19817a61-b344-4343-8e1c-9e8fd2b341fa",
        "cursor": {
          "ref": "cc41d64d-cd9c-4a84-94ab-5c31ae8b119e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e9203d1e-8032-4d41-80d4-a359fc8f5a55"
        },
        "item": {
          "id": "19817a61-b344-4343-8e1c-9e8fd2b341fa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a6166516-77dc-439e-81ec-18a80c783db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca6c0c4-de37-4699-a71f-18c7fa1e11c7",
        "cursor": {
          "ref": "f59f05b3-2f80-466f-a491-9a29db6ac32b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8b743c3d-cf90-4b2e-9cb2-a5b0c458067f"
        },
        "item": {
          "id": "cca6c0c4-de37-4699-a71f-18c7fa1e11c7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "37c98155-ddc3-48b5-b68e-e001309f93e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a013f00b-1f7e-45ad-ad32-a69bf5bb5454",
        "cursor": {
          "ref": "8e23fdc3-4cc9-4543-949c-bb482113fd8f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "17da3e0f-28db-4b6b-8acc-6167e29fd2e7"
        },
        "item": {
          "id": "a013f00b-1f7e-45ad-ad32-a69bf5bb5454",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b84795df-efcc-4d05-89cf-cd11a700d578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6a8b16-01a4-44ea-870f-115e417918df",
        "cursor": {
          "ref": "a55a1648-db89-45ee-9939-f6bf6a9f5239",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "36643109-8b0b-4c0a-ad80-2281ffde7cb9"
        },
        "item": {
          "id": "3a6a8b16-01a4-44ea-870f-115e417918df",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c57e8865-33e4-493f-86c0-c76b514717ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7f8faf-9452-42f2-892a-c4ae4e5328de",
        "cursor": {
          "ref": "d9ee0201-eac4-4cfc-aedf-620650b68fb8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "75b97dd9-e9bb-4f8f-bc37-398a426f9e65"
        },
        "item": {
          "id": "6a7f8faf-9452-42f2-892a-c4ae4e5328de",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "58622688-531d-4890-b1a4-2c68a071f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0f2debf3-0e54-4aa9-8edf-91904407ee43",
        "cursor": {
          "ref": "66f288c8-8ffb-4b8d-9ad2-3f233363cdcf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "28dae636-6bab-4503-b410-382802b18a49"
        },
        "item": {
          "id": "0f2debf3-0e54-4aa9-8edf-91904407ee43",
          "name": "credentials_issue"
        },
        "response": {
          "id": "da40e111-101f-4b2c-8452-3f5e5d406869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bd2c5356-68e7-40f9-94b8-75e8bca9d8f1",
        "cursor": {
          "ref": "fc38f5c6-5822-4eac-a7b2-0b1d4b90e1cb",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0413918c-aa4e-442e-a102-511276eb372d"
        },
        "item": {
          "id": "bd2c5356-68e7-40f9-94b8-75e8bca9d8f1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f23a8e11-9bbd-43d7-8011-62525f93907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8adb0bd8-fdd7-49dc-b6de-56836e19f0cd",
        "cursor": {
          "ref": "cd178d34-1584-4d9f-91ca-700fd9ca84bd",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b4faf278-c141-4d39-be5e-f7ae0780f41e"
        },
        "item": {
          "id": "8adb0bd8-fdd7-49dc-b6de-56836e19f0cd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b2c78542-a4ac-4ea0-998e-aedb383fff3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "56c45bf4-773e-4433-8c53-19b5f0591e26",
        "cursor": {
          "ref": "bb7673e0-9f9c-426a-9aa7-a79ae113e708",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "91f4a90b-1254-46fa-85f0-659f054ca11d"
        },
        "item": {
          "id": "56c45bf4-773e-4433-8c53-19b5f0591e26",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9aa7a699-7b9b-40f3-a243-12d260cf90dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "13eb4621-70eb-4c7a-a1f1-0658e0b058a8",
        "cursor": {
          "ref": "81eadccc-d4e2-44da-8935-ea179671a4f8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bada30e4-b513-4194-9699-4c9086fe5221"
        },
        "item": {
          "id": "13eb4621-70eb-4c7a-a1f1-0658e0b058a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b11b4f9d-8ba0-45be-b0c7-4d56e2994dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4d09567b-5936-461f-bf71-506292689852",
        "cursor": {
          "ref": "e313cceb-964b-4a53-9f02-6607f33db1c3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b3eb6fa-854a-4ecd-b921-343f903d1838"
        },
        "item": {
          "id": "4d09567b-5936-461f-bf71-506292689852",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "58883847-923c-45ac-b718-4b7416f72c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "13ef4510-9018-4329-b89b-4ba8ea8c13b9",
        "cursor": {
          "ref": "8fb46ecf-8021-4700-9e59-585821e2f89a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "adbf589e-1a76-4775-91a8-836259d1312c"
        },
        "item": {
          "id": "13ef4510-9018-4329-b89b-4ba8ea8c13b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "58dfefba-297e-44bf-92b5-9794e0e7c3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f42db4f-2c9e-4852-93b3-8d99bfcf9c3d",
        "cursor": {
          "ref": "699d0f53-3b1e-4080-9150-a06cb86b750c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c316361e-24a3-47a1-b591-8d01cee0ed81"
        },
        "item": {
          "id": "2f42db4f-2c9e-4852-93b3-8d99bfcf9c3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "afd0c1d9-a9ee-4d94-9def-abd5e868dff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d46364-6537-4aac-a238-69f13299cde6",
        "cursor": {
          "ref": "d393e7bc-b91a-42ca-9270-0a49a0f9792d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26ad6b0b-84ed-4b15-bc27-ec3351cffa11"
        },
        "item": {
          "id": "95d46364-6537-4aac-a238-69f13299cde6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ccee81e4-c334-4257-8a2e-2e9af7bec871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbae65e-da33-480a-9d2e-4915572b10ed",
        "cursor": {
          "ref": "db16018f-0b0a-4708-8512-2f9b2110d5fe",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "76d79e1b-9d5b-45f1-81d5-e195970d3a40"
        },
        "item": {
          "id": "8fbae65e-da33-480a-9d2e-4915572b10ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1e8ac3b-f8fe-4824-9423-c0359fb60646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543807ad-a352-4095-872f-29d80bffa139",
        "cursor": {
          "ref": "3216119e-984a-4ec8-a710-bfb4479e952e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e3cdb3bc-331f-4507-862a-aa18ab9e0acb"
        },
        "item": {
          "id": "543807ad-a352-4095-872f-29d80bffa139",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a0e93684-3790-4ad3-808e-a31606e4dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b32ef91-93b7-4aae-a9dd-b2e32c34ca54",
        "cursor": {
          "ref": "ad568e2f-b882-4fd0-804a-7046ab9b3a02",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "695b1f57-d894-4e5a-962c-40f3754f1dbc"
        },
        "item": {
          "id": "4b32ef91-93b7-4aae-a9dd-b2e32c34ca54",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8e59cb28-0d01-4736-85f7-71cc8c9c43d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d386eff7-681a-4c00-9ddc-1ba02626b9f1",
        "cursor": {
          "ref": "bfd91e68-4b2c-42cc-9466-4f484d60f74c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "05281042-f23f-47a2-a3dc-25ba85dae15f"
        },
        "item": {
          "id": "d386eff7-681a-4c00-9ddc-1ba02626b9f1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06b55c35-6403-4fd4-9fab-054c638c6bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab591ec8-81a5-4246-bea8-d3bcf2a97238",
        "cursor": {
          "ref": "2e8a260a-5c8f-472b-be25-41ffcee12ef3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ad5c5e9a-31a6-4628-8f86-1989d56cbc96"
        },
        "item": {
          "id": "ab591ec8-81a5-4246-bea8-d3bcf2a97238",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "690061c7-c973-426a-80b8-6057497fb5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e609d8-becd-44fa-98ec-64650d3307a8",
        "cursor": {
          "ref": "e78319fc-88b4-4604-a928-9ee9f3df99b7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b257cb77-8347-4512-bd71-16d30c3b1450"
        },
        "item": {
          "id": "e8e609d8-becd-44fa-98ec-64650d3307a8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2302a8e1-52fb-4b42-b53d-71ebf0849058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b57f095-732e-4b43-b2b2-4f821262fe2c",
        "cursor": {
          "ref": "471eb6c9-3172-4df9-9ea1-52d4397a65b9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "158225d4-4a94-47a9-9bec-289d8b4d2099"
        },
        "item": {
          "id": "6b57f095-732e-4b43-b2b2-4f821262fe2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5eac350b-bb39-411c-a27c-55845cc8c09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbfa2e9-828a-4a6a-a1be-7c694de2d21c",
        "cursor": {
          "ref": "e84911c9-e96d-4e33-ae3d-e9843be7272f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8a24caa9-a83b-441f-bef2-9f6568e4d0b5"
        },
        "item": {
          "id": "9cbfa2e9-828a-4a6a-a1be-7c694de2d21c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8b76d76c-b8ec-40fd-bc01-adacf481f9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c85e6d-c786-4e22-9101-6053016cf2f3",
        "cursor": {
          "ref": "905bfb80-ffed-4348-bf81-026801ce937a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fa2baf3b-3daf-47b4-966b-1a8b4da1846a"
        },
        "item": {
          "id": "d9c85e6d-c786-4e22-9101-6053016cf2f3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "14aac213-4844-4c82-8d15-8849020808c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c634784-1d16-4aeb-8e75-896925c06113",
        "cursor": {
          "ref": "5139f295-6647-4259-ba4e-528c251339f8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce1201ca-d3b9-4171-8703-38498237697d"
        },
        "item": {
          "id": "2c634784-1d16-4aeb-8e75-896925c06113",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10b325d5-8254-4998-b950-1b2bd88f818b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48481d1-aeb0-49ae-99e1-1920827b443e",
        "cursor": {
          "ref": "cdedcaab-a805-40f4-b67c-ac616431adca",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e8fc657c-5472-4055-8fa2-e539d14b289c"
        },
        "item": {
          "id": "c48481d1-aeb0-49ae-99e1-1920827b443e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5b194b4d-6897-4229-92c7-94da618751ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9b3052-c3a0-4e73-a00e-e654fb0f5b66",
        "cursor": {
          "ref": "f8426c18-5869-4c9b-a615-60a158f786c0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b1f14502-95c3-4752-aac1-f589fcb91cfa"
        },
        "item": {
          "id": "df9b3052-c3a0-4e73-a00e-e654fb0f5b66",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a6a418c0-017c-439e-a030-3f03b30ec01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ef6ff3-8c3e-4819-8633-1df7e06b6f2d",
        "cursor": {
          "ref": "50d2b618-c5aa-4eae-9a4d-c732a9e2ec97",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ef1844f7-d30b-4599-abcc-182b69d057a2"
        },
        "item": {
          "id": "b7ef6ff3-8c3e-4819-8633-1df7e06b6f2d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "77a1bcde-4615-4251-aae1-d5c54d4c5d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8398c397-2242-44f3-82f1-bae74113e1c3",
        "cursor": {
          "ref": "913ebd18-9193-43e5-95a0-04e090a04947",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "73ef9e4f-afc7-4ea3-a327-a73afe67d843"
        },
        "item": {
          "id": "8398c397-2242-44f3-82f1-bae74113e1c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "617b1754-afae-4657-bada-fe0dbbc44416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed744408-09cd-4814-95f3-8ac2657c33a7",
        "cursor": {
          "ref": "b8f9d343-e6dd-4127-b98e-6c60adba0620",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "887279a6-1cb2-421c-95ed-784083eec5f7"
        },
        "item": {
          "id": "ed744408-09cd-4814-95f3-8ac2657c33a7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bcda3c1a-f439-44c9-bf3a-8d6f0884d613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5755188-53b0-49e5-90cc-4d6d9c2d6311",
        "cursor": {
          "ref": "52378768-205e-4709-b6af-5180d185718a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d5a63df-37aa-4d1d-a1c9-779884ba8383"
        },
        "item": {
          "id": "a5755188-53b0-49e5-90cc-4d6d9c2d6311",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2943b280-831d-4161-8dc1-44de803c3be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1305deb4-55b3-40cb-a28f-8fd720a7e8a7",
        "cursor": {
          "ref": "4dfc00a4-8de4-4108-9987-482dbb91ccd8",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a9e0b238-8eac-4a3a-af47-bfaf7dea1cb2"
        },
        "item": {
          "id": "1305deb4-55b3-40cb-a28f-8fd720a7e8a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e9c86532-952a-4753-bbb7-6f45aa7ee848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60506cc6-9780-4542-9470-51d2dd2556d6",
        "cursor": {
          "ref": "f3dc7274-eebb-4048-8ff4-517eae6de7ad",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5bf7e5bd-fa6d-460a-8b70-5517df40d610"
        },
        "item": {
          "id": "60506cc6-9780-4542-9470-51d2dd2556d6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e519ee9-f987-4ad9-bab2-8cb8c4d20a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c551c8-c3e8-40c8-ab92-c03ffd9dba29",
        "cursor": {
          "ref": "9f5019b9-bd2e-4d33-8f77-20734ea1247c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7fdfa83c-6135-4d7d-9675-27ded33c07da"
        },
        "item": {
          "id": "85c551c8-c3e8-40c8-ab92-c03ffd9dba29",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8454664f-1e4a-42b4-b4a9-a4b4eda727b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45f4e2-9ea6-46c6-b39b-90e145b8c136",
        "cursor": {
          "ref": "330f1f7c-16a1-4ceb-85c5-a606d1089d20",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "555492bc-0fb1-4f2b-9e14-0bc7e4549bcc"
        },
        "item": {
          "id": "ba45f4e2-9ea6-46c6-b39b-90e145b8c136",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "88642ca7-dc39-4e6d-8e3f-0e839192bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86492266-7979-4a64-98b3-bdcdd63dbd05",
        "cursor": {
          "ref": "aa4bf1de-d614-4f9a-88ed-80d2a3881f4c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9046e2c1-8d24-45a0-a231-8dc732dfecfc"
        },
        "item": {
          "id": "86492266-7979-4a64-98b3-bdcdd63dbd05",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a677ea57-f188-4413-b7f0-3b714a632f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcfcc45-8985-4e4f-a622-3e976d7102cd",
        "cursor": {
          "ref": "09960e1d-46ca-4831-8d33-5714147d02f2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "527f0730-6426-4897-8776-40ada04b5f29"
        },
        "item": {
          "id": "9bcfcc45-8985-4e4f-a622-3e976d7102cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eb0ace91-0dda-47a0-8247-2075d51eac25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2e4dd7-7fef-4dca-b1aa-d9e45807455c",
        "cursor": {
          "ref": "ae239e21-9c11-4863-986e-fca93c386b5c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1d50c945-3a59-43b6-b413-fc383f66322d"
        },
        "item": {
          "id": "3f2e4dd7-7fef-4dca-b1aa-d9e45807455c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "94615ae3-9929-41ed-ba5e-dec80f137f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fcc240-a26e-4f25-a70f-8f9220ef52b2",
        "cursor": {
          "ref": "7d7da87f-401a-4d28-b41e-42bf3e24ee37",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cdb7d722-2289-467f-8a51-3d1f7f5fd0fb"
        },
        "item": {
          "id": "27fcc240-a26e-4f25-a70f-8f9220ef52b2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7390f254-483a-4472-93ec-eb00b93439b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a658b90-f98f-4995-85fd-b6c2cc707a19",
        "cursor": {
          "ref": "91e4dfaf-dba6-4541-991c-c9ca43bb09a3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "747e1aa7-73b2-488e-b6c6-83430c9d3032"
        },
        "item": {
          "id": "5a658b90-f98f-4995-85fd-b6c2cc707a19",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6bb86366-e2e3-4238-95bf-37c0efc60a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1198e2-5044-4633-8408-ef7c61961831",
        "cursor": {
          "ref": "f0b5d850-9b36-4675-8cd6-f5790a7ff8e4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f3c5bae-1a7b-4688-93ec-eca671a21248"
        },
        "item": {
          "id": "6d1198e2-5044-4633-8408-ef7c61961831",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1b9f6f09-4da7-4083-ac63-60585148d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e182b-07eb-40fa-83b6-e4845d764453",
        "cursor": {
          "ref": "e6adc565-5b86-48cd-aec3-ac565c6e6132",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1bc223ec-4a11-42d8-805e-a3c14f9ac241"
        },
        "item": {
          "id": "299e182b-07eb-40fa-83b6-e4845d764453",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8743a0e5-2095-47db-80c9-656b2d160ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9012e7fe-d175-48e4-b04d-0012d231187a",
        "cursor": {
          "ref": "6b58f1bc-4dfd-4b47-bbe1-fc0d1f490090",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4702b226-9421-427a-b7f0-5b19e08d02d6"
        },
        "item": {
          "id": "9012e7fe-d175-48e4-b04d-0012d231187a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b65f611c-a6c6-4d34-a4ac-fab6a87eb8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b583f43c-dab5-48de-b342-8512bd6dc101",
        "cursor": {
          "ref": "edaa6eb7-565e-43dd-a7c5-53d05bb7437b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "011636b4-e425-4306-8300-3eb795fbdcef"
        },
        "item": {
          "id": "b583f43c-dab5-48de-b342-8512bd6dc101",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "588cfcf2-a7e3-4df7-aaba-e65c9c41285e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed93f25-1b1e-4254-89a3-2b6f4770081f",
        "cursor": {
          "ref": "9784e29d-7142-45a4-87b1-dee5098148a2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "42bebfeb-269c-4269-8eaf-ddcb9ce21cfd"
        },
        "item": {
          "id": "9ed93f25-1b1e-4254-89a3-2b6f4770081f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f16542e7-c24b-43e9-a2e3-96276ad2b3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed2c98b-aebd-4c51-9d43-8c395a297e12",
        "cursor": {
          "ref": "10c908d6-8531-4429-8968-8ee5afde4055",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b9e56b39-3f9f-4143-a0c2-0ff08be34df0"
        },
        "item": {
          "id": "eed2c98b-aebd-4c51-9d43-8c395a297e12",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "004b11d9-feec-406b-bcdc-bacf5a8e4cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43d1250-a796-4d68-b1f1-2c176966bee2",
        "cursor": {
          "ref": "ee7ceec3-9d78-4ee7-8598-e0cd2736fa15",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "11418d86-ba48-450b-a328-56812561cef0"
        },
        "item": {
          "id": "f43d1250-a796-4d68-b1f1-2c176966bee2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d5aef746-da8f-4fdd-a3ec-223106222aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2cc7ba-21ae-422d-9c2a-f840897c01ba",
        "cursor": {
          "ref": "e17a69a8-bcd9-48e2-a214-a9dce6790929",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "17149434-3e0e-457d-89e9-4f1af8a563b0"
        },
        "item": {
          "id": "6a2cc7ba-21ae-422d-9c2a-f840897c01ba",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b8d8803-b1d0-410d-8bfd-b67caeb43f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ccf522-2144-4386-8fed-e6f4c3df08e0",
        "cursor": {
          "ref": "c6504b89-3747-4a13-9fea-84eb3c50fbbc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8b72b080-5839-4b86-b2bd-5127a9cf5274"
        },
        "item": {
          "id": "36ccf522-2144-4386-8fed-e6f4c3df08e0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2569c7ee-daec-464e-9bd3-1913f55bd79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bce867b-318f-4e98-b43c-b830742fbc44",
        "cursor": {
          "ref": "60bc38d5-a555-4f3e-b25f-e2584b856e8c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "797c653c-7d88-44bf-b99b-bba119433816"
        },
        "item": {
          "id": "1bce867b-318f-4e98-b43c-b830742fbc44",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6dec85a-e738-49ba-92ac-840bac4c31fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9060654a-1693-4f17-bc47-4648ae96580a",
        "cursor": {
          "ref": "9c8c8c1e-f8e3-4367-8985-467a3f455c89",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0c520b74-1da6-4472-affe-dfdd9ab1e86f"
        },
        "item": {
          "id": "9060654a-1693-4f17-bc47-4648ae96580a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "571c5497-c248-49a9-93b5-7a0638adb310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51320f8-7cdc-472c-ac11-6db526904b82",
        "cursor": {
          "ref": "8af69865-9e9b-415b-a4f3-7de8bbc7c1dd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "86e4b402-d30e-4f8c-9219-cfcb82ec8abc"
        },
        "item": {
          "id": "b51320f8-7cdc-472c-ac11-6db526904b82",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b298946e-b6bb-429a-ab8a-331ef7b0cd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a15121-08e6-432f-8599-ef70ced03975",
        "cursor": {
          "ref": "6f958445-1223-4e4b-b202-fb57ae9f7bfc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d1e19954-20d2-433c-b8df-31d503cf4aa5"
        },
        "item": {
          "id": "a9a15121-08e6-432f-8599-ef70ced03975",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1bd3316e-f79c-45ef-a179-4afcf44807c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36be9da1-2f8c-4698-af76-f7f351cca19c",
        "cursor": {
          "ref": "1160c56f-ebcf-4e77-a8f9-f4266e2f21ba",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8807319b-b4c4-496e-a17b-b3529e429dbb"
        },
        "item": {
          "id": "36be9da1-2f8c-4698-af76-f7f351cca19c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3611fee3-683c-4a6f-bd49-c321a0a62f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ed900e-93a6-483a-82da-58ed0a96b692",
        "cursor": {
          "ref": "a4908fe0-ad5e-4d79-b493-0bc9aad02f9d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ad424f65-22ff-4c66-a28f-42d6defb2100"
        },
        "item": {
          "id": "40ed900e-93a6-483a-82da-58ed0a96b692",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "be3c8b4d-c106-4575-9e40-ec277d10d5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b75210-067a-4611-a62b-037a054630dd",
        "cursor": {
          "ref": "eeac4f87-98f6-4572-b8eb-c87826bd341b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d63b2f83-cba0-4a3b-bb9a-c2cffbe29164"
        },
        "item": {
          "id": "48b75210-067a-4611-a62b-037a054630dd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "42c2ed73-974b-4a98-afb9-c6358f1df8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8066b9-9515-4b18-8e34-7810e4e97513",
        "cursor": {
          "ref": "e4296910-9632-409c-9009-de8ec0a8039b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "93a90967-f9c4-4b34-8d60-17467968f2d3"
        },
        "item": {
          "id": "8f8066b9-9515-4b18-8e34-7810e4e97513",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5db477a8-9a0d-4dd6-be24-dd1b3f296e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d118b0-dc47-438e-9580-1e2008df6859",
        "cursor": {
          "ref": "341c73ac-2c47-4344-80d8-f4ffeda211de",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6c5648dd-c7ca-4379-966e-394f0f7787ae"
        },
        "item": {
          "id": "a2d118b0-dc47-438e-9580-1e2008df6859",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "94175737-45cd-449d-b689-be8d4d436a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5877898-4919-4fc2-b369-5fbbcfb533bd",
        "cursor": {
          "ref": "d6ad72e0-195d-4122-b4ab-622cce1d303d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4327e085-2cda-4d0f-8aa8-3d4e153240b7"
        },
        "item": {
          "id": "b5877898-4919-4fc2-b369-5fbbcfb533bd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "63e8beff-9859-4eff-8b90-0910d1fa42bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54517f0-a795-4251-8f67-12849dbcd367",
        "cursor": {
          "ref": "c84fce2b-c54c-4dcf-8ef9-36fe98cd1d3f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3eae0b50-b69b-421a-a85f-f01c83998e03"
        },
        "item": {
          "id": "d54517f0-a795-4251-8f67-12849dbcd367",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4894277e-d267-47ef-a481-2e0f661c37d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502141f8-2f40-4f1b-b0f5-b66ea5c390bf",
        "cursor": {
          "ref": "85cd8065-d582-43fa-83b7-77c4c9de810e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "123b9ceb-e557-4d6b-8de5-36848c15a284"
        },
        "item": {
          "id": "502141f8-2f40-4f1b-b0f5-b66ea5c390bf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6a0083fb-60f5-4e93-bc9f-8e9021894598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c170572e-d81b-416b-b74b-8ddfe39f469a",
        "cursor": {
          "ref": "3315597c-0672-4b50-9646-6b05e5f25a00",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "09322acc-9720-4dc0-9d8d-6e7fbd1f6037"
        },
        "item": {
          "id": "c170572e-d81b-416b-b74b-8ddfe39f469a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a32a2f38-1fc2-4c23-991e-43f118aff5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6035507e-28cb-4dc8-abf2-d05d4dc7d039",
        "cursor": {
          "ref": "e1d6b557-6464-4b28-85e8-58f624d9f3c0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e27e151-a8e6-45e8-a22a-e0ea9a7671bd"
        },
        "item": {
          "id": "6035507e-28cb-4dc8-abf2-d05d4dc7d039",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9b744135-b46b-4ab3-8cef-2317bed00f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d626616-88a3-4259-9486-c8121ca0b960",
        "cursor": {
          "ref": "f0a6d7ef-d0e7-4568-8271-c343feca6402",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b92d234-0912-4b08-9ff0-7ad5e6ac5e7c"
        },
        "item": {
          "id": "7d626616-88a3-4259-9486-c8121ca0b960",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "176f6361-a206-4099-96ae-4aafb8b6722a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a052937-748a-4aac-8f92-3a9cdbb0686a",
        "cursor": {
          "ref": "6e24e219-d8fe-4cb9-b44c-3bdb3c7d2056",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b2d468b8-d099-424e-8942-8ef5802023da"
        },
        "item": {
          "id": "3a052937-748a-4aac-8f92-3a9cdbb0686a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "52beb25d-433a-480f-9251-0999fe667119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901b3355-7945-45f2-8928-a6e5b7924746",
        "cursor": {
          "ref": "64fba08e-5506-4b33-abd2-1ab7cb108745",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21d47c0a-d197-40a0-8167-f0775c99e0c4"
        },
        "item": {
          "id": "901b3355-7945-45f2-8928-a6e5b7924746",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "67328d72-4b04-4845-81fa-bb2a8632d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d08ec-352e-4ac4-a83a-a4e0ffeae079",
        "cursor": {
          "ref": "bdaa5752-00d9-41b2-a586-36241b4b97e7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "333427e1-7aea-4724-a24f-b168ff776398"
        },
        "item": {
          "id": "747d08ec-352e-4ac4-a83a-a4e0ffeae079",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5dcde4e9-abff-4687-a864-80f2ab113a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e8860d-66a7-43d0-83e5-303e694e8888",
        "cursor": {
          "ref": "3c29e13b-f05d-4c54-b230-8130ad704306",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "94a3be9b-d441-49f6-bb97-2ce24bfc09f5"
        },
        "item": {
          "id": "c7e8860d-66a7-43d0-83e5-303e694e8888",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8c96fda9-43d4-429c-910f-f5fd54fc0f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1191f1-69b1-4e0c-9b23-c5af9ac7039f",
        "cursor": {
          "ref": "f326f4ed-72d1-4ff5-9c3a-fe46db4d263d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c7e83989-b326-4b1f-85e9-b5c0f7cf6781"
        },
        "item": {
          "id": "eb1191f1-69b1-4e0c-9b23-c5af9ac7039f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "51f6e9cc-6526-444a-b48c-faaab03767f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d7be60-ed75-4133-a622-f65102ad2ea5",
        "cursor": {
          "ref": "4c1c54f3-d1ce-4200-85a0-2fee5840dfc3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1a264fc0-7179-4553-8fe6-929d732e9088"
        },
        "item": {
          "id": "f4d7be60-ed75-4133-a622-f65102ad2ea5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dc2c3e91-a55c-4b9f-a533-e41b5f6482f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d2ea1e-ecd4-472c-bae1-228a8bb530fc",
        "cursor": {
          "ref": "8e320891-2152-489f-a2c0-b4fb6f532d19",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f94e1c06-b561-4679-8686-3155d32944b7"
        },
        "item": {
          "id": "82d2ea1e-ecd4-472c-bae1-228a8bb530fc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6cb4dd93-6e47-40a3-9952-5d5f96d135e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f1e0da-fd21-4551-a281-dce7af4420c5",
        "cursor": {
          "ref": "056e57d2-710d-4f3e-9d59-c47d0a5d7110",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7250ca03-0f7f-44ce-8607-a2b3811a8623"
        },
        "item": {
          "id": "05f1e0da-fd21-4551-a281-dce7af4420c5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99ec68fc-b243-4590-a86e-d5ca619f8c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc558e6-10b9-434a-ad3e-7784843813cb",
        "cursor": {
          "ref": "4cc67613-577e-4f3b-98ff-9a96e6fdda73",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1ac7555f-44b7-42b9-8e1b-56956eaf9e5c"
        },
        "item": {
          "id": "ccc558e6-10b9-434a-ad3e-7784843813cb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a3a9b70d-9135-419e-a27c-1af4dcd9b8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e562cb1-9715-42e4-96aa-9d97738dd5ea",
        "cursor": {
          "ref": "52ecbfbb-44d5-4b88-997b-f5186b9e7631",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b8822b7-66fe-413d-8b60-c64b06920531"
        },
        "item": {
          "id": "0e562cb1-9715-42e4-96aa-9d97738dd5ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2056c897-8623-499b-b05d-68a2fe5c56ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6a5518-659c-40ee-922c-70923881ea1c",
        "cursor": {
          "ref": "b44bc45e-9387-4fa3-bd7a-acd2f4245988",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4da3f80f-379e-4d69-b702-1365ea2a552b"
        },
        "item": {
          "id": "6c6a5518-659c-40ee-922c-70923881ea1c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fa7bf0ae-515b-434e-bb21-ff8afd2092ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6523f8f8-3da1-487c-b6e5-ace94831cd1f",
        "cursor": {
          "ref": "9e5c219a-a3b3-40f9-b65a-6eb65d82a6a6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "637aa4e9-c01a-4f10-b676-dfb371263cca"
        },
        "item": {
          "id": "6523f8f8-3da1-487c-b6e5-ace94831cd1f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9c5c5e9d-d16d-45b7-9490-0fe04127d05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eda0aab-533d-43ec-96a0-9d4a17eecd7f",
        "cursor": {
          "ref": "45723c00-964b-4dda-ac65-9087a70ec4ac",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "30e29dbf-bed9-48b1-bdae-26931bd83e63"
        },
        "item": {
          "id": "8eda0aab-533d-43ec-96a0-9d4a17eecd7f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "958b3c73-94b5-4328-8fec-6d84c294bd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf9f91c-5c68-4b0b-80d4-293a1b30e392",
        "cursor": {
          "ref": "498cf16d-13a3-4a27-9a51-9843c1c225ef",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "737b4b6b-e08e-4512-a38b-b18fa8c2db61"
        },
        "item": {
          "id": "ccf9f91c-5c68-4b0b-80d4-293a1b30e392",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "458bcd68-4267-4e90-9167-6d9ebed650ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6930a7c-0bd4-4bd2-a45d-bc902db8f884",
        "cursor": {
          "ref": "13c7d6d4-c003-4df5-8e63-248440333cb4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b6e645f0-4cdf-4db8-8fac-14df40efd911"
        },
        "item": {
          "id": "d6930a7c-0bd4-4bd2-a45d-bc902db8f884",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4005513e-8d4d-4812-882c-7592a3087526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b79f0a-dc4d-42f1-822e-f4610ad3adab",
        "cursor": {
          "ref": "01e1cd7b-fd99-4abb-a78d-b628e076e585",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c8601e4c-6acb-434d-a890-0197be7704f5"
        },
        "item": {
          "id": "11b79f0a-dc4d-42f1-822e-f4610ad3adab",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b85156d2-c3cc-4270-b7d2-06afbb57d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a92a04-1e28-4a4c-8c07-1926602282c5",
        "cursor": {
          "ref": "c72b1f53-0aa3-4d56-97b6-f71252b01568",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "44de3614-c790-48f8-8e9e-e21a25709331"
        },
        "item": {
          "id": "d6a92a04-1e28-4a4c-8c07-1926602282c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "028e5b76-3711-495f-aa1b-e2576a885922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380a1058-bb83-42e0-8ba1-f7f9f8456a72",
        "cursor": {
          "ref": "c81c81f6-478e-4fb3-b885-890e5feda276",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3f6576df-0fd4-4ea2-83fa-018bb3ad7fdf"
        },
        "item": {
          "id": "380a1058-bb83-42e0-8ba1-f7f9f8456a72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d257b5e5-e32e-4722-b07e-6deba787195b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45811c18-6fdd-4a97-841d-a5e29d787e9c",
        "cursor": {
          "ref": "dad242d3-55e1-4778-ab12-3c61a9f81510",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f553897a-94f0-424a-a888-5b718c12838c"
        },
        "item": {
          "id": "45811c18-6fdd-4a97-841d-a5e29d787e9c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "87d76657-7b50-42a8-a50b-162a4b949e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53355c7f-84ea-4e5e-b116-0a8dd35dd308",
        "cursor": {
          "ref": "b2d6550b-442e-4caa-9fe6-b455646004ed",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e177567-d8ac-4a62-94c3-6e9addb888e9"
        },
        "item": {
          "id": "53355c7f-84ea-4e5e-b116-0a8dd35dd308",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e1a73c0e-610e-4a63-99db-cbde6019d0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611054b6-8831-4ff2-aa55-fb43b376435e",
        "cursor": {
          "ref": "3943caf6-87e4-47ed-9639-6a0c620dc84e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c32f653f-5a9b-4af8-930c-fd0cdcf6453b"
        },
        "item": {
          "id": "611054b6-8831-4ff2-aa55-fb43b376435e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4032e0cd-b38a-4c00-85bd-f5d8db092e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c67c5e7-07b3-4b3d-8274-f105461ba73c",
        "cursor": {
          "ref": "4275682e-a83f-4a09-9b20-a72b7b7845e0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3ac854c8-ab5e-4dec-819c-dc3cf549d253"
        },
        "item": {
          "id": "1c67c5e7-07b3-4b3d-8274-f105461ba73c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f31c9346-8c4d-4e22-a117-afc55363cb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5990ba-6972-46e1-8456-fc7cfff6761e",
        "cursor": {
          "ref": "9e34d081-f9d6-4aa7-bea5-3e3706ac66a7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "246af25a-bec2-4258-b2c1-1d13bf993319"
        },
        "item": {
          "id": "dc5990ba-6972-46e1-8456-fc7cfff6761e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6ad99234-c051-4f28-8edb-bcc3f7352cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b00b12c-83a8-4772-ac9c-158bb89fcfbc",
        "cursor": {
          "ref": "052eef65-86d9-4eae-81c2-cc7611017ed7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "740f1e23-bbbf-4e57-8034-7a657e4d5bc3"
        },
        "item": {
          "id": "6b00b12c-83a8-4772-ac9c-158bb89fcfbc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0b585d82-647e-4819-a299-00b00a764adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0256be34-aeba-4b07-ab50-a94bcc5f238a",
        "cursor": {
          "ref": "2e97d46c-2732-4c40-a65b-8dab6b138048",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "92aea215-c6d0-429d-b333-83d3cafd5ba0"
        },
        "item": {
          "id": "0256be34-aeba-4b07-ab50-a94bcc5f238a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ea314370-ffa4-40fd-b3aa-08b28e8bbc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b38dd3-8ae1-49fb-a4c1-b3e622296aea",
        "cursor": {
          "ref": "b9bb38af-45e1-4862-a60a-7bb734bb90ed",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5570db3b-31cb-4b45-8288-903cd5dd610c"
        },
        "item": {
          "id": "e1b38dd3-8ae1-49fb-a4c1-b3e622296aea",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "564ace84-bdbe-4cd9-809e-de972acea709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ed4a50-c9c3-464e-b05d-b87398e484d3",
        "cursor": {
          "ref": "5557d01d-7a2c-4735-a4b6-ff456e3ddd6f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "597405f7-796b-4561-8ed1-bdf00aa1d962"
        },
        "item": {
          "id": "d2ed4a50-c9c3-464e-b05d-b87398e484d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3a3085b4-4a4e-4425-9f36-891924837e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e274dd8-8ffc-4dfc-9a4f-6e6c79b798e9",
        "cursor": {
          "ref": "a70e1b50-fe1a-4f25-b8c9-3bcfcc98e59c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "62aa1309-112a-4f2c-af4c-cb80493ae9ff"
        },
        "item": {
          "id": "8e274dd8-8ffc-4dfc-9a4f-6e6c79b798e9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f90e5139-a396-465a-b0e9-4653273425a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27042246-c513-47c2-85a2-aec8f8d21ef3",
        "cursor": {
          "ref": "796fbc34-9fd0-4115-8b94-4eec7595feea",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7a506cec-d74b-405b-9039-b9d2e9c47ba3"
        },
        "item": {
          "id": "27042246-c513-47c2-85a2-aec8f8d21ef3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1ac177a0-a7f8-4425-8562-c0794d6c40bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0591c375-a8c8-405c-be29-fa659746eaab",
        "cursor": {
          "ref": "e59c512f-0acf-4b06-9194-2b922ef5e44f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7bd475f6-768e-4a12-87d8-5ec942970cfa"
        },
        "item": {
          "id": "0591c375-a8c8-405c-be29-fa659746eaab",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0901bc38-8e98-47df-8631-f21d0a40c128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67c63ea-034d-41b7-a5b8-95e5d9d67179",
        "cursor": {
          "ref": "47963931-f1dc-4044-afd9-afb87ecad902",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5846ee5e-6541-4c0d-8da8-0b28647bccc1"
        },
        "item": {
          "id": "b67c63ea-034d-41b7-a5b8-95e5d9d67179",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "64ef71dc-0b6a-48bd-b7a6-95c0bbf785d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce7a6e7-c1fd-44a7-8cf6-506ff50ad399",
        "cursor": {
          "ref": "eb6ba7e6-ea75-470f-816d-de28a295475b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7acb4e00-11b8-4948-99fb-4185f31eca31"
        },
        "item": {
          "id": "5ce7a6e7-c1fd-44a7-8cf6-506ff50ad399",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2d00c2f5-4bff-430b-bd36-9391e1eaa5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13f86f-1f47-480b-b599-db209f744b29",
        "cursor": {
          "ref": "8de4a92e-fe8e-49ac-8439-9454bca321d2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5790de36-8e37-44d6-afec-0b3e6b9c7628"
        },
        "item": {
          "id": "2e13f86f-1f47-480b-b599-db209f744b29",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d05069b8-0f00-42cc-80fe-c7316d290ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e197aa2e-1aed-4009-a8e4-26100a2eff81",
        "cursor": {
          "ref": "866750cc-27d3-4906-a9a3-9d66bd6bea5a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7c6f9ff2-3098-4cfe-ab90-357516fa5af3"
        },
        "item": {
          "id": "e197aa2e-1aed-4009-a8e4-26100a2eff81",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e59ab97e-9b98-4da9-82f5-968db3635955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00123134-b64a-4d85-a3d5-914002507f22",
        "cursor": {
          "ref": "10bb135c-e4e0-49b3-9281-403cc5cd6c79",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4bb37a33-8ed5-4aa3-ad79-8f734531173d"
        },
        "item": {
          "id": "00123134-b64a-4d85-a3d5-914002507f22",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f54ea9b-a617-4d5d-af86-e0a5ab0a3176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fdc421-4960-473e-8c5e-02ebfd2c3e31",
        "cursor": {
          "ref": "d41ec375-303c-4d83-972b-59c54b9545a0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dcf242dd-ecc1-4f4b-9878-5069f7f861c9"
        },
        "item": {
          "id": "49fdc421-4960-473e-8c5e-02ebfd2c3e31",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bcebd0cc-ac3a-42d0-8299-719bcf87faf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca15099-f6ea-4a4c-a725-858a1e048db4",
        "cursor": {
          "ref": "ea48e1ff-92bf-403a-b643-e0030f47e241",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0f37e41e-fe64-4cf4-a945-b9e722afb87f"
        },
        "item": {
          "id": "9ca15099-f6ea-4a4c-a725-858a1e048db4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ae27ac90-f266-4b47-bd5e-226141bbc035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d6d695-5cc1-4f26-ae5b-f87b584261a0",
        "cursor": {
          "ref": "5b268b71-ff65-486d-979b-cc7ad3e1c582",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cfdc0a3c-b755-45b1-bf88-a20bd3f6c023"
        },
        "item": {
          "id": "a5d6d695-5cc1-4f26-ae5b-f87b584261a0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3952d78b-86e3-4891-8afc-a6950b8a2206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5066ad32-9051-49e8-abfe-e40b177efb3e",
        "cursor": {
          "ref": "f53d1271-58cf-4d76-9b17-c841a99be267",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f12aa42-882c-4b21-abd4-7f5aabf1874e"
        },
        "item": {
          "id": "5066ad32-9051-49e8-abfe-e40b177efb3e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3f7d42dd-0eea-4f4e-a6af-ec1088327b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadf9faf-ded3-401e-88f8-2c21874cdb45",
        "cursor": {
          "ref": "9c1780a1-76dc-4c67-9b9c-08b4f7f8a3d9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7f2e518d-7bd8-4e8d-880c-9c6d84518976"
        },
        "item": {
          "id": "dadf9faf-ded3-401e-88f8-2c21874cdb45",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f59b071b-d740-4908-8571-5423991cc83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd647b57-689b-496f-afc4-8c1d23d47a3c",
        "cursor": {
          "ref": "8103cdbf-632b-46d1-9b26-f81cb4c59670",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fff3f3c2-a1c1-48eb-8709-ca94d19eb5e8"
        },
        "item": {
          "id": "bd647b57-689b-496f-afc4-8c1d23d47a3c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "98b6505e-f999-4ca3-9f70-afb1d86ec19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b1b42d-d8e0-46e7-972a-87f630e5853d",
        "cursor": {
          "ref": "66085e5f-cef2-4306-abd9-b900e7c07289",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1e0d917a-612f-4295-8aac-a977b5fd0124"
        },
        "item": {
          "id": "49b1b42d-d8e0-46e7-972a-87f630e5853d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "35c9df22-750d-453d-9e8e-113d4a3f44da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9619d2d-c783-4acf-8d21-856722ac4a92",
        "cursor": {
          "ref": "05f393a7-206c-4973-9e9a-e3bfd9d2e9ee",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d6f09e08-1f8e-4db6-a6ac-3149a163754f"
        },
        "item": {
          "id": "a9619d2d-c783-4acf-8d21-856722ac4a92",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "619ae4cb-eb45-498a-93ff-4f69172a6196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca3c5d9-4c65-4fb0-baa9-1c2a6bfa1631",
        "cursor": {
          "ref": "24c7b075-685a-40e1-8ecd-c5c3fb03c9c0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aea4ad22-fb04-4604-aa42-1cbc47041de4"
        },
        "item": {
          "id": "4ca3c5d9-4c65-4fb0-baa9-1c2a6bfa1631",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aeef9ac1-8a6b-4db8-b6ff-70b4d7e03e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298408c9-ce65-4605-89a0-9ff3558fa125",
        "cursor": {
          "ref": "85d84adf-a1f5-4795-aee2-50a848eb57b8",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8823953d-1412-4d15-8d68-f6bf5d50c4b8"
        },
        "item": {
          "id": "298408c9-ce65-4605-89a0-9ff3558fa125",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "deb17761-ca49-439c-b2e9-67c9d75ffe94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28ef55b-60d2-4293-b4f9-ebb54bf6793c",
        "cursor": {
          "ref": "8c381f98-2e3b-4dad-a80a-5799036591b8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "93ce0ad2-5f0d-47fd-941a-6d38be31fbe1"
        },
        "item": {
          "id": "b28ef55b-60d2-4293-b4f9-ebb54bf6793c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2be8a28e-16cd-4934-bb2c-d0d53c877b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e1f02d-e530-455b-9c7a-1621ca11f6f2",
        "cursor": {
          "ref": "4c022e58-da40-49b0-acff-9b8268853ce3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "58c8ae79-e44c-4057-89d8-6d17c3a9ba98"
        },
        "item": {
          "id": "42e1f02d-e530-455b-9c7a-1621ca11f6f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8462f62b-71f3-4f62-9527-5c39b6f0af0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daba601d-c2ff-4e4c-82cf-d4aa71fb1fed",
        "cursor": {
          "ref": "60b2c49d-f96d-4230-a1f8-ea725c238309",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "55dd11a7-9a92-4ea5-92be-a5ce1479737a"
        },
        "item": {
          "id": "daba601d-c2ff-4e4c-82cf-d4aa71fb1fed",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e5c3ba14-25ca-40a0-8dea-6c4e56373265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bf4503-cc32-46d6-9b02-656347493fb8",
        "cursor": {
          "ref": "0ef8a6ab-df92-4fa0-b310-1e836af05f1b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4c150b37-8836-48f1-a2ba-36fb0cca87f2"
        },
        "item": {
          "id": "64bf4503-cc32-46d6-9b02-656347493fb8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "40d0916a-787c-4562-bf94-dedad4450880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e8b59-0f1c-4818-ab83-bc60ba06524c",
        "cursor": {
          "ref": "2bb28e96-b2f2-42d0-be37-bf3627f6da47",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "436421cf-d6d9-4468-a2b7-ba493064a90a"
        },
        "item": {
          "id": "2b3e8b59-0f1c-4818-ab83-bc60ba06524c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a3f9908f-4c50-42cc-9392-014c97ade58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51afedd5-704a-48bd-9cf0-b8db0937d2f5",
        "cursor": {
          "ref": "cbddd9ee-46ff-48da-81b9-093797bd5e0f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c133ed5d-eaae-4b90-be24-494e6487dd0f"
        },
        "item": {
          "id": "51afedd5-704a-48bd-9cf0-b8db0937d2f5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9e9092a0-55aa-4779-954f-d38364e0d920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e003e03-aaf3-4168-a6cd-a7f511756f5a",
        "cursor": {
          "ref": "b435a939-8fd4-4c21-9d88-e5ebf740395c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "38ac9793-956d-41cc-b6e7-fb5373952119"
        },
        "item": {
          "id": "2e003e03-aaf3-4168-a6cd-a7f511756f5a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "19ab9118-6443-4bce-bc41-38cf22f4e7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb2dde1-08d4-4ce4-81a8-924acd570c05",
        "cursor": {
          "ref": "10d0e44e-8249-45c0-8558-fa6fb723186e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "da16804e-7cd2-400e-9964-92826bd6e62b"
        },
        "item": {
          "id": "0cb2dde1-08d4-4ce4-81a8-924acd570c05",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "29bae80e-b5db-493e-a4b1-f507707eb650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b01addb-ddd7-4d0d-bce0-c977b176103b",
        "cursor": {
          "ref": "644ec1c9-d677-4674-befc-835568279da1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "565d757a-b06c-44fe-b675-b5c5ee9b6e73"
        },
        "item": {
          "id": "4b01addb-ddd7-4d0d-bce0-c977b176103b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ada134a2-c5f3-48de-8c0c-0bc2a0f0c238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66272a7-fb5d-4493-8df8-383ffa131b69",
        "cursor": {
          "ref": "a6356c4b-9e6c-406d-9d15-e6764fe6d219",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "78620e1b-d3ab-46a3-9f6a-9e0d04f1cf22"
        },
        "item": {
          "id": "d66272a7-fb5d-4493-8df8-383ffa131b69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bc2ab7dd-ec8d-41bc-8609-a4e30f86f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ea22aa-3fc5-4b15-b199-a483cf0dcc91",
        "cursor": {
          "ref": "6bf9e74d-448e-4802-b9e5-7ada2255cacf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8a1cc400-a362-42a4-809b-ed0860fd7bf4"
        },
        "item": {
          "id": "11ea22aa-3fc5-4b15-b199-a483cf0dcc91",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fe606538-ad69-4003-ac47-f6de9777da49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b3532a-72e4-4802-a637-c701b676175a",
        "cursor": {
          "ref": "c1381448-6fc7-4a92-af2a-a451bbe6f561",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5cdb9d4f-c743-4075-a16d-49da41e907a4"
        },
        "item": {
          "id": "e3b3532a-72e4-4802-a637-c701b676175a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b42d4fc9-246c-4e0e-92a2-24a423eb8286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d8b38b-4799-4e74-8112-8951eea7c003",
        "cursor": {
          "ref": "a96325dd-85e3-4ea6-ba88-54c6a5ef35d7",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5d9a5a55-795f-4303-9bf5-56683bcc912f"
        },
        "item": {
          "id": "82d8b38b-4799-4e74-8112-8951eea7c003",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d4962379-8629-4c57-8fdd-3f3bdbae32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011f3e3f-2c32-487f-88ab-aee7e498a6ea",
        "cursor": {
          "ref": "ea8d1408-404b-40fd-980d-11c7bdde76e2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4a1eee65-c7fa-4d17-b659-5d3a8848dc31"
        },
        "item": {
          "id": "011f3e3f-2c32-487f-88ab-aee7e498a6ea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "935ca60c-4578-4398-be58-74034f0cbaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb34539e-bc6c-4602-b096-e501ff7571fa",
        "cursor": {
          "ref": "3490fe4d-1127-4d7e-841a-5b9678224d2f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "43f88849-50e9-4e4f-9828-876d43be938d"
        },
        "item": {
          "id": "fb34539e-bc6c-4602-b096-e501ff7571fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d5860ca1-d3e5-4b9c-9d1a-a5ae9fe3e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e03ce64-43c3-4596-8af1-585050239499",
        "cursor": {
          "ref": "ed122b76-4cc4-463c-a244-991fa9cc62cb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e541296-7cd1-488d-8fda-833e1776a3d3"
        },
        "item": {
          "id": "4e03ce64-43c3-4596-8af1-585050239499",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e464a563-3ea4-4f0a-b608-cdaf31f466a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47358429-a851-4ea1-a471-7c53a045bf3f",
        "cursor": {
          "ref": "e35ea08b-eadc-4832-a14c-3228b4107366",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "00ebb217-f27e-4698-8d92-508108960d78"
        },
        "item": {
          "id": "47358429-a851-4ea1-a471-7c53a045bf3f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "11bccc33-50b0-4994-9aca-8d2142fb42ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5704541c-233a-48e9-8531-29abe1e0e6b1",
        "cursor": {
          "ref": "cb1af055-49af-45ce-99f3-922652ed52a3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9dc1c2c4-22ef-4bc4-9760-3b73ddd12102"
        },
        "item": {
          "id": "5704541c-233a-48e9-8531-29abe1e0e6b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4e0104bd-ee1a-4593-bf2c-663a8252792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f78b62-f056-44dc-a0af-6864088f0c75",
        "cursor": {
          "ref": "4fa83ffe-2a25-44c8-b6df-2a351f4ed6b5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c1be2392-ed34-4559-8f42-ef2f4e85e651"
        },
        "item": {
          "id": "c8f78b62-f056-44dc-a0af-6864088f0c75",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6dc8b090-f974-4597-b75f-d70115376e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d29c24-ca76-4712-af33-e5a4e3c557d1",
        "cursor": {
          "ref": "4c288e6f-b334-492a-a758-138c492addab",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "329bbf4b-6b40-4719-825b-d1ac913f9661"
        },
        "item": {
          "id": "a4d29c24-ca76-4712-af33-e5a4e3c557d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8c9f4f6-a293-45a9-8d51-0cc6e1dda3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03a5e8d-1808-40cd-aa6b-bcc80492cfdc",
        "cursor": {
          "ref": "35d0405b-0ef5-4aca-aa63-318decaf9758",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "327114ed-3ef7-48ae-b938-464e15b3d6a6"
        },
        "item": {
          "id": "b03a5e8d-1808-40cd-aa6b-bcc80492cfdc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f97a09de-bfda-47bd-897a-d636583afff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73148152-6e4f-41c9-b2d8-9a53da5a78c2",
        "cursor": {
          "ref": "7376f62a-0f52-4d23-8024-29149f61c113",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "391a3a25-12b0-48f1-854b-9724cad66c12"
        },
        "item": {
          "id": "73148152-6e4f-41c9-b2d8-9a53da5a78c2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "00128874-6097-432c-aee1-be3bfc6def88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8620e199-3990-47c4-baf4-e2df07aa4846",
        "cursor": {
          "ref": "9a7384c3-5c82-46eb-b488-bd6f53860f3d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1a605a73-3ee3-4917-aab0-1cbef39a39f3"
        },
        "item": {
          "id": "8620e199-3990-47c4-baf4-e2df07aa4846",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8afa4d02-e9e0-4077-b1cc-bbddd7ba4818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa8f150-1a7e-465e-9736-bc4b66c03799",
        "cursor": {
          "ref": "c2aeff71-12aa-41c9-89b4-92a5b50c0297",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b4be7868-8448-4bd6-a75c-d74448e628d8"
        },
        "item": {
          "id": "baa8f150-1a7e-465e-9736-bc4b66c03799",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "afefed43-e2b8-4cbe-a1eb-a6a661acad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be91cb51-7cbe-4b27-9a37-0733a34d610d",
        "cursor": {
          "ref": "a4b6e423-b9d8-4d18-9994-db6022316e4e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eff5abdb-f02c-46cf-83a6-789747a7e3c3"
        },
        "item": {
          "id": "be91cb51-7cbe-4b27-9a37-0733a34d610d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7a66af4b-da75-4618-b82b-864e9d9ddc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df3d15d-01f1-4afd-bf20-40db7b138bb2",
        "cursor": {
          "ref": "35e7a444-3fab-4859-8835-3228c2c3fecf",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ada06a21-7af9-449f-8bd2-fec5e30a3c3a"
        },
        "item": {
          "id": "6df3d15d-01f1-4afd-bf20-40db7b138bb2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ac1047d3-dadb-4d88-82ce-a495c5ca5f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638eed42-ed55-40bb-8da4-72f2da1c1583",
        "cursor": {
          "ref": "fa03190a-e440-41ed-91cc-bbd03d89b4c5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "28d00e22-feab-465c-a9d7-9e99b6cf0455"
        },
        "item": {
          "id": "638eed42-ed55-40bb-8da4-72f2da1c1583",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "61f812d0-dffa-4339-8b38-104f6a547a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe02964-15c2-4f47-be07-d8929dcc0279",
        "cursor": {
          "ref": "c7568fbd-f71c-4f80-aebe-e31f7f68b13a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "26bcdb2f-f24a-4873-b352-fde832f0fe03"
        },
        "item": {
          "id": "7fe02964-15c2-4f47-be07-d8929dcc0279",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0042d335-6c46-48f8-a6ae-5ec0c2b286e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0873280-56b3-4109-8b6c-fc2e64f429d3",
        "cursor": {
          "ref": "c817cb8b-79b3-40c3-956b-2b3711d50e09",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "720a7e0f-d544-4752-865b-65c5c9fce6a5"
        },
        "item": {
          "id": "f0873280-56b3-4109-8b6c-fc2e64f429d3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "88cf457b-aecd-44ab-a2d8-a62a2fd642cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d606404-b52d-468f-9f9a-d0ef689aa23a",
        "cursor": {
          "ref": "2fe3fb16-8bcd-445b-bcdc-defa100f4276",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5240125c-48ab-47bf-8d0e-b3e624b43a23"
        },
        "item": {
          "id": "6d606404-b52d-468f-9f9a-d0ef689aa23a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d61597cb-41aa-4d50-84cb-409abde3821d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c5edd-4dd0-4df6-bfe1-ee9e7bc36100",
        "cursor": {
          "ref": "7e983243-b802-4e32-8f78-e3a6d404e8fb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "86f02eda-a128-4053-ba03-aa864c88aef5"
        },
        "item": {
          "id": "8a2c5edd-4dd0-4df6-bfe1-ee9e7bc36100",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6344c306-6b61-46d8-a559-4417472b0c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcac4a2-77a7-472d-8371-3cef3d4c0a7b",
        "cursor": {
          "ref": "b2b5d52d-0bf4-4906-91ba-688624813e41",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "62159aa0-4229-4973-b227-ec2aa4d61b7d"
        },
        "item": {
          "id": "7dcac4a2-77a7-472d-8371-3cef3d4c0a7b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2f04a553-e9c3-4ba2-8483-69e7a88d7c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c1d69f-8343-4dfb-8f85-5877cb51ed21",
        "cursor": {
          "ref": "f344feab-f6d4-4c03-a165-0fd14b848cf0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ed0b6c33-64de-4e02-8a55-262d88ae3a63"
        },
        "item": {
          "id": "a1c1d69f-8343-4dfb-8f85-5877cb51ed21",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a5eddea3-ec49-4f64-90ed-76b02946fffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2babcb0-f1cb-41a3-a63c-b31d5e38abce",
        "cursor": {
          "ref": "0e33882e-c68b-40c4-b662-6792d1787d0e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eb09c27c-a844-4d6d-9eab-20fd39665a27"
        },
        "item": {
          "id": "e2babcb0-f1cb-41a3-a63c-b31d5e38abce",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8027185a-e104-4919-88d9-aaede9b955fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6b85cd-2a6d-4fff-aba0-eaf08c2f660c",
        "cursor": {
          "ref": "7aca7ca9-1cbd-477e-b5cd-f6099a0c2297",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b7ab23c-9c7a-4a5a-8f77-ce549547b7b3"
        },
        "item": {
          "id": "af6b85cd-2a6d-4fff-aba0-eaf08c2f660c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eae50e35-4204-42c5-90e2-b34993e8e519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a33943c-d31d-4df3-a91b-8073ca8ef5a0",
        "cursor": {
          "ref": "e9a85eda-3b2f-4ca8-a91a-0b1b004d7ef0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b4509b9e-3be5-40ca-b4f6-cad56f256d82"
        },
        "item": {
          "id": "6a33943c-d31d-4df3-a91b-8073ca8ef5a0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ec07c644-4995-493c-b4ce-40cc14c300f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7b747f-2b7a-44af-b788-df7a3a9f1ba8",
        "cursor": {
          "ref": "63117323-f592-46b3-83c5-415039a348ef",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d60874ba-498f-4a6e-a6e7-79b5da086601"
        },
        "item": {
          "id": "4b7b747f-2b7a-44af-b788-df7a3a9f1ba8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e785973b-d22b-4efd-8fca-72f29643d0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5aa2a2-b557-49ce-93b1-734c2b36d36e",
        "cursor": {
          "ref": "35ba5c6e-57d2-48be-9308-62430029331a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0278176b-3b34-4972-8ee8-88a3aa7e2e9b"
        },
        "item": {
          "id": "8a5aa2a2-b557-49ce-93b1-734c2b36d36e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b97c9609-8049-4602-83e8-85bd79ff96d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb5200d-8c64-43d9-9758-09c8a002754a",
        "cursor": {
          "ref": "825b1a98-ad27-4c00-b254-acaf9365f1db",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d97bd383-ac50-4008-b03d-e0dff1d26ab0"
        },
        "item": {
          "id": "0cb5200d-8c64-43d9-9758-09c8a002754a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ed42ea25-5969-40ed-b25a-17fea20afd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd54d7b3-d768-4f7b-9bd0-3a7d47bd246d",
        "cursor": {
          "ref": "4729e9fb-3791-4c77-ab59-0156e386add9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b7ac8c66-e523-4f1e-83c7-3ee30e2422b7"
        },
        "item": {
          "id": "fd54d7b3-d768-4f7b-9bd0-3a7d47bd246d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2c0f262d-39df-4e1a-a494-e543a1cc00c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "6b72c055-1673-429e-83a4-52891d7725a8",
        "cursor": {
          "ref": "362ead6e-2053-4df2-a41b-a143dad2d602",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "68a5cb83-c1e5-4259-817e-2934244e2a7c"
        },
        "item": {
          "id": "6b72c055-1673-429e-83a4-52891d7725a8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "24bb2625-5dfa-48b3-a8da-cf9cbdbd2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "db384620-0163-4511-80ce-36d3d23221c1",
        "cursor": {
          "ref": "324f2b62-e321-436b-8650-2b87ab8cee17",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "672dad3d-83a4-49a9-9d0e-7c2eeb8b3e11"
        },
        "item": {
          "id": "db384620-0163-4511-80ce-36d3d23221c1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b5aa765-d3eb-4dff-a8a2-098f57137694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "383345bf-84b2-4d37-bb64-d91ddacc160f",
        "cursor": {
          "ref": "e430d620-f59c-4a78-bfcb-bfefa17a76db",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "53f1361b-9e9c-48f5-b44b-6b7bd4b7ec10"
        },
        "item": {
          "id": "383345bf-84b2-4d37-bb64-d91ddacc160f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4a54f15e-0d55-4171-a0b4-7222ffadf3bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383345bf-84b2-4d37-bb64-d91ddacc160f",
        "cursor": {
          "ref": "e430d620-f59c-4a78-bfcb-bfefa17a76db",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "53f1361b-9e9c-48f5-b44b-6b7bd4b7ec10"
        },
        "item": {
          "id": "383345bf-84b2-4d37-bb64-d91ddacc160f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4a54f15e-0d55-4171-a0b4-7222ffadf3bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a7733-e575-45ab-acce-c4d7da00316c",
        "cursor": {
          "ref": "5722da3d-8cb6-4764-906e-4ddb3849a79f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f7d1e527-c23d-482f-ba95-9fae01b96532"
        },
        "item": {
          "id": "650a7733-e575-45ab-acce-c4d7da00316c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7b477248-d892-4676-b011-1262732d01e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df5d967-d4ad-4b94-bb05-1a97b30b5d56",
        "cursor": {
          "ref": "2a40b671-9186-4c0f-ae81-b44420293170",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cca37ed9-8dbd-4eb1-8c4c-c19c9b5e1159"
        },
        "item": {
          "id": "1df5d967-d4ad-4b94-bb05-1a97b30b5d56",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b4d7b2a0-29ad-49aa-8027-8063ba630fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}