{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "699e4688-54c4-4d9c-bb4c-76f87693fe01",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55bbec0b-8dc6-4fe0-8875-42d37cac88b2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "314d937c-fe6a-4126-8747-4f1aa375a9ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "12ad9229-9a87-4e68-9f5c-9bde8902d7bc"
                }
              }
            ]
          },
          {
            "id": "4743f141-a901-4365-8fc1-c0364847fb0e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5186cbb-748d-4c4e-ba94-fcc20f3dc2b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e79d62e1-f34f-4b6f-b56b-78e07bd9db34"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "67cc527b-7c8b-4d0a-aab1-70c0e06a69bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f49b6a00-9881-4b33-9a3a-9d6987e12356",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58e64462-a7fb-4c2c-8d69-3e837251dce9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba136881-3cd1-48ac-8239-d1193badc130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18381a7d-fb1a-4fbc-915f-bc766b4bbc37"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0018af94-ec70-477a-9f4f-9e8a1d281585",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "963602c8-ab88-4f28-bf69-b7d7f11a3b85"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "752f67ac-db8a-4e50-a5d5-ece758143b75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e274a048-c249-4828-9706-5a0d45a1d7ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf9ecea6-ff08-42d3-803a-868173216366",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "96165e4a-0989-4263-b0fd-18dbb70c9c9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bb1e74c-ed87-4086-afaa-0bf6302f73b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5648eab5-97a5-425c-bb89-debecf37b58d"
            }
          }
        ]
      },
      {
        "id": "fc057177-5787-4281-8cb1-f750868f10c4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e55ec4d9-929a-4ab5-a1b8-1857426d14a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8ee872f-ac00-4d2a-8cd3-8c48616e98f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a9789e7-df33-48d0-971a-05ff64e4e958",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b620065-1f34-4a37-8ce8-cd2a78fde557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f1b23e3-dc71-48c0-b04c-31481e5c168f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50e034-692c-4a85-9ee7-6ff38b60af68",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae6b3d3-8e1f-42a2-b28e-22cfb25fd54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c0e1dfa-e0ce-4374-a7db-556a719e166b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2287fd04-4acb-469b-974f-7afcfa478b0c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b284a1-e6c2-4a4c-95b3-da88469fb946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea0190c3-2a59-4426-913f-981a13a543f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b645817e-5175-4794-90a6-900e201260bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c78ccc02-ee43-4f51-9013-781cd44962b7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6e0047-7d62-4196-a05b-ed2b9283f105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f07da635-bfc3-425b-9929-cfdc1f2bd085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14be9ec9-1149-405b-b91b-d9fda571e3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95aaec32-b84f-45c0-bb8d-39a50d88b0a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b102f81b-804e-4c35-905b-6784ffca2143",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78c479f3-d824-4608-b317-d84abcf91dc5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28bcd306-7302-4d39-81af-89cbadd4aee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0664ab3e-a8f6-4f23-ad47-36e1c2a01b65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f79007d7-ac0b-4c41-b74a-87ea7c41a9c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7406ac6d-40db-46d5-a029-fcd530be2f97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5fd6508-c831-4333-a99c-1d92f88e21dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2750802c-e9f7-4132-a5bc-cda7ab924c82"
            }
          }
        ]
      },
      {
        "id": "1848dd3b-1a3c-4659-ae6a-b71eb76fd918",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fc2f7fe9-07cf-4a2b-aecf-8b8abe9f36c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0171c86-dc78-4da2-941b-c2b9c9e1afc9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5982aec4-fcba-422c-bbc8-81d94400eefa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4ea01b-50cc-4592-bc38-ca6b79542ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58427461-40c2-499c-9664-f1de5179fea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec6b302-30a6-405a-89a8-0aac80b89eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d801410-3dc9-499e-a814-f04f7e5d3f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c25b79-4ad2-41b4-9bda-c9598e88785b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06313f2-b7b5-487a-9677-698a27fdd43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa08e7a-5f0c-46ca-8deb-bef5c053b0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f032d-9bc1-4515-b0c5-2f07088b7c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5839c4e-a881-4407-8295-8a25bf8c4836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddad7e9-cbe2-4d65-8142-9ac1d04560f9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d749593c-6125-43b0-bc3c-98579d9ca7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc064090-170a-4cfd-a367-4cb9a8d0af26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c35c7b-0637-4026-bfff-53a134f6e48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "725cd0b6-bde6-4fe5-ac8f-344a3c5d243d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980aa6b8-b358-4e46-bd8b-b47de97e23a7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd636952-8cac-4891-9d03-1cddc2fe8655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea533687-a5eb-4a87-9ba1-b6a09311e948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbb1b92-8879-4de5-8005-93e51e3fc150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f97edc0-28dc-49a1-a4af-9b75e45ab136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e4e16c-52ba-4a75-9a07-a480e594a1de",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067b977a-54a8-4d88-8415-00e5c3a4f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148c5359-4656-40e8-a515-a22ca1097f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f970249-b798-4671-9b0f-16dd62fbd0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770f0b61-1c90-453d-ac32-95e2f269cfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f442ce-0a2f-434e-b275-7e05da9b634a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382d69ae-08d7-441f-b56c-9a6c114481c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17c67e2-3c1a-4de6-acdc-adc0cc502e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29c2a12-18a5-4522-8a41-2900e1656115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80de114f-bc45-42c7-a870-70fe0b0b9b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347a1f37-8172-4600-b697-1639ea04fa46",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6daf11-4e15-481b-8043-6fddeca2c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcfe4ad-1417-4e04-a0a2-29fbae081ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d12e36-893a-4852-a7bc-9541a0e0ab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35e64eaf-4e1a-4a70-b9a1-3a64f0fabe98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d78016-9cbb-4a9c-a7be-f932a7baa625",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4be1aaa-afa9-427f-8015-ba08dbc3f7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5649e1e2-cb97-4d77-b698-bd7783219587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf75eac3-38d3-44f8-8733-703039c7fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce3f2eb4-fc26-481a-9397-1abe7fe4abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b966b16-7d6f-4f72-90e4-2ac971097fc7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd105eb-d7b9-494a-9dc7-5d3a122f0df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a5c1d6-829e-4b98-bbb6-5cb24d0bc1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784d2255-1376-430f-b5b5-07a728eaed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dacbe96-8e6a-4b27-a480-bfe47f84c5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab1b15d-b8f4-4e39-89fd-0028367641f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59ce274-6a6b-4037-831d-1a25848259f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d346fa-5d31-4217-9a14-90a0e40062e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7286e308-b07f-4a00-bee7-d62638090bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c5cff3-a7df-4529-91d1-9bfce3e10fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bad187-351d-4c72-9384-740b901d8599",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf414a-d080-4304-9d82-270b98a4174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c165532c-9dbb-4394-b000-e0ecd300cd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdad40f-0e86-4074-8735-9e1bda0bd4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c7392c0-3329-4f9b-a87c-821bc48aec88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f449cc5e-2ab1-41fe-85d8-50f16c0bb5ae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7e14fb-2472-40df-9794-d94ef8974e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b002fbb6-d1d7-4a23-a384-5100fa47203b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6274d02-fffc-4895-bdd0-ddb2b08ec762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f8d87ad-9505-4ac0-aaed-e58624f443ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952f2584-b852-4d07-a41d-02838d09f68e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a838198-e14a-4543-9c69-8078c9f63b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fb5233-5012-4504-9d7e-f6c656904921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5306a0-64bb-440d-9b77-5c2d022e898a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceea2c0a-fb4a-44e9-805e-356ef7e856a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97175003-b43d-4d2e-a8b7-4ccf598f5d8e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ae95c1-5640-4841-b97a-9926b0d052d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e14fc8d-fe61-4745-b844-877e17e02f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a379e9ad-9b25-4316-a980-5c8359cc271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f2433f3-4f01-4dec-b758-968fc60aa786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87b4be-94d1-4953-ad13-571b217ed2eb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8f54e2-175b-4a1f-90c7-542f3c7070cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3af757-d311-436f-8d6a-4ab4faf1d065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58f2b87-db35-44e7-81fb-6d02a43f5d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "747ffa9a-9950-4812-b051-171acae5a645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f28dff-aff2-4a29-8fe3-a1aac48b355e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd0cb2-a9b9-4ec1-891b-e76182226741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcdfe76-1976-4138-bb19-abcebf7bd863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79da6c10-eea5-451d-a57e-2d16ff0381ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d07164a0-bdf1-40e7-bbdc-cc80da6cb3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e1f9e-abae-4c4d-9acb-1b494897053c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18f9eaf-b66b-4434-9eac-0edc8e9369bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe6c497-718b-468d-a1ce-cd5acd97ddee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4d3261-00a3-47fa-913f-6390e35116a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd1752ad-3192-4398-9796-383b91b94bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca37b98-3f9f-4287-ad8a-8a6876f0573c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a5387-e2db-44a1-b726-a9f81f3d073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428b84c4-2f16-4020-84cd-806520cfa729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3291c0-321f-4462-8f03-6ddfbabd9bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "108d37cb-c291-4d33-8a65-9de7a667be0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03132b3-edc4-4550-ac6d-a36b98026f90",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca59ff-ac94-4832-bd9d-4a65f6efce36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cddca8-ff2a-49de-bf06-3b69d5b3d89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8782f2a4-df0b-4999-bacb-27caee66cda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "525fece7-2565-4c0a-8bbf-e575f3a4081b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12855c8b-fd1b-41df-b2ec-0919177083b9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94b13cc-d710-4c83-9119-fd48e3f863c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439a0b46-7f10-4399-bbd7-303963b9e4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3507c192-662e-43e3-acbc-b19ba6e06101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "970e629f-be07-42de-9d16-83bad8889f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8785289-c667-4472-8dd4-17888a4320fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470a28c9-6915-4263-a5eb-76bd9a8cc8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cb471d-d1da-4ee9-aeba-27501627192a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b395b0-25be-4349-8035-f3c5a9763085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1711dcef-671f-4769-911b-ac382f1898d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d6302-ad6d-4463-8334-b12ce1f08eb2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f0705b-2d24-4a1c-8fb9-56d328d0d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa0ed63-c4f2-4b04-9831-f7e4cd4506aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fa8918-d299-448e-b0f3-35b033fee524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43a87d4f-4afa-44b7-945a-0ecd022d7b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd646a17-75fe-4933-871f-dbc79d2edc25",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692d81ea-5e80-44fb-a09d-d646859d8c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97eedc84-407d-4fec-aed6-31a839f2da13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee60c33-72c2-4213-9f04-e0eb482538a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85d24d17-c516-4404-b911-028848c0a32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6f3622-ef41-4dce-a69b-6393f5d5fd10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c31e18b-d886-48fa-a2bd-a067f3d4e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6e64f6-d2fb-4a4e-829b-0d1fb7946388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4221ce41-9984-46e6-937b-53be689fae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12ec744-b4f1-4e6d-b6b1-60cdda6fb89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce5f71f-d628-452f-9000-3ae57e227fcd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814895c-b950-4bf6-84f3-c16b036ba80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45d8071-3839-4c07-9e62-da522330cce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6577e422-522c-4aaa-9a34-edf1ebabb8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9c2308-8594-48e4-b486-a5d1a8905b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268e0ad2-5863-4cb4-b0d6-f80d32c39d09",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4365cc16-2f0c-45ad-9799-c05517ecff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c0d819-a1ab-4116-af82-c573349be224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93626348-c696-4b8e-afe5-dc272fd720d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8d23a6-de83-4450-a124-2f8e53dfbed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d562d0b5-36cc-4988-87c2-0c397f85a786",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec0476b-2788-4aa1-90b3-ad110eb8e863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d225c8f-4592-4313-8783-27c86e89dfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fcce0f-ced2-47c0-939d-4c4ea51f287b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09add91-8b4a-4e6b-8882-c95b24c3d6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d734a27d-adcc-4eef-bf07-7de163182d2b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c871715-ad2d-4771-8e3f-8a70cd144667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf02820d-d5dd-4b8f-b40c-162d994e0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf229f-14ba-4f2f-ac41-be85e1d0daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53008f95-4fb4-4b71-b8aa-0cddc3f68f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2156a8-ce0c-4c2c-ad44-79143b9ff6f1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f311590d-d215-4432-b053-f9a8cb437acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b491d9-0da7-4080-bbf8-e1c6562ccfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87dc83f-f213-4e5f-a848-425b457f0df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f27edd3f-2712-4fe4-b631-2c558d7f0087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39e213e-3ebb-4b20-a7f3-319e7f70cfc4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f326c4-c61b-45a6-bf64-6c5d6cba0dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa29c71c-21b4-42f7-89ea-8e514ccc93f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d34b97-af20-4803-a38e-8fe129a4b308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "21022c2d-e615-47b1-95e5-0b1670c023f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dc1fbd-eb52-456b-82c9-f9dce58edd30",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43c3684-0c81-4af4-b9fc-af5b221ec668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da22adbf-5164-4eac-914f-861f5ce925b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ae4b2d-0543-4561-b934-5ed73119c44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b76cc92-c5c1-427b-9c28-224396abaded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b0358b-251b-45fe-8a0c-76d6f0de9420",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb47f16-a5d2-40c9-87f8-d460e14fb2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecba11d-8520-4fd9-9f39-8ebc868a3add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376cfd0c-5105-4ea7-a9cf-ba37db586778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75da5f9a-c8da-4230-a594-ada1d1fb4a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b796a7-242e-48bf-ac16-c717728bab2b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded193a-0db4-4940-b7bb-310fcb7a5ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256e81bf-9f56-4a7e-bc28-a9fb54f62c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde4b064-1125-4dbe-8606-05a1d0b65d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d49926-8172-4943-acbc-87813bd03180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6347ad91-c2c4-419d-9e6f-35c6077bd1a7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa261d-9fb7-48d5-ad78-b8c0c93fe511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0977a32-d503-49c1-9ab2-38c0c901db1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2f9d75-0b22-4724-b74e-9531f4292f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "182af6e3-fe9e-4e50-b59a-6569c11744d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f377359-2ee6-4a08-9bf8-cc5117964070",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ded8821-9f9b-408d-84d6-10d9078f8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6c045b-456d-4927-930d-ebb375e5c97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fa76d-b9fd-4a55-a61f-0047ee2171c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68b487a8-bdbc-4ff5-92b0-b71de5076cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c32718-9a75-4f93-a876-f65dca069022",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd3162f-ac7b-4965-b81d-1f47164082c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "356d0817-ff1e-4d44-b115-39371c546afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5bbde5-8929-4dc4-9cb7-7562a520e200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1508773-69c3-47f5-bf45-175b6a0de15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0a7174-def4-4284-905a-2f59f16e5902",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485faf00-db45-43dd-a8be-2690feb6d72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26866eb3-b764-4e2a-a33a-6a004ecdce60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9065f2-f519-4f4c-a1da-ccfb07dc5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30ed5ba7-1c5b-45ca-b902-87ea6ef6a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d483fe-510c-487d-9739-82ed73f677fc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ecc21d-9bed-4b51-998d-2f2a7cd0786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c23ed8d-2ca5-4ad2-9d54-dca2f4ea48b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a388de16-2212-4e3f-94f9-18b21ed86f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7f8b8c-56ae-4d1f-888d-eee73cf651c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78840465-63c1-4473-bba0-2a894a4cecb3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7614666-6ce4-48e5-b8d4-e907d84a98d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d379a3-5161-42b7-80a8-6c75a855526e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa28598-3864-476f-ad7d-aeb9488b4f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ed4b46-5991-46c9-94ef-12b9201e75bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352a8c1b-5587-4d8b-a4e8-1290b04c705b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a000f515-0c8d-44ec-9c9a-67a5f9824c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffae1a98-51f9-408e-b668-9fa16a6687b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b242bbd5-54a6-4fae-a80e-cb54db86d9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ce3bf3-37c1-4ffe-9f9c-111668f865ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a05379-2630-4cf5-a2d6-1aa6e7e0395f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a25823c-a01d-4825-b011-97fc372594fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd91e28-388a-4096-8650-7bfa6c7df9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2db8ee1-a532-4c54-a220-6d39c38ccf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbc4eec-dc30-4ae1-b155-35b90813eaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d38a1a9-0e63-4d89-a2f4-81bd6089ea4e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d17308-b281-48b6-aafe-6735760d5fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2a2ae6-31de-4d3a-a0d2-f89409521886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b07ef80-821b-48fa-ae15-64acb6abdd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "58ac20da-06c1-4d47-959a-8de2cba940fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfd3765-5141-41a0-b3ce-2fc5a64cd9f5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aa11e1-c31f-43dd-abf2-cb97ba0fac5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be905b6-d2b2-4ca5-9569-0ae3e54209b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41ef5c5-56ac-44f6-b349-80d036803b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7d225e-af1e-4c67-9add-69317d4c1941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc2376e-1cbf-498f-bb4e-93103e81fe2e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d325bc-f05c-40ac-ae0b-e2fc2b225733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5deda349-6554-482d-9c62-99410d973ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a3e888-01b7-4a74-bb15-0d1828a12ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d3e87a-4b84-4086-898f-b0483665af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6adc73-3bc8-4a9a-8976-6e26d572fd67",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13327d4d-f743-4b65-9e8e-7acdd73c5f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75392a43-3e7d-4f29-9c2d-edf1d753bba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b9b0c2-61de-4411-a759-4bc4d7dfb640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eefbd51d-6552-43df-9878-b67d39f8f2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42bd034-ee1e-4106-af23-a90890f6e444",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21258c9-7a90-4a0d-b42b-4d5d11c65c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f04446b-1947-478e-a6dc-cd325f392c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45010e2d-870b-42a3-98c0-d9d1c2326b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca0b712-f633-477c-9531-2df1a376d001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1c687c-744c-478f-a52d-a54b35c785f1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee8ea51-92d9-4110-8d00-17acf54e9041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9bef46-083e-4f43-a508-0a3b8d4ac04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a86373-116e-4c55-bb64-e3361b238c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41269380-78ba-49bc-8cf7-e42a64a84aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e202caf9-ead3-4261-8ab9-763e8609d8e1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e076b8c-bfaa-43cb-ab38-0cc15e6efa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbc0726-fd6a-4fa4-9dbe-881ef647fb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d80e43-90af-42d9-8133-3e8f5677553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a54961f-175f-4a4c-9dab-d9f16a252575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98580bd2-a344-488c-8828-4e9370938271",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277d2657-cce3-4804-a72c-9c3874c26652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac12e54-12fb-47d6-8b5e-f977489b338f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2aa2ef-08ca-432b-82e5-0ed54710739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f45cc919-5a34-466d-b7d0-e0f61779eb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4906d1-6def-4557-913b-48802a7b9f2e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a367166c-eb48-403c-8671-0057c527936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3634fc-e198-459d-9bd5-3ba427f80a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b011174f-ab00-48db-899e-c7e91b035a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2ac049-297a-49b1-a6ae-94796111208c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c95766d-6adb-45de-b818-448eff249510",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9261107a-8a1e-4da7-8d1f-40fd24fea88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c66d867-3a8e-42a3-945a-d0647272ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96bc274-be6d-4607-9ea7-dbcbdffe79e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "daae59a6-b333-4dbd-abce-d592b02ed13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203ca7d4-6dcc-4f55-abb5-7f8330d3f15a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be27a499-9ad0-4ddd-b727-c95824a50f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d433efa6-f767-41e6-8be2-803aa60c68fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57731348-cbf1-4555-a132-1b8bd5866da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e117a6-7972-49ab-8771-d57ba0e87d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb542ac-e159-49e2-a071-b2ccf77e04de",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b791ce5-1608-4748-ba2b-0d6689a8e5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c2a4d0-2964-4704-ad92-ec50db3eaf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96add266-2fff-4738-b5c4-32f3914f2bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3481a252-fa6e-4ebe-9f08-b58a22e3d617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e405b-1b8f-4734-97e9-f33f4c94e4b1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48e1542-2b69-4b01-bcf2-5ebef4fa6779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da755a1-72a0-4555-a84f-61c51439e7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d061d179-e72f-446b-bea2-e32b43870997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "215e0d3a-4392-4fc3-8414-72e316df1631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab47935-b3d8-422e-9511-87ac2a1c7e99",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb27749-cad8-4b76-be45-78ce3ab83cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5421bb69-01f0-448c-9bcd-4c3dea2667c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d939178-5e7e-41f7-a855-30b525331d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92257d2-637a-467e-9e00-4162b871bb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cc18d3-3dff-4488-8263-f584febdb824",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42115f6d-c763-41f3-a3b5-76c78f2dc02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661928b9-e2c7-425d-936c-9448210f4d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe2ebc0-45b4-4870-a21f-870adbf3832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "15097203-4515-4722-86ff-23a8792520a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49abfc7-f798-478e-a1a9-c618898ea383",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2466d-6e97-417e-98fa-adf3f8e7cac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe4739f-5764-409f-857e-5c12dffbc6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c3441a-70fb-4583-8f08-1bebf0818677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4448af-70fb-428e-a59f-7fbc15cb6d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d674e3-791f-4cdc-81bd-d7b2681c9bb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2158e67-1499-485e-aa04-e9bce1ea4a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ed5306-49e9-4b09-be16-9699fa6ec239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7bbec1-4e82-4baf-ad8a-f0aa5c18ca38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f169ace1-2997-4bab-ba54-ba17568e57b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407c5d5-282d-40d2-9060-8107cb5b92b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253324c3-6f1d-4f07-8224-c8ae0edb90ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30e3cbe-e728-4a87-90cf-afac58bf39c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a6b9c6-d4e8-44a2-8429-a96b13355826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0a6ca0-696c-4e96-8682-883018292010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dc0a7e-9ed5-4d17-9c6e-c139aa16b0f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5106a6b8-9dcb-4f38-a1ae-fa0eb889b11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa563246-ad7c-47ed-b3bf-231f59492c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c5c6e9-a70f-425a-aa49-ea7cfc9b6824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9933a169-e494-4b6d-a3f5-af0452bb6c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5570ba7e-9de7-4972-aad4-2f3a7df481ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22e468a-ddaf-4d96-bb1f-2daf2b1af39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46bf36b-e20e-4215-82a3-c3ddf4a7dd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ab91f-5a56-40d6-bd6f-286d4210e75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2c6a2f-c8f2-441e-9cb4-f475428306a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea801ac-1725-4869-9fd5-f4b97cfa88c1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5992df-8736-4873-8789-d4c43e1557ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0d088a-8acb-4467-af7b-5d98b0b461e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384d9199-9606-4a34-8d31-f596e05daf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "055182e8-660d-4f0c-a533-7fe55db441d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2afeae8-3ce5-4ad8-b488-4a18231ded7f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15b9d4b-a763-4810-aebf-753b38deb4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104ef936-d2b6-4001-85a3-a36f85116b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f12f2f-2446-487b-86e4-252c004261c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d8ce47-9229-4226-94da-8c89dad0eb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f998cb-5bd8-45c4-bf84-2ebb0d36f1e1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f610b-eb82-42ed-b5af-398a33d98e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c113e9-ecb5-4e6c-9938-3c320fa516f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1051c153-c20a-4012-b814-c53ca1972666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1ebf27-81fa-4941-9cc6-e7a18895603e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b7225d-a266-4ce3-a561-8c31e3505550",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c3590b-7d35-4022-bebc-3a424d509971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699abc52-905d-44e0-8748-4065906dfc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa9c7b-ecc6-4d75-be63-b25ed2ffa553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38237eb9-e393-4b47-a226-92139d66bb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbf0e57-0b69-49c9-b2af-089e9dbefeba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cb3733-c47f-44a9-8a77-4d347b52ab28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4831d5c-295c-4cb4-a3df-5a275a910ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8ad615-9f4f-4ff7-8c4b-ca93f9ed1bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd297ca-6ce3-4baa-abe8-c8e7eeb4bcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac612956-46fe-4c4b-b9b5-73e682f23456",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22b5e32-357a-4310-b396-86305aa7d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c1b638-01a9-46de-b1bd-20f8a4dbc995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fa531d-24d0-4827-9d3c-8787012074ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6a820f-1335-4637-baed-13ead4848e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ba2e19-00d7-4037-8ada-ecad2ba3515b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c0eaf0-07ea-4bc2-bd0c-2aaa261025f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2adba16-86c7-4496-a1dc-ca63076b96ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8a8f07-70bb-4bff-84f7-939d5973d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6991f246-060a-4727-a727-46746cb1440a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dec87f7-8a27-4fff-b5e8-3f7ea732bb43",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61154efd-12e5-49a7-9cd7-a8c80d685198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d328df-c74e-4611-808d-cb68aeeebb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ee3efb-2c09-4c06-9ced-39820e414053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bba0522-5c6b-4857-8e30-c7bf3990cb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b54d66e-78d6-4625-811e-1288836269b2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b844455-babd-4d70-b285-a2f34b82f87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217332bb-0ef7-4939-8530-e2a5bd045bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435103ad-bf74-4a84-b1cb-5ea844e63bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "880171e2-5488-472b-88df-f7c0941e9307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a740e24-ac6b-44af-bcb9-39e91d47d384",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf66411-4ac0-401c-85ca-e066b419eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06063bd6-357e-42bd-8c2c-fdcbcfcedbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61117e98-04ac-4d04-bf28-c6d59319e781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92095bda-978b-4e30-a55f-153d8dc488e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed539a7-a9b9-44bd-901c-1ae2b73fbecf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219d5026-1556-44f2-88f7-65eb36de6cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4018e45-9771-42ae-814f-4c910b430be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ba200c-a79d-4b53-8e7e-1ab1f87e931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2ed171-c310-4666-aa50-3e61d4ffdce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0d16c2-8110-4e59-b2e4-4edca8c69dde",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61655dfa-e332-4422-b4ac-c29ec2836723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e4c8dc-fa69-4da8-ab08-1a6eae12a159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd37586d-612e-43be-b468-02da4ff3f765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b84fb4-34d8-4a25-bad5-c2b86f08edc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c339a616-f3d9-4218-bea5-985b9cb191e7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848d6b2d-8ebb-4a6f-b726-417ee614d589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed52ae0-af3f-42c4-8687-eaa160524171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79b69ed-239e-4d4c-bc96-4c8e1754fc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7bacce-239b-433f-99a2-3ee1041306f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dccc95-3360-48b3-914f-95a0f6e878ed",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2460dd3-e782-4457-acea-036f667bba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec29753b-65ff-4f18-9acb-96a1abf49994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0439eb-0a20-48cb-89a4-f554b9dbe747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "607137da-f53c-4bd7-9cd9-10e7863379b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6b3ec2-abb6-48bf-ba81-448f4352a484",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2e1d8f-b686-4ed4-bf36-575f9109581e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e69e20-5453-40f1-be9a-9ffc6374aa25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ab6af5-4a4e-47a1-90c1-0cb070c794ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9942e069-91f3-4a5b-8f24-a24b022d631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8902fe5-00ad-42c9-a583-a276732609cc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a9af7d-362d-4c4d-b12e-e2f19195d0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1ed071-d727-47ae-bec0-daa5fb352ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57304d6-b6c2-4a78-9553-7bd25c368aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a26cb4-341c-4d9a-a933-f0d6797338b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca3cbe2-93c7-4ab5-a899-52a812a4c942",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b6aa22-a79a-44d1-b058-2a76d094e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0379f94f-bda9-4948-af29-1a9a4a4ed067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9ade49-75d6-445e-ac9a-f02b6a807e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0ed17a-fb01-443b-9519-6c4a9045759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb0e935-b3f5-4fbe-a79b-e86a4c5228f4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a5e7f-331f-4d98-98d9-1037c87d7144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad05fbe7-8a08-43ff-a246-c0cd31e5a4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f74187-39c3-46ee-a686-b4760902a1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ac33d5-0ece-4dfc-93a7-4528ef2341bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb513ba-ef8d-43c9-b9dc-1b2253de51d9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8e5119-3d64-498e-88b7-242cdc179a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2361d9-67eb-44c4-8d52-2745343d2eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0321d456-7b4d-4039-8890-3f973f53b171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e87d8e49-f46e-493f-899f-d4487964878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4733ba-382b-4c4f-9ade-50d0d35db81e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32c6f6-62db-44bc-bbd3-4bd74ed25705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bdc190-452f-4fbb-98dc-febee4a51b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9cdece-74ac-4f1e-a482-34a320414f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac465c1a-621e-44e7-bb4a-a2c3c83c144f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a71a0cf-0a2f-46dd-8bc1-487a0bb24fac",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8881d9-f50e-4a56-8e12-a39e35cc3867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd509e2-78b5-47a4-b12e-135401983a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56ffb0a-8774-4c8a-ab70-bda340754baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef16139-34a3-4095-b4ad-e150d4c41a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3694a96e-093f-421c-8c87-699d70d6aa38",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf44a2b8-a417-49ae-b32a-7b426d75d25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f251d-5735-4d0d-8a27-5c1874ce8fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c327c57-ed0d-4a20-b26a-3e108efa7a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b24888f-4997-4211-975f-1694c0c0de06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1582ab-b6c4-4bc0-8839-b519b0cc6a81",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a87672-c28b-4cb6-95f8-52f1ee502632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edc2a7c-d4b4-4db4-ab37-e451b6fe29c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70747ce2-c4c1-41f1-a46c-a3e25bf80de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1917a574-a188-4d83-8f73-0eb8c0d978bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e31d527-356a-4b27-bcd5-301d8ca6704d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f328b868-bd4c-4f99-a297-fb4689d67bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058ae4d4-75cd-4d88-b161-e17a3c570039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d40da21-7bc8-4708-83fe-73d19b57e23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa951d01-bbc7-4aaf-a4da-17e92f8c9e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77228c41-6952-4232-a28e-520dc5e56c42",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f1b3d1-1e8a-432f-b623-9d7a1af75e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022c3db8-a8be-4238-b68b-c6736dc52768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2df5a70-0e1b-4ee5-9b04-e52b48176cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9768d5ad-c15f-42ed-bdcc-43bd78fd8b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3965ad-c302-417e-9bb6-85e7b4ec93a6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4b7299-840c-4aa8-b8c3-a2812751860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6e4d8f-2297-4e83-ae56-2319cc43f510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683f063c-6613-4052-94d6-ce92bd2251a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a48efb-6cd0-4ba4-9621-08621f26d288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77370095-cabf-4245-a358-df518c329bf9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e73da94-19f8-449a-a45a-7a6fc8111938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6afd1f-8817-4067-9384-00c0118793d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964396d2-c255-4974-87e9-a25315c74594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3337b9-1c5d-414c-bfc0-d746ee0c6b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49271a40-cea0-40ff-abed-6e9c2f6d4986",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4b4641-5100-4807-93d2-81e18c637ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d13038-e27e-4fa0-a66e-04f0571d7152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4883f0c8-f8f1-47ec-a289-98db2eed8803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb35d495-446b-428f-ad8d-ef9617e5e1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60d9daf-a87b-4785-8926-aaf358e7714b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb12f21-0e33-435c-a35b-7adbd6405053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601fd81b-3bcb-48eb-8ac5-a566bc73e4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30de8610-ace4-45d0-83e2-11524b072709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1777a2b0-c90d-4673-a35a-ae4799f7cd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12005754-0c57-4143-8e98-0b2b197b3a1e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858d3aff-0e14-4abb-8e76-d4e9e0ebda4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7f2631-7b2b-482a-8049-29a7dbda3144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af9127-d94d-4d27-9c0e-4aa6a0cca722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4101eb6f-f8f2-4709-8e90-396f92024997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90b980-f225-449a-a4d1-cd07c2fdff5f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e968ffa-1574-4d09-bc8e-54b3f14cbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "20c09140-96c9-4ca3-96ca-d6bd79d22e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaf9c9a-11cc-4b1e-9e68-6256fea57a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9e2c49-3a40-4486-9c12-e3313bb5ba6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "973b71cc-2118-4579-920c-42e81d5bb77b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6834578d-0a47-4d97-acd6-5930a817b87f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c884b39-bc34-4810-b311-6455f5701a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78268a42-f0c0-4033-ae38-1ca955543f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8f0353-c487-4f82-874a-95915a7d844d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6620859f-280f-4f29-bff5-2aa9e48c7344"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f08461-0c05-4b78-97bd-ac90fc1af68b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc411058-39dd-4c54-a4b6-2a5c70e445fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae45ae79-e872-48ba-9c94-a87b45c44b86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbc3e0cf-3dec-4874-bdd2-212a0d303acf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab9aae1c-1bc3-44c6-b200-edd120f24aa8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e91514f5-9821-4b37-bf37-607ec985a23f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01c0b5cc-86c6-498f-9e3a-428c5a39b7de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90f2e0b4-3a3b-482c-a510-8181f5bc89e6"
                }
              }
            ]
          },
          {
            "id": "c41359e6-8775-4f40-b498-d85f49094730",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1319e8fa-50c2-4bbe-b4bc-d8522002f219",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e4488b54-1061-4329-bce4-f4c2679df765",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2732a442-147b-4567-ae81-37a8213099ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5efcccfc-150d-4a12-b86c-9b4d37379e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb861340-f30e-49b1-a436-3b653f08fc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cb66cf-8994-457b-9722-30b7a361925b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f90a687-665b-4180-8999-875e3153f1f1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f031a5de-2a81-4bd9-bc00-74ee3c7ec625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78ef1f78-54cc-4588-be52-21e36218eb0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe66788-fad1-4068-ba17-007d7451dafe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f796d5d3-3e4c-45c5-bffb-3325ed27d71f"
                    }
                  }
                ]
              },
              {
                "id": "dc985c1c-acb4-4af3-9be1-b84ba7758e90",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c677e904-7021-43c6-b845-e0dfcd48dc3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7285cccb-2b3f-4c26-b329-bd6b477c341a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e317adc1-0186-4b7c-84a5-1de3288a2ceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b6ec67e-3e85-4021-90d6-c8c3ca7fee7b"
                    }
                  }
                ]
              },
              {
                "id": "d7a12aeb-15e1-4936-8198-6c5d92fff4f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "636bb85c-e945-4ffb-8ed6-92239d22f9c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ea2ee98-597a-43f2-9d99-7ec2e9547556"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4432381a-46a6-433f-b9ef-2494a8b366fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4844188d-9b59-4611-9051-47a20b64bbea"
                    }
                  }
                ]
              },
              {
                "id": "083e58df-2884-4986-8c76-365311f63203",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29d8f8cb-e103-4b15-a56c-c63ca95306a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e14b334-33c5-4e1d-82f5-e5db489b8705"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff78db4-8c6e-4365-8071-c5010c702e2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f8a021a0-67ab-4a63-ac74-16f64abe44d8"
                    }
                  }
                ]
              },
              {
                "id": "b8b3b84a-438f-487b-9de2-300b5a94d3b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2399fbba-db6c-4b51-ac20-703b49d3e35e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71a9d9af-de2f-484c-8475-c9048baa95d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e26ec11-ca9e-4a97-baee-c208e089195a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ea149709-673e-4518-9f5a-48359210a2d9"
                    }
                  }
                ]
              },
              {
                "id": "4f319e18-69a0-477b-9ffc-12440a411ef3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b27bef0-d34c-4a92-a1c6-64f7875f326b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "759f7a90-ab8d-4498-a8c2-c4f37a7fb4c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b81d3473-99b1-4072-aae0-6a2d21600efc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60b1889f-5bab-4ea8-a2f4-8165d8d94902"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "657a48df-4f4d-4569-8476-192e83f45515",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08886de6-8ccb-4f05-94a0-41d001518701"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f27c3a2b-3cf8-402a-acdf-f0c08f559452",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0dc8fb30-c964-485f-9248-4120bfabd284"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed33e7c-f76d-49d4-a1db-0458e4a3eb23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cb5c7443-42d1-41ef-9b41-a4a85e3e95b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfb5333b-7cb4-4426-8aed-c025e252d0ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dcf29ab-a752-4056-89da-24b48989bd59"
            }
          }
        ]
      },
      {
        "id": "3b1343c2-c2c7-4fe8-99cf-458505b68e18",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2c507cba-150a-42e1-be3f-cf9cc61d4453",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d0d1a56-0199-48d9-9a48-f5efb1fa4029",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bbaebdb1-1b2e-44ff-a193-b0afeb61efc2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16650be5-3491-4efd-b8de-66a61a74dd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bd4e89-f735-447b-8335-f073f3586e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7adced6-e8e5-4d14-bde6-9aca4ba724f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd37bed-c3c9-4714-a374-21efc249945c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de22612a-ea2d-482b-95fd-58ec4b6e9285",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed600e9-c920-46bc-be8f-470e4a2ec7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ab8e5e-6114-4bf2-9bca-2a9ec85d914e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caf7b4a-5e1f-47b1-ab79-7d39bb5540bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e00cc7-ce5a-4c45-b9cd-e6b1fb31c062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ba7e44-97d6-458d-b749-983d5be2bfa0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a669bbeb-2bf7-47b0-a5ed-c2ca9964b50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d446a09-de79-42ba-bba1-481c6c564769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aab2681-66d2-4299-8686-ec0e08282033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9da366-7c2b-476f-903d-ed0831fa4346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd342185-5034-4f5b-9779-04e469bd9350",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923c2602-9d89-4295-83a0-5165eca67f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa182eff-86e4-41bd-80f5-3299f2d76ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650faac7-64fa-4316-aca3-14a1ca7a7cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8842de8d-a607-4bd3-828c-6c9530ebe555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc1fca1-34ad-4fad-914b-37009f10dc36",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa5f48-14b8-4fbd-b32e-e2d45729f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ad52d1-15d2-4a99-ba70-972ce87098e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e35fb-c143-4586-9fd1-fd8df9af707f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ddcd94-d189-4ed3-84ca-b256aa1d96e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a08d41c-2eaf-4942-bafc-0e0a24ff63b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38001487-9b81-4aca-80c6-b6c9b5c77af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd65592e-26b5-4494-8660-5a9cf92bba00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bf6c62-1a4a-4e9a-a73b-f94f638c1e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be10ad2a-401c-419b-b875-87abab77ddef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f067de80-6e1e-4f9e-bf34-566432d3df3f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1787cd5d-a16b-4c82-83c6-97b9cdea43e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2561cfe5-02b2-4782-8cd0-cd80495339bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04483db-a0cc-4c85-baa1-2e1abebb8780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51caa3b6-1457-4581-b7e3-0285e777fd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ed71e-d543-4d89-aba3-6f05fa6407e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0730d66-7a0a-4492-a485-1f19bcecfa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8218de74-d735-477d-8f07-848a8b43252a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cef37a-4a4f-4978-928f-a8b839d1dfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b85434f0-cf12-4766-aacd-d94da202fede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e34dc3a-1952-493a-89d8-c057dde308ab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23c2b83-ebcf-4036-bbfe-e1f74795a625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7834002c-7b40-48e4-80fd-670ae5bc8709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b22ceaf-75c5-496b-b241-50c0595b9432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af800f13-7cf2-4de5-98a8-2ebc5a2e52ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48195e95-73d7-442e-8b89-42d24e9163aa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40c3917-0bda-4c08-8c73-784d3ed59b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4b190f-f473-4075-970c-41db9e949297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18416861-255b-4c37-94d5-5762613788fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be9b76d1-7cd9-4034-ab8a-6a5a99ff57bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f5b148-9a08-42cc-b7c1-e5e9ae732ca1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1d049-9825-454e-b745-449f37feee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff871fc-4510-4648-8981-04b93d8bd83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c60ef8-4b74-4e99-af44-90368770ca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6960d5cc-3d91-4e78-b1f0-ffe6ead1f56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9deaafb-5bab-4b0d-a72b-14a87ea2359d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dd3a1d-20d7-4c07-aa6c-a828930933aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fe71bd-964b-40b8-aac6-39573a457841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854f3632-6cdb-428f-bdf7-bc5a665de568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61122453-b1a3-43fd-a6f9-5006d8ccefc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536b3470-63d2-40b0-96b7-f290cc313be4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f435358c-e247-46fe-9b09-b377c63832ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5abe75-17ce-4046-8b4d-720a96cf7c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba8bfed-f47b-4f80-b119-88b8ce584abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3bc6fa-ad15-4de0-8ff8-4384be811401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11549ed6-3749-419d-a933-21d894fbf7b2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a70ab18-f696-4fb6-984e-5e8c955a388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3a33ab-396f-4ee6-a774-3d223667259b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9416698-e1e7-4dac-a2a3-b07e23ed5daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a53599ab-1271-468c-b629-d13f8334b377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d270b9c-3481-4bb2-a2c7-2e44c062ca7e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fa6004-35a7-4f2d-9599-399819c9966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dce9533-8589-4359-9646-4a54d8563e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9727de-8d6e-4abf-96db-5ba80ebfffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "acdabb4e-f388-447d-8d1c-3f3f6cd54ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25b7014-1000-47b9-bda2-3ab1454bcc38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567d7934-057e-491d-a2cc-942805982e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915c8fcf-0f48-4683-982c-fee7f858b42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8729d6-bd6e-4d1a-bc34-f90e08d34751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e2b6a3-968a-4a01-9243-d1eb4afdb7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91b65a8-ea61-40cc-a19f-51331ec01075",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e55521-2bca-4189-ab2f-4406110093f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185602b6-65be-42d9-9523-704715860529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44655ebe-2de9-4d83-8402-b2e78d36592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8987fec4-e3ce-4c87-a7c3-95a4aaa1e4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c5380-6718-4819-906f-baf0b81a6c65",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff71285-81a2-46a3-9ea2-a439b70860ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8466cc3d-e373-4103-8dae-f6e695c5b1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae2c1b-6b8f-4e98-90ab-9293220526ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca0f550-258a-41fe-93e9-ce9fcecbc797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1a31b3-8829-4d31-ae1f-518014b124b1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3c9fe9-30af-4338-9ac3-781925218a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a9632d-ed10-4f0a-ac3e-3e95f8d0393e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce21dbed-f92d-4032-91b2-e4aa091ea0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c5d801-1cab-43f1-8c31-61f48c6093f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ba2504-78e6-4404-8f35-f8c2c23a47d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55542ca9-cf8f-45fd-931d-626e1ca23c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dfa29e-45bb-4d68-b14b-581f3ad9ad99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9b335a-b707-4557-bacc-817b04238c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac0b45e-f5b3-4da7-a38f-26f22130e57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c35c7b5-3beb-48ec-b6a4-e0b152e7daff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91994046-92e9-4101-a8c4-3f9bd6a8705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36e4462-2342-4606-8d45-5493dfd8a683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4c518b-cdde-4527-bc10-c42237d77946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "083dae14-d6a8-43ad-9c70-f1cc9ec27c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9b6529-f649-4566-817f-7438f2ed2a4a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86713113-cfb9-40d7-aa8d-9948a69c62c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71753848-7291-4c30-8de8-8926f4e01d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8050e733-9467-4d12-9075-792e45c55e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ee52e4-4576-4d35-8e3f-2a624718c47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292011b9-45cf-448c-af95-fc491e76d04e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91a8d09-08d2-47ff-bb1c-96eed30d6c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682950f1-72ae-4fd6-872a-8cb9b1526f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c402062b-d9eb-4a2a-9f32-ecab0c0d0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f3db1a-9c09-4012-9eaf-32efcdf1b124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ca607b-b7f6-496e-b68c-45912ab2d7c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32dba36-09ab-445f-b419-27e02f73bfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444ef0fc-2ece-4702-9dee-e1ebeaa5f55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c16d0c-870b-4308-adba-095d816109ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c1b566-d732-4c62-8f9b-2c04ab9008c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16585a8b-50f9-4895-906b-abe0ea362a75",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f21fe-5b7f-46b7-b235-c1415a4c70eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2837e294-2a21-4eda-8cb8-964da3466268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96888b17-6b02-4af2-a601-d4cd44580a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b63e41b-280b-4295-938a-b643a611aba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c66b22-ca68-44ea-9a3e-7ad0f1ab4f96",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78333140-3002-447f-b174-49e09ce4e9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba72dc11-533a-4e4f-a135-c050ba9c853c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfbeb5b-4b4d-4063-9cb9-7b0a9036bcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b07301-2f09-4062-846b-8db634586804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4c7758-30ef-4e6f-bb11-5fac8a13dae4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e534b3-8674-4d57-8444-e9a637f9dfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b60e72-f9cc-4fd7-861d-410488440946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306050e6-5dd9-4384-8ac1-cb0d65500e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "290fca09-b955-4844-80f6-a29e2d1a9cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb36c77d-7cc8-4cd8-bf5f-99bd01e2c783",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ec85a6-aece-4d33-ad2f-a5445bded516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d881f863-2b8b-472b-a497-55fc60744f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cb19b-23b0-4243-8e91-8e10d1f2b63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9abcf3-2b6d-4652-a978-db900345df3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06a71fa-c055-4c35-8be3-568c3d42cf7c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248956f4-858b-443d-916b-32f99a367dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f38262-1e17-40ff-b81a-0a82dc06b90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e966da0-06cc-4def-8db0-2d4b6c24f813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52755360-5cd5-4d83-985c-e13502a1793e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd26591e-a2e1-4934-a8d9-c76c166fbc62",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e32efd-6264-4577-bdda-9f696176d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4846fe-26bc-43f4-a18d-8e217e84ba45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aaaec1-591e-4759-81ff-ed9cbe6976bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2527d822-9b2b-4927-a391-b798945d110b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cbd803-31b9-4a42-a057-2de9771c548d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f4a731-ee68-4c6a-a816-50b549e6b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e8b662-62c0-4f96-b456-61431145f3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69af9853-18bc-4f99-814f-62f7149ac5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f3cc40-61fb-46b4-a774-831d82ea7318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd9dea3-6b65-46a5-9237-9fac013cdd57",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18b9a8e-c10b-430f-9857-ba6589bba808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab6f0c5-63c7-4294-8b27-a441bb5841e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc5da0d-06a3-433b-b2a7-091da34e775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc8c7e2-c4c6-47f3-9de5-b050cdc93155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebff080-4153-4356-b4a0-c2e89c0ec43d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ae113e-de74-4fb8-95f8-c49d35a00d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a24d54-eb1c-4a56-a0a8-2bfee8a5b500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8704d234-e844-47cd-9522-392e238efc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97b5d19-6aca-4157-bb6b-18c87cce88d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b37426c-2352-4b4d-b59e-048adfb14cab",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02b0a6f-6646-4350-ab63-c04f1e494ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4326f1-22c3-4767-88fe-13ccffe082d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2206ffec-d9ff-4b2d-b6f7-0d31a4cc6231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaac85c-8f60-4319-8718-40ae36cdb383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73f576a-c0b5-485a-9a32-a584be9a1472",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e328bf66-e134-4759-8297-5ff529f65cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e5db3e-7c6d-48a2-a1dd-b8c21f4238f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5431c48-d916-4a2c-b31b-293624d66f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f804ba-be44-4ea2-bc70-d1a898453fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe515fa4-a7b6-4f07-8b9a-7d44cd0d5dd0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c15c512-57d9-4cde-b7ff-ff8edc36ffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae04cba-d067-4087-b297-1350067fe487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79a2ba6-2681-4df0-a0f2-23acb0f88fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76f20a7-b42f-4689-a940-0252a6c9ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29d50a9-092e-4774-a8ca-fdca59b138ed",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ea6ec3-ed32-452f-86a6-25820a97c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceade5d5-c329-4436-9f89-a9003d9a86df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd47c08-638b-41b7-b923-6b191e928e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aadcb5a-9561-4ae8-9fd5-6374c12404bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4146c76-9c9f-494b-9ab2-01a5f993da2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa654876-e1ab-47e4-b2b5-6f855a243d92",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02a04ff-b809-42bf-afea-e381f77be063",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "49d521d2-1597-4339-b48f-afea01f4e3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d6611e-d9d1-4984-8e06-9272d8c4abd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45e98d53-d1fa-43d7-86fb-f93b27192d88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce23aa7-8d98-4d15-bda1-d1d91da8eaa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acbff0eb-d28c-49ec-a358-bae3981325a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca47828-93ab-4a42-a581-85fe2f6a70ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37e53cc6-9ad5-48a9-9cff-9bc7edca121b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "479abe40-8138-42b9-8750-afdb2164a520",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fad813a3-09d6-47b2-a8c3-83c88690ddb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d294a86-1edf-4b68-943c-a68567046e59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c160ee6-3af5-4ae5-a988-efea75e26977"
            }
          }
        ]
      },
      {
        "id": "7298316c-74c1-41ce-b399-c3102296b2a2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5069483a-c806-4456-bcc4-0644ca9b1ca9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "244d2bfd-d539-402e-8b12-b73f6ce2819d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c836ea2e-bf1d-4a19-967a-dd546624af50",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad99af12-3982-43aa-a1c7-454d62204aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dd7978-1524-4028-9d9b-4ea6c5f91798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fa1d65-06ea-4640-9b46-d3f0d290850f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181c550e-f81d-4c93-be55-b53acccd06fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594b0857-4fee-40ce-805d-7c3125d6d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e783f577-ffe5-4bd8-aa7e-f283a04cf98b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c2db9-d787-4c98-9ddc-0027c55d3909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41c3932-31dd-4562-9bf5-6d1de4b9a824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd09d5d8-1a13-4774-b71c-21499c83d354",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424ff46b-dcad-4efe-9463-3650a2ebfee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6827ef77-0295-4edf-a5c1-99240939bee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f197b8a1-2e43-470e-acec-9f34e62aa96f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4ac999-e20f-45a9-8f6b-d84f4097eeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba86eefe-0a58-4107-801d-07b38586c3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a772bfb4-e15f-499b-8389-560fe2ceec7a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3f0a29-e33f-458d-b972-5addb5ef8bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67877004-39a4-412c-80b4-154f299efe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb42e5e4-7e86-4ec0-a42e-57e6136442f9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df54eba2-51fe-43e1-a51f-08a47f1c297b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b79d33-5e80-4390-8ba6-c8ecaadc9eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bd7511-ac3a-4f07-8a6a-cb64f42c5951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419106ce-4e37-4ffe-80fe-25ad019ff4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5e8bcb-38d6-4b06-b6ba-4f999f5ef0d7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb38085-6bc7-4790-892a-5cd43149403f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a36847-b4f9-4154-9a6a-9953f76caf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4d17f0-073e-458d-a0a0-c46d0ac166c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4bfe3f-7226-497f-8359-09f0a0821734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a70df2-6e93-4f81-a6bd-f03865bb31a8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4b3f2f-63e8-40b9-ab81-bcd598de6a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c327646-1a5a-44c3-82d8-5b6dc04e2312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaf18cb-a128-4d20-b8dd-bf4580b819f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665853d9-bedf-46e4-981c-4c15b0fe03c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886f46a6-4e84-4f2c-8c4f-43eb2ce4c86a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dec20e-b8ca-4d53-a21e-105f3ec07544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c269a6-886f-4fc5-ab1f-d7ace41bb302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a2b4db-c4cd-441d-b855-4625cd415657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7f87e9-c378-4ad9-8a55-3511916dcbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16576c81-db1a-410d-9fe2-0728ab5f5788",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66ab3a1-10e9-47ca-8056-3529ca6bf47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150480b0-936b-4228-be9f-2c426fa2f203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23063e51-9299-4d27-b819-7f629e96ab72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f9fe1a-1f91-409a-bb70-52902abfd931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946314eb-3c9c-4e45-a986-040a87a4c7ff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153b2c4a-78e1-4dc9-b2ef-2afe36b14bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273a041b-cd51-4c3c-87ae-106541ef9a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0c81b-4595-45ca-bb26-a7b98a439092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c400fd12-824e-40e5-885c-031f2a7f0722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa9c8d-c576-408f-8076-6a421626535f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aee7de-1a49-45ac-ae6a-be1c0d1b9b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5065ffa5-34c7-49bd-bc74-7e5699719f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed78e73-76f1-4f23-9320-fa33cb4b3bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3002df07-84b1-463a-b4aa-7c896d017121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea7803b-fb2e-4629-9e93-9a5ff4999760",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12a1995-8787-41f9-84aa-2b0b9a8f82d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38a26b6-874d-4b5f-a715-bc52b8212b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6c606-ba84-427f-8065-dc639b244ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d993c3-e3be-4d83-80cc-3dabf31d7975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e589666-514c-4635-8983-f22f1e3fa488",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a5c36-545b-486b-9a74-42f726e6bd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04567331-ca91-4583-b572-cf37c00d606a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbbaffe-f1e7-4c8d-9834-500885debfcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f24cc4-65c6-4eaf-a605-dee2f27377ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510e16a7-e232-4dbf-9a2a-73bb9c8e83eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81714401-ed7e-4537-8be1-c6b2c5b6a681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2b96cd-2ff6-4c58-8c07-6a1912db07cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf4b239-a14f-4747-88a9-52835f08b5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23654b8d-5a7e-43a2-84a5-d99bcc86e3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771626dd-0383-4ba2-8775-6a2012aea08d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84675a66-8b58-4272-9b6a-11b1a860e35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6078cd-e7bb-4515-a920-c9847ab0c558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c93f6dc-e593-4145-9d49-b066af98d92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61d6dd3-bcd2-4b71-8934-00b3212efe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fee559-1d5b-4069-916c-4c616216f2c2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42888d4-39b6-46d8-83bc-1accc9b921f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b869a3-80eb-476c-8daa-869b41175ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8d5f85-137a-4990-9ed6-5c905fabe7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef49faa-04aa-405f-8168-bfcf5a413dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5e9a4-6c7c-4e34-a334-e13a777ea2e4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6a627c-eb66-4e42-8f57-64c951696dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b1ac70-c6cd-4a7e-b64e-65a0751419a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eecfe9-a02c-497c-8eb2-1d243738c035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ae438a-47cf-40ce-bbd0-1b5f1005f1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f350c2-2853-4f34-a4a6-b8d5fcce4440",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464d0335-7cdb-4df1-8e41-005801833ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f746fd77-6d2b-425f-9bad-df0258ee4d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18608f7e-16ee-4bbc-96dc-4caa147d9ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81567038-de77-4f7c-b5e7-921ac685e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27613f4-37f6-4335-a05e-7219a9fdb624",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bb1fbb-283a-4099-928c-972e8080685c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff374ee-d9c1-43f2-8bfc-66e09f53abd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82caf1ad-ae52-4ceb-be2c-98f299b6cb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7456ffb-8553-45a3-bbed-5e6b6093d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bcf604-b6b2-4c51-ad14-c8be45136d81",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42d6c85-d38d-481e-a943-7a884dee5298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf66f4d-d92c-45aa-8538-7323061a27c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936f6193-e8ac-43eb-b599-cb8bddbbc513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a287688-2840-4ed6-875e-d9da2b5299ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f0134a-3953-42b8-a5d9-cc0ab4a4b480",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef277664-82f4-4850-8bfb-2d2834f1048c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4250cbf-724e-48ab-9ddb-65185e8458a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34c9c2-c879-45d8-b28e-06cce432f7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d578de1-5af9-4a50-8ba8-865489addb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d991e90c-ef2b-4bba-becd-c279d6b4eefe",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f5a171-d447-4913-ba6c-9a5ddf341824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3cf225-1a10-47fd-b54f-03fe58660042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00231d0c-eccf-4e80-ba64-02f75d795461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55de612-2f89-4b92-bb6c-4516639420de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b632a5-9538-4d99-9359-a3769d4ec99a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbf72a4-8bc2-42ef-ab0a-69e196e8ca61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf6a477-2842-432e-9022-039426ee1886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ebfb95-47ce-4b79-b69b-9901eadaf5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c69f20-e447-4ce8-b891-bff0dc8807ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8272e0c2-abea-4b73-882b-dc8672f938e5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cd20bd-29ac-435b-8a20-2aba949e079d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565b34c7-4335-4688-8041-bed7770138f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9764ad19-6e09-46c2-a9a9-57088149a35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f71d377-babe-4724-80a2-73804aefcb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7058c2-d250-4cf8-aeac-a7529ba3b18d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0077b611-14c6-4583-8f3d-a2d3ef55bca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b47997e-51e3-4be0-afd2-0231373d3747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194eeaab-3da2-496f-bcdb-495835223b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72acd690-bda2-4770-b0de-5c1cfd0c066c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f991ca11-7f8d-49b8-b616-b51e466b6f73",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a44a5a-c900-41f8-b896-67cc5b577d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1aaa8e-b93f-43d8-a73a-550dda3fae40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cd3dca-0614-4283-97ff-edaee6c7eb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a168ac7c-4d1f-4c4b-a764-74e57f6d3991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd12656d-d8ac-4bef-ad15-a44b6d60f391",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6996c546-e9ab-465d-8f2e-e34c509c9f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f6a7bd-3574-4be3-a323-8446889ecea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0ce366-9df8-4f34-9957-e38d8808144a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac14b31e-2dc9-4e02-a446-1d28021082bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bce9c0-f69a-4a76-8385-f37b70b6256b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d70fcb-d25f-4add-ae7a-a2dfc8d73196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c8da24-b825-4d5a-a0ea-378232d64911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e520fe-44e3-4c46-8342-1a31a28bd19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2447dc3-6348-4e64-abe8-6b08f9653251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41263e24-3f31-4102-a8ba-9a099a40d2b7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b62678-c198-4fb8-8b96-a74f0bb91693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241b8db5-b12e-456f-b563-ab3eabce81ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60596ee7-56ed-46fa-a2fa-fb36d059ecbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337f8cdb-5e71-4736-92f6-741e5511c0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec29ab69-1792-4a4e-8659-bde789750f15",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18df4382-3a98-4959-8c3d-52bf9c01d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbf3ee9-a54a-400c-a00b-2237f6ec9f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1706ba98-708b-4aea-a144-d6d24bed0250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cb18fa-50f8-44f5-9656-f24a19679c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b71d7a-81f7-43ae-8d46-45d2d861256f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e305e26-1858-498c-b261-d20aa4126ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8eee895-a3e2-4e7f-a1a1-9e4413e8d3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf49190-27d6-4e96-94c6-e62d84e81cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6227a3c1-dc4d-4411-a269-e18957dd8e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28d2d1a-0554-40f6-acfc-a6da7daaa569",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce971f06-3024-464f-9643-16d4860088de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a2aa80-6786-4c0b-af8f-c1cb345f802d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5887c025-96d5-4505-84b1-6997cea722de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf733b76-17b3-4d94-bc90-9dacd21a9d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c17ab-52bc-4fc3-9e28-3a7331812bf0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be66e73d-0786-47e8-97d6-ba4ce7df8e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55611326-8977-49c2-a520-6740c480f377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658ff6b8-ffae-46b8-8702-f906b87c7b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4870f9-6e41-4623-b2ad-91fb9c2f2ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec175ea3-e297-4373-b68a-a19a9e2e9fed",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd1dae-1a8f-4290-a136-6793cceebb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad510899-248d-4740-98aa-2d54352f9c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b888140d-0351-4aeb-80be-45fe58c68e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8576c864-856b-4037-bfe3-4a427d559463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4918b4a-29c7-4bff-8f18-284e7509b381",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23bb30d-1ab6-435f-9de4-b8105ba20b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88ef4f3-97e2-459a-9a7f-218f72e3ba7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d0d419-acd5-406e-938d-ba55e59c712d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54085fb2-2cd7-4d35-a67e-526941d3ade5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a554ab7-e1a6-4813-8635-b0707989581b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6a73b6-9a6a-410c-b59a-63d78c84696d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159d78d3-b164-4abe-90e9-cac4b543bd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa859502-9056-4ba7-bb9e-31d7595cb938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e772c5-42bf-4668-95b5-a68b01d9eb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59305c14-b610-486b-99fd-b532688fd766",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d7e859-7dd7-4346-9a34-2d75df850fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f61ba2e-487b-420b-b47e-11e2b462ead2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c0ad06-04fd-480f-946f-fa5817e73884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9b6069-c176-492b-9bb5-32f74aa9144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540c6d8c-8139-4be3-b7e0-20e25da0e1c2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f118511-59c7-4a8f-a2ee-adc8aeb1f9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c44b28-ce41-460c-bf7d-224aa74c7532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2bd467-4222-498d-a7d8-b6aa638b5b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ce2074-a5db-49bc-8fc4-683c6077d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b385cad9-0fe2-4e60-84b0-ec6f3a149b8f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5ebd7e-3818-4597-9ea3-0e31ff28cb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66795f29-9ee1-46de-9205-26e7f135469c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c44ab-09d2-4df4-a5da-8e21648b9432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e517635a-da2a-4553-9bfd-b3ebd223a190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e34762-03de-4815-9de4-f106bb71969a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c5ab73-6a72-4938-9634-08a59e7b5fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653ed1d8-dcb1-46a0-9ae4-42e6e3ad8611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e82240f-75f3-4511-b19f-5b2ab4f7c24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95c0a04-b3ba-408b-a8fa-3ddaae022e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bcc5ff-14ce-4723-bcf2-e3e4f99a0152",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6678d401-ec28-4d50-a88b-65e95f320908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd7d5ca-81f2-49f2-b284-cc9a8447912e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f700d-cf60-4dc5-b96b-f15a1c7f8f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405015f7-9120-481b-a7c6-700d6c481a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e24a8d-0d81-49e0-b210-ba7cd9404d36",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e653500-55de-42fb-91fb-0e7554341039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23317791-1334-4250-a719-06ec8899f18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3ee5ee-e651-416b-8972-a907ada20f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0470323e-7e7b-425c-a9a0-90be01be43e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e20bbf-2038-44df-95d7-37070689bed4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2bc420-c1eb-4581-83ae-42182f1430f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c599215a-0585-49cb-8602-a091e5171bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818d90d9-17f7-4802-8250-6f0268422ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5bc4d1-e38d-48d2-bc20-91fa70d0a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4697061-6f74-4f54-b813-11cb769c6aa3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda752c1-b095-4176-9554-b3d66afb4676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6cc4e2-c892-4c84-b692-6193cf71b061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bca179-64df-43da-a020-db60685a023e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755722eb-2dbf-48e7-a83b-86a8941a6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48081a2a-fcc4-4815-bcf2-db113357ea17",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb554ae7-6eaf-49a2-b47a-d9d5cf6b960e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828c7065-a5fb-47d9-8c21-9971146db280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec069259-475f-4946-9ee2-3d45e20bc597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2a8cd6-779f-45bc-a39d-e2618e786b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fd68c8-8803-4d1a-a65c-91182a38739f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56ac078-b656-481b-b402-1d52ede161b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f678445-8f57-45de-900e-6712d745d9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9f37db-25a1-4ccf-85ec-1acca47da28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b5c742-8330-4166-8284-8603fb609c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40310482-833d-43f4-a4d7-21d842c895df",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d311aaa-ed61-4e55-8d3d-afc332e7b717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf97dcb2-d347-4e2f-90e7-7feb7440f249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c167f87-4fba-47eb-be2d-7b0d1300ca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc1fa1f-d139-4724-a99e-7551d7fefc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fc9396-7cb2-400e-8530-635f4783819a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaaa0ea-bfdb-4a0a-a1bf-c0f21a0ba64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef4476f-09b2-4d01-9564-2f2ded25d9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f209484a-9eb1-4fc7-a171-68f11fe8c47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c20915-63f9-4801-8dcc-d7336213f822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211129a1-5299-4d18-b393-9d32c75a6a08",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd05619c-deb7-4a09-86ff-805301ba6248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569a6132-4855-47bf-983e-b5219cfc4b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6821829c-0f21-4bcf-8546-44c6ed84965d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4aaf99-e2c1-4dd8-bc54-6ee8b7ce5ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c697fe3-215a-4630-8133-d55dfdf0526e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6888443-8522-48ff-9273-8ba21aceba5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b817fabe-b850-4be1-92f7-20417661df73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf0abd1-3ed9-4f80-b77a-4e97216313bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874e14eb-4f93-4766-8415-4986cc0f927e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562c60a1-447d-4001-87eb-354aa003a4fb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3d51b3-b109-4731-9bff-47d33d5150d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8418bb1-9e69-4cd0-86b6-1852bfc56f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43683075-3fcc-4e70-9127-d169114e853d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37eed791-89bb-4c7e-b8ce-1ec465316efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c20ce9a-b1be-4b2b-847e-501d640dc938",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f533b76-c86d-4346-926e-c4b9531d7ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b18bfea-4987-4873-9fb5-c2b5b1bc23eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4720b7-503c-4cec-acf7-0f9ed2acebc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931e21e5-ea04-4f45-a709-e2ad8b6743d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bc5777-2839-4c44-ad58-c51b7e56d40c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3f08dd-aef2-4b7e-81d8-6dedf6a21ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d025648a-cbe6-4d1b-ab5f-82d3dc8a8034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb056687-57bb-43dc-a2e5-4cc74f46e093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879d96c2-11e8-415c-ae36-11fde0999450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354475c3-2d06-4b0d-8776-1ccf11e36e30",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6cbe3e-fe10-4fc4-9741-a5b4fc1c9b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84120625-09ad-4d70-9701-b296dda0ebe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845bc35-d016-47f1-947a-95843e21d2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505d8cb7-2c18-4d7e-8ab1-9f907dbda56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87531a8-5e62-4893-9de9-c6a5c6b7afd3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7208e9c-6780-4040-86b3-8c2f7010660c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92265102-fa4b-46f9-b973-7a92b211345d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b515192c-c486-4db7-9968-f112928d4231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19153b77-b334-4fbf-a2dc-7b95f8cfa7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32b4ffe-402c-476a-a286-de376d7855c2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6039ca52-ce44-421b-b179-a96831be373f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f451d4-5285-4013-b6ff-82c5b0539257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba6e692-f9b3-4256-b5f3-5df39c4b9076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234905b5-df46-4cef-86a2-5501c814d43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0881ddb4-aa4d-46f8-ac79-887f434e7378",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9533163-684f-4a69-b36b-e94a33be3e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f892be3-c11f-4480-9b15-6d5f310fc20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd575d37-0006-4ad8-bace-4765aaf0ebb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a48e45f-18e8-4f53-8110-e7765113528e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fba2bbe-ba87-4aef-a3ff-d19e5c1f8782",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d775a15-417d-4133-815c-177eaa6dfaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bed031-3aba-4f68-91fb-c26f113fbb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac212e40-22db-4bfd-8114-ecb4b1a1c9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83be87c9-edbd-4bbf-9e19-585a1db7c692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb1f055-16f5-43b8-bf78-19b7a18706c8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c231ec51-be04-4b28-9df8-69b6426dafa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412f8d17-14aa-4cfb-becf-f71e56c94d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500aa243-8bf7-481c-b405-aadf592fba3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5555cef9-dc75-4cb9-8187-1620036a787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ce298a-7be3-4b93-b6aa-a06d7a7347be",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a3c598-7a4e-437f-b441-8b930778b7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd8a7ab-b716-4cc8-be8d-129f96703330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbef2b6a-17fe-4ca9-b713-878504c757d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb60f63-b71b-4132-befb-fdf499db0ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de8999-5249-43c0-9de8-ff996789b851",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c81f61-d7c1-40cc-bd5a-3300d6b4581b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbd1d98-5221-4c82-ad74-61abe765eb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6465fef-0825-4348-9e2a-5fdbaa8715a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88309c2-2530-4813-82a8-0b43d8751a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e36fe-5ad7-4a5c-80a1-26c731a6beb3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a898982-54a0-4d64-b933-a88e2bdba612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56cced34-a873-4254-b22d-10ec36987f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f93d51-03cd-47bf-9530-0e15d2b26005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1b336b-4338-482c-b5a4-5bdea6ae0dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffee5e2-e4c6-4b26-89f4-15d7fd46ca08",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714322eb-474b-4457-a540-7479160da38d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21dc0e20-b8a0-461f-8236-541340ebad03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143d1be7-64d3-47b2-abda-8e1a8da2fe22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4dc82f-09b3-4568-8ab4-63ace3946e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca46554-75e9-464c-9119-de11e258d6a1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c3ad4f-4b2f-42dc-a335-56192bc6e2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bd4523-76f8-482b-aa9e-2b727a75dbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6812ebc5-f98e-4e05-9542-2dcfc64d6f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2ec36d-a9eb-4f21-a798-d74d26be5016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf66e12-6bc3-48c0-969f-10e81e06d45d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116e7bb9-963b-4e7e-a836-5ff7a55b6453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea46cf6c-8ba4-42d7-a99c-fdf380111fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b35885-b13f-402b-b054-478288bd701b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b3e799-161e-4c8a-ab61-bd75c3eafcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16853380-8e01-4e06-88fa-0db0e1202356",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9017791-8672-4047-b808-f56eba669323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131e7c4d-0dc6-4d1b-ab87-49fe30f89183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04828c79-1086-4499-bfcb-0cf73b83e7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c24a31-b0dd-43e1-a057-05c137dd1fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b69bfc-8f45-4f40-8680-c5c79d96b271",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83036236-6349-4e87-93d3-87d664f38540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415db14d-3ca5-4ab6-bb27-a68fc5a8991e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bba00f-730f-450b-b977-471fb574757b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bfe88c-c11e-4e76-99f9-6cca097acc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08543535-4a2d-4b92-8da1-b7cbe8c2bc27",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6d16c8-d9e9-432f-b316-4d5f562c5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "053c6e22-504b-4a0d-893b-649fcade889a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a988a-94de-4966-9c69-c8aece406123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efa0c7c-f64c-40e6-be43-93251e4276db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb6d568-fa7d-473a-8ccc-ca0e87057d0f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6991dc-003a-4582-a948-f95a910121ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c07206-32eb-4467-bb19-f002a5b0fc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c378156-7782-45f8-aea3-abb0c3e404ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcbe53b-2a3a-486c-a1d0-d0159fe501d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ede440c-2082-4cb6-9010-56adf4278e18",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164dc69d-d00c-4523-a71f-7ed6103bee51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817a4748-285d-4f00-b10a-7bc0a2f147e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72354ab9-f0fc-408f-8415-6e5c8c589d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c404c0-3971-4805-8066-de282b726474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024c14a6-177f-45c2-adda-bf0671601726",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d94bc6-47d9-40a2-be82-6d29b137b78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dabeafd-9ba3-40cc-8de9-671b72c4a5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a050743-8a0a-4100-9e61-6ad71da69123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6f1d41-f965-48c7-bafa-c310c143702f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456aa7f1-0309-46c8-ac1c-af834d92aeb9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1d998a-c38d-40ca-8068-3566fa11e6d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691ef721-d5b1-4b10-af5d-72daee790124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f7ffef-872a-4ad6-9126-cf985cb7c4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8663c98-5893-453b-acb2-37eb80a08933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af9ae2d-00f7-4fe6-8cba-01bbaff991ec",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ea7b4b-3d08-42e7-9e5f-ba0a9f6b90a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f5fe54-4c7f-4235-bd23-7ab0ebd4e314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6d3ab9-3535-46bc-9514-3f55ea8b781c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc912698-9578-4445-903d-4c21b156588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9771bc0-f351-4868-91cf-78461ff1aa7c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c887caf1-6bea-4e39-a160-158fbd96dfad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c663b5ce-3a44-4815-9254-ab684f7a461b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab47da63-6bdb-4d1c-aa81-1c43c5c2dbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b72fa8-f484-42a5-b15e-80430361b21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f27cbb-8e0e-48ab-8a34-452921352cc3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bafe9e-8308-4d3e-b792-9f13452012e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b099b8-f7fc-4259-b994-8756eca53ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4645f4bb-ca57-40ae-9717-dc1a5f097095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba4b20e-1c22-481c-9aa3-32f0f76f0d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c86a9b-eac9-4d9a-b0a6-aa64bba46ee4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9ab554-57bd-4536-98ad-3ec8def5f17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e21add-c1dd-48da-8bf2-bc8379e0e5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da9c803-a331-4df2-960b-07d126f6fcf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1b9a0a-3049-46cc-9bdb-a41906c798d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c9bd51-23e4-4450-85af-35defb891482",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5a78ac-dd80-466f-9e4e-3612a4a365ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f6b567-f496-4542-8959-a7b85034aaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cc76a8-cf0e-48de-b138-0907933d4c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c00f85a-5294-471b-9390-b0c569f43c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d28152f-294f-4902-9e1e-221a4f25b2b2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d5064e-5bd6-4a04-9516-a9a6c8ef082d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e57fc757-1e62-4386-8f55-adbb412954ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e62ab-f310-4fa5-9bbe-d5fd099ac702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442f75ed-b667-4ead-a6ba-60b9792c181e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2ce4fd-09a9-419e-8faf-d83368fc799c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68969e40-b42e-48c2-ad3e-109b5341de31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd64ce5-e5b6-4c5b-a81f-f170cae16e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0426abc-8d3a-459a-9e71-0d29fa5fc4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa19448-b751-4693-ada3-ef004a3e6492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbb68ab-6e9a-445e-879f-0f7f2324fb85",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ff02fd-f9cb-4c8f-99c5-802b42857735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2465e8-9277-4187-bc0e-a3b83c4fcdb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90ae63-a8ac-44a8-97ec-1dbf4bb56b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b441400-925f-4c65-982a-61771b045643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623f272a-025c-4702-a452-ab2b2175b4db",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9bc4f6-a10b-43ca-8fd2-acb36001053c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03da482c-e335-4262-9a72-93d729f0a5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e75d162-cc0e-4c90-8ef5-1ccb23d954ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4dc450-ee03-485c-8205-f00ae7212eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19796c7-a914-4672-a6d5-8fe1e44cd97a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b952a2-21ed-4aa5-999b-8d07d0f27efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45edabe1-ff4d-4bbb-a5b2-f99f71d2cec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8aaa09-1612-4724-9db0-3e6db19f4ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10abe0af-5c56-4a75-b948-0c6de00922a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4e79d3-e44f-4ca5-9b5e-a83163a50927",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1da085-d9be-419a-b566-76d539d68b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007b47b0-e5ae-48ed-9554-b87a3c029649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ea483f-719d-4895-9d71-9c33fa1b4df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84822871-702b-4177-a87f-234866b7575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808fa7bf-22bc-4c8e-9455-867bcb13234c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3229c658-c22a-4746-9b6f-7d79c04d6e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6411210e-9b74-46e7-896b-d2bae45edb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b2dbe-fe1d-4f62-8e57-ec163cf915a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab4e8f8-b201-494e-8f7d-1d903281f20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e87e64-4f02-4bcf-93d7-5ba06b04ab12",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c176a09e-b6f3-449f-a4d9-4d286e95c669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819a6e6d-2bf5-4762-8ad3-9f012cb66bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f67b2a4-f5e0-43ac-b6bf-1c62bfa76857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95af1ebd-33ff-4f86-b87c-d5f281a60d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41af037-ab27-4187-8d61-5c15363f1381",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b806ce21-e48c-4b56-bd5c-d504d14547b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6356c1-33e8-47fc-b119-6240391e6407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f890eb-fc68-4cbf-8ded-1e5141597505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8da24d-97ae-4fde-8cae-ddda8b62a97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4037ea1d-3ee0-4c53-bc40-014b501209ec",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d79758-1d36-47a8-b770-a24707ae85e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb534f9-44b6-410c-89ad-67bd210e1f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076154f4-ee95-4a15-8eed-c2495671da4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd6f3aa-edd9-415d-93b4-d0f708b40505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e3d104-bb6d-4aa6-8b04-93f2bf3ed38e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb32a60-89db-4e25-8f33-e4d91bad68a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7fc180-d8b5-4ccd-9155-5654888720d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb0eaac-3e0a-4e92-b0a5-f1e006b4672a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d274f939-3240-4487-9ab4-2c940e692684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b76ee2-392f-430f-98c4-5beed3897c74",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf8755-1410-4ace-ad41-41d8034cdfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2dcfc7-beab-4ce5-b1b1-7b1ea5b9f63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3ddf10-06b6-46bf-8e32-c8f14308b3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8c7e87-598c-40dc-a610-99ef92626397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad9a8a6-4604-402c-bece-4334698bb709",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a96891-e980-40c5-bfd7-054df2ce3245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af594d7c-0c69-4508-8ed9-a0cdc29a12d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1faed2-feec-48fd-a266-1792dda336b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a87c0b5-c020-49f8-9121-76d5f89088a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3bac0b-145d-44de-bba3-4ef02e051049",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaf4258-0596-4793-b6af-aa42625dd7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec294da-dcc0-4738-801e-42a63652f078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18921e7a-5802-42b7-b979-926385b15b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f2fe60-29db-4b65-84f9-5d8b68dfb919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6b02b4-7725-466f-a040-8fe0753be7ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6665b6a9-21d8-44ff-8adf-d86f5cfc5df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8c54db-cf96-4aa9-a43d-61f0f9dc0479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89569a70-432f-444e-9d0d-6298eb6a0eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fc3378-67c7-4930-922c-6d766a92d9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b899f0b-7ea6-4d1b-893f-0c7b2b4eed10",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9179e1f6-5f65-4f5f-8307-c06865c1474e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a49d2ef-13cb-42fa-969c-170788711aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc045cd4-ff75-4112-9fac-e4267f70aedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c84892-767f-40c9-95ef-50258e230a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edca58f-79bc-4f0f-88c6-daf87142cb34",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5b142a-24c8-4b93-8c70-78384c38ea93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11971ce-76bf-403d-a77b-5dd9cde46936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a0538-a695-491a-8487-fe2278a0e4de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48eccaac-f01e-42f9-96f3-7c520499a6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc40e28-4e33-45f3-9fea-efa684991a1d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35e1347-c969-475d-9cac-c6f8c3a1b965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48a7ad9-4dae-4b13-99c5-f0c0c988e04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef01ed78-e41b-4f91-9414-7ee0b2695359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056d16e3-bce6-4a1b-a86d-51e3d6f05ef5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca70ea5b-0a52-4d70-a952-8ed9b563fad7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f772314-ad23-44c3-88c1-74d7cc9b72fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd380217-0963-4fb9-92ce-26592a5fa453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b4a6ce9-f411-4476-a769-76a11ba2975c"
                    }
                  }
                ]
              },
              {
                "id": "664e88ae-5bb0-4b0a-aa47-8fa6c8714ca3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae44ba9b-527a-4ac3-9430-f172cd8b83c8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acebf66-849c-40e3-8d97-bc8ec6163434",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05dc5ee3-64cb-4f4a-b30d-dd7cd2a2635e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d04e27c-0b93-4b05-ba3d-82b5dc52d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e308e527-6c08-4b0b-af53-6f2d6f657d40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39ad369-f7e0-4520-b0eb-3472a81c3134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e15d0111-3c27-40c9-99f5-5a3bd95a1fbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "420c61e7-a38f-4fe5-9486-31e843608a08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a11fff2-7ef4-4697-971f-abcfff756c77"
                    }
                  }
                ]
              },
              {
                "id": "58faf7c0-e10c-4c3c-b623-b7530d4cd169",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9fb4abc8-e1e1-4449-bd88-56724ec97f61",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dee01a-b486-42e2-8b0c-95f2e68be27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "335f97d0-b8ee-4367-8b61-1fdf30db4763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a135e0a2-e086-41cf-b2eb-82851303f3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9694251-5feb-4f94-8463-eb22e2af9a36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b81c28bd-b2dd-490e-93be-860bc0d6c3e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99d064f3-a85d-4228-ba1c-fb4ec9623ed6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59918a99-01b5-43af-bff7-0bd4522d4930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5be4caa-4578-479f-92b1-933f823dd8c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38234c38-2b20-41ea-bcad-4e15c34a5901",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "135d6214-35cb-43de-b8f7-433e2a266832"
                    }
                  }
                ]
              },
              {
                "id": "e383b217-2a21-45ab-80f5-61f5f5dda1b9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e84cd56-4e31-4127-ba38-bd420cc61267",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "43e79d83-de2d-4657-a5cc-1706c515e4fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bc1c69-8814-422a-b5fe-96ba21797a63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "658ea81c-83d5-472a-ad76-a62234a7adb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfb363ac-daa7-4088-abd3-08c0a37c7b5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68df9839-9109-41be-8f11-78537c538097"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c28454e9-89d3-43a6-ab51-44699907e91b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f748218-4392-40be-8f3d-1d4a374c2292"
            }
          }
        ]
      },
      {
        "id": "07444106-2e8d-4f40-a24f-e8d7bf0b5e30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "70dd9d69-af8b-4ac4-b46e-bfe568276090",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a303b5ce-0009-46ad-a397-c44c1cac8424",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7490fecd-0c04-408c-a346-f7b597a38a24",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9529241-ad32-4843-afa8-86a0f4522e1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d436653a-f41a-4d0b-82f1-2333361baa99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866ee474-1727-4399-8159-388b47f8a67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ecfb41-4db9-4808-9734-b38e08a2724e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4bb814e-3e24-4adb-af9e-9201bc2b7d7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26ab7935-dcfa-4d8a-a96c-d9f73e0d6293"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8298a4a2-fa1c-40f1-a781-011a8d98358f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca6be978-b0a3-42cd-a940-66a9a7a6a36b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f6f9c07-f27a-4a76-acdf-6c7293a9e7e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bc707c53-8f10-439d-97f1-a71b896b16cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d591d8b-c2a4-43ce-a97e-ca0e1df7c39f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8494c8d9-e810-4850-8cd9-083d78841520"
            }
          }
        ]
      },
      {
        "id": "9dbd7244-21c7-4c1d-9c06-c13aeaeaaa9a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3dd09741-67c9-4dfb-b87c-4fc291b854b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6404e99c-9307-4bbe-b54d-80af56f5589b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38dab321-60cd-4512-a6ea-a0a7fc7233e9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28cf2a8-ed63-4a29-9aa6-a8bd6b3dba36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c0fca3d-126c-42fd-8917-7c80366d3d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e0ffbb-24b5-4223-a8d1-246fd14976df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72b47fbc-9eb1-44b2-adbd-646b365deaf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e7664e3-33c2-4d1a-9f04-01d16544afea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c002ae44-e103-47a9-9780-c577dcb32b6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88ef5a7f-fa10-449c-a278-1019c7262f3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "742d604b-bf04-45ce-8cd6-beafcddc2084"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ff02b1d-d65d-4c49-8bb3-08e48ad6651f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b9c0e3f-1702-4168-b8f5-345a66b1ef0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "364d46c0-ca82-46b0-84e7-a4987adc80ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "250778cf-a643-4067-9a82-1cb0d95b088e"
            }
          }
        ]
      },
      {
        "id": "cb6941d7-d934-45ba-a556-55ccbb1da691",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a60aec1-01ac-4a65-bfd9-e3f096d67aa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a08488f8-2578-4a7e-83bf-55b1bd954c76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f6b154b-6315-499e-92b7-2af42b1211a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee861811-4873-41b2-8993-cda2e6b9e918",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e39a3466-0460-4c07-8448-e8d03bddb79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a8b88d-b29a-40dc-942c-7274830650df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0ac903c-b432-4bb5-a610-538f45340d3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82d560f7-9dfa-4cd2-a73d-be1b1c02079e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af8b0bf3-e8cf-4c23-bdec-05350e297aa8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce832ba9-b64e-46cd-90b6-cbfec799ca0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd157b93-31c5-481e-b559-787fd5f61353"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21fe0735-0328-48c9-9924-f6564f2d92cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d18b860-7181-4ba1-af32-696418bdbb8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d94096a1-546e-4f59-b6f9-426fe05c00ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4f282bd-5034-4c3f-9303-675b62dc57c4"
            }
          }
        ]
      },
      {
        "id": "7f5a194d-9e3c-4806-a756-711e0c4ccb6d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc5cfe27-bece-45cf-9950-71e03f65d52b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "632c6058-5fc4-4b6a-b211-ef4a5c519772",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "49b7ee84-03c8-48b6-accf-50e21fc5b0eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5ae1d06-43a4-45a4-81db-e4cf43cff8dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31f97a69-7551-4319-afa1-9ee31d97abed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 32.134920634920654,
      "responseMin": 7,
      "responseMax": 281,
      "responseSd": 23.140308120557386,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724200815945,
      "completed": 1724200831996
    },
    "executions": [
      {
        "id": "55bbec0b-8dc6-4fe0-8875-42d37cac88b2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d81397bd-9847-4535-81a1-776fca95a82d",
          "httpRequestId": "8e6623cc-a8f6-4ad0-b31e-ca3091a1bef7"
        },
        "item": {
          "id": "55bbec0b-8dc6-4fe0-8875-42d37cac88b2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec00b86c-1803-4659-a436-920758a79309",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "4743f141-a901-4365-8fc1-c0364847fb0e",
        "cursor": {
          "ref": "6a532ee2-e933-40c2-87ae-dfe7472f4f2c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6e1f2b71-46c5-4f07-8b76-3cb81efc331b"
        },
        "item": {
          "id": "4743f141-a901-4365-8fc1-c0364847fb0e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea47bf4f-6d4f-45f2-8b8b-4ef6af5ae9de",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "58e64462-a7fb-4c2c-8d69-3e837251dce9",
        "cursor": {
          "ref": "43ee84f1-a670-4f3d-8c6d-17ee1787b575",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "31722d27-d648-470c-a2d9-7c52d020d6d8"
        },
        "item": {
          "id": "58e64462-a7fb-4c2c-8d69-3e837251dce9",
          "name": "did_json"
        },
        "response": {
          "id": "f7921067-23a3-43a1-a158-28ebdf7eb791",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9789e7-df33-48d0-971a-05ff64e4e958",
        "cursor": {
          "ref": "f949c114-8b43-40e9-b439-540de7592b9a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ed6fd014-e9c0-492c-8dad-a29076c9728a"
        },
        "item": {
          "id": "3a9789e7-df33-48d0-971a-05ff64e4e958",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad22b142-635b-4e7a-8d6e-7063cb4c2579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9789e7-df33-48d0-971a-05ff64e4e958",
        "cursor": {
          "ref": "f949c114-8b43-40e9-b439-540de7592b9a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ed6fd014-e9c0-492c-8dad-a29076c9728a"
        },
        "item": {
          "id": "3a9789e7-df33-48d0-971a-05ff64e4e958",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad22b142-635b-4e7a-8d6e-7063cb4c2579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50e034-692c-4a85-9ee7-6ff38b60af68",
        "cursor": {
          "ref": "36a6a319-979d-41ba-8c0a-591101a152a5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4ca6d6c6-c331-4312-aca0-15288e3241b0"
        },
        "item": {
          "id": "ed50e034-692c-4a85-9ee7-6ff38b60af68",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e01587d2-b6e2-4a3d-bca9-0ef5903a179d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 147,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2287fd04-4acb-469b-974f-7afcfa478b0c",
        "cursor": {
          "ref": "489d0a51-cf6e-436d-b524-169369b1a6aa",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d891ade1-ad11-4ad6-903e-d346b00333e4"
        },
        "item": {
          "id": "2287fd04-4acb-469b-974f-7afcfa478b0c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "147afbce-3d91-40e8-a480-a362ffd93858",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78ccc02-ee43-4f51-9013-781cd44962b7",
        "cursor": {
          "ref": "fdb61ecd-3946-4675-9823-699e78499fc5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "26ec137c-7632-45e9-b1ed-04172cb3327b"
        },
        "item": {
          "id": "c78ccc02-ee43-4f51-9013-781cd44962b7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f0629631-fa98-4d2f-9c6d-2f51c97e8f4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c479f3-d824-4608-b317-d84abcf91dc5",
        "cursor": {
          "ref": "e0002a54-99ce-4676-8601-49a05cba4c22",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b1fa924e-b7ca-4eda-9b5e-42f9556a9e5d"
        },
        "item": {
          "id": "78c479f3-d824-4608-b317-d84abcf91dc5",
          "name": "identifiers"
        },
        "response": {
          "id": "17948a5b-c064-4319-aba9-fa7cbe1cb1f1",
          "status": "OK",
          "code": 200,
          "responseTime": 246,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5982aec4-fcba-422c-bbc8-81d94400eefa",
        "cursor": {
          "ref": "c140a435-90c5-461c-89d2-8b11dca17547",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fc1fead7-ae27-4dce-99c5-98db48d3467f"
        },
        "item": {
          "id": "5982aec4-fcba-422c-bbc8-81d94400eefa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "497003b3-ece6-48fc-adad-c228b451d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c25b79-4ad2-41b4-9bda-c9598e88785b",
        "cursor": {
          "ref": "0a1d0f80-dc60-4818-b644-d399b6d9e86c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "df9bb852-4dfb-4d02-81a6-76f448289af7"
        },
        "item": {
          "id": "80c25b79-4ad2-41b4-9bda-c9598e88785b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1bdb828d-495f-405d-ac9b-8926d02a17ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddad7e9-cbe2-4d65-8142-9ac1d04560f9",
        "cursor": {
          "ref": "13381013-af5e-4dbc-9687-676a6de74fc8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "55db7fd5-9d8d-402f-a8e2-92de1da7a083"
        },
        "item": {
          "id": "bddad7e9-cbe2-4d65-8142-9ac1d04560f9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "06009bad-4b47-472b-92b3-e61a3d581c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980aa6b8-b358-4e46-bd8b-b47de97e23a7",
        "cursor": {
          "ref": "ee5c5420-d2a2-41c3-a7f5-a6602bee38e4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "32da9efa-f423-479d-bcdc-0eec488fea67"
        },
        "item": {
          "id": "980aa6b8-b358-4e46-bd8b-b47de97e23a7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "14a9a840-0e7b-4e2f-a8b4-6d56049a7977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e4e16c-52ba-4a75-9a07-a480e594a1de",
        "cursor": {
          "ref": "c5be94e5-7bc7-4e2c-999c-906985457a4a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6fda976-ff86-4e59-95bb-fd5f92686e29"
        },
        "item": {
          "id": "f3e4e16c-52ba-4a75-9a07-a480e594a1de",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0c2095a7-9979-44b3-a77c-017091e5e523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f442ce-0a2f-434e-b275-7e05da9b634a",
        "cursor": {
          "ref": "0d55474c-b97e-4961-adf4-021aaa792348",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a981efbd-ecbb-408f-aecb-d3930550a35c"
        },
        "item": {
          "id": "84f442ce-0a2f-434e-b275-7e05da9b634a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "06fa9dee-617d-4ffb-b6c0-fd131e2a2f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347a1f37-8172-4600-b697-1639ea04fa46",
        "cursor": {
          "ref": "bd54c96f-ff8c-4f1c-a321-52940a7927d7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "16e8c9eb-a122-4b7d-9d7b-7899255a405f"
        },
        "item": {
          "id": "347a1f37-8172-4600-b697-1639ea04fa46",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "02c3624e-ccfa-4b9c-aa99-15afe108a71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d78016-9cbb-4a9c-a7be-f932a7baa625",
        "cursor": {
          "ref": "94d51ee1-a8f0-4c2e-b252-fae812c02ac8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "33e7dc15-0773-4e65-86f0-bc96d5d7ae51"
        },
        "item": {
          "id": "f6d78016-9cbb-4a9c-a7be-f932a7baa625",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bf603805-576e-46fb-93d7-f1e485142966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b966b16-7d6f-4f72-90e4-2ac971097fc7",
        "cursor": {
          "ref": "722b79f9-6118-46c6-9a0e-83edc07ca7b9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "21f49cb8-c0c2-4882-8a74-d2965fed1d77"
        },
        "item": {
          "id": "4b966b16-7d6f-4f72-90e4-2ac971097fc7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "05d51348-145f-4e53-a0f9-cbe16aff489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab1b15d-b8f4-4e39-89fd-0028367641f8",
        "cursor": {
          "ref": "de789116-6edc-496e-ae45-fa3b14795602",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b40a7f88-92ba-41c6-ba10-46c09d36ac53"
        },
        "item": {
          "id": "aab1b15d-b8f4-4e39-89fd-0028367641f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "997f5002-a475-407e-bca7-62857dd4a84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bad187-351d-4c72-9384-740b901d8599",
        "cursor": {
          "ref": "8c47df61-c333-4711-9e33-1f8c359b5b06",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5f44392b-e432-4b6e-85bd-702ded889309"
        },
        "item": {
          "id": "b4bad187-351d-4c72-9384-740b901d8599",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3a5b7eee-7a22-4ea0-9492-db25108f1c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449cc5e-2ab1-41fe-85d8-50f16c0bb5ae",
        "cursor": {
          "ref": "d477b61b-b8de-4294-9817-f7b68df99ebe",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20a724a8-7a4b-468c-a0f8-e176b3456337"
        },
        "item": {
          "id": "f449cc5e-2ab1-41fe-85d8-50f16c0bb5ae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7e8b87c9-5d0c-4cb7-99cf-0c1d6885d267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952f2584-b852-4d07-a41d-02838d09f68e",
        "cursor": {
          "ref": "7c8abe98-14a5-43d5-8f88-6a62cb1339d3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "94fc8600-ea4d-4b14-af72-6f5d79842e34"
        },
        "item": {
          "id": "952f2584-b852-4d07-a41d-02838d09f68e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5a41963d-66aa-48df-b65a-70e0ec386d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97175003-b43d-4d2e-a8b7-4ccf598f5d8e",
        "cursor": {
          "ref": "e80760f8-3d90-427f-8649-e726d5ed287d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "818622c6-0520-4511-91d2-3fc5683e0474"
        },
        "item": {
          "id": "97175003-b43d-4d2e-a8b7-4ccf598f5d8e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "945901d3-e798-4f8b-b8e9-888ebfb3d14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87b4be-94d1-4953-ad13-571b217ed2eb",
        "cursor": {
          "ref": "0226cc7a-9789-449a-b96e-633425a9e142",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9cb4be62-cf0a-4175-991d-78811078a765"
        },
        "item": {
          "id": "fd87b4be-94d1-4953-ad13-571b217ed2eb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "292e59b6-e9c8-4c39-9c03-9c5310c08e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f28dff-aff2-4a29-8fe3-a1aac48b355e",
        "cursor": {
          "ref": "36a70e01-c5d7-40c8-9f24-ef1246bf83f7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cd1a01d2-3ec4-4fb2-b598-5cce79397680"
        },
        "item": {
          "id": "97f28dff-aff2-4a29-8fe3-a1aac48b355e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "379e8f4f-ede0-4599-80a2-a9bcf5ab0f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e1f9e-abae-4c4d-9acb-1b494897053c",
        "cursor": {
          "ref": "ba1eb281-5de3-4b01-b1a9-3d1bd8239f9c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe99ab75-998a-4a0a-aa43-e48373c75dc3"
        },
        "item": {
          "id": "299e1f9e-abae-4c4d-9acb-1b494897053c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f477d726-d681-41ce-a718-deb7df876661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca37b98-3f9f-4287-ad8a-8a6876f0573c",
        "cursor": {
          "ref": "8e673489-ab31-425b-86de-547f02dba3d2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "986922fb-2da9-4e1b-b0e2-0d07fdebd473"
        },
        "item": {
          "id": "6ca37b98-3f9f-4287-ad8a-8a6876f0573c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f931638-684e-4ceb-bfff-70300325b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03132b3-edc4-4550-ac6d-a36b98026f90",
        "cursor": {
          "ref": "7585fc03-5bc2-4c55-ad06-892bdaaf5740",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f9e4d213-12d7-4e10-a86d-19fa55094504"
        },
        "item": {
          "id": "e03132b3-edc4-4550-ac6d-a36b98026f90",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1c71765e-1a9a-4566-a5e9-be7a9c833f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12855c8b-fd1b-41df-b2ec-0919177083b9",
        "cursor": {
          "ref": "35ff1b65-d2d8-4145-9771-27a3df060401",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "17326175-288c-4d25-ae03-c62c8fbde8a2"
        },
        "item": {
          "id": "12855c8b-fd1b-41df-b2ec-0919177083b9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "85847197-57ca-4bf3-976d-8cccff8fe775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8785289-c667-4472-8dd4-17888a4320fc",
        "cursor": {
          "ref": "91c1cf64-7550-4cf1-9a31-5ef78cc2be2c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d2ac915a-13de-4de9-a8b4-ac1cf5ab4fac"
        },
        "item": {
          "id": "e8785289-c667-4472-8dd4-17888a4320fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "92c979bd-ba9a-481b-ad67-1d75fb4c6ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d6302-ad6d-4463-8334-b12ce1f08eb2",
        "cursor": {
          "ref": "53598386-e55f-44b6-a3fb-23d64f2caa6e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "168e211f-f19a-4fa7-ad33-973c30bafcb9"
        },
        "item": {
          "id": "358d6302-ad6d-4463-8334-b12ce1f08eb2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4104bf88-a4e9-4372-a632-7b4665c3323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd646a17-75fe-4933-871f-dbc79d2edc25",
        "cursor": {
          "ref": "c134cff1-9227-4486-8e79-0f3e655fa59e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a1780869-467a-43bc-b229-1a9bea8dd5af"
        },
        "item": {
          "id": "cd646a17-75fe-4933-871f-dbc79d2edc25",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1dda3f5f-ddd1-4869-b43b-05240233ec91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6f3622-ef41-4dce-a69b-6393f5d5fd10",
        "cursor": {
          "ref": "91f94922-7d6c-40ed-bdc5-ba0ba28488af",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "820ac0f6-f600-4527-a07f-51fb5b86c2c0"
        },
        "item": {
          "id": "0d6f3622-ef41-4dce-a69b-6393f5d5fd10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b7fa3377-0cd3-484d-b8a3-fabd2eccf24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce5f71f-d628-452f-9000-3ae57e227fcd",
        "cursor": {
          "ref": "daf13589-ccfb-4a5e-ba03-cc8f2852fc9c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa425af9-c2e5-407e-addd-f3295ad8f733"
        },
        "item": {
          "id": "7ce5f71f-d628-452f-9000-3ae57e227fcd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4115bdfe-123b-4561-b64d-41170a4fe0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268e0ad2-5863-4cb4-b0d6-f80d32c39d09",
        "cursor": {
          "ref": "011aa7c4-7f14-46df-b82e-7179d0fd7fc9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4efe915c-26cb-4a78-9cfd-a288ed545fd9"
        },
        "item": {
          "id": "268e0ad2-5863-4cb4-b0d6-f80d32c39d09",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "787e70ff-90b6-47c9-8db5-7a39ef68d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d562d0b5-36cc-4988-87c2-0c397f85a786",
        "cursor": {
          "ref": "9215e476-bdee-4f18-90ac-0d7f7ae98db7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4c2f44f6-7701-44e8-b233-0f4aa5227595"
        },
        "item": {
          "id": "d562d0b5-36cc-4988-87c2-0c397f85a786",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "11cac439-510e-4ad0-b112-758d04831610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d734a27d-adcc-4eef-bf07-7de163182d2b",
        "cursor": {
          "ref": "82b830d7-4c1d-4ca0-baa4-20b826079ea6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b40cc504-62b9-4e19-98b6-56e5d8373b99"
        },
        "item": {
          "id": "d734a27d-adcc-4eef-bf07-7de163182d2b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6c22186b-dec6-4de6-8b31-665a135e0e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2156a8-ce0c-4c2c-ad44-79143b9ff6f1",
        "cursor": {
          "ref": "9bab4a89-5881-43fd-91e8-8e1877f61f0b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c19a9fe0-6c42-4cc9-a868-1eea96149604"
        },
        "item": {
          "id": "ee2156a8-ce0c-4c2c-ad44-79143b9ff6f1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cffb7749-d3f9-4cc8-967c-b7396d07d5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39e213e-3ebb-4b20-a7f3-319e7f70cfc4",
        "cursor": {
          "ref": "227914e7-3103-4975-8f66-df98063f8cfe",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd2aa1ce-d9c2-460c-8975-bb77cbeb074c"
        },
        "item": {
          "id": "b39e213e-3ebb-4b20-a7f3-319e7f70cfc4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "17db16f7-c2bf-4030-a2d2-9929c63b6c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dc1fbd-eb52-456b-82c9-f9dce58edd30",
        "cursor": {
          "ref": "d71aeb52-8a7d-4b87-a219-bafa9d0489c3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "92c25c5b-53eb-4af9-9e2c-128911f4bbdc"
        },
        "item": {
          "id": "62dc1fbd-eb52-456b-82c9-f9dce58edd30",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "343db4b5-2206-4696-89b1-34af3737e79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b0358b-251b-45fe-8a0c-76d6f0de9420",
        "cursor": {
          "ref": "889f94d1-62b3-483a-bfd5-5d49d6a8fccc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9044e45e-a476-410e-a5a1-c34bebe44cdb"
        },
        "item": {
          "id": "98b0358b-251b-45fe-8a0c-76d6f0de9420",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bcb559f1-abf2-4ce4-bbcd-aaec9285d471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b796a7-242e-48bf-ac16-c717728bab2b",
        "cursor": {
          "ref": "8f916a01-8842-4f98-8f57-a32553f58334",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05ff580f-e0eb-44d0-aeec-01c2238b0d70"
        },
        "item": {
          "id": "a1b796a7-242e-48bf-ac16-c717728bab2b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e47e6dec-5b93-4c0f-96f0-a8898acec135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6347ad91-c2c4-419d-9e6f-35c6077bd1a7",
        "cursor": {
          "ref": "80d6417e-269e-45de-941a-a7d6a3202c08",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d35f43d5-4813-40a7-877f-7ae701206bc2"
        },
        "item": {
          "id": "6347ad91-c2c4-419d-9e6f-35c6077bd1a7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3f22fa0c-190f-460a-9924-0460f7515588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f377359-2ee6-4a08-9bf8-cc5117964070",
        "cursor": {
          "ref": "0ff09b22-e375-474e-9b49-ebe6f2b9f14e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "af78de36-10de-41a2-83b5-ab675db77451"
        },
        "item": {
          "id": "9f377359-2ee6-4a08-9bf8-cc5117964070",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5272487b-a63a-4517-baeb-e32a31bc8e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c32718-9a75-4f93-a876-f65dca069022",
        "cursor": {
          "ref": "2b1fc82d-fab5-47c4-8ddb-c53944dcff42",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1939dea4-9656-4c83-8657-b515b23f04ae"
        },
        "item": {
          "id": "b9c32718-9a75-4f93-a876-f65dca069022",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bae35707-362e-43c1-afe2-821b186045c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0a7174-def4-4284-905a-2f59f16e5902",
        "cursor": {
          "ref": "b48c3c99-6ca0-4386-98d8-02f6e06a833d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "41a3796b-e3f5-424a-89a3-90e8de4f7f60"
        },
        "item": {
          "id": "6a0a7174-def4-4284-905a-2f59f16e5902",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "639ad85e-7a99-4aa3-9693-44b1179d610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d483fe-510c-487d-9739-82ed73f677fc",
        "cursor": {
          "ref": "3b302ebe-02a2-45bb-b12f-b5a1aaa62a08",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ea248e4e-a528-4b93-bbe8-a7a0e42d521f"
        },
        "item": {
          "id": "24d483fe-510c-487d-9739-82ed73f677fc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "646ee755-9ca1-437b-b11c-c2c41d2d85ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78840465-63c1-4473-bba0-2a894a4cecb3",
        "cursor": {
          "ref": "1be23cbe-08f6-46d3-966b-d6342feed2d4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "afe54d8f-35cc-4163-95fd-f44fe30f04de"
        },
        "item": {
          "id": "78840465-63c1-4473-bba0-2a894a4cecb3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86a301d1-d214-48b5-874f-2d614f35c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352a8c1b-5587-4d8b-a4e8-1290b04c705b",
        "cursor": {
          "ref": "4162121d-8ebb-47fb-87c7-4dafa710b86b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e91f5a12-83ae-479e-bfcf-b2a46e57137f"
        },
        "item": {
          "id": "352a8c1b-5587-4d8b-a4e8-1290b04c705b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "54cd9d1e-4f09-4440-acf7-46d72f4067a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a05379-2630-4cf5-a2d6-1aa6e7e0395f",
        "cursor": {
          "ref": "f5f6efff-a74d-43be-8fb6-da6f063c816e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4580fe37-ac37-4e63-8727-43b9a5336fbc"
        },
        "item": {
          "id": "72a05379-2630-4cf5-a2d6-1aa6e7e0395f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2caafdf4-d43d-40b9-b020-7b2112e63183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d38a1a9-0e63-4d89-a2f4-81bd6089ea4e",
        "cursor": {
          "ref": "04de7e71-221f-4cf8-a5e7-475138ceaa06",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e5b9b426-ad6f-4969-a969-8ad7d6539e89"
        },
        "item": {
          "id": "9d38a1a9-0e63-4d89-a2f4-81bd6089ea4e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7ce56e9c-937b-4491-ad72-a5feb9abd1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfd3765-5141-41a0-b3ce-2fc5a64cd9f5",
        "cursor": {
          "ref": "9279d633-f2b8-4c70-adde-900d31a4c4af",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "41aaf2ca-7822-43d9-a762-5d5768f55bff"
        },
        "item": {
          "id": "2dfd3765-5141-41a0-b3ce-2fc5a64cd9f5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b4f0c1fe-5267-4198-bff3-1ad0cb707406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc2376e-1cbf-498f-bb4e-93103e81fe2e",
        "cursor": {
          "ref": "aa7e5aed-d21c-4ad7-91a8-151bb29f55b9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "da08dcd3-743a-4152-b6a5-9867287d8814"
        },
        "item": {
          "id": "2fc2376e-1cbf-498f-bb4e-93103e81fe2e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d2d6ffa0-1bd8-497d-ae0b-78698aec4258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6adc73-3bc8-4a9a-8976-6e26d572fd67",
        "cursor": {
          "ref": "942beecd-cc6f-4dcc-bc5f-1f0bc6b333c6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bf72f71-76d6-494e-9cc1-5839832ab130"
        },
        "item": {
          "id": "da6adc73-3bc8-4a9a-8976-6e26d572fd67",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3908beb6-58d0-4a7a-83b0-b4a25806dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42bd034-ee1e-4106-af23-a90890f6e444",
        "cursor": {
          "ref": "0aeb42c1-3eb4-41d6-b39c-2fb5251bbc52",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8878ec8f-3086-4031-ac1d-c2d8b86d1279"
        },
        "item": {
          "id": "f42bd034-ee1e-4106-af23-a90890f6e444",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a328b1c0-5e18-48d7-bacd-4beb792a472a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1c687c-744c-478f-a52d-a54b35c785f1",
        "cursor": {
          "ref": "9fc68d07-2ed7-41f6-8aa4-a179ff3ac849",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76b6eeb5-571a-46c8-bf41-3576093855e0"
        },
        "item": {
          "id": "5d1c687c-744c-478f-a52d-a54b35c785f1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0107a03a-2a0d-43db-ae6c-7a3a965ca081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e202caf9-ead3-4261-8ab9-763e8609d8e1",
        "cursor": {
          "ref": "ec9940d7-4b45-4d31-8741-751d08f067e3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cd358c91-37e0-44f8-b342-681db691a264"
        },
        "item": {
          "id": "e202caf9-ead3-4261-8ab9-763e8609d8e1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fb9a9f23-7e22-4ce3-aaf0-c10f478d1cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98580bd2-a344-488c-8828-4e9370938271",
        "cursor": {
          "ref": "f3cb9d66-92c9-415b-a089-789621c7c7e4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "056b1ad8-de05-47ae-9202-a64608a58fd2"
        },
        "item": {
          "id": "98580bd2-a344-488c-8828-4e9370938271",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cbb185e2-c71d-467c-818b-071b5bfa38ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4906d1-6def-4557-913b-48802a7b9f2e",
        "cursor": {
          "ref": "d5a7f8c3-ce24-4029-8150-ba84e1381ca3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "80522759-fb8c-4326-b219-2b5dd93c6a5b"
        },
        "item": {
          "id": "6b4906d1-6def-4557-913b-48802a7b9f2e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ee7f564c-ed73-4621-8d9e-58a4d0377563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c95766d-6adb-45de-b818-448eff249510",
        "cursor": {
          "ref": "b5da0b73-beac-495b-bf10-d3dfea269ce2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6e543fda-c6b4-4872-ab4d-00c2c44a5f32"
        },
        "item": {
          "id": "1c95766d-6adb-45de-b818-448eff249510",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f613cd26-24e6-4401-87d8-d48b81571ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203ca7d4-6dcc-4f55-abb5-7f8330d3f15a",
        "cursor": {
          "ref": "635a08a1-9d57-4eed-9c60-a1dab1f77fda",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6968826a-848a-4dc7-86e7-810e8e3cbdc8"
        },
        "item": {
          "id": "203ca7d4-6dcc-4f55-abb5-7f8330d3f15a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bb7f7284-379e-4774-8ef7-fa7d41d7ade4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb542ac-e159-49e2-a071-b2ccf77e04de",
        "cursor": {
          "ref": "572db089-6423-467d-ae70-8b9816f9b5b5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2d9fcf04-1c29-472b-ad1e-cfe0b0078533"
        },
        "item": {
          "id": "aeb542ac-e159-49e2-a071-b2ccf77e04de",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97ed04c4-d316-4ad5-b0f5-ec31d1ea7a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e405b-1b8f-4734-97e9-f33f4c94e4b1",
        "cursor": {
          "ref": "9942dc42-e7be-4a81-a24f-d1b4376b31bb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "70ee1165-4d4c-4e57-87fc-aec04b9cd1c9"
        },
        "item": {
          "id": "a54e405b-1b8f-4734-97e9-f33f4c94e4b1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "35d09d5c-e1c4-44ba-8906-073ab20d9eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab47935-b3d8-422e-9511-87ac2a1c7e99",
        "cursor": {
          "ref": "ea8ac7e3-1983-47dd-8231-48c1edd6858b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "52ed5841-d930-4e50-ae46-c66b73914a8a"
        },
        "item": {
          "id": "eab47935-b3d8-422e-9511-87ac2a1c7e99",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "024cafe5-4631-45d8-b9db-ddf2bc5bc860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cc18d3-3dff-4488-8263-f584febdb824",
        "cursor": {
          "ref": "fe309e6d-8de4-4b8a-b683-1e0c5db8989f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5151affd-3c5e-4ced-a859-6b4c01ffe3cb"
        },
        "item": {
          "id": "92cc18d3-3dff-4488-8263-f584febdb824",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f3432861-8aed-41bf-a4ad-5bf6205049db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49abfc7-f798-478e-a1a9-c618898ea383",
        "cursor": {
          "ref": "d4a41574-2715-4ad1-9212-fa9535505c55",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4b0ee014-cd4a-46c6-b288-2d3eab1de8fa"
        },
        "item": {
          "id": "d49abfc7-f798-478e-a1a9-c618898ea383",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1b21cc0b-3707-4dc0-a49f-dfdd782e3113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d674e3-791f-4cdc-81bd-d7b2681c9bb9",
        "cursor": {
          "ref": "b909a4d1-c07b-419a-b7be-3046fb1b2777",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9bd2f55e-08cb-46f6-b0d8-b6b6bcc47e72"
        },
        "item": {
          "id": "66d674e3-791f-4cdc-81bd-d7b2681c9bb9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9c9f8e03-4f8d-4514-b17b-37610f9b68b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407c5d5-282d-40d2-9060-8107cb5b92b7",
        "cursor": {
          "ref": "a4ba8db2-0946-4391-b09a-40c4d19c640e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aa7c346b-98c7-4ca3-9446-a70a8c44a58b"
        },
        "item": {
          "id": "d407c5d5-282d-40d2-9060-8107cb5b92b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ef1a96b1-76bc-4961-96fc-a1c49b89ffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dc0a7e-9ed5-4d17-9c6e-c139aa16b0f0",
        "cursor": {
          "ref": "398cfc3d-9024-4618-9448-6f0d97ccae83",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ab12b72a-2688-42d4-86af-1e70f1c8c345"
        },
        "item": {
          "id": "56dc0a7e-9ed5-4d17-9c6e-c139aa16b0f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8633d233-e5b3-4cf3-a465-803a681cf558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5570ba7e-9de7-4972-aad4-2f3a7df481ee",
        "cursor": {
          "ref": "252a9e82-1f92-4152-b548-8f35e7362175",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "83c4c839-0165-49d8-b8f7-c82302519c38"
        },
        "item": {
          "id": "5570ba7e-9de7-4972-aad4-2f3a7df481ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "65076e33-f145-4c66-bb9b-9333648d7833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea801ac-1725-4869-9fd5-f4b97cfa88c1",
        "cursor": {
          "ref": "61d13e51-8dbc-45da-9661-a840cab18e17",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e3af9201-b153-4c73-97ce-7c06686e8d77"
        },
        "item": {
          "id": "0ea801ac-1725-4869-9fd5-f4b97cfa88c1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3cc28601-8227-4f21-9b46-4d8ef5a2e814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2afeae8-3ce5-4ad8-b488-4a18231ded7f",
        "cursor": {
          "ref": "842f85f8-fbe0-4e3a-a38a-d682e7b51388",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "603cd781-146d-45fc-9a77-99ab1f034e76"
        },
        "item": {
          "id": "a2afeae8-3ce5-4ad8-b488-4a18231ded7f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "35268959-e9d4-4515-95fa-3e65d60a7cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f998cb-5bd8-45c4-bf84-2ebb0d36f1e1",
        "cursor": {
          "ref": "762add37-9ece-4230-958a-9cb3c83520ec",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0805e735-211e-4212-92b9-9ada9ad46f84"
        },
        "item": {
          "id": "81f998cb-5bd8-45c4-bf84-2ebb0d36f1e1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "def06d33-9e2f-4cd4-b867-5cd6a2ea7999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b7225d-a266-4ce3-a561-8c31e3505550",
        "cursor": {
          "ref": "faa1fe78-56a4-4549-a222-d9ee9f0c8fe5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "20597e61-2b0f-406d-8f7b-c023cab387a4"
        },
        "item": {
          "id": "50b7225d-a266-4ce3-a561-8c31e3505550",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1c06e8a3-5201-4194-ba5b-5433142e7904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbf0e57-0b69-49c9-b2af-089e9dbefeba",
        "cursor": {
          "ref": "13468d8a-51de-4d9b-bfbc-59b3e05843e2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4cfe6373-95de-4d92-a666-3f09a35c66ee"
        },
        "item": {
          "id": "cbbf0e57-0b69-49c9-b2af-089e9dbefeba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ee79b134-b6c3-40a2-a6aa-d037e11899c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac612956-46fe-4c4b-b9b5-73e682f23456",
        "cursor": {
          "ref": "8ceaa5d1-9e04-4667-a6bc-2acec026a9dd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "68fca585-7b7f-4b6a-af15-4801530007bb"
        },
        "item": {
          "id": "ac612956-46fe-4c4b-b9b5-73e682f23456",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e9eb3510-8e0e-4d2b-b1c3-86a43598b2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ba2e19-00d7-4037-8ada-ecad2ba3515b",
        "cursor": {
          "ref": "881d0d2e-5da8-407b-899f-ca10894a5fdd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d6696e70-65e7-4186-816a-534fec8f434d"
        },
        "item": {
          "id": "c5ba2e19-00d7-4037-8ada-ecad2ba3515b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "62b354fd-9cb3-4f54-9376-7f4dde69c56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dec87f7-8a27-4fff-b5e8-3f7ea732bb43",
        "cursor": {
          "ref": "718e1af0-9853-4c8f-8ff3-106f1bbfcd5c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b99664f3-3c61-436c-8b29-58e5fa02b9b2"
        },
        "item": {
          "id": "2dec87f7-8a27-4fff-b5e8-3f7ea732bb43",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "037e51a0-d809-4c92-83d8-0177151c671d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b54d66e-78d6-4625-811e-1288836269b2",
        "cursor": {
          "ref": "7ef84d03-194a-44db-b366-59a1f3f29f45",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6da16828-4d79-4af9-b9d5-6cba0e4c3740"
        },
        "item": {
          "id": "4b54d66e-78d6-4625-811e-1288836269b2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f4fa7be2-71cf-459a-a23b-cfa354878b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a740e24-ac6b-44af-bcb9-39e91d47d384",
        "cursor": {
          "ref": "36a27cc6-8cb4-442f-83c1-481b6c836d58",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "30c61ab5-9d5f-4332-a228-f25a80c8702e"
        },
        "item": {
          "id": "2a740e24-ac6b-44af-bcb9-39e91d47d384",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb3ade52-1d8a-406d-be38-127fa45d510e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed539a7-a9b9-44bd-901c-1ae2b73fbecf",
        "cursor": {
          "ref": "9086f9ac-4303-4132-8815-6d5aa5a24e61",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3be54d37-ab04-4e97-bdf8-25bc0dbdf810"
        },
        "item": {
          "id": "fed539a7-a9b9-44bd-901c-1ae2b73fbecf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0603a26d-17e9-4e8f-be59-55c60ff36594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0d16c2-8110-4e59-b2e4-4edca8c69dde",
        "cursor": {
          "ref": "6ed422ff-fec8-46af-b84e-8455176d0994",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0f9965de-2965-4057-9f5e-8721476f0f9c"
        },
        "item": {
          "id": "9e0d16c2-8110-4e59-b2e4-4edca8c69dde",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7fba5c9e-c361-4715-a35c-5cd2ba38351a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c339a616-f3d9-4218-bea5-985b9cb191e7",
        "cursor": {
          "ref": "e3ff051a-2f75-4a55-8804-3155255ed807",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c68eb9a7-678a-4d35-b812-44576943f51a"
        },
        "item": {
          "id": "c339a616-f3d9-4218-bea5-985b9cb191e7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e52b9c83-bb53-420b-bd14-57ae1349f335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dccc95-3360-48b3-914f-95a0f6e878ed",
        "cursor": {
          "ref": "a7535516-944e-447a-9375-86f3252d640c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8c30596f-0bee-4851-917d-db49cb727d86"
        },
        "item": {
          "id": "80dccc95-3360-48b3-914f-95a0f6e878ed",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aa34dfab-82f5-4afe-8220-ccc0894f8ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6b3ec2-abb6-48bf-ba81-448f4352a484",
        "cursor": {
          "ref": "8b0f6cc2-9ccd-433b-8aef-99e6ff542ebc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e35f1202-d7c2-4714-a447-2eb874ae7c24"
        },
        "item": {
          "id": "4f6b3ec2-abb6-48bf-ba81-448f4352a484",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d84a6392-7a24-475d-adba-63a7be6a976a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8902fe5-00ad-42c9-a583-a276732609cc",
        "cursor": {
          "ref": "4cd4dcc7-607e-4631-bad8-7d64332a74e6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b71552e4-c03f-4564-ae8f-8536e3a42681"
        },
        "item": {
          "id": "b8902fe5-00ad-42c9-a583-a276732609cc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5ea09c51-4c2c-4a24-9a26-a33c1f123c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca3cbe2-93c7-4ab5-a899-52a812a4c942",
        "cursor": {
          "ref": "e1eee224-ecb9-4130-8d01-06633cb7284e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef0b00d8-432a-467f-983b-732a22fe651d"
        },
        "item": {
          "id": "1ca3cbe2-93c7-4ab5-a899-52a812a4c942",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e6e53d2c-7c03-4a5e-bd31-27236349dc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb0e935-b3f5-4fbe-a79b-e86a4c5228f4",
        "cursor": {
          "ref": "1807a57a-719a-4d49-a37d-93c7de51d18b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6d0e511-35fd-4b26-92e4-a57d0abe6958"
        },
        "item": {
          "id": "5fb0e935-b3f5-4fbe-a79b-e86a4c5228f4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fadf4c69-71e1-47d5-9b0e-b065c7272993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb513ba-ef8d-43c9-b9dc-1b2253de51d9",
        "cursor": {
          "ref": "38256310-9729-4b7a-ade0-9be7e38eefd0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6b7b07d1-8c16-4f78-b3ba-e3a78a6679bd"
        },
        "item": {
          "id": "5bb513ba-ef8d-43c9-b9dc-1b2253de51d9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f5c19e5b-f086-40ab-a2af-6b33fcfaf55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4733ba-382b-4c4f-9ade-50d0d35db81e",
        "cursor": {
          "ref": "e54457f0-a5ef-4616-8002-efd7f3d11489",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "05490fc2-98c6-4f55-b776-38de31551ed2"
        },
        "item": {
          "id": "ed4733ba-382b-4c4f-9ade-50d0d35db81e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e055c8b6-61d0-433a-8988-1c5fe54d1b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a71a0cf-0a2f-46dd-8bc1-487a0bb24fac",
        "cursor": {
          "ref": "b3aed1fe-4b4c-44be-9f5f-5db4f3409017",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aa8bc431-d618-42f4-8aaf-22fc689a7c73"
        },
        "item": {
          "id": "2a71a0cf-0a2f-46dd-8bc1-487a0bb24fac",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bd5b6d64-ee12-423f-ae57-8818ee239b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3694a96e-093f-421c-8c87-699d70d6aa38",
        "cursor": {
          "ref": "f1c58832-940b-4c11-a37d-206e98cfe117",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4cd64178-bccf-46ff-8252-d33a1ae46ea7"
        },
        "item": {
          "id": "3694a96e-093f-421c-8c87-699d70d6aa38",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4d1e0ae2-0e1c-4577-b692-48a2db6a98ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1582ab-b6c4-4bc0-8839-b519b0cc6a81",
        "cursor": {
          "ref": "57672a6a-e702-4597-842d-190ba674a1a9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "67d9a5a6-e1b8-46f8-afa4-9dde51f7db62"
        },
        "item": {
          "id": "db1582ab-b6c4-4bc0-8839-b519b0cc6a81",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fafb209d-d87c-45ad-b544-e5af5ac1691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e31d527-356a-4b27-bcd5-301d8ca6704d",
        "cursor": {
          "ref": "b955d8d0-3054-4bcd-bc40-f03a0a0719d1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2cd15d56-1e0e-49c6-a056-2a1f2addaed7"
        },
        "item": {
          "id": "6e31d527-356a-4b27-bcd5-301d8ca6704d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4fe11868-35e1-4e5d-9748-f34473750a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77228c41-6952-4232-a28e-520dc5e56c42",
        "cursor": {
          "ref": "1b18891b-5679-4cdd-a415-7da84085eb52",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "685f2fa1-732b-49d6-90db-72bad0315f64"
        },
        "item": {
          "id": "77228c41-6952-4232-a28e-520dc5e56c42",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6fce6e03-a276-4792-a4f0-6b34c8f3fce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3965ad-c302-417e-9bb6-85e7b4ec93a6",
        "cursor": {
          "ref": "5812f289-bc6b-4c94-89ea-442d1df4bb1a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0b3108ce-9ee2-46eb-90da-8788b6f2d628"
        },
        "item": {
          "id": "ca3965ad-c302-417e-9bb6-85e7b4ec93a6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "078a0f14-7870-43c5-85f0-a1785f6f06b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77370095-cabf-4245-a358-df518c329bf9",
        "cursor": {
          "ref": "2caf5c9a-0cc3-4479-8a5c-c324cae94c62",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7da41091-59d5-40b4-89ff-821e266cc172"
        },
        "item": {
          "id": "77370095-cabf-4245-a358-df518c329bf9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "68b16603-3f51-40c8-99ae-858ff00325db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49271a40-cea0-40ff-abed-6e9c2f6d4986",
        "cursor": {
          "ref": "df10e827-ac12-42fc-8471-ad0dfa3c2bcf",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "40bf7322-1a11-4d39-8e32-779819c3f861"
        },
        "item": {
          "id": "49271a40-cea0-40ff-abed-6e9c2f6d4986",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2c88d149-559d-4a12-a661-b595f4d13659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60d9daf-a87b-4785-8926-aaf358e7714b",
        "cursor": {
          "ref": "d60ba597-1c9e-4032-811b-40aa1eb62a6d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "98ec9a68-9d63-412d-af91-1e335b7ef2e8"
        },
        "item": {
          "id": "a60d9daf-a87b-4785-8926-aaf358e7714b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5b3ddc2f-efb3-4374-8cd0-08abb754351c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12005754-0c57-4143-8e98-0b2b197b3a1e",
        "cursor": {
          "ref": "7acc0217-8995-4b97-95bc-54bfe2e51d1e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0f000196-10cd-4331-8bb7-fd1cf2d627c0"
        },
        "item": {
          "id": "12005754-0c57-4143-8e98-0b2b197b3a1e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d5cbc5bf-521d-455c-84c9-d4630304678a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90b980-f225-449a-a4d1-cd07c2fdff5f",
        "cursor": {
          "ref": "eed4138d-ef57-4c67-981e-4b3c2ea699e1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8f4ed768-35f3-40c1-a079-38ed8b81f2d8"
        },
        "item": {
          "id": "8e90b980-f225-449a-a4d1-cd07c2fdff5f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "09b7c2e4-145e-4b4f-8b29-b3c5c6b6f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6834578d-0a47-4d97-acd6-5930a817b87f",
        "cursor": {
          "ref": "43955053-2277-49c5-9f65-f4fbdd645e77",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eed4f0f5-08e4-4d88-8c40-01ec631fe935"
        },
        "item": {
          "id": "6834578d-0a47-4d97-acd6-5930a817b87f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f0c04276-0921-4b0a-ad71-b00622ea3b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4488b54-1061-4329-bce4-f4c2679df765",
        "cursor": {
          "ref": "140ec4c0-0860-48bd-81b7-375e2ce58ff6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ee460710-f30d-4252-9bd2-738f93a00f13"
        },
        "item": {
          "id": "e4488b54-1061-4329-bce4-f4c2679df765",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a205a3df-2778-409d-a385-06259f697c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2f90a687-665b-4180-8999-875e3153f1f1",
        "cursor": {
          "ref": "db138497-aa19-4e0e-8183-9b6607a03ac6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a7e14b2-1054-405f-b99f-74ae32509328"
        },
        "item": {
          "id": "2f90a687-665b-4180-8999-875e3153f1f1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "54406c62-2b05-4a5c-852b-eda64b73f655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dc985c1c-acb4-4af3-9be1-b84ba7758e90",
        "cursor": {
          "ref": "a8011d1f-3954-4667-93f7-f934b0484b4d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b55792fa-1b50-45cf-884b-7d79c1e6750c"
        },
        "item": {
          "id": "dc985c1c-acb4-4af3-9be1-b84ba7758e90",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6172dd9c-8bd3-4f0a-9b76-a22291ee4bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d7a12aeb-15e1-4936-8198-6c5d92fff4f0",
        "cursor": {
          "ref": "ab2963e7-77e0-423d-95bc-d8f02c6dbdc3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fb83d638-6217-4a15-a5ca-a1137c7c67c8"
        },
        "item": {
          "id": "d7a12aeb-15e1-4936-8198-6c5d92fff4f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d2eb1cc9-d43f-4ef7-968d-2b1df9fc4799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "083e58df-2884-4986-8c76-365311f63203",
        "cursor": {
          "ref": "a3818e47-261b-4b80-a426-9140e3df6dcf",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "502918c7-9ffb-42cd-a9eb-3a29f5de3b00"
        },
        "item": {
          "id": "083e58df-2884-4986-8c76-365311f63203",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "afe7a494-e604-40c9-9951-8e94dda1ad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b8b3b84a-438f-487b-9de2-300b5a94d3b6",
        "cursor": {
          "ref": "0f14c216-5aac-4490-b54d-325645980166",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d1641a7e-f4eb-4fb4-91c2-63912fedc272"
        },
        "item": {
          "id": "b8b3b84a-438f-487b-9de2-300b5a94d3b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3048f642-10ae-421a-96cc-9479bc7f04a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4f319e18-69a0-477b-9ffc-12440a411ef3",
        "cursor": {
          "ref": "097eafcc-a47a-4053-bd4f-73d277c4b995",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ee9b3f41-9045-484b-bf80-5d03ce108d25"
        },
        "item": {
          "id": "4f319e18-69a0-477b-9ffc-12440a411ef3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "144120a9-9dbe-42e3-aa5b-ea186571dff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bbaebdb1-1b2e-44ff-a193-b0afeb61efc2",
        "cursor": {
          "ref": "5694b2c6-cfd1-4a84-a4e4-a9714365e9fc",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4ac4c437-e174-4746-9d41-3e7ff02729c7"
        },
        "item": {
          "id": "bbaebdb1-1b2e-44ff-a193-b0afeb61efc2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9cb0d9a5-81ee-43e1-afda-189b1502fc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22612a-ea2d-482b-95fd-58ec4b6e9285",
        "cursor": {
          "ref": "46ae5141-bfd9-4ff9-9b45-4075f3513c37",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3c237df-7d7a-49aa-b2b9-d086009b8802"
        },
        "item": {
          "id": "de22612a-ea2d-482b-95fd-58ec4b6e9285",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d2bac64b-d820-4103-a2cb-e744ecf5358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ba7e44-97d6-458d-b749-983d5be2bfa0",
        "cursor": {
          "ref": "4380c53f-be83-472e-a9bc-33b02b4f49ed",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ddf39658-7793-47c3-9325-930478474a18"
        },
        "item": {
          "id": "57ba7e44-97d6-458d-b749-983d5be2bfa0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a9d31c3e-01bc-4c78-871b-32eb08ef6af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd342185-5034-4f5b-9779-04e469bd9350",
        "cursor": {
          "ref": "b0eca55d-845a-446a-b109-cffc8216d4da",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1cd0bcd6-4834-4f0f-8110-7044846d615b"
        },
        "item": {
          "id": "bd342185-5034-4f5b-9779-04e469bd9350",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ccd63d85-645b-4471-93ba-8b969bf5ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc1fca1-34ad-4fad-914b-37009f10dc36",
        "cursor": {
          "ref": "11ec812b-9399-4502-bf79-a87a022e99ed",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "470fb6e5-17d6-4d1d-b567-11575c067c05"
        },
        "item": {
          "id": "1bc1fca1-34ad-4fad-914b-37009f10dc36",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d7827ba3-34ca-4cf1-a6cd-e3fc8adbe538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a08d41c-2eaf-4942-bafc-0e0a24ff63b6",
        "cursor": {
          "ref": "88710191-cff5-4fd2-8f03-ced78d5c1eef",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1d77a5d8-7f81-4088-b3db-be8c76d477f2"
        },
        "item": {
          "id": "2a08d41c-2eaf-4942-bafc-0e0a24ff63b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1cc2fd23-06fd-4222-8294-f6885348f487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f067de80-6e1e-4f9e-bf34-566432d3df3f",
        "cursor": {
          "ref": "857d11d0-93a3-435a-866a-17c02d0aa263",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4bad77b9-5415-4e8c-9a3a-bcc9cc036eb0"
        },
        "item": {
          "id": "f067de80-6e1e-4f9e-bf34-566432d3df3f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d3919746-b6f9-4b87-96ba-b572383c16cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ed71e-d543-4d89-aba3-6f05fa6407e9",
        "cursor": {
          "ref": "979ded4a-f74a-44d4-a4e1-b4c884c3bef1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6abfd24d-cc7d-4dd3-a110-456214427e8f"
        },
        "item": {
          "id": "b33ed71e-d543-4d89-aba3-6f05fa6407e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6790e33e-f44e-4c18-9551-516fa1303f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e34dc3a-1952-493a-89d8-c057dde308ab",
        "cursor": {
          "ref": "5ab2a041-34ce-4a4f-9bec-acd4475cf1c3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "915ef124-29a7-48f7-a203-74d501caecc7"
        },
        "item": {
          "id": "2e34dc3a-1952-493a-89d8-c057dde308ab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "13d7132e-f6b7-4b34-b9df-111720781980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48195e95-73d7-442e-8b89-42d24e9163aa",
        "cursor": {
          "ref": "280a17f5-3920-4a27-aa84-103a74dcb7f0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3a6f5321-dffc-4399-b885-e8f7c4426f08"
        },
        "item": {
          "id": "48195e95-73d7-442e-8b89-42d24e9163aa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d213d35-c6e3-4cd0-b2fc-801ab68ca699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f5b148-9a08-42cc-b7c1-e5e9ae732ca1",
        "cursor": {
          "ref": "3152bbfd-f615-4054-a775-ae0fab663179",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3ba31129-337d-4190-a1b4-b3a97dd6c665"
        },
        "item": {
          "id": "b9f5b148-9a08-42cc-b7c1-e5e9ae732ca1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3364a8ae-5cf4-424e-901e-19f65b9f5c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9deaafb-5bab-4b0d-a72b-14a87ea2359d",
        "cursor": {
          "ref": "11258370-f0de-4c37-9bfa-fa75417d9793",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cb830875-64ae-425a-b4c2-d2481d3f5a84"
        },
        "item": {
          "id": "b9deaafb-5bab-4b0d-a72b-14a87ea2359d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7153352f-6bae-4a6f-92c3-0d582fceadcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536b3470-63d2-40b0-96b7-f290cc313be4",
        "cursor": {
          "ref": "7b3aef31-3455-4d90-ae16-bd4dc8921495",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "25e2ff9f-10cb-4fde-aa55-97f6d1a39018"
        },
        "item": {
          "id": "536b3470-63d2-40b0-96b7-f290cc313be4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aedc49f2-9244-432b-a94a-2b5071be8fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11549ed6-3749-419d-a933-21d894fbf7b2",
        "cursor": {
          "ref": "01824716-3e72-4897-a58c-d39272286852",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7541e19f-6f0f-4496-8677-835ef1d09f79"
        },
        "item": {
          "id": "11549ed6-3749-419d-a933-21d894fbf7b2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "413b14fe-aad6-4f1a-b3c3-9c1a279f2e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d270b9c-3481-4bb2-a2c7-2e44c062ca7e",
        "cursor": {
          "ref": "86137f9a-d405-4658-85c6-f84926da9812",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8a0e85f2-6d02-4b9b-916a-5ef715f40f49"
        },
        "item": {
          "id": "7d270b9c-3481-4bb2-a2c7-2e44c062ca7e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b706b5d2-c5f6-4deb-99aa-9d7c8a1296b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25b7014-1000-47b9-bda2-3ab1454bcc38",
        "cursor": {
          "ref": "73864c79-318f-4a8e-ae35-04b7266aee36",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "177173db-7bb4-4887-b017-4058145c4ee4"
        },
        "item": {
          "id": "b25b7014-1000-47b9-bda2-3ab1454bcc38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5e90e79-f771-43f4-b13d-ec8a5e0f6dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91b65a8-ea61-40cc-a19f-51331ec01075",
        "cursor": {
          "ref": "4b9d6149-d6cc-48b0-a1a4-683ffddf0a1a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "53867410-a910-4830-81b4-bf3685106ecf"
        },
        "item": {
          "id": "c91b65a8-ea61-40cc-a19f-51331ec01075",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b525e29-a646-49e2-9cce-7add0bd1fc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c5380-6718-4819-906f-baf0b81a6c65",
        "cursor": {
          "ref": "63574704-3121-4248-a383-58fa6970f12d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7d172c86-8bb0-404d-a23f-4066c55a7a43"
        },
        "item": {
          "id": "0e3c5380-6718-4819-906f-baf0b81a6c65",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "007d3e62-0119-47e3-a87b-b0e03ca4e846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1a31b3-8829-4d31-ae1f-518014b124b1",
        "cursor": {
          "ref": "146874d0-9a92-4b08-a037-db69cfa6a996",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5e302ecf-4fb3-44fa-8b1b-69e4567e4552"
        },
        "item": {
          "id": "ae1a31b3-8829-4d31-ae1f-518014b124b1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "50044271-d7f3-44cb-b121-6cef27f1e5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ba2504-78e6-4404-8f35-f8c2c23a47d5",
        "cursor": {
          "ref": "7a0d5852-43d5-44f4-b35c-bf9aa88ce859",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "de698fd4-808f-412a-86f4-4bd81235aef0"
        },
        "item": {
          "id": "a9ba2504-78e6-4404-8f35-f8c2c23a47d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "84f5253a-fa4d-4648-9e10-2df5904de188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c35c7b5-3beb-48ec-b6a4-e0b152e7daff",
        "cursor": {
          "ref": "4ace292a-2826-4517-b30a-c210e27a75ed",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0b52c033-0da8-4ed9-b300-ec9bb6104069"
        },
        "item": {
          "id": "9c35c7b5-3beb-48ec-b6a4-e0b152e7daff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6cb3d8c4-5d0b-493f-8e62-850e8dede3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9b6529-f649-4566-817f-7438f2ed2a4a",
        "cursor": {
          "ref": "f8236a12-cff7-4814-9fd2-551f2cf60930",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ae104c99-95e6-496d-b07c-3dc718fc8f22"
        },
        "item": {
          "id": "1d9b6529-f649-4566-817f-7438f2ed2a4a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92a99b3f-32cc-4d88-b974-9dde22771db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292011b9-45cf-448c-af95-fc491e76d04e",
        "cursor": {
          "ref": "d07a8579-35c2-46cf-b5d9-7e084a58d3fa",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f45137e8-2f1d-4338-84fd-861723fcf8c6"
        },
        "item": {
          "id": "292011b9-45cf-448c-af95-fc491e76d04e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f84a0524-e66e-4105-bcf5-9837a6af5cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ca607b-b7f6-496e-b68c-45912ab2d7c9",
        "cursor": {
          "ref": "984a9903-e615-479f-88bc-e997e60600dc",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8a94b684-0b89-400c-9622-6ee281f3378a"
        },
        "item": {
          "id": "40ca607b-b7f6-496e-b68c-45912ab2d7c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84610e48-f43c-4384-abaa-c9cde52dfe2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16585a8b-50f9-4895-906b-abe0ea362a75",
        "cursor": {
          "ref": "5ad0b55d-f5c1-42e2-9cfb-1ba0ca840f45",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "54e55bd3-3b8f-4a6f-99c9-2a5160ee604d"
        },
        "item": {
          "id": "16585a8b-50f9-4895-906b-abe0ea362a75",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ad2ba4bb-5253-486d-8bb6-07d32fb866db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c66b22-ca68-44ea-9a3e-7ad0f1ab4f96",
        "cursor": {
          "ref": "9bb958be-0ef1-4758-8968-ebd8ac0a6a15",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c19a49ce-e528-416f-9413-4e705e23bb24"
        },
        "item": {
          "id": "b3c66b22-ca68-44ea-9a3e-7ad0f1ab4f96",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1feca567-bf61-4688-8eab-becb5217d68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4c7758-30ef-4e6f-bb11-5fac8a13dae4",
        "cursor": {
          "ref": "9e7a3322-a1b6-423d-a7bd-8f2e26ab24b3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e4f58eba-2168-4bbb-b8a5-1b89d0723d11"
        },
        "item": {
          "id": "9f4c7758-30ef-4e6f-bb11-5fac8a13dae4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ebf09d8f-2136-4956-b85e-1f0945433fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb36c77d-7cc8-4cd8-bf5f-99bd01e2c783",
        "cursor": {
          "ref": "8b4fceeb-89ca-471b-979e-f9ae86fa78b2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f5105c8-61b2-402c-8dc1-9c034922a714"
        },
        "item": {
          "id": "eb36c77d-7cc8-4cd8-bf5f-99bd01e2c783",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e781319-e03f-4eab-914f-75047e55dd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06a71fa-c055-4c35-8be3-568c3d42cf7c",
        "cursor": {
          "ref": "08f61999-8902-40ad-8202-6a853f0c7186",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "097d3753-d65c-44cd-903d-428814762c73"
        },
        "item": {
          "id": "c06a71fa-c055-4c35-8be3-568c3d42cf7c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bfb5e825-cbaf-4da6-9d60-6d42ccfea164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd26591e-a2e1-4934-a8d9-c76c166fbc62",
        "cursor": {
          "ref": "718f05de-b43a-45c1-8d57-02cb3ebce81c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0004bad9-4d17-4b88-965e-cfdf6599ee36"
        },
        "item": {
          "id": "dd26591e-a2e1-4934-a8d9-c76c166fbc62",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5a716993-50bc-44a5-988b-9eaf9c471ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cbd803-31b9-4a42-a057-2de9771c548d",
        "cursor": {
          "ref": "252d24ce-6a7b-416e-bfb9-b5ef5173a957",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "48b5402c-6e9a-4009-bd3b-48a2c5a2a4aa"
        },
        "item": {
          "id": "c0cbd803-31b9-4a42-a057-2de9771c548d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a3ed929e-bb2d-4e55-8ec6-1b32fe32df93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd9dea3-6b65-46a5-9237-9fac013cdd57",
        "cursor": {
          "ref": "64c9d2b2-8622-416a-ba9c-3e5f9abad5c8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de6a0789-51c4-4eff-9f6a-4bf4dc3c47fb"
        },
        "item": {
          "id": "abd9dea3-6b65-46a5-9237-9fac013cdd57",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1fa35aa5-6833-4ac8-b549-eb38680cbd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebff080-4153-4356-b4a0-c2e89c0ec43d",
        "cursor": {
          "ref": "c743442f-d031-43f0-81f4-24a7486737a1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "846c43b1-a2de-4104-bae7-2507c55b681a"
        },
        "item": {
          "id": "5ebff080-4153-4356-b4a0-c2e89c0ec43d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0103120c-8afb-48d4-bb94-a79de6de0d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b37426c-2352-4b4d-b59e-048adfb14cab",
        "cursor": {
          "ref": "755dc117-8e6a-4a7b-a6b4-a12c0af06907",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ca27a4a1-21b9-430e-bec9-6d44214971d7"
        },
        "item": {
          "id": "8b37426c-2352-4b4d-b59e-048adfb14cab",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c2e225d4-b16c-4ad2-a5e9-8b1c1bcab3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73f576a-c0b5-485a-9a32-a584be9a1472",
        "cursor": {
          "ref": "619575db-bd61-4d67-bb7e-0db1502f63c0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "91a0d9cd-d42a-4322-90b5-9172f934573b"
        },
        "item": {
          "id": "c73f576a-c0b5-485a-9a32-a584be9a1472",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "645b5d70-b9d2-4be6-b07b-9a7e118c2a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe515fa4-a7b6-4f07-8b9a-7d44cd0d5dd0",
        "cursor": {
          "ref": "70832edc-1033-44b5-afed-805b861914ae",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1baa5401-95bd-49df-aa6e-6fda633fac89"
        },
        "item": {
          "id": "fe515fa4-a7b6-4f07-8b9a-7d44cd0d5dd0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d41c45ec-8982-4526-8bae-83ce99e4050d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29d50a9-092e-4774-a8ca-fdca59b138ed",
        "cursor": {
          "ref": "3d6a2071-d153-4b2a-b175-2b88ebabc90f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2404e2b0-05e4-400c-8d31-9f5d88baa4b5"
        },
        "item": {
          "id": "d29d50a9-092e-4774-a8ca-fdca59b138ed",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "31e9b7c4-ef0c-4ff3-a1d8-651b79cb3871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa654876-e1ab-47e4-b2b5-6f855a243d92",
        "cursor": {
          "ref": "121701d0-cd32-4f49-a0b5-371ac1d787e1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f4a7a19c-cab9-4feb-b1e7-9a6473e0c7cd"
        },
        "item": {
          "id": "fa654876-e1ab-47e4-b2b5-6f855a243d92",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "101acde9-cbd0-43b4-86c4-d4bd9ce54666",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c836ea2e-bf1d-4a19-967a-dd546624af50",
        "cursor": {
          "ref": "aa350c11-2d03-437e-aca6-f697b1b26b8f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2c3585f2-c6ef-4ed5-a65b-69f2cce1de6e"
        },
        "item": {
          "id": "c836ea2e-bf1d-4a19-967a-dd546624af50",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a78095fb-50a5-4698-b705-1f26e0855a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa1d65-06ea-4640-9b46-d3f0d290850f",
        "cursor": {
          "ref": "98852af3-9e36-4092-b4e0-7a728cc3d56e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fd672b11-7ed1-4a78-9e17-35037e503aea"
        },
        "item": {
          "id": "e9fa1d65-06ea-4640-9b46-d3f0d290850f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "480a8b5e-8465-4819-8cf5-017fd2862358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e783f577-ffe5-4bd8-aa7e-f283a04cf98b",
        "cursor": {
          "ref": "850a0b4c-6704-42a9-8355-460552036222",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb8ee909-beac-43d2-b508-4dc585e81bac"
        },
        "item": {
          "id": "e783f577-ffe5-4bd8-aa7e-f283a04cf98b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4278e4f4-446f-480a-9f20-6b0c4c87cc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd09d5d8-1a13-4774-b71c-21499c83d354",
        "cursor": {
          "ref": "26be1512-f437-4dca-82e5-40c4891c3526",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c4412ab-5bdf-43fb-a223-e665b33b0c99"
        },
        "item": {
          "id": "dd09d5d8-1a13-4774-b71c-21499c83d354",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "116849d6-5695-4c7b-a003-c86e51177b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f197b8a1-2e43-470e-acec-9f34e62aa96f",
        "cursor": {
          "ref": "0f689021-abd7-416a-b7fe-ba450ae83819",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1254dc2e-c45b-4695-9bdc-ab82cdd306b0"
        },
        "item": {
          "id": "f197b8a1-2e43-470e-acec-9f34e62aa96f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4be68452-1d19-4265-9d88-5f2e51a6d887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a772bfb4-e15f-499b-8389-560fe2ceec7a",
        "cursor": {
          "ref": "670b4e7d-4d84-4e78-9c98-c137ea86dc20",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1bed6849-5aa5-4061-9a3f-574d8414cd58"
        },
        "item": {
          "id": "a772bfb4-e15f-499b-8389-560fe2ceec7a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6c41899d-8caa-434b-9e73-978bf88d2400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb42e5e4-7e86-4ec0-a42e-57e6136442f9",
        "cursor": {
          "ref": "b5a63677-2ec5-4832-8942-315a5155d7b7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d2635dc0-aef2-44f6-a513-3e937de5446a"
        },
        "item": {
          "id": "cb42e5e4-7e86-4ec0-a42e-57e6136442f9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "32bac6f3-ae35-45fd-ab25-43955cdc2f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e8bcb-38d6-4b06-b6ba-4f999f5ef0d7",
        "cursor": {
          "ref": "5016cbe6-9d02-4d34-8b06-0e43ce406b45",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "63b0f846-b2e7-4b21-9094-d6ac7068ccee"
        },
        "item": {
          "id": "ea5e8bcb-38d6-4b06-b6ba-4f999f5ef0d7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f3d5b2dd-8ff8-48a6-a69d-69bc07d5fc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a70df2-6e93-4f81-a6bd-f03865bb31a8",
        "cursor": {
          "ref": "8a24566a-ff5b-48a6-9178-49a5c948d3c3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b54ea97a-91c5-4f70-8462-cc361de52328"
        },
        "item": {
          "id": "66a70df2-6e93-4f81-a6bd-f03865bb31a8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ec60ca96-ebd8-440e-a730-98fc473699ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886f46a6-4e84-4f2c-8c4f-43eb2ce4c86a",
        "cursor": {
          "ref": "25f27e26-6c67-4aba-8f04-d0ac26514b3e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ad4e40ed-2dac-4919-8c0a-1080c552bbcf"
        },
        "item": {
          "id": "886f46a6-4e84-4f2c-8c4f-43eb2ce4c86a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3ebd5253-a1b4-4b74-9579-374230fe04e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16576c81-db1a-410d-9fe2-0728ab5f5788",
        "cursor": {
          "ref": "c72fac7f-ff96-4d48-8eb6-c36da14097b9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ea14af71-ff38-4836-9489-cb32d69028b7"
        },
        "item": {
          "id": "16576c81-db1a-410d-9fe2-0728ab5f5788",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "581072b3-6930-45e4-8e47-3d9a8b4717a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946314eb-3c9c-4e45-a986-040a87a4c7ff",
        "cursor": {
          "ref": "1fc12890-6998-45fa-9f19-fbcf6495cf6a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9dd463b9-bf40-4ef8-96ab-e9a6d00466be"
        },
        "item": {
          "id": "946314eb-3c9c-4e45-a986-040a87a4c7ff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3f1d2908-1368-4b7c-90ba-bc15aafc8579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa9c8d-c576-408f-8076-6a421626535f",
        "cursor": {
          "ref": "f8f15b1e-d563-4b05-801e-c24a3baa6617",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2da856f2-24aa-4301-806d-bf8ab7c8ed70"
        },
        "item": {
          "id": "4bfa9c8d-c576-408f-8076-6a421626535f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "83b1e250-01e1-4353-abae-0aadc8091d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea7803b-fb2e-4629-9e93-9a5ff4999760",
        "cursor": {
          "ref": "8bcfe664-248a-4b62-ae68-fce177362a17",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7aa6d9c3-5792-4ffe-b013-0225b6984b17"
        },
        "item": {
          "id": "aea7803b-fb2e-4629-9e93-9a5ff4999760",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a9bcd39b-3f3f-4aa4-80bb-9e743f47221d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e589666-514c-4635-8983-f22f1e3fa488",
        "cursor": {
          "ref": "9a1f96c5-bea9-487c-b0ac-42b653a1df8e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2f838bab-d93f-4eca-9ab4-2726e356d340"
        },
        "item": {
          "id": "3e589666-514c-4635-8983-f22f1e3fa488",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d5d653be-22e4-484c-9f61-f09b42270662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510e16a7-e232-4dbf-9a2a-73bb9c8e83eb",
        "cursor": {
          "ref": "30307348-810b-4042-ae8d-4c917f77370b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "623e2d26-bade-41a0-8a6b-d6aa4fb1ae7c"
        },
        "item": {
          "id": "510e16a7-e232-4dbf-9a2a-73bb9c8e83eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "18136e7d-a85a-49b2-a9b0-4c3fd279f5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771626dd-0383-4ba2-8775-6a2012aea08d",
        "cursor": {
          "ref": "7a05044c-fafe-4664-96e9-bbee682514ea",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "346507b2-1df8-423d-a332-033b230c74ad"
        },
        "item": {
          "id": "771626dd-0383-4ba2-8775-6a2012aea08d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5c97885d-ca2f-4b33-9d32-328f0dbda5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fee559-1d5b-4069-916c-4c616216f2c2",
        "cursor": {
          "ref": "dd2453cf-76e7-4b12-8557-c6508d79a0c7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "743d5439-0070-44b5-b1b9-02c760134d5f"
        },
        "item": {
          "id": "60fee559-1d5b-4069-916c-4c616216f2c2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aca31870-6a39-483d-a521-e69773c81867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5e9a4-6c7c-4e34-a334-e13a777ea2e4",
        "cursor": {
          "ref": "8a53a482-3aae-4b7c-a744-d8f6b9711a59",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "efb23748-0492-46b8-80bd-f4f5fd71b15c"
        },
        "item": {
          "id": "19d5e9a4-6c7c-4e34-a334-e13a777ea2e4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f3b5fa0c-5f58-4fd9-9ad4-8c4454002a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f350c2-2853-4f34-a4a6-b8d5fcce4440",
        "cursor": {
          "ref": "b40a2c9f-3c9a-49bd-ba9f-df1934cfb335",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0aa9afc3-0e4e-4f5c-ac5d-14295027d1ac"
        },
        "item": {
          "id": "22f350c2-2853-4f34-a4a6-b8d5fcce4440",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "da8a15ab-f3a1-4e7e-82c4-b43eeb39f045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27613f4-37f6-4335-a05e-7219a9fdb624",
        "cursor": {
          "ref": "1a4f63a8-f419-4fc3-9843-bb0a63cb89a1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "29093682-3227-4bae-b3b8-29b92308c4aa"
        },
        "item": {
          "id": "b27613f4-37f6-4335-a05e-7219a9fdb624",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e8353a2b-bbff-4955-b31f-966d3807a866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bcf604-b6b2-4c51-ad14-c8be45136d81",
        "cursor": {
          "ref": "1d87db3a-5ee8-4185-90aa-d3e50423fc1a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0e402566-cdd4-4653-a43c-b042b212e302"
        },
        "item": {
          "id": "55bcf604-b6b2-4c51-ad14-c8be45136d81",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "253349e6-3b10-4302-8fd3-e0dc35f7cd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f0134a-3953-42b8-a5d9-cc0ab4a4b480",
        "cursor": {
          "ref": "abe7e18c-ebd2-45ae-8a0a-b470d2cd8c85",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2e29a831-3304-4499-9f48-e6b6cc9402a8"
        },
        "item": {
          "id": "50f0134a-3953-42b8-a5d9-cc0ab4a4b480",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10ed47f4-cacd-48af-9046-daf01aaa7a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d991e90c-ef2b-4bba-becd-c279d6b4eefe",
        "cursor": {
          "ref": "074a09d1-f1bf-4cc9-84cf-9355582ff845",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ed6be26b-1cb5-4ae4-8fa1-f64b77442474"
        },
        "item": {
          "id": "d991e90c-ef2b-4bba-becd-c279d6b4eefe",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8b7cfbdc-033a-453e-8589-76904838649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b632a5-9538-4d99-9359-a3769d4ec99a",
        "cursor": {
          "ref": "5ac855a7-821f-4b92-a138-b08f84e672b4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b6803ffc-c8e4-4ea9-beda-f57b9920ee4c"
        },
        "item": {
          "id": "a2b632a5-9538-4d99-9359-a3769d4ec99a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d51c6f93-1a89-462b-9fea-fbbba40ea0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8272e0c2-abea-4b73-882b-dc8672f938e5",
        "cursor": {
          "ref": "d5d62352-ce6f-4806-b404-ea80a703c6ca",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1ad6ae76-0184-479f-be91-06bb1f6c7a2a"
        },
        "item": {
          "id": "8272e0c2-abea-4b73-882b-dc8672f938e5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "53f19580-7672-491f-806e-f2b822dbdcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7058c2-d250-4cf8-aeac-a7529ba3b18d",
        "cursor": {
          "ref": "b5b6e977-1976-4564-a1f4-ab72cfbfe5e1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "529ec08b-885c-4394-9a61-aa4edd601dcd"
        },
        "item": {
          "id": "7d7058c2-d250-4cf8-aeac-a7529ba3b18d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "80b8eb32-3692-461d-8094-35aafa56e668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f991ca11-7f8d-49b8-b616-b51e466b6f73",
        "cursor": {
          "ref": "811acf1f-267c-4906-b71a-f4c9b7d48277",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "173fb7c0-0615-4db2-904a-0daa3ea2f134"
        },
        "item": {
          "id": "f991ca11-7f8d-49b8-b616-b51e466b6f73",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1f51176e-c25d-4b47-aa7d-efbeced75639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd12656d-d8ac-4bef-ad15-a44b6d60f391",
        "cursor": {
          "ref": "5fa80962-ec9f-4fd2-8c07-5843d79850b5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6e9c7636-85b1-47b1-9665-eb98b7de3e2d"
        },
        "item": {
          "id": "dd12656d-d8ac-4bef-ad15-a44b6d60f391",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4f17e5fc-f582-4147-95e1-73c3a1a72666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bce9c0-f69a-4a76-8385-f37b70b6256b",
        "cursor": {
          "ref": "2ea995bf-69cf-484a-999c-6757afa70e4b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5d684adb-67fd-45a5-874f-6af7c3bcbee2"
        },
        "item": {
          "id": "d4bce9c0-f69a-4a76-8385-f37b70b6256b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a5aa93ab-3ac3-4481-9f5b-cbc0dc11948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41263e24-3f31-4102-a8ba-9a099a40d2b7",
        "cursor": {
          "ref": "5595c0bd-a9cb-4f40-928e-290238fa37df",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ea31f3da-93e2-4a2d-afdb-44cb5dfee1e7"
        },
        "item": {
          "id": "41263e24-3f31-4102-a8ba-9a099a40d2b7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7782bf18-d184-4f7f-a39a-df67a0320f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec29ab69-1792-4a4e-8659-bde789750f15",
        "cursor": {
          "ref": "edf11550-ddbd-470e-b35e-fda32c8fd5a0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "008d7df2-81be-4f0f-b13b-05e7ddb3c883"
        },
        "item": {
          "id": "ec29ab69-1792-4a4e-8659-bde789750f15",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ff4b60ed-bd45-48c5-a12f-18641952fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b71d7a-81f7-43ae-8d46-45d2d861256f",
        "cursor": {
          "ref": "1e086d86-a8c0-43f8-a87c-a327fc788f57",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6d5045f8-58e6-4a25-aede-b9af3ba496e0"
        },
        "item": {
          "id": "84b71d7a-81f7-43ae-8d46-45d2d861256f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3fe4813b-6f89-4d35-8f10-581d5c70a635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28d2d1a-0554-40f6-acfc-a6da7daaa569",
        "cursor": {
          "ref": "e8f54645-5b8f-4a0e-a149-b310b3ad3ca4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "aabe971e-63a2-48b8-ad8f-9b6742b2b6d2"
        },
        "item": {
          "id": "c28d2d1a-0554-40f6-acfc-a6da7daaa569",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "17239f1b-6dc2-4e5b-9d7e-b23411a1d676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c17ab-52bc-4fc3-9e28-3a7331812bf0",
        "cursor": {
          "ref": "bb9e06b2-5f34-4ad3-9968-7f31d98bd028",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8d0106f-2d01-48ed-8866-428d3cade049"
        },
        "item": {
          "id": "3d8c17ab-52bc-4fc3-9e28-3a7331812bf0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "89222d84-48d3-4af4-bb9f-f0761bbff1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec175ea3-e297-4373-b68a-a19a9e2e9fed",
        "cursor": {
          "ref": "96a4b3a0-721f-4abe-a446-b24658d025ec",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3112e7c1-6f9a-4c4a-be78-819fbbdbdb55"
        },
        "item": {
          "id": "ec175ea3-e297-4373-b68a-a19a9e2e9fed",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ccd2bb9f-95b9-4661-85d3-e1750cad6d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4918b4a-29c7-4bff-8f18-284e7509b381",
        "cursor": {
          "ref": "d1465f09-0a46-4a7a-9514-a8fff9420c5b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "198fc57a-407c-45a3-b466-811d11dd8db4"
        },
        "item": {
          "id": "d4918b4a-29c7-4bff-8f18-284e7509b381",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "064ddbcd-ffaa-4bba-b14e-32079123edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a554ab7-e1a6-4813-8635-b0707989581b",
        "cursor": {
          "ref": "05d24631-34a8-414a-89dd-7f51fb24cd61",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f010b261-071c-40ae-bfcb-747ce81dee95"
        },
        "item": {
          "id": "9a554ab7-e1a6-4813-8635-b0707989581b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3ff01007-c83a-4436-bb5b-9914a1a6d880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59305c14-b610-486b-99fd-b532688fd766",
        "cursor": {
          "ref": "7d9ab5db-8751-4b45-bcc1-2ea9cff23f3d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "afa644d1-a342-4c2b-9d34-1ae2549aa96c"
        },
        "item": {
          "id": "59305c14-b610-486b-99fd-b532688fd766",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1ca4b436-b73c-465a-b823-5ba5da2ec941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540c6d8c-8139-4be3-b7e0-20e25da0e1c2",
        "cursor": {
          "ref": "31dcaf02-8e72-4287-ac24-b6a286fd7941",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "158d9058-6474-461b-8b8a-856bd3fc92cf"
        },
        "item": {
          "id": "540c6d8c-8139-4be3-b7e0-20e25da0e1c2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "16f78700-2005-415b-b043-4aa47e165529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b385cad9-0fe2-4e60-84b0-ec6f3a149b8f",
        "cursor": {
          "ref": "905a6b5f-1e98-4542-944b-4449859e2707",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "87b986c8-6f6c-4c29-afa3-70739cc25a6f"
        },
        "item": {
          "id": "b385cad9-0fe2-4e60-84b0-ec6f3a149b8f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "48e77d28-1cb9-4c58-b0c2-e0433c1ea409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e34762-03de-4815-9de4-f106bb71969a",
        "cursor": {
          "ref": "074f29c6-0248-4fbc-87a7-f6720148552c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e11aed92-2d39-4c21-9eb1-edbbede26a33"
        },
        "item": {
          "id": "75e34762-03de-4815-9de4-f106bb71969a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2ef5aaf1-93e8-4249-ab64-fce03167f94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bcc5ff-14ce-4723-bcf2-e3e4f99a0152",
        "cursor": {
          "ref": "5ae1158c-6017-474c-a18f-8fa4879c5964",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0065dcdc-ea37-4691-b6b6-64442f399d61"
        },
        "item": {
          "id": "e9bcc5ff-14ce-4723-bcf2-e3e4f99a0152",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5b1b66af-8658-4abd-bf88-7fd0dbd138f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e24a8d-0d81-49e0-b210-ba7cd9404d36",
        "cursor": {
          "ref": "89d5bd31-624d-492d-953a-fb980cf7c8d7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c0e83ee7-8423-458e-9069-5d9f0c0eafb8"
        },
        "item": {
          "id": "90e24a8d-0d81-49e0-b210-ba7cd9404d36",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c6e0318b-e9fc-464a-b9cf-b5a3565f7ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e20bbf-2038-44df-95d7-37070689bed4",
        "cursor": {
          "ref": "4ae72506-69e4-47de-b07e-1d89fb45401e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5745e2a5-d84a-49ac-b34d-dd9f7ed6fcf9"
        },
        "item": {
          "id": "16e20bbf-2038-44df-95d7-37070689bed4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0eba364a-854a-408f-986e-1edd8e9d0d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4697061-6f74-4f54-b813-11cb769c6aa3",
        "cursor": {
          "ref": "63a3b9db-f0ec-45c7-babe-3a462ac14622",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3d03eb56-f054-411b-ad1a-b2dbf807ed9d"
        },
        "item": {
          "id": "e4697061-6f74-4f54-b813-11cb769c6aa3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c4d867c5-e4a6-4ce2-b3da-c667b3c68f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48081a2a-fcc4-4815-bcf2-db113357ea17",
        "cursor": {
          "ref": "a4c62ab5-731e-4891-8272-2a083d362c8e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2def04b1-3c1f-4177-869b-b40645687e2d"
        },
        "item": {
          "id": "48081a2a-fcc4-4815-bcf2-db113357ea17",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "197834d8-e9e9-49ff-98a3-3a9fa54030d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fd68c8-8803-4d1a-a65c-91182a38739f",
        "cursor": {
          "ref": "4944efd9-7263-483a-91a7-41f7087ec704",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d41fbee-26ef-41fc-955d-941140b74877"
        },
        "item": {
          "id": "52fd68c8-8803-4d1a-a65c-91182a38739f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d75616da-539a-438e-932d-3873eaaeac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40310482-833d-43f4-a4d7-21d842c895df",
        "cursor": {
          "ref": "12050c72-6c93-4cd1-9557-d39326e23d02",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "07ba5834-e291-4484-9f37-a7fc55be7682"
        },
        "item": {
          "id": "40310482-833d-43f4-a4d7-21d842c895df",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "db09ecfc-5bb9-4de7-b98f-e4fdbb379df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fc9396-7cb2-400e-8530-635f4783819a",
        "cursor": {
          "ref": "70525133-d66e-4fac-9e21-57a44e80c267",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4179385e-80ac-436d-93b2-9450ca04100f"
        },
        "item": {
          "id": "b9fc9396-7cb2-400e-8530-635f4783819a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c04ab480-373b-480f-8764-357b2144aee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211129a1-5299-4d18-b393-9d32c75a6a08",
        "cursor": {
          "ref": "4e830a92-0019-43ac-857a-b114350b5497",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d33b27d8-ed2c-42ea-b6e3-1a1826b6bd7f"
        },
        "item": {
          "id": "211129a1-5299-4d18-b393-9d32c75a6a08",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "52f35c80-4946-4a62-87b3-86cf6b3f315f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c697fe3-215a-4630-8133-d55dfdf0526e",
        "cursor": {
          "ref": "14bfe991-25fa-4d47-9e57-512a97c31dba",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5139969a-7fc5-4670-bb1b-8a4b36f5aaed"
        },
        "item": {
          "id": "9c697fe3-215a-4630-8133-d55dfdf0526e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e54170a5-0430-4232-b3b3-9d2b94ed3399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562c60a1-447d-4001-87eb-354aa003a4fb",
        "cursor": {
          "ref": "83229c40-830b-4a3e-864e-71796a8a341f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "663b948e-1658-45e4-845a-7081efb98642"
        },
        "item": {
          "id": "562c60a1-447d-4001-87eb-354aa003a4fb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d747e77d-c72d-4816-bf2e-d1f3e044c41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c20ce9a-b1be-4b2b-847e-501d640dc938",
        "cursor": {
          "ref": "1500c2ee-3e8f-41da-bc1d-df98776d948a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "54c4fa84-717c-4fff-904f-e67e94b8eaff"
        },
        "item": {
          "id": "4c20ce9a-b1be-4b2b-847e-501d640dc938",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c07153ad-2103-4689-99f6-8bf0198a369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bc5777-2839-4c44-ad58-c51b7e56d40c",
        "cursor": {
          "ref": "47d90b79-d41d-4eb2-b886-f709731e0df1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ca819e3-53d2-4e0f-a789-917cdbf3bda4"
        },
        "item": {
          "id": "89bc5777-2839-4c44-ad58-c51b7e56d40c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08e3434e-9447-4547-8415-1703fa6095d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354475c3-2d06-4b0d-8776-1ccf11e36e30",
        "cursor": {
          "ref": "d0cd74a6-eb39-42c9-b959-cc84102b3d18",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e62c702-bad8-4a9d-b666-2c854bd3f5ac"
        },
        "item": {
          "id": "354475c3-2d06-4b0d-8776-1ccf11e36e30",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5a81fcd8-9389-4a86-afa1-cc2aea0efa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87531a8-5e62-4893-9de9-c6a5c6b7afd3",
        "cursor": {
          "ref": "1490b0f1-7ead-422d-b198-47deee7a9b57",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "41efe23a-5b1f-4ee5-a644-d136ce774bc7"
        },
        "item": {
          "id": "a87531a8-5e62-4893-9de9-c6a5c6b7afd3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e3f909a-400c-4efd-9974-ae0d60f64cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32b4ffe-402c-476a-a286-de376d7855c2",
        "cursor": {
          "ref": "14471eb3-f0f7-4943-8409-9bb352502cba",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7c2fd03b-82fe-4af7-8539-a086af3afa46"
        },
        "item": {
          "id": "f32b4ffe-402c-476a-a286-de376d7855c2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7daa6fb5-1280-4760-ba3c-5661045d2497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0881ddb4-aa4d-46f8-ac79-887f434e7378",
        "cursor": {
          "ref": "958ef480-5888-4789-96ca-5314e8f36561",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f4592457-0fa8-4d5e-a655-93aaac91eabe"
        },
        "item": {
          "id": "0881ddb4-aa4d-46f8-ac79-887f434e7378",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a9e23dd9-71bb-46a1-a8ff-67572d11ecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fba2bbe-ba87-4aef-a3ff-d19e5c1f8782",
        "cursor": {
          "ref": "99e60fcd-cbf0-4855-bfe3-5814626364ca",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8f0ec641-bd1b-4250-869a-7a03dc8d25cd"
        },
        "item": {
          "id": "1fba2bbe-ba87-4aef-a3ff-d19e5c1f8782",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e1c74aa-d452-4ca8-bd6c-879e7372f1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb1f055-16f5-43b8-bf78-19b7a18706c8",
        "cursor": {
          "ref": "502cf1bf-48f1-463b-9af8-783c9d9a8ad4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8af636a2-dddb-4932-aa51-df79f0db616c"
        },
        "item": {
          "id": "bcb1f055-16f5-43b8-bf78-19b7a18706c8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bfc20c07-bbe7-4069-bc6f-3f9452066a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ce298a-7be3-4b93-b6aa-a06d7a7347be",
        "cursor": {
          "ref": "74496e0b-b916-4b5e-86d1-25e32b95daca",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d92511f7-f581-4d43-aa0e-7110482a5f47"
        },
        "item": {
          "id": "98ce298a-7be3-4b93-b6aa-a06d7a7347be",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "230baa66-c61d-4d9c-a111-c30c1c74356b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de8999-5249-43c0-9de8-ff996789b851",
        "cursor": {
          "ref": "3c87c858-541f-4d35-ab44-154242149dbb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9bf19f2e-2b69-4f0d-bcc7-94450bd9f9eb"
        },
        "item": {
          "id": "57de8999-5249-43c0-9de8-ff996789b851",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "96a3b39b-770e-4416-b415-b4b94ca8d883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e36fe-5ad7-4a5c-80a1-26c731a6beb3",
        "cursor": {
          "ref": "80d62e1f-c65c-4184-b419-925048d1d6ba",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "12302832-1898-4990-8f6c-2f6b42774985"
        },
        "item": {
          "id": "df1e36fe-5ad7-4a5c-80a1-26c731a6beb3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6aac923c-2aff-42c4-9190-eede08269d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffee5e2-e4c6-4b26-89f4-15d7fd46ca08",
        "cursor": {
          "ref": "efd07476-a717-472b-88fd-09da4bb091ca",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "97ea957e-4c8b-4ffa-a6fe-f0c9b746b44b"
        },
        "item": {
          "id": "6ffee5e2-e4c6-4b26-89f4-15d7fd46ca08",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "66f287e0-2c75-4fa5-bc0a-d2683f356b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca46554-75e9-464c-9119-de11e258d6a1",
        "cursor": {
          "ref": "b3ade7e0-a092-4564-b1e8-9423c5d93bf0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "46118065-3059-4f8f-a401-3eae35ccf2a7"
        },
        "item": {
          "id": "dca46554-75e9-464c-9119-de11e258d6a1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b6d736cf-9cce-47d9-a7aa-ced83fc54a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf66e12-6bc3-48c0-969f-10e81e06d45d",
        "cursor": {
          "ref": "ac9166fc-9027-44fb-8881-58635fa0da64",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "057f9784-a2ba-45d8-90e8-fa8081f9f41e"
        },
        "item": {
          "id": "ccf66e12-6bc3-48c0-969f-10e81e06d45d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a4b416c7-d8bb-4450-9bcb-4dace19a0d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16853380-8e01-4e06-88fa-0db0e1202356",
        "cursor": {
          "ref": "1fa9d314-40c8-4f6b-b271-5ad619933940",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1a81e4d5-a99c-454f-948a-0a26e2e1e002"
        },
        "item": {
          "id": "16853380-8e01-4e06-88fa-0db0e1202356",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2b760ee6-f594-46ca-b2a7-3961cfbb8414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b69bfc-8f45-4f40-8680-c5c79d96b271",
        "cursor": {
          "ref": "5eff2040-19b4-4179-bb11-d0a5252b3be9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fff8a4c9-88fc-490f-98a6-1bd383aae19c"
        },
        "item": {
          "id": "61b69bfc-8f45-4f40-8680-c5c79d96b271",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d9f27b65-cc79-4a55-bc37-96378c08b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08543535-4a2d-4b92-8da1-b7cbe8c2bc27",
        "cursor": {
          "ref": "3a4f1477-57ad-455d-aedb-77e937355eaa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "25e8fa45-531e-4a98-a62a-a87d7527fd60"
        },
        "item": {
          "id": "08543535-4a2d-4b92-8da1-b7cbe8c2bc27",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "eeef7bde-a368-4652-ad61-ab84dd9faaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb6d568-fa7d-473a-8ccc-ca0e87057d0f",
        "cursor": {
          "ref": "2a552420-cd1b-47b9-b306-c9d59ca0b2b9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4bfb189c-f7f6-4a82-8f23-2a71838e6fc6"
        },
        "item": {
          "id": "3bb6d568-fa7d-473a-8ccc-ca0e87057d0f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af8906b3-6e2b-42cf-9e6e-b229d7aebebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ede440c-2082-4cb6-9010-56adf4278e18",
        "cursor": {
          "ref": "f4dd404f-a4ed-4840-899c-ee60708df8ba",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "06bdf453-7f41-4d57-889a-026839e772a8"
        },
        "item": {
          "id": "7ede440c-2082-4cb6-9010-56adf4278e18",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d2975ce3-1c07-42c0-a2a9-e6ee0cefba69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024c14a6-177f-45c2-adda-bf0671601726",
        "cursor": {
          "ref": "3ac7f414-cb99-4512-8f17-bd77e37a36a4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "34f6bfd8-47a4-48b3-9b41-160bd0510673"
        },
        "item": {
          "id": "024c14a6-177f-45c2-adda-bf0671601726",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "091bb396-2d7d-4c5c-907d-e1b6057b1121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456aa7f1-0309-46c8-ac1c-af834d92aeb9",
        "cursor": {
          "ref": "2bd4801b-754c-441d-ae5b-5b7978b094ad",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9d80f371-e378-4a2a-a5ec-91bdf3ba6161"
        },
        "item": {
          "id": "456aa7f1-0309-46c8-ac1c-af834d92aeb9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c93220f-05be-4664-91bf-cf4be2774f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af9ae2d-00f7-4fe6-8cba-01bbaff991ec",
        "cursor": {
          "ref": "44b58350-82e5-4559-a644-7a53236af01f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "125934a1-e1d0-49fb-9885-045289f2a29d"
        },
        "item": {
          "id": "2af9ae2d-00f7-4fe6-8cba-01bbaff991ec",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30814418-bb05-4111-8b87-ca1853cdb029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9771bc0-f351-4868-91cf-78461ff1aa7c",
        "cursor": {
          "ref": "4a61d72f-f70c-4ce1-aa76-94506e85971e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9d8cfa55-b0bc-40ee-8a8f-838135afe662"
        },
        "item": {
          "id": "c9771bc0-f351-4868-91cf-78461ff1aa7c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f52998bf-f724-49a2-aa56-12f0b5d654a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f27cbb-8e0e-48ab-8a34-452921352cc3",
        "cursor": {
          "ref": "84523ced-9c2a-419e-8cf1-0fdcf932e19c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "57f13c6f-6c54-4ce8-b5a5-8f1c74c0ee26"
        },
        "item": {
          "id": "a8f27cbb-8e0e-48ab-8a34-452921352cc3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dba089f2-2f4a-49fe-83a8-171607551f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c86a9b-eac9-4d9a-b0a6-aa64bba46ee4",
        "cursor": {
          "ref": "890dfcb7-a38a-429e-80fc-c86da1cd5bc8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0c481c4c-d90e-439e-967c-466e7afae114"
        },
        "item": {
          "id": "45c86a9b-eac9-4d9a-b0a6-aa64bba46ee4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6de9b0aa-6961-4fd4-b15d-4764771cb801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c9bd51-23e4-4450-85af-35defb891482",
        "cursor": {
          "ref": "0eb764f6-6bad-4220-95b4-dcf2c2f9514f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6a16779c-cf28-40c0-888e-f22a61fd2870"
        },
        "item": {
          "id": "d0c9bd51-23e4-4450-85af-35defb891482",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4b0ceb68-64a9-4452-9845-02d0d9bb3558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d28152f-294f-4902-9e1e-221a4f25b2b2",
        "cursor": {
          "ref": "709e83be-bd89-463e-9ad1-02925922ea5d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cdb9749e-3df5-429f-98ed-ee777974450e"
        },
        "item": {
          "id": "4d28152f-294f-4902-9e1e-221a4f25b2b2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8f96dad-8a0f-425a-9f46-2f1013ddd565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2ce4fd-09a9-419e-8faf-d83368fc799c",
        "cursor": {
          "ref": "9f50134f-a60f-4165-bf05-1c84f0247310",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fc472660-d670-47d8-8c68-0dc0f254eccc"
        },
        "item": {
          "id": "1d2ce4fd-09a9-419e-8faf-d83368fc799c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "687fc5e1-8775-4b54-905a-027d61994e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb68ab-6e9a-445e-879f-0f7f2324fb85",
        "cursor": {
          "ref": "aa89426c-eba0-4ecd-92cb-90087512ff23",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5bcb46a0-4b1e-4270-89a4-6b9af7fdf6f5"
        },
        "item": {
          "id": "2dbb68ab-6e9a-445e-879f-0f7f2324fb85",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3c24d24c-26bd-48bf-999e-87eb76c94194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623f272a-025c-4702-a452-ab2b2175b4db",
        "cursor": {
          "ref": "6d0c033f-3af3-49d7-af3d-d005a0d2a71c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e860f945-865d-4462-b10f-eb30fbd14121"
        },
        "item": {
          "id": "623f272a-025c-4702-a452-ab2b2175b4db",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c3607d3e-ebea-4ddb-bcad-2020a18bbe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19796c7-a914-4672-a6d5-8fe1e44cd97a",
        "cursor": {
          "ref": "8a84d09b-70d5-40b7-915b-edf121052c45",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c203d0cc-e9d9-4848-84c2-57ded010bbcc"
        },
        "item": {
          "id": "d19796c7-a914-4672-a6d5-8fe1e44cd97a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3107899f-1596-4441-96a4-95b2764de485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4e79d3-e44f-4ca5-9b5e-a83163a50927",
        "cursor": {
          "ref": "f7b273e4-5ac1-4964-aa24-deb128d05f0a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6e5b9e98-8d58-4f5a-91d1-8671c14ff00d"
        },
        "item": {
          "id": "8e4e79d3-e44f-4ca5-9b5e-a83163a50927",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5d5ff8c5-c099-4463-9c31-d414405c266b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808fa7bf-22bc-4c8e-9455-867bcb13234c",
        "cursor": {
          "ref": "4e3385b8-4a0b-4c9b-afea-b65e5ce032a1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4d8fa33d-29bb-4e7c-8704-5ce56a6a30f7"
        },
        "item": {
          "id": "808fa7bf-22bc-4c8e-9455-867bcb13234c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a68a6f09-a334-4068-8f71-5ffc87492679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e87e64-4f02-4bcf-93d7-5ba06b04ab12",
        "cursor": {
          "ref": "280dd2b6-7be3-4352-8217-67332bc56833",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a220d1dd-04db-491f-931a-3e6cef542d3d"
        },
        "item": {
          "id": "29e87e64-4f02-4bcf-93d7-5ba06b04ab12",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f455ad42-b86b-4150-9ee8-9b60436ee489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41af037-ab27-4187-8d61-5c15363f1381",
        "cursor": {
          "ref": "84a53fe1-ba62-46a6-9873-c67941acd836",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d157597b-7cd8-41a5-bef3-d670c076f5e3"
        },
        "item": {
          "id": "a41af037-ab27-4187-8d61-5c15363f1381",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7185ba7-30d7-4250-b2e3-3168dc4cd44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4037ea1d-3ee0-4c53-bc40-014b501209ec",
        "cursor": {
          "ref": "c27d4473-f6f0-43a4-9aea-a7fb145a3c24",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "db60ff0f-2b50-461f-b03e-d0fb5106b1ac"
        },
        "item": {
          "id": "4037ea1d-3ee0-4c53-bc40-014b501209ec",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8e963d4d-226b-4404-93d7-f0151aaa668c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e3d104-bb6d-4aa6-8b04-93f2bf3ed38e",
        "cursor": {
          "ref": "fe8972c5-581f-493a-822a-a9d941966a5e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c17ad0ff-6cbb-466f-85cd-edb2f80b212b"
        },
        "item": {
          "id": "68e3d104-bb6d-4aa6-8b04-93f2bf3ed38e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fbdef60f-2f8c-41d2-bb61-e00190a6d33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b76ee2-392f-430f-98c4-5beed3897c74",
        "cursor": {
          "ref": "a0c019b9-4f6d-48d6-a7d5-5f336cfd8767",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aba57d64-4943-46d2-abfa-9cb62c093835"
        },
        "item": {
          "id": "72b76ee2-392f-430f-98c4-5beed3897c74",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bbd80872-9e73-416c-89fd-55e011f6fb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad9a8a6-4604-402c-bece-4334698bb709",
        "cursor": {
          "ref": "245e7812-6684-4036-a2ce-d5872d2bf760",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bdf04342-06a7-4259-90e8-4c7e2a9eb54f"
        },
        "item": {
          "id": "5ad9a8a6-4604-402c-bece-4334698bb709",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d431db80-5cf9-4509-8c00-ee1a33e8ed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3bac0b-145d-44de-bba3-4ef02e051049",
        "cursor": {
          "ref": "451ac576-c565-4f53-8054-b79e2298d776",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da8353c9-aa54-458e-998c-60fbdf1a211d"
        },
        "item": {
          "id": "ea3bac0b-145d-44de-bba3-4ef02e051049",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a1e5b775-4ffc-4556-963d-770fdf30e138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6b02b4-7725-466f-a040-8fe0753be7ce",
        "cursor": {
          "ref": "1c410911-8fda-4d86-b5dd-d84943c90471",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d75f117e-ec3b-4f67-964a-6e8ace2f2d5d"
        },
        "item": {
          "id": "3e6b02b4-7725-466f-a040-8fe0753be7ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c58fa458-b670-40e7-9c66-18fd567a2e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b899f0b-7ea6-4d1b-893f-0c7b2b4eed10",
        "cursor": {
          "ref": "f86bf138-2b41-4c7f-b2d7-3e040c2816b5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "68730fe4-a614-4df5-895c-18c768c39f22"
        },
        "item": {
          "id": "6b899f0b-7ea6-4d1b-893f-0c7b2b4eed10",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c24561d1-0f34-4a8d-9a7d-bb6aabe8e956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edca58f-79bc-4f0f-88c6-daf87142cb34",
        "cursor": {
          "ref": "7021d96d-17b0-480c-bff2-0e1b85c0150b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c0766b26-c770-4007-aede-4ddadf0da431"
        },
        "item": {
          "id": "8edca58f-79bc-4f0f-88c6-daf87142cb34",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "19ad72ab-b648-405e-8332-b6078787a922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc40e28-4e33-45f3-9fea-efa684991a1d",
        "cursor": {
          "ref": "939a8ee8-9aaa-4a2b-9c54-275c530a6700",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eb65be71-1a78-4998-ac28-8761ca1e05b8"
        },
        "item": {
          "id": "8cc40e28-4e33-45f3-9fea-efa684991a1d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cf8db073-13f3-4fd1-9968-957880f2d4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae44ba9b-527a-4ac3-9430-f172cd8b83c8",
        "cursor": {
          "ref": "1c35ba21-03ce-4e47-a595-04153556a27c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2ba7a0c-0b71-4716-a772-b350a371e831"
        },
        "item": {
          "id": "ae44ba9b-527a-4ac3-9430-f172cd8b83c8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ad84c20a-e5c6-49b3-b1e1-839ffd10f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4abc8-e1e1-4449-bd88-56724ec97f61",
        "cursor": {
          "ref": "6dd2741e-23e5-4981-adca-a3225ef32625",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "861ee608-b217-460b-a26a-feb23a51219a"
        },
        "item": {
          "id": "9fb4abc8-e1e1-4449-bd88-56724ec97f61",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1b9465a3-835a-4de1-8657-0b55d2890038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "99d064f3-a85d-4228-ba1c-fb4ec9623ed6",
        "cursor": {
          "ref": "b284df51-48e6-4fbb-af65-031467614076",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b58d19bd-b608-421a-9992-1daf7fb1e203"
        },
        "item": {
          "id": "99d064f3-a85d-4228-ba1c-fb4ec9623ed6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1e88ee1f-f08e-4856-93ab-6bd9c8051ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e383b217-2a21-45ab-80f5-61f5f5dda1b9",
        "cursor": {
          "ref": "d1cb059e-e341-4401-ab22-a8625f30a1ca",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8463fce1-e457-4503-973f-02ed6f1a7337"
        },
        "item": {
          "id": "e383b217-2a21-45ab-80f5-61f5f5dda1b9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9acf6fd4-c091-475e-8a2e-41f0c0bae6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "7490fecd-0c04-408c-a346-f7b597a38a24",
        "cursor": {
          "ref": "89d9b204-e600-4b6f-b5ae-6da3e9fd7686",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c61570f9-a6a0-4a95-ad40-75dbb99e83bc"
        },
        "item": {
          "id": "7490fecd-0c04-408c-a346-f7b597a38a24",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f46fa53-d0f3-4f14-9395-2efa4b2dadc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7490fecd-0c04-408c-a346-f7b597a38a24",
        "cursor": {
          "ref": "89d9b204-e600-4b6f-b5ae-6da3e9fd7686",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c61570f9-a6a0-4a95-ad40-75dbb99e83bc"
        },
        "item": {
          "id": "7490fecd-0c04-408c-a346-f7b597a38a24",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f46fa53-d0f3-4f14-9395-2efa4b2dadc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dab321-60cd-4512-a6ea-a0a7fc7233e9",
        "cursor": {
          "ref": "acbc2695-9c39-4ed9-a78c-19bc4077ff70",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e9b0a312-7151-415b-b0b2-41cff51e0cfb"
        },
        "item": {
          "id": "38dab321-60cd-4512-a6ea-a0a7fc7233e9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "291031cc-8813-4de1-a7f3-54d4055c48d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b154b-6315-499e-92b7-2af42b1211a1",
        "cursor": {
          "ref": "ebb0b98a-b72f-4d81-aa51-278f163f18dd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e48b2198-3887-439f-9db9-0e26ebaa25a3"
        },
        "item": {
          "id": "9f6b154b-6315-499e-92b7-2af42b1211a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d8fa175f-694c-4780-9b0c-4359fd202cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}