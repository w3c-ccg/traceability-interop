{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b64be1f5-9402-49b7-a130-e6c424000ee0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "052e91e6-4749-4c67-921b-790bc4b85435",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa265374-3787-4420-aa63-45d8aabfc47c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e6fc580-b0d9-44a4-be5d-4e9037f8efb8"
                }
              }
            ]
          },
          {
            "id": "37bbbddd-23c6-4bf6-83f0-387f50bd565a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01e7d9cb-2511-4536-b88e-786077c68221",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "26343135-a4c8-4acc-9fce-197650b11e91"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "66895d61-8e5f-4e03-9edc-476ed6a467e5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e1083f01-d685-41e3-877f-ce77ef3bbe99",
            "name": "Positive Testing",
            "item": [
              {
                "id": "649a439f-7947-4959-b4d0-bba1729490bb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7c89c5a-6685-4224-8dcd-d571cf257eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73fd5c63-b969-48b4-9e49-ed3b747874f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2c2832a-23f9-49c1-adba-4ba565346a96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa890f61-97a9-4a64-a399-93292a2e3f49"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91ec185c-863d-49e4-bd02-d586052baa59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59b2f82a-b9a8-4220-afbb-cecaeabdcd47"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f49f4d7-ce88-4028-9544-e33466d08de4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3e519f59-9e22-42a8-8b56-17e531c46ddc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea7cff30-4f46-4a4f-9486-4049f5c4ac16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "783dbaac-30da-4ed7-938c-cf381d9eb16a"
            }
          }
        ]
      },
      {
        "id": "c60ab78c-a45c-44ff-92e7-3a366981b0af",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "80a000b5-1460-4912-98bd-bbf5bfc7684f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ecf7047-76a3-44a7-8e5a-2e6da136150e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b36556f9-c8fd-4a6e-8774-6139945a3fdd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d396c786-85b6-400b-a2ba-a05378706aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "329c34d0-f4fc-4496-9486-271460c18984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5337f4aa-6cba-4450-b519-4ea713bc0702",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d979078-1a9f-45a7-94ae-d3ca14188b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f7388d6-4d5c-4ac7-81c2-f758954d49a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9d3538-cf04-4a79-a8a7-a07ca595c8ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7ae7c4-4904-41c4-a7b0-123c15a1558d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fac0d5a6-4b06-4d49-8f60-6ebeb8147c3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e92ec42-72b7-4b69-bb9b-74f579737fdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12501f27-326a-4d1e-9aa4-e0370c9ddfb6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7579772d-78ae-482f-a680-01475b962b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f227a43b-c283-442d-8749-4f1c8fd6df83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2982ad-8cda-4401-90a9-aa2fc6465e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddea482-731d-4704-8056-98b93b64b5f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "26d09777-c89c-46f7-8863-72d46a5d4341",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6af61b8-7c1d-4c48-8a62-dc415932f915",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7955107-c832-4c5a-9aae-971979484850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e1bb4040-b394-4bd8-8453-3c2ddcef417c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "721e6d0f-4b4a-4149-aca2-c4fd9aeaa37e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "323564e6-b4a7-499d-90d9-0feb309f7305"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97fd4e6e-2638-4259-8457-4a8a6a5fbc67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d643b44c-4efa-48ce-8a0f-eb2750bd720d"
            }
          }
        ]
      },
      {
        "id": "71a9fc3b-4b4a-406e-a8f8-e7809fa1063e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b733ae71-20c6-43ab-8651-566a906ecddc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "769d9d0c-f337-462a-a5bd-2bd204cc3adb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d3dad782-6686-47b1-ae63-8afb2730a7fd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6b17de-aab8-4cfe-a78f-45e4b9c45267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0598d3e7-111f-4285-939f-621d6003c673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d815b70-c607-4787-beef-e76940274da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94a9a768-6160-43b1-aec5-55b4a332dffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7992f4b8-89c4-40d6-bfdb-bda4ad0dcff6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02d5098-d16a-4a18-aaf1-b73a18560672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fc9d86-90fb-4f2e-9331-af000338e38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b77900-f961-4582-8c8b-92036c7bf6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c44e0650-3ab6-4a98-a032-f7da4186b943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a0523b-24d6-470d-8a55-62abc9d8c1b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1606eeb-4a89-44cd-83d4-7cbcd7a3ebac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44757883-eed5-4f5f-9af3-4ae59e65c9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8967532-fe80-422b-b131-f942b07636f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91205d5b-5d75-4d24-a77f-f132c5558b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748ee65c-1dab-4f90-b5f5-34e28226d3b8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fb74c6-8e04-43f0-ab3f-147d76069689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ef43ef-085a-41d4-abf8-202aa94df92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac0a5a2-ac24-460d-ac6f-489bfcdd95d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d900ecb2-db16-4ce6-84ef-afdeae5b6587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0da1219-a832-45b6-9c1b-ba92ba162a3f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6c327e-e8b1-448b-a9a3-00a690f89c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84b86ac-bd48-4a18-90a8-35ac5352ffbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54635850-c501-4ebc-bf1b-e107303dfc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aa2113c-9fde-49ae-89df-55ef2f13b1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc2c551-17f4-41df-ab12-dcf40ebabf18",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9644f5cf-26e5-4f05-8b58-fa8ce4e041a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aec785c-0b51-414d-8522-7e013f255b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ad670c-3b7f-4d65-af4f-876697207e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa0474f9-638d-4b0d-b571-bc36f040c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd60ce1-b056-4595-840b-cfde0351173b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78f9efb-aa73-4219-9714-ac322da78d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c972d6f-16d4-4b4e-b633-80bf7a109fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374f0de3-aa7e-4d96-bdd8-5b5a6bc42eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb65665a-0e47-4d7c-8141-1b878497f994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d91088-0f11-418c-9479-4cd687943e65",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c693f276-160a-49f4-87e9-86c1e8cbae34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c18f5b-2d77-4521-b4e6-db1d12dd7a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a683dc43-f009-4bc8-be7f-b3cee2b8cab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8653f20-adef-4094-a73e-42a98970e84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a9392-3c52-4d8d-bd02-ffdb27cb3ab3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba3be21-0711-46e0-a786-034d41c738e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e6e44d-bb53-4b6a-bd07-b07507005da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e1485-f60c-4062-9cd7-8f28d6e9f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a94566d-053a-49c8-ab1b-50356a977fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f90ba4a-397f-4403-9144-bfc0119030d1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b49f92b-e919-4273-a317-2bae15ef1cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55e2721-1e48-4891-ba2c-3d55820046b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29088cdf-1d12-4c10-b7da-162347554cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "180dfd29-6682-44ea-9e5a-16f0e0bf5dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c109cf6-e781-46f8-bcd0-90ba56f4cb7b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3623e44-1363-4728-9817-3497da912bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afae22c-17a3-4a6e-9739-2415cc3f5e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2538004e-77ab-4072-9c0a-3b90277cca72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94ca2915-0976-4278-bd85-479a000bbc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655b3f45-3409-4fa7-bad5-8dc328e5569b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef50f71-d63e-4a4b-8f64-e6c959535b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a178a033-ed4e-485f-9d53-0897f7c269cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77562ea-6ba7-43f2-aa77-61fc18453a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92c81190-86fe-43bd-9142-93a233b4ff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdffb2d-ede1-44ac-be83-d0dc91eacbb9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ff5003-84b1-40ac-96f0-c2aaeba3114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ca7ca0-0f8b-4c5c-9d1b-460d4482eba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b01d75-fac5-4cd6-8f3c-d94575c3fae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca1ef5b2-9d10-41d8-98c6-ea81671c909f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4614e23c-fa32-4b97-ac3d-5617509b43ec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944d16a1-9a96-42ee-a0e2-a9ef967e0fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c931107d-70bb-4755-8918-4e7bed3951b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad15f8f-1e91-4d1a-a991-52bbdc34d72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d72a86-34dc-45bb-9c68-bb7fb0345ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02596090-7e8f-4b47-ae9f-c850d3d6e5df",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d22ef84-7b5d-4cba-a20c-64bdf627255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae1e16e-e5ab-4aa5-ab20-c95868eb7b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cfae6a-856d-4d7b-9ead-e1f6b59e94cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "068babc8-a735-48e8-babf-8d19a697735c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78947da8-74cb-463b-a2d1-ec633309f489",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdad354-f467-4059-8ceb-c79fad224277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1440f54-73d3-469f-bde4-aab29ce0bbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e977296-ae1c-4e8d-9092-b1c4e354e6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c97d0885-7358-4783-b7c4-f4b6744889ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740b3fe7-ce73-4b72-8db7-76a530fcb62f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac69ea05-16e8-4048-a82a-7aa076217950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e4c641-ff90-47e9-9310-0a4b2abd9192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b1a259-d2ac-48e6-9b34-e4e59f647861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ede09c5-17d2-42ce-b5c8-1afd5ba8cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1394790-9561-4db2-8d1c-6be5889a6c0d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4c1acb-7c32-4feb-ae60-534d558a67dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbe654a-cb15-47d9-82d9-36398f8a224f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea27920-869d-4b04-81b7-01ec53231b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cee7fd3-1d32-42de-9cdf-680c7482f203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a41e21f-c92b-46b1-9ae0-e1e27be79243",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9206ab16-8a1f-445a-a45b-4d78a2d52c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9933abed-f198-4e68-9dd8-5dd3eaf667bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ba974-ba1d-4bce-9dd9-fb090b2bf980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c4e9a0-e71a-4164-b376-53b4d2684ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1546d760-bfbe-4309-9a8e-a148b4e46dbf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3769e569-8f1e-4ec2-b107-e409a4aaef60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0911a2e-77ca-4889-84cb-16e010df48c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d7465-2f8b-47cc-a87f-740cea25a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b1b82d-3a4f-459d-9fc6-bf260742c916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60422bf4-7ae3-445a-bee8-2f91f0c2f49d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64187388-1bf5-4b90-b7f5-78712e3e5de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bf1044-4885-4903-9e2a-cbaba1d54b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a8b148-46d3-45d9-be3c-139d1db8332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e6abe5-cffe-45ea-b1d9-1aa9f41a58b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d69d0f-7678-4463-8d47-74a5ff865d38",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6129bd50-c34b-4701-afa8-50cfb802a385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f90c6e-812b-4c67-b936-ed416a98b78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2559cb94-beee-4a1c-926d-883e9f972890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d786991a-3df5-46cf-ba9f-c64b9dacc868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac4b0c-e89e-492e-971d-2240b2d8c1c1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f52cd2-51d9-4935-9021-41e30170b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c47fce-d8d0-4043-b02b-7779c254c063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa76eb2-de03-4951-8ac6-257cb75fe931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6aadda72-0714-403b-8f08-d2562a58e8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6d8b87-126a-4e97-9aeb-f5c35426cf38",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb84ce26-5b27-4f56-9c95-03c7939e0f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a84ef7-3c25-4940-b579-214dc897d39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cf9ea7-d400-490f-8453-2e84bc0c6055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac7a1b8-5d5c-41d2-a6c8-1d1122cb0324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b74ccc6-dd6e-475f-9acb-5a6079a594de",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdae0ada-acee-4014-926d-20f2479c32a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8b4738-3d7d-4f2e-8f0e-0befcb117c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efe0ee4-f4ea-4702-88b7-a0daa1d6b5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5e770f-279b-4acf-8d17-1f28f17f4b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1b9588-1cd9-4fc0-8494-bf20f635e8b3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4195e74f-35c4-4ad3-b462-dfecdc4070c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10e04b1-0dfd-480f-9a08-1c2b5418c484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5c25d6-9cbc-415c-9fe6-358916cfaa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "847f41fc-d607-4dc6-816b-1606c3697424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baca7de-7d88-4031-bb89-2fd299cd2f6c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562cddb0-2118-4a32-8840-02627409c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c390e9af-ec1e-47a4-a23c-ad4231aeff6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e0e096-86de-4c81-b144-9059fede64bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e052bae9-0a5d-49e9-88a5-d131217bfa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025465d4-6fe5-4b3c-8cd3-fb76023b5b36",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb6007d-7834-4a53-ac78-8a664ced2068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8954c0f6-c953-48b9-8470-b802cfa9ffac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a2f8b5-4f0d-43ce-8525-93e81a2d6e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f8d370-eb4f-4577-90e2-b04fb22d9b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b82f2-5003-4ad2-86f4-5e222482f060",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7da2da-055e-4115-bdf5-a96c2bd8d4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f02c219-e17a-4f27-9ad0-052df3bb1dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c84f7ff-732f-495f-954b-86da3035e252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19187730-4c7a-4275-bbc9-1b9d4a2057c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4239f5-41ba-4a3e-804d-143686567e8d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dafcaf-d245-4ed6-9edb-814701493aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c020447-fe82-476d-9313-5029295217d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94243ca6-481f-495e-8c51-c9fe7c3ba2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b14768b-83c0-4541-b6e8-ffed7e5dd41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f2d307-b68a-4971-aa3c-c71d9b384e52",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc66414c-fd7d-498a-81b7-ca69305e4aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e467faca-098e-4e1a-ac81-dba56952d033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0961208-f900-4183-867d-d9e0c62910fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33eaea10-3551-48e3-bbf1-6d75646da49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441bbef2-497c-4666-808f-3e8a7c80f363",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923970a7-e959-4e6c-aa59-e8569cf5db5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05492391-53c6-45a2-912c-b14a518171de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58a0e48-8342-4d79-aef0-bcdd0f3082db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f08ec0d5-945c-4578-b8d1-5785a5223ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f029700-e7b7-42e2-bdee-8d3027b053cb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5383cdb1-f182-4073-95bc-11a5b0b004f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0223acf4-7bb5-4f25-96e6-ec83e65fdf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eff2622-86a8-4310-bd54-698cb5cfdb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0e52ae-7693-44d1-b2e1-7a2fd549e538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fdf7a4-59ea-46b7-a377-d2e940c50a8e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3bae11-d8bf-40f0-bce4-c575dcf78c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd46709c-5550-4bad-9194-0f4e0d11e759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eecf70d-dd74-49d9-b9e3-6804fb0fad6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae76dc0-4add-48bc-9cfc-2800d64b1b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b3bb50-79b3-4187-83e0-58c29b062ba5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cc1f41-e8d8-48a5-9a18-392250ffbba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5def7d45-34cb-4da5-a889-91a7605c1af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20c7b36-9134-4fac-b1a2-7b32450b88ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1555420c-832d-4b10-85fc-5d1d9a2d1a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d9d3f9-e422-477e-ba65-e4e8ced8bad2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aeed68-38e0-4bbe-990f-a82ac4adff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e8b965d-ff13-4c17-a702-921341b1b882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae670ef5-d4fd-4e7e-9ae9-7dbb2938dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b08e289b-942b-4916-a4d4-a79a48e0d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421347cd-c486-46d2-ada1-b1c464c02dc3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42846624-bd31-44cc-97f9-b7f19f5797ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e589c85-aa90-4311-a963-ab68b797fd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82df2918-2cf0-4551-9331-360174b46c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8687b316-9b76-491b-b717-193d394de6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a3bc00-410d-421d-9bdb-b82422e7c2d2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf295cc-5417-44f3-b268-13c0064b1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f489565-b25f-405c-9701-f26523bb3660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d196c4a9-86bd-4a16-a1b3-6815076dc146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db160cd8-fbef-4ed0-a254-0cc5fbdbfdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9573258-5f5d-4327-bf24-df1e0e4774f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631d1deb-a52e-4c16-9fe8-2048ea75e076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7faf6c0-fa1e-4c2d-91c0-b50fc8fa3cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59a3406-0689-446a-9683-06431cd2adac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad14cf49-bc6f-45a8-82c9-864d14f8f71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0fa1c9-4cbf-4c78-a2a0-22777b19b816",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d17a7c-d97b-40ba-8e5f-55698171b35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc96341c-a17d-4389-b209-c3d06b843893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cf7b8e-fa51-4a44-9733-cad99f9ded52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2a0b2f-fc50-4032-9dd2-a00c1ba575b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a34e790-33c3-4ecc-b107-59a9828f8da5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3b57f9-f269-431a-8dd5-9bfa446e1c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7593f30c-36c2-4255-8492-a1f66c32e0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594e361b-114c-40e3-a578-4539ac7b578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d71b160-7cba-4530-b310-f612e0933970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6044571-ef69-4126-bacd-64be8e42890f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff348bf-25e0-4d71-8e00-e8e0f82a18fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c776e41-7ac1-439f-8baa-390b6bfdb9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c6075-1bf3-4a18-bf94-ad84348ea99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "22a86876-774b-4726-b671-1a380c064285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a2f79-5481-47d3-8057-9faf97ccb7d5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36a9483-90c6-4e5b-9964-30aa47d0ac71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6726ca81-cb15-4df9-a9ec-cba669f9b5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff5f978-bdf5-425d-a890-f8614e72c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1151dc7c-dbb8-46f2-91b8-9edd982807fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa611bb-9dd9-4194-bfb0-c49656a2690e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571335cb-84a4-4a42-a40a-4f8d09cf24c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32500a77-a4f7-4985-8eae-941a7f102d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9c0ecb-ba36-49f1-a456-8bf008b16b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1822e702-bb76-481b-951b-ff5c454c08e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22680fd3-ddbc-4e1c-b6d3-aa5156823079",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526e1a2d-372c-4b26-879c-f5ed764a26ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5ee9e6-d59b-47f7-b726-343c670adb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bf442f-4593-4429-9545-a14ee9a94cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f174c0e-99cd-49b1-b482-53697aa1d82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc022e-a118-446b-b5b9-aabacc308d51",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069aae37-c073-43ff-ab03-1b5e354db4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f696445d-8ea2-4d34-a21b-c409191e28f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac00388b-6578-49a0-a801-965e270f8508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c469fbe3-f72d-4270-9821-6566d943b849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e4541c-54a9-4aee-927c-6cbf0d2b049d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc39f04b-0031-4c08-a0ae-3ea989e14b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ad9512-20ef-4556-8c88-4fbf8e7b578c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c20db0-08ec-4f02-bdc5-e965ce1a24a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d4b81a-8454-4623-b632-88ce337bd56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243b350f-adf2-4bea-9645-95cd907ee0a8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b1810-ca85-4a2e-a141-3df33bc3b0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c04fd2a-3b5a-436d-9cd9-04e36e72f12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d898b6-9566-463b-a282-e46e1d9c3561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2b2027-014b-4dd8-9087-9414a40ebfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b82929-39e8-4833-97ec-00a866702c84",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e1cc4d-332d-46fe-ab70-b89748b6bc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8277e0da-9661-40f0-aad2-749111f72c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc436b0-4686-4cae-ae93-07d1144a44a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff151b9-58e5-4414-ad55-cf1b728c85ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751a069c-64dc-4e54-bb6f-c093196392be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d93dec-43b3-4a4c-8538-383be046fae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183c64fd-2ccd-441c-a891-2821e463ab4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba480d66-3620-445a-b4e9-f112cd2a458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b61a5b-a576-4214-9ae3-11a60bd9af68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a29ba53-385d-4776-b552-6ccebac517e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8249b515-0fed-48b8-8a29-9e063969ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17244a7-f679-4c52-946a-950e4db1c0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef35b456-4b91-4b71-8975-68a1e5e1f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5047e2-17a8-41b1-842b-d8efe6ca74f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658cc037-8853-403c-9e63-fcd2179eee3c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c95d72-bf83-41ee-a99c-a7bac8436730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97316968-06ab-4bf1-b9f0-d4687efcfaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61eb662-0d88-45e2-aad1-1cdcb3d042f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "738dcf5a-e48b-47bf-92ea-82f15a56ce18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5323bf6b-3fc5-4090-b00d-e081aeee2f4f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce06c517-33a0-4b30-a000-cb12ee22fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92b5c6a-c885-4f66-8139-91eccc5805f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1869c07f-913d-4b80-8649-e7f28dc4a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cde6df2-efc4-4448-8de8-6ba9f62faa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dc344f-c5c1-4746-8f36-b5ef2e431849",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b00128-4d36-403d-87bd-5b4e14a11a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8d0608-ee8e-4fa8-85d5-cad52836678e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a1b516-8b79-4c61-8280-46cf172fbd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6063575a-22c7-4bca-bb8a-eda3bdb2ec65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9dfc38-138a-4c2a-b6fa-fdc403a131f1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01deaf63-4980-4a6d-9f3e-bd0ea7f374e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98360bb-d913-46fa-bfc3-27dac287d5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ec0935-1435-49ed-b202-44e75a8d57fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf2ff12-1779-40bb-9cc0-16246d66c592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cec117-1ff5-4ee7-8886-a312e6f4e06d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5da486-3410-4823-bb3a-792dca0b2b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128220dc-5c81-46ad-b66b-de8e82124640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7eba7d-6f35-4b9e-bd8b-a4c246b60558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "72d43f58-1586-4287-abd8-4cb2e34762f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e836843-d742-441e-a0bb-cb6038d0738f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34829ec-b061-4d6d-a258-e21a279f8e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e047df1-7e0d-4b90-8c0b-a4dca4706e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0357b7d-adfd-4452-a045-eba2caf31200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6af24860-02f8-4715-a761-a41b6e28f60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb3fc1a-54b9-4451-b9d5-5480c76b7e32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18db74d-2a5f-47e8-b67e-0b15b866c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232a02b1-6a1f-436f-ad4d-09de0cbba38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c963b176-af44-4ddf-91ac-6dc638e4758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8aee51-2d9b-4bfa-98c5-a402edcc0756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed53126-f212-4f3d-a165-98fbb2cd1fb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a652ea2-4538-426f-aac5-2f7a1a313140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5b5fc5-71ce-4a30-8ff9-f8e30b2a89c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fa7753-efd5-4b0a-afdd-96650e53b78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6cb6c5-652c-4564-95c1-261fbdbe555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9884e5b6-00b2-4364-b419-88be4e0c485c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de21498a-116a-4b35-80d3-5de9fe53d7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9f146b-c1c7-4f9b-94b1-6b45f7c3a757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd555e90-4389-4a90-a96e-298435d94518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea74822-2b7f-453a-8056-8fbba209fe1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7581ab07-b644-4f91-8d74-fc6172e6f260",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21db4a0c-6017-4c49-985c-a59b05aebc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc44bd4-1516-4de3-9672-048d8135a55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec32137-5e05-4edb-b053-95b21d73ebbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2aaa910-e930-4c11-ae1e-4f949947185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d94650-571b-4fd5-b4f9-ce557f7e8dfc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf85449e-67eb-4854-9435-3c03a8555e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7da8f29-162c-423b-b83c-8c1be73eb2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bec2571-c56d-4141-bfe9-24bbdf334f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "49bfed1a-9b7c-4291-88f9-cdc8e61f5d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaf3d83-0d6c-4ebb-b87a-a1c83e91aa7d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eac8a4e-d8f2-4c53-882d-b4f91bbbcfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e755e7-d245-4507-83a2-62bf97fd77a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb554e5-0cf8-40f3-92ac-57335b74148b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4db79c-1b2d-4190-bada-a1c0b4f88268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336d8a5f-a67c-4ef6-8429-df9e4ad7bbe3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5ffbb1-c31d-4367-a8bd-c8fdf7774ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d44bdd-b299-4eba-b32f-91585a5d99c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86232525-052a-4381-a482-7160ac4c7d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e45e855e-3b5b-4b36-9ddd-b47c4731fb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b31702-d783-46ab-85b1-1ae1e9d882bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead24dac-0052-408b-bf62-0d2b372b5a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e8f6b6-8e0c-49cb-9a18-ab825d59aae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b44a63-4899-4347-8133-b63a54790ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a64cc6-45dc-4d95-90c1-cc5cce20ed84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f00cd9-ae0b-4c96-89f1-dbce3d8af0ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959cb415-4fdb-4fc1-b4de-02bd11797172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42e5c7f-3562-4f19-a043-2a8f36691a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853b269a-b1ad-4e72-97fc-63044ea610ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bf9d75-ebe4-497b-8f5c-81992ec8e4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e430cb-9bb1-491a-87db-8f7637d8f56c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7253a3f8-6a20-4f27-95f1-5a48f63374d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c1c38f-760c-47c0-b67b-e3c3e5dba797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fbd687-ab1f-4591-bb89-08c023c08094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46f2201c-5d3f-4515-9fcc-30678b6c8cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18710e3-42c5-4389-aace-274a3921c0bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3745a3b0-6106-4d04-b902-dc66cd5463f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b5fcc4-9427-47bb-8f72-71d40fe3b28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e44e04-cc6d-4769-84a3-f4edae224b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d588b3df-a9cd-4bca-8ff4-e454fe986daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bdc40d-d8dc-4bb8-82d9-222a16f217d2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7850d2-8a8a-4dbc-9c8a-418d6b406b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d289df2a-c5fc-4ae2-a9c8-2208890c97e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae685706-eda0-47fa-a07a-5f761ce15204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd904b8-9d03-4cb3-85a8-df5e9f046514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9385cf2d-0e2a-4c7d-981b-26b8ad2ebd29",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f45c670-f0e1-4dd4-bfa5-15108e72d246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982b8638-0576-4ad8-8bcf-63b68c55c8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8091de22-d2b7-4249-9250-5e7adb5f4e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0a99c3-ba7d-4ad8-a250-94f0f3829406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d5a695-85de-4b33-9d5d-5ba2655da1f5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75d71ed-4dce-45fe-a6e4-fe964ea1466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a837034e-ff1c-42d1-84e0-2bb6274c9d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5232c39-89ba-4ee1-bab4-eaaebd660ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9104f54c-bfa6-4e19-b8cc-5c15d563512b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea247e-7c93-4f94-b276-cbc47b0d36bc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaf201a-e5c6-466e-afb9-6f6022139c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c6f0de-9459-4d03-8609-1f08a5f61e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399132b8-6985-4230-9c53-6c95d4949e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a93f385-dad8-476a-97bc-b219deb615cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1962c89-4ee5-4617-84e1-ad1d536e43d3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0893bde9-a954-4982-b936-cc16f5e1521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74688244-aa6d-4bfa-a6f0-8be29c30cebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc6400f-a721-41d9-89f2-281935d3fb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bd1c62-613b-48b8-b7e0-8f4a82e5c50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd2ffa9-0ca4-4c85-bbff-13818add7a83",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ff3cd6-71b3-41f0-8ccd-5c9a1e06aa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041f12eb-235f-4ad3-933b-c9279fd45949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605ad583-7e57-4c36-8983-3ca6a16a9ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "154015a8-00cf-43a8-b1ad-54dd71a700f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e1841-0539-4ef2-8468-81bb504dd162",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f0536d-270d-418e-8b18-b1095114988d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b35b549-fc03-46ee-8655-2e68821f56e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4ff176-809b-4b1d-bbb5-008c57dbc58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95e95e58-5cb4-4752-88e4-9164c97b76bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9fe4b0-0f33-4a9e-b0fc-42415dc87a6a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d981a794-a4d0-4339-a5a5-91553166bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f1c568-7d99-47d0-990f-0b2346afdcc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eb2bb8-f026-4f24-ac36-1eba5bf900d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e191b15e-2fb0-4ab7-9492-c0525ceac326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18cfcf5-c343-4d88-94b5-ab7732a3dd68",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed629ab-9df4-4fe6-9444-de2f156f3d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c209e3ed-bd32-4748-bb50-65e543bbdfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0862a6-ee66-4f5d-91f0-ace4f287e7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba52234-8877-456a-9198-ae5469a0aa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f91b13b-27bb-4b05-91e9-fdac74019fbd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3695a87e-fe0a-4686-920f-bcb76b206f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc193317-9ac7-4c3d-8775-db827273ab62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dad9374-3d12-4c0d-93aa-a4387e8b73ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5853b805-20d0-4273-af15-3bd0ee9e7750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd8d5e4-ba8e-4052-b7f5-238fd7fb0957",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12db3e07-cb5f-4a62-8353-34b7bbc70d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ecdfdd-ca88-4242-840a-fde99d704ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cb43bb-448d-4cc7-83f1-76eb4e8f30d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec6e9e7-1801-45ee-9645-8dd17ece6d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176ee594-56b4-4cd1-81a9-edcadc710fcc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad4f6fe-2fc9-4f5e-baa6-fa99ed7990f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c89ee3-2e77-4121-b638-c525b084d882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1a13cf-da33-4bfa-b854-1cb2a01f51f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6de6e5ee-2f24-4e05-9a24-f35d704df198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbd6922-4c24-43dc-b59a-b3a749668f8f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba20ab3f-ea7d-49d6-9674-1a5b167eb809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b798e9c-e83d-4579-8a89-910a4722e604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122443eb-9f56-421b-8c07-40802a00292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9caa1dd-f6d7-4724-a632-2159943fb4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2084c3da-ae67-4156-81ce-6c71f3972d6c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acc7636-52e1-42b2-aff5-ac9a000064c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4399b62-e2d2-4341-a75d-d38ac848cbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781b63e4-81be-42c3-855b-10e8c8bd72d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fcab96-11a8-4386-ace2-39d0d99a0375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c39e11-b81f-4e69-ae59-5b757ce0e9a2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef7dd25-8c12-40c7-9ac8-d58078fa7ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee2f858-3095-4bc7-8c24-87ba92548c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88f3161-fcf0-4a73-9e49-f788b17fe978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13bf3d6b-94a9-4318-883c-a50ec7df9fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27719e8-d72c-439a-b601-5a4d3c4b5f00",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647f9da3-5d65-4fdb-8927-059761f2398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8626c7-e1fb-416f-859a-b197e3758c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ef4452-9d51-459b-ad64-8f723ae9b87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a24eec1-3149-4baf-8775-ca7e73ecedf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73762801-ab1b-460a-980e-2fd462cd3763",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c4d5a7-0d26-4895-b755-6663e4d2b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449490a5-f3be-4a3c-8c76-0ca613d986fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ed5e29-92cf-48ca-b46a-37dfec549a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56906468-7c81-4e37-8ceb-14658721695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1da792-52da-4d4a-b3a9-b2d8082c5170",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ed4ccb-8c7b-471a-a8e5-b0a9c167203e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3849d0d-3656-4e60-bf7b-b64bd1667014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae43dfc-9b24-40ac-861d-b9005bc0a6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54611cf3-b8f1-4fd5-9d4e-74f2e9c22930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0638370e-b7f5-4bd7-b60b-71df1de8acd3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83eb5e8-3029-4923-9102-9e0cf2bd936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ae390f-6dc7-445c-82eb-1c0ff55c3cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff4a213-8b8b-42ba-9476-14036c58ef49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e09db2c9-db73-4bb3-bb9b-6c9f03b3baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33444715-76f7-42c2-8656-d99fbf507eaf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039d0b62-743a-41c7-a75a-ee8208a6e067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e57656-6faa-44b1-91d9-cd368a8e5242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab163a6-1135-4e34-bcda-48d6492657ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b809585-396d-4415-9e14-5d2e3586aba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be176f3c-72d3-4ad3-9c95-835efd2e0c34",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32226678-5d27-406c-89a0-3a9aead1b8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec6ef2b-f926-420e-8046-b9a291dfb5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db46d39a-0821-41d6-a8b6-933ded349c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94849d57-80a6-41be-a01c-bb1892277d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1f3519-e961-435f-b8b7-bca5c20ce222",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb474d-3802-4b11-bcdd-f2fc71119fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c6bd4c-2306-4791-bacd-5394146ec642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b12bf7-c351-4b7f-aa89-916918906ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "029a4d75-04d6-4f2c-a63f-5c94f3e86932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494099c7-7ee9-4efb-8e9d-ec4d4fc6e009",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0086b6-9883-4553-89f1-bef3c1f686ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82078b78-2a71-43c3-bd98-bc4b24981c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c12403-da78-4a51-a0be-2f09dab9297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b52f43-32e8-422f-afc2-f4a52e9b2b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f229e6-3128-478f-84ef-d35dd0bcb4f5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba6d8e7-a8e8-4218-9ed7-7396dd4748af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "88a5c865-97e9-4576-8536-b5052907a6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9836a5b5-58bb-4e2c-a089-ad2051cf26ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8098a8a7-15b6-440c-af6a-236a198a5be1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9f4d816-90b9-4823-9d3a-022057e832c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a130b468-64bb-47fe-9be7-fea64737b8de",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4a41e6-0211-46eb-991d-b95e76edc054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "788d46a0-c615-4149-a4d3-1b087ddefab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ca82a4-ecbb-4659-8d33-d747e0ad3d20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1936d180-a159-4d35-813a-0734b433692e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4ae7f82-ffba-416b-9f14-32361e1ff8d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b4131d6-6246-4cc8-985e-d17577a9b76e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff82065a-7b3b-4e16-8520-59a07b7d3c24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e749327-e986-433d-9c76-9bd36c20620b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e742fb0-558f-4a93-822f-2b598279a8ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "926f96f8-c6e3-49a0-b96b-88f8128f4475"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ea780ca-7637-4ab8-ac4b-f0ca157991a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a51bc6a-d61b-4bdc-8004-e6729ab1ad94"
                }
              }
            ]
          },
          {
            "id": "d692bb33-8a86-46b9-bfe3-4c882357ac6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "626793ec-c303-4156-a86e-ecb1e86b6a5e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e69be50d-cf22-485d-af67-f491951730e7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa061c1e-0daa-45a6-a5d9-6329b2dd13d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f2c2b7be-88e8-4a14-b2f0-eb428fd5c384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e4c700-9e80-4eb2-8e9e-1466004c6ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c407a34-7270-4cff-9ccd-b5bf59691f93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87803256-430f-40fa-ada3-b16424954744",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "956e7a65-e3a2-4721-8041-40783dd236fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbc16d0e-3998-453a-a1d3-cbd3d65e3ccf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19652d7b-89a7-4d79-a11c-711e5e98a42b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a87506b-d238-4195-8f8b-bc40f98e27a1"
                    }
                  }
                ]
              },
              {
                "id": "96d3dd25-0446-415f-bc88-4577f121134c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4218fafb-c40b-45f2-abb1-d8c4b6b9645d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4f9b7f8-8425-4527-baaf-70a213c6e0ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aa2f561-4b25-45c2-9816-5a5a33873053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f067eff-65b4-46f4-bba9-a19a2881f658"
                    }
                  }
                ]
              },
              {
                "id": "478853da-65a6-461e-9d95-3bce6e2b62d0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22f155c-2ef4-4bf1-8724-8463e107f4fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c29202d-f54a-45b9-96a2-abc0d82910a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34611226-d42f-402a-bdc4-b3784d040d84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7f8671b-9312-4d75-885b-5085943caa82"
                    }
                  }
                ]
              },
              {
                "id": "f3a1d7ae-452e-4036-91e3-6a3416066575",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6f47eee-f8b0-474d-9269-9b4bf63fc608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33bd01a6-96a9-4027-ac93-b63ba8e5f28e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6c2c599-c05d-4a88-8d52-03c5273c0bed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "788be7ca-8918-4cf0-b40f-04f9b0814803"
                    }
                  }
                ]
              },
              {
                "id": "a8d5ad91-eab8-4106-b2e2-2ef73df7bdae",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "030729ac-b521-4ab0-8640-e9b06140b2cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fad11e5c-8c40-45c6-b3f3-cf2b47b8c088"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30de0699-2c71-4063-b21d-566f20316b3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9803bf45-8c43-4edf-a8b3-7f784207d14d"
                    }
                  }
                ]
              },
              {
                "id": "58c9dc4c-6aa5-4c6a-b7b9-05eefc071497",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f01a119c-a76d-4c5a-b89c-5969d16c1616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d03a92b4-7dd6-4461-9a83-864f21e00af0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cea9101-2aea-4b75-8483-be1c4f104f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "067bc169-ea0f-4be8-b380-c28323e17d7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3eaeee81-c693-41d3-8211-7ddf1971b588",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "981e8b28-6142-4a29-8ee4-4e11a128b9d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a88dd804-c0da-498d-98f6-09b3b96c774d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da5415ca-d6fb-47fc-ba52-7ca8d634b142"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "053cdd94-fb1b-4075-9748-6dbf6a8036f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dba031fc-7e05-495b-89a6-f94f0c9d3d69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98e42410-8db7-4fe7-8cb1-cbdccd54242c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37f66c29-2e3d-41b4-8715-3b9065302c09"
            }
          }
        ]
      },
      {
        "id": "fdac5e3c-7330-4707-8eb8-1a5b98c2698e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4973d058-c919-41fd-92e1-a058a7b42a1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f35a3fba-2c58-498e-8f05-7eb2f04da3ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7196da01-cbd9-4f98-86b1-78f96ec47110",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68915a4-c10b-4437-8cba-a6e420967919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd60998-6b20-44d4-acbd-4aa698b3880a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced4708d-9288-41ca-884a-ef40ea2a29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef87f7bf-593b-4afe-8970-4f3cfaae8eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd844d9a-7c05-4d5f-ae04-179021214734",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff233f74-130d-4bb7-bfb4-ed45dbdb1685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6d8477-7072-47ed-92b7-decc66fdc064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08256cfb-ce84-4232-bf5c-079802380ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd94775c-a56b-4a7a-b9eb-6bada3fcac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c0af6a-a096-47e1-a8ab-af3845d940f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2213d2-7a2d-4eff-a1ba-03ad039889e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdd9f59-b113-4794-af9d-b06f4f13c4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78024208-60f6-4a3d-a30f-42a7eb5da0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30ffc31-39b4-453c-8200-c9f02a89b5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9306f70-fd82-4859-8f09-097868e44953",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f2032-f140-48ba-bc15-1f3ed264fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02136e1c-eed5-4343-9d12-419fa2265d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaf289b-ea5f-45e9-b04d-8de362285870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcb2c01-6009-4500-96bb-78dd7dc1d9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408d2d54-8f0b-4f09-8c2f-f4d0c3a065af",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d634c1-d6b8-4072-9e8b-53130c4c3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4979187-db74-4cbc-8b1b-d178a6104dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6005174d-7a3e-407b-9e3f-dea9485b8052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5563c267-235b-4079-97ea-862295299da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb15089-d32a-4ae5-80af-446bd413f28c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e1d236-a40f-4f2a-97b0-4773ab0283f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6dc6ac-7d8b-408d-9d99-b79de4072256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13750b52-c8ef-41c0-9577-21d596ee5fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6db3880-0496-46a7-82fe-399800aa10dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70633fa-a6fb-46f4-8d5b-0e3e69ee316c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f44e2c7-44f9-4dca-9c17-8dc77f3ef1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4807279-ff62-40c6-b830-3e375a3f7f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5101020-b8cb-4d68-9a99-ecf3992d8bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9edd30ae-1e2f-479e-84c7-ccd384cf2aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af769f10-b024-432c-961c-4f31a54b4363",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d46f6-62ca-4c54-a7c3-27cffb21d67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca45755-a303-402e-af1a-893762f7d688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f65c8d-4328-4bad-b94a-6fd6465316c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cef7e70-b809-4949-9f03-7163b1fff313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4733289b-3a63-4eaf-a701-20aa5180de06",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036d5156-4b32-4387-b32f-90c60b80b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b1594c-5039-43aa-8e89-7cf78d11efe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb24cc9-dfdd-4449-8845-cbc7450c378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "987863f3-8b66-40f4-830a-609cb18d6793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd946b3-f5b4-44f2-89ba-324e233aed5c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc84372-ee50-489b-9cad-4b7b6b03fb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b115887e-835e-40bc-a2b4-84ec7859773d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7e3e49-22ad-4058-86c3-d0f85ffc99dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9a566f-e636-40f7-ab18-46ef861dded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede0f71e-f984-4a94-b5cc-a54385ee9c31",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2339913d-d2ee-4dc1-ab7f-9bd8a833d232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2911c14-51c0-415c-a44e-88a3bad3bea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca27972-e394-4e1a-b08f-9ea0898eb77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "11883204-8a5b-49bd-9471-5a8ea1421bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07200ce-7612-4b5c-a4d1-defec6aefb43",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9183da37-6849-4398-a9c4-605b651dcd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85cd62f-caf7-4db1-95af-d3232e0581ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4159ef9-384f-4145-b8c6-1207dd66a823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0041a38-30a5-4f8e-b82e-7ea8423b23ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3682b738-fe80-48db-bc16-f103ed5c9ec0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b054f02-6838-471d-be30-92d14feeb6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aba2d65-03af-4969-bf9a-b4f93be719d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc26b963-61c6-4a72-bf63-5818cc97682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad4dcbe-8542-4fd8-a21d-324f301df616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3b1b31-99cb-49f2-abd8-50644c0781d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6f5f3f-5b18-4f22-bf6e-096a954d1b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd80f27-4a01-48dc-8d1b-bbdef009af4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07387f3-5e37-437d-8a8b-6720e9f6a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "97644436-c59c-4b59-915c-1daf280bf6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c81232a-bcfa-4658-9b94-3a4e7b68340a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcedaddd-dc94-4b8e-ac5f-88e9f9a385fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef701970-1c10-43b3-ae2b-7ec3da34b182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1282cebe-8947-4d12-bdc3-d319f33dd2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "303c3c3d-e24e-4bcd-b0f7-2a013c9504a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8833c055-b9c0-495f-b308-2fad800a9b0d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d8ef23-1416-4d77-b347-f13200b7368d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac3b8a6-17b1-4dc6-89b6-af3a52c14cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721df5b5-6110-4ec1-b6d0-9774cf6282df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2edb81-a356-43f5-9882-e2297a87027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43972157-470f-406f-b640-b2816978cc9e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681943c7-da77-48b3-a887-5e9a483062ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81b88b4-a15b-447c-bb8d-217076bfd511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd5d517-97ad-43a0-9708-a1e60d6dfa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "202069de-f631-49c6-9a3b-9e1a6bb51a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ff08b2-b34a-4046-8c86-dcc9ee0ed3d0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f41d6-6993-4226-b20e-0db4f81f5a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e98a316-9802-439e-9ac6-0f5aeefc3404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167baceb-afdc-4d56-ad0a-a1f6ea72bde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ace7be6-50f5-4043-b016-385d5f0a0c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53af592-a8e9-4202-b67b-1a13efba5412",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e5ee7f-4a87-419c-84a9-9bb3a13f940c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e549e5a7-7495-4005-b221-44c7c9ef8e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c707c1f1-c59f-4257-b608-f351df9fc200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78c8442-f9ce-46a9-ab19-9050f9a553a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6e188a-a0d3-4a8a-a5de-dbe711f3b001",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94892421-4bf1-4510-b2a9-321845f0a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed2b765-d721-4b2b-b0f5-7ba5b67f21e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fcf77c-6f07-4ece-b6d9-ad581bdf4457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9858af5e-ca15-44c0-aedc-129812f26065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d6d24-df13-4e59-bc6e-ce6a29a461f2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a4bdfc-92b9-4f6a-b285-425f0feab24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802b706b-550c-4acd-aca3-c48331e31507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ea70a0-5c01-42f7-95fb-8b2ea041939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85cb957f-d0b1-43a5-a0b4-3351d3e38d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abb024c-7230-4d13-a412-bf9d2cacc749",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8441ba-6e91-446b-8afa-23e8681fff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611de05b-d2c5-4dee-9d9e-5ed7bffde3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180cbe58-ea31-48c9-94ab-51b077810945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f333a085-54f7-49a2-ace6-10c2562f8cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e61500-e74f-4084-8a09-b3e7d3a1226c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a434cc36-b441-4055-92aa-075df1f291cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03d0337-433f-4849-a45d-85915f3a0147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43478828-b0e1-475a-b81d-d096a7b1dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03eafd0b-0ec5-407c-b20a-c8581d0dc133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4bf0f9-2ec2-4de2-906f-ebbeb2cf5dbd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b730ede-5ffb-4633-b715-5b388d53853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2278315-9000-4909-959b-bb03fad0a743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53cd25d-b386-4041-b497-573dd492f90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2d45df-d2bd-462c-b502-847d7a41006b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5960076-ff03-4264-8fef-61756db7978b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ffc62c-999b-4cb6-b2f1-8c4d79024fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd93dfd-d482-492d-bbbf-40f62c5c2584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3539cc7-6751-4cda-a6d2-9343989e17a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45721f0a-04f5-4e5c-bab5-8f5b0bd369a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab5f633-1279-4366-bd47-e7bc4b9580fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9310a584-9257-4cd9-a7f9-f4b9f9e3c2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb3845c-30d7-4bc7-b915-07145fa99ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df60d8a4-28e4-4d16-abd7-3d958c6c56fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "badbe34b-e8ac-4e99-8c4a-5ab7418876db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5d106f-6dde-4a5b-88b2-11827baef703",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c155ca3-ec4f-45a8-b371-0227caa95373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c7998e-5827-4b36-95b7-0bcd7f28c584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8cb8cc-7053-46f6-b8e5-d92423c61b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ee8938-8c36-4f90-ba36-e5a25e1cc95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccede1f-1156-4290-8282-1736830f9bb5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5314f3b-3ef8-4888-963e-0a13e29036be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36735ea-138c-4a8a-9fde-373630ade4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64e30a7-dbf3-415d-a1d7-24ccc3500f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "331ebe96-569d-4936-9000-2d7adf7da288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da118e33-f216-4695-8a61-8edf3f93e3ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb584bc-3d65-48d4-b448-d913809ac8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b536facf-1839-4880-b761-abced0c8e267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b3721e-c180-40d4-a56f-7993b53abb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59085a0f-8964-4e72-8fe5-953a0b342747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882c953a-c6c9-4fac-9077-f128464d6c5d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff79aef-571f-470b-9de0-2e3f0640dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4fd4b4-0ce3-40df-b20c-41197b2331e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9feede6-426a-474e-861e-1d5f254b9c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08768f39-a4e2-4887-b4f9-62e022e27430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b25200-a6ca-41e5-988f-0550d1e95c7d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60319054-9056-4460-a5f6-3fc8a06e774c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbbfd32-fe2f-4527-90cf-ed671656a51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0bb315-0cc6-468f-b1cc-ca1ed1564935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7ed742-757a-4821-80f0-61a43621773a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1670bc49-29b7-48c3-bab4-6290a762f06f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a51666-4a89-4d87-a208-40fd4d069a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29739e6-164a-44f2-a271-6f765ac9748c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32910197-fd6a-4566-a28d-e847ebe9be16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a02775f7-4dbf-45b4-9c28-ae1db8394256"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd2260dd-a889-4fd6-8db0-b1e4ec44755b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9a949ec-0152-4da2-a735-02c1d3e2dcb5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2f5a78-cb8a-4555-b78f-7347e4096845",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4367c064-894f-4113-988b-dc10cb121b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b9807f-4d37-4ee6-960e-285f38cd53b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed7840f2-b16a-4691-bc4d-59fc3e6c3597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b03ac3fa-1290-4f94-ac5b-ec307238d4c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f105d3c-f54f-4a30-9edc-b1ae96294853"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "603e9438-d059-44b0-9f66-a14848b192cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8c297fe-34f2-44ed-abb4-a6180910d13e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4eefcb6-a8a9-44c2-9e1d-cc1f6735e508",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c4bdd59-1da5-43fa-bd96-10de00c4b6ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cc20042-83a8-4589-8d60-1ac173c3d775",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e117da80-f450-47ec-8421-2a5b71d8c484"
            }
          }
        ]
      },
      {
        "id": "e322fd8a-b4be-49cb-bb56-c28dc6bd2589",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "88543c5f-34d6-4bba-afb9-6db73b6b4313",
            "name": "Negative Testing",
            "item": [
              {
                "id": "130fdb0f-d7e1-4a41-b686-620077f2d104",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "417ab07d-f7bc-4e34-933a-c2d389006662",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0006bfea-39a6-4af2-aef6-4c28a2e2708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91048445-388e-47ea-a51a-e0eda7a64dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5cf9fb-264e-48a9-8738-379cdb08b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "11798283-e466-4232-bdbb-ccf3e49b0b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a52e7c-d063-4344-bcdd-77b184387938",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8a43b-c018-4c89-bae5-6d6dda30769a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d72bfe8-5889-422d-91b5-374134d5747f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b57a3fe-2c8f-4b91-a9ed-887d6d0bb94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65875c1-1d80-470d-b4a7-d0492268e344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f6953-a290-4da9-a77c-4d6fe64a16cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c48b0d-b29e-4fa1-ba93-822ead410bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9bf035-792a-46a5-be26-2554f59c5911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd13eda7-41cd-4c69-83b9-9a997354e615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dc16a2-58b7-463c-be13-89392d360d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9b8d7-52d1-412d-b868-046491946276",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2fd369-7295-4554-8e42-8eb01943758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be846e1-faf2-445e-933d-063fbf0d08e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a153f5-5500-4f08-95e9-c7a9ad2e3e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e403a0f-cb77-4958-ba95-8a3ffc138327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a0e99d-0f9c-4f34-abc1-4f58fff571f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ad792c-fa22-4c72-a68a-8f1e744c60a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d449492a-de65-4319-81f5-5ced1d5e6b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a297c0-b459-4b5f-8fdd-74607a6dcb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6356e9-9df2-4d50-a3b3-45a4c69dbd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca2e54a-2875-4b07-bfe3-7f4bc7b13dd9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e76d6f-74bf-4297-b695-e90634e7d97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb72da1-7a33-4a9e-bc5e-d51c9bcfdf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726d3c42-747a-4cdb-9db0-4f713bbd498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "632351a1-0578-4258-97ba-d3f1ce5e734f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f16cf7-b984-4ddd-9b84-fa051d312522",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c722b64-0edd-4580-bf67-29f23ed60a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f96aac-ab0b-4656-b2bb-4431f5335ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73632d6b-2191-419c-b1b3-98bb00d0376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff4159b-ec69-425e-8c52-21490de43fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbbca06-e733-4d78-905d-15b9b8208632",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e15375-2365-4fee-9881-6adbd9bcb156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ba1deb-84e9-4382-8b2e-6e0784d3c0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e3dccf-7d94-4660-af78-2f37c8796fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba34295-4fe9-4e15-84e0-0c9c70f7d10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8e0130-080c-47c6-a843-6242cff94ddd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29b732e-9ea7-41c0-9550-90e38ca0f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59d057c-a672-491a-a1d6-5576d0be1e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2791ed-4c21-469b-84e6-4ee50f1e531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cca51e0-bc5d-4bee-b72f-a85327cd506f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f44e1b8-afa1-4aa8-9953-4619811396ae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5732d28e-879c-45f8-b366-58899bd266d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb48e6e-532a-4980-bf19-b4b781bd625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490b3f33-9293-48a2-90f1-9bba5b39a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8200f9a3-2753-4a94-a97b-a1f4e10defe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaa3ccc-01f4-4e26-b459-1dc43dfc32d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4a3baf-0be7-4c9e-9e92-ef31219cb14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba5f3b4-3c11-4953-80ca-79fd676ab620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3718f00c-f460-4418-bdf5-a4ce5c7d44ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "903868af-a65f-4bc2-966e-d67ab9fb6777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e354865-b40e-48fa-aad7-887fb30aa052",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefaecbf-4a68-4a8e-b870-5a32c12f00b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39231520-f5ce-4216-bd9f-661eeb449b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0364931-f9b8-4b7e-9985-08d2cbbfafc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "068a940e-d1bd-41c3-9b77-595f4fc74097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c17bd0-e876-414a-b2c1-578fda4a6c30",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9c7e90-2a3a-49ef-bc57-debd3ae2c4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4278c747-834f-4ff8-91d3-f566a730bb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a840a4-d416-46fe-8c57-fccdf7b6cb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c84a05d0-29e3-4448-8ed8-8f7e56dcb413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392e41f0-a18d-442b-841b-759d38c0628e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f69b8c4-558e-478a-9dfa-034e1bbe6d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6061c87-6378-43ed-8239-31cbaa8530f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ee1c8e-1cb7-4b2b-a27c-d6183639042f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5980663-4c88-45a3-a18f-13afa679a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1087ef38-887c-4640-8133-2f163c6cdafe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20033096-343c-43dd-81e2-286bcca035e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beefc05c-13e1-4c82-9cda-9bbfe42b3d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada5f4cc-3b9a-4262-bd89-2f24108ce69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa0542b-44b9-4065-a25e-49fef9c0a807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa4d86b-5e86-4961-8817-6aae42eee5dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d212162c-2a39-4ffb-b730-34c5b7d4ef91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad007d07-5076-4487-9b0b-94cf34826b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab545e48-6186-45da-9b15-a997d2309ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "598988f5-8f5f-43ea-8af4-74ffe4465cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054534f7-679b-4c07-ace8-f103b9e6c781",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d12aa5-62d4-41f5-99f8-bc1fbede9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8e4d2f-32ea-4bb8-afce-1516329a1487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb9edce-a9fc-4d59-a1e0-6e4ec8f953aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ec585a-d3bf-4f7e-87a8-8d318b3aae57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c402d0-9a19-43f1-87be-f6c16cdd4b63",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6031510f-a09e-405d-bc8a-4fdc5cf2c409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805babb9-c9e0-460b-a807-05b157b82c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfbec7a-e477-44d9-894c-19e1bf56c65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81211e85-cf0d-4c57-9f11-a8fd9b8318d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e15d7ea-4c13-4fdf-b5a9-5f1cf632f3cd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326438cd-1612-4cd0-8581-3df3493142ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3108f3d-a656-4ada-bbd2-6f7a8cedbe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9afc61a-c902-477f-a792-6e38659be33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a21043-a9bb-46df-82c0-2fef018f39b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75708f3d-3379-434f-8397-a28db74cf76e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1547a05-203b-4ba3-adb5-1fc846ef4d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b278b8a-b5cc-441c-936a-dfe67dac7eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d6450d-923a-4169-91e7-04bd9de93278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "207f7bd3-5dd1-4bcf-a2ea-6ea3130faadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e1fd4c-e91a-4115-91a5-42ed271ef7af",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7389c16f-ec34-44c4-82ad-26d048d7914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634e61bf-ea8a-49c2-b765-6429069e1691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8220f76-ab43-405e-9bff-39593bb8aa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9edcb9ca-69d5-461e-adeb-d0274c52fc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c0ef0d-08a6-473c-aa5b-2ab90a901968",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c0cd51-2ca8-4318-b10d-7ebaedd5cb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bff4a9d-6a9b-47bf-9c58-2c1eaefdf48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c361c4fb-d793-4a6e-bd7b-88ba3bbc7acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887648f8-467a-4c25-912b-e1ff825d4cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943b7842-290f-4fe6-8be6-f03d43be3b08",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6633d2-f478-44c4-ad2f-275409afbeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdb81bb-2c77-41ec-816b-ff6e241f8970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd071728-45f4-41bb-8b68-30320059d362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd799a5-b861-440c-abad-b09e4cac3ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bd0205-8a91-4afc-9705-afb309fe8fbc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8e7566-26a9-4026-bb50-6a89db610468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e646df-083e-48f9-b50f-3095b469abc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558643d9-2c08-480d-b0ae-6c7cd402af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb705ee9-20cc-4bb9-ac69-2dfb3a6fc6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4343bc70-67fb-41f5-bfb5-ae62269745c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0f6ba6-d462-4ec0-8fac-415183480e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940b5fff-40a6-464e-9469-c40389254393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d51bf73-0c7f-45f5-a1a6-18f1ea98d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e9c3e4-c54e-4719-bd83-c795ccdd1bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1847bc5d-7bd2-45e1-a562-df0950147930",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d72a7f8-064c-4280-a951-0d6b6680dd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f9b2dd-d36d-4964-8778-46d77c2a4430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9003a9-d0a4-4ac1-8a2b-d2115477ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "994d3dee-7bd3-4d99-886e-9bc5a31707b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77861f6-9a7b-49d8-a610-a43848c15e67",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b20a71-f346-44b4-928d-18409571f241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba8e109-9fca-4afd-8fe2-c150a43230df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8d3782-c091-486b-a390-f22c623920d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e353c95-8aec-4c8b-93ec-ca4321d4e2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc45e7c-a595-46f6-9513-8e8b427be438",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c763ff8-d589-4c70-a05b-b83e9d1b6abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b850e5-d642-42ab-b269-dbc6e8d3ae39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76a9299-f50b-4796-bd96-08f5d2aab588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a516503f-d5b9-49b0-a7d6-6fdc03e40e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4dbf0b-906b-479e-af93-ab2ef727cd3e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e94d757-1e8d-40c1-9b66-91b07934203a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8faaf5d4-8fa5-45a7-896e-3ac931cc6ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1f5a9a-0c47-4542-b0e8-8b4def6abedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b51898f7-c940-4d2f-bced-40b283a1dc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5419a5-23d9-459b-93cf-87de1a36ea09",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb25cfd-eaf8-4578-aff6-ae721e41ea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c7cc2e-e6aa-44bc-b7fd-f070b3e8a9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d575211b-85c8-42d8-a7b0-a67ec499a771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587ec0b4-1278-470f-b8ff-edaceda16b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba65aff-f6ea-449f-b2f7-d3b83b60b943",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e661dd-8c08-4809-af21-dc039cd96227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6380259-771f-42b7-b2ad-5d02e9b8bf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bda56f3-0d26-4416-bd42-afc08582e043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e72bc0-5d8f-4027-b975-4745a9cef801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecf78e0-b1cc-4e2a-b43a-7c35d3ae9268",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98317a80-d162-4854-a69b-9f660a05c533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488f8141-5882-46e9-b058-d1ef4f3112a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664ef1f6-fca9-465d-b4e7-715fc887fdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "085b1134-30f6-4254-9ca0-d757d1f254b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff2d3f-3dd5-4b86-a70e-18dd29efd8b7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66698f4-7062-4429-a65c-279314745b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd995b01-6163-49a7-90d7-2c25e81bfd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c0d1f9-40f9-4bbf-b7fc-5b63c4f8bed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f3552d-fece-45a5-895a-75d9776b170f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd6a7ed-19f9-49f2-aeea-2bdec28265bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42ed9e7-0fc3-4c42-ae93-71658cac9750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e807b06-91e5-4783-a543-2207036ac7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98614e03-4756-489e-a43f-d7b4fa3f8554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f645bdaf-fafa-4476-bd21-114306a75b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badba589-3c83-448e-ac0f-1893c160847e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6735c469-da20-4c09-895a-8411f191e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77f96af-80c7-4dc5-810e-8ad869b546c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd4f8c0-bed6-40fe-935f-57635ee5daf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79dfd0f-9514-45ca-9593-9191fc99a897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c460866-9b31-4abe-924d-60c07580cc8e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b12d116-f374-4c37-9a0e-b4d044d2eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ce142a-7e88-4b8b-af46-6da332cb40b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e303e50-b3df-4c94-a5aa-1f1e26472feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72dca768-b982-41e1-b701-29e07ad543d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841173b7-cad4-4b15-8e82-e3c7c7c44742",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2df4a4-a333-44ba-afe5-24eb002cc9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f27147f-0039-4438-8972-99c093870a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c028f1-5287-4ce2-846a-4245edb58e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04cfd6b2-7d7d-44d7-ba0e-ea928fcf2d7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "630c927a-4a2d-408f-a7a5-03b87c1e4c18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c51c124a-8c3f-494d-b97e-7dbec2d472ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642cc49a-005d-4de1-9377-227afa6917d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "caa1f3a5-c674-49f5-8ba5-5a2d2f721f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d02d0ab-6241-4809-b054-5c1554fbdb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a007ebf8-10c7-4bb7-8a29-0e4ea218d39b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d055c54-f4a1-4c93-861d-eeb6757172a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7dc88c0-c5a4-4687-9b18-889834ea4239"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e5e7ae4-df53-4d51-9a87-7280c0d19a15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d729a5a3-9b0d-4415-b6f5-891c7a7adf55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09dec972-427b-4758-8964-23b6697fc8b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2db62804-820e-4d84-963a-6c9a72b7a0a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000a544a-d9ed-4148-a867-2e22cce92122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "849e19c6-c76a-4310-bfd5-68ea248dd262"
            }
          }
        ]
      },
      {
        "id": "e3757e2b-3349-41b5-9a38-59ab339947d2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bb2c57b6-4ec9-4d91-a9cf-33c6251d314e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cce4039a-3b30-4956-9bfe-4b8c54b41853",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03aa9fbb-71a1-48b6-b6c3-d8a54c19cbc2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c066c3f8-4c31-48e8-9e43-b494d2226ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99286a19-1078-4390-9c03-2c0dea504922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4ab875-76be-46a9-9d6a-9ddbffcc2d70",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d942461-06f6-4db3-94c4-d05c23bee726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88170663-a26d-4eff-a65a-a864864f38fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6daeef3-c633-4b7c-a7db-8dda11393400",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2297625-a8ba-44a4-8b61-69422e4ec974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88af316e-ce39-4ec7-9b8d-9547d70a5ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc11ca7d-2fd5-4f03-a79a-273614590fe8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a206e3f3-6981-4ee9-b521-902b7f768a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70f04d1-0782-4c02-a659-62844140ed34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac2a579-4a7a-43a7-b50d-dd7556ea4540",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cb4a13-320b-42cb-961d-d3591f233924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fffba6c-000c-4fe2-9950-a4fe89f5adf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0722e1-b605-4186-9dcd-8e923ae9f65d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92da6a5d-1870-4b98-89a5-eb5bf6a5c464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee59cfa-5c9a-43e4-96ca-b4c9c86b09f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e46dbcf-422b-4727-ae82-c8130af3b3ef",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a9a6b-e777-4507-b156-8bd941f3beb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cae78ce-baca-4937-9c02-1ad7b69d72bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066b64ac-f799-4c96-9321-b85dfcebc565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a37af7d-e611-4a2c-9c16-6282b67f6952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e3e055-9c24-431b-b291-ee7e4528d887",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c82012-2921-4cd1-8dcd-63c48f3430a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cbdfb6-773c-4779-98da-7f47abedb663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698ed575-4217-49b3-bf92-783b6c3400a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7455a0cf-7525-4914-a16b-f85c95abe802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890dcd81-664e-48bf-86db-9484846e7c76",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23dbbd3-1a10-413a-983b-f401d12ead72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a254ba2e-9e5e-4598-a30f-67ed33647363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af165a35-4f2e-4d54-b3b4-64eee378a46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13800a3-7185-417e-ad21-041e538ba00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176c0880-ded8-41af-bf92-34b6363deac7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de67ffc-a94f-45ca-bb92-2755b925c464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30afd144-c9ae-434c-9f1f-ef6550077192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf9f8d-8c2c-4431-88c4-c5d29478fe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126ade41-97e6-4a3b-8fe0-158ed417f2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a0f2df-c9c0-40f2-870a-0a15ccd69420",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b60c812-e7a9-4c35-9b20-db4b7ef15bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20054cf-4fb9-4fa9-954c-37bafc56b632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05d30a3-3462-4b49-a39c-b3e031338ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc6fe36-da59-42b7-8246-9fb5080b3841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0580051-45ed-4774-999f-1ff7d9969505",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7051a207-9e0f-4af4-b819-a2cd7bc7784c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09389177-ba5b-4165-a981-8afac6902c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6addcf6-e50b-4671-82d3-048353c73a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ab4e27-cacb-46ad-9078-a37972bb38cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c335d8c7-e0c2-4d45-a2a2-d050581691a1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d05783-fb50-4fb5-8cf8-12025d5fd220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df4e2a5-ff2c-4325-a8f8-28e890812041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c12acb-ccb2-4032-97bc-045a1b361629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abc2147-cb7c-41ce-b807-4a7099520861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c9056-ef4d-4c6b-a35b-9dabfafff0af",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335ccd4c-47e3-48d8-a1fb-3e76cd78245b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e11fa0-a645-460e-abc8-72e4a63dc025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042c82cc-7063-47c0-820e-13a8b5ba0c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b7393f-df5f-4c2d-8a82-45264162099b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5393543-c3cb-454a-9e02-684b08f3b363",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d873d4-5919-4ba4-bec1-86678996301d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5e5d60-2218-433b-8b97-46941d007bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db12dfba-eff6-4713-a298-09f9a99fef40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5f0c92-6c5c-40b4-863f-57f39076ab83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93de471b-5e2b-4ed1-a7e7-9341a6941a23",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eb1cb5-579e-42dd-959d-2b9f688c739d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c517d1c-258a-4cae-b6bd-51181a1dafb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952a6be8-aa3e-470c-bd0b-e7a792990909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddc1065-d7a6-4a52-98cf-7997b232c63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e7ea79-94e5-4788-b5a1-b601cf31db1b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d829a34-98e8-4bd9-91d4-595196870c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f89bc6-92bf-4486-9ed9-ab6b17725e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83583f71-655e-4dd5-82b6-c0f9cad64516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50b52b0-cf36-47de-8a07-85b1e01de2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2914749-77dc-45cd-8804-5e285780f514",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc411c4-25de-49f6-b5fc-ff62b97d8a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da416ed-b421-46dd-863a-765e6f91d49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86757b77-3533-42ee-8765-094ea8f3538e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3af33a-8c52-4616-ab78-2459b6c27638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a642c336-a309-469a-b38a-4b99837aeabe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ff161b-bb9c-4a84-9d0b-5fa6961a82f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835934e1-1776-40ea-b37f-338d8f789f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d399f6-77dc-4099-89f9-7ce593be99f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd35260-bb12-43b5-aaee-31f0f99e794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224013cb-ec1f-4d5b-837e-7d7773f90964",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d71cc71-6e30-429b-83cd-8bf820d2aa35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e927b2f0-4207-4578-8d13-b30713e847ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119dee58-5c9a-4f87-bb3c-87feb63c3fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e5f6c5-821e-4038-857f-cd6cfed07180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d460c5c-0e6c-43c9-8cf6-630acd70a5c0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39f72ad-76bb-4439-b840-ba01ab6bb535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e133ee4-82be-4d38-9108-9af00a9cd2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad41bbb6-9a51-49e3-9355-49d27bbc9b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413f58bb-7537-4723-970f-765f5d3e3a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ec0b3b-ff75-4954-b718-2ce6c395bf13",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483ac5a2-dcdc-44ed-80f5-1046aea279b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b614da49-49a6-448f-b284-cdce91489dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58350203-7639-41d6-a0fa-79d8548719e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0496d7d-e378-4db5-9809-6fc285eeb50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf205266-13b8-41ef-afb8-80792d70451f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff4159-180b-44bc-a671-1d5d3821178e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb45fe4-eb59-4e95-a16e-b2bdb7fb9932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c529f113-8c39-46d0-94f5-b83bfdc3ca12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60506df-6f3b-4b71-964e-20708ed97e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5ac84e-98c7-449e-b970-20417e164d6d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15612cb7-ea4a-4718-ab00-6b7bd8821be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7701a44c-c223-42f7-9d35-3fa247da9a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcd70f4-4313-4ada-baa8-b7d5ade813cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbe4992-f872-4b86-9c0a-fcb71360be20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bf3e67-df5c-4fea-bbf9-03c97bc4cb6d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24db0701-f4a4-495e-ac23-0bc055748d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86dba383-4d05-4435-85a5-0733881927f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e273ae51-b021-4657-b026-24a262897223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13b6e3b-9ca5-4cd0-b2c3-9e7d1399372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a589196-3a47-44c2-af2f-c40f79e49af5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6ab050-6736-4f45-b8e9-132bc1e58439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08349bff-fa0d-433b-9a43-370b29c9e97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7777c652-57d1-456e-9cd2-b61fb07c12eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718688b6-f171-4142-a667-a072246ad7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdc5392-4438-4f50-ad12-b18a3b520bc4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ada670a-4a3f-4999-8b95-19fd55bb4fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0715fb6c-231b-411a-9d86-edde56696f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02141e1a-2b4a-4110-84dc-431f2e35fede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6273af-8213-4e75-a2f3-c5cc96900f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0a78b5-8c0d-4bf0-ade3-bebbfecb24f2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9882911f-dd69-4cc1-9e2c-2bb0ec9964b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0e1bd5-26dc-4949-a514-38393fcdbd7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad825323-1858-4f1c-9136-760df52db940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5b9b85-5c64-4889-90d7-38b37cb253f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8f1c34-12eb-4bca-9fb0-65393a3173b3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c834f89-b802-4eb5-9ebb-95743eb8f23b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ef06fe-413c-4e7e-a9d5-07c3bf7da6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d9f6a-fc68-4801-91f7-17ec6169c7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce89ba0-b105-43cc-822c-1b00902c3bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a566b7a-99d3-4a76-853d-7a733254e9f1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e7bf79-d3cc-454c-8799-3be2c01d5840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2f4cae-d4c3-4d0e-b032-7115a265353e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975877c2-4e02-4cfa-b9c0-ae670c474fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7eb411-3826-452a-8489-d090dd934cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be100d8a-c6fa-4499-a71f-315ec6dccb67",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65349d3d-32dc-4908-9150-b9b3495f69cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96741026-f9a8-4f9c-b5f7-d64d8d2e74d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f086b78-f48a-4dc1-ba11-38e55cb1177e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c3e6a6-a28f-428c-9650-10a7b8fdd812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42444522-344a-4c57-bd50-6298087e412f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2408d0d-6258-461a-ba7d-5e41c3f9bc1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ec53d0-87a1-4e8d-a79d-4e935b6d8f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf35eed-0ee7-4df3-8e92-5f72fad6e7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27625d96-d863-4cfb-a6f9-af75f986c2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40677c6-294c-428b-8f67-1ea91ff35e1c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b41eb4-2323-401f-9a4d-1b3d6c54119b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb231da-67d1-464b-b317-91af7446526c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7e10d9-5d66-4563-84b7-aa2f615b0612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347e3add-c698-444b-859e-23b5a1f7f801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d6179a-6283-4db7-92d7-7f0d1dc9198a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86522160-a2ad-4bae-84b9-33dc5d50a775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa54ed96-5bba-4139-8e68-4207ad0408f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70c83ea-8479-4bbc-8373-b353cbaa91a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f5aa0a-79e1-4547-ab73-cb09a102396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805de061-1824-40e9-9447-f52c67f0e5dc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dceb2f-83fe-4073-8e4d-ec9f47cd5856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4da2207-6754-4560-a044-ba8d4a3a83b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4d986f-09ae-463b-b69c-236be7478a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950358af-50da-4e08-8516-e6ea4d8e01af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1b8fc0-1fee-4acf-9194-ec039d82054c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41ff19-13ed-4465-985c-a6a0e8cb894a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276e234c-5616-4ef8-9b6c-88984eee9ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89f68db-05fc-4407-8d9f-3186926645dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1ec9d1-0f7d-4bc2-b37a-11e42a4e2c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2508721-0ed6-44b9-98cd-b4898c63eb11",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d1c23-9c19-4a93-8653-4e731691d427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855c6c81-5ae6-4703-9e59-ff927a72998b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04508a9a-ae77-415f-a1e8-01ec519288b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a7195e-d303-47f8-8cec-edfbc077decc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef3d3b8-267a-46a9-9ac6-2e6a1c9ad969",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0053b6-5a10-4f0d-97ef-641821c796cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dd5bfe-3905-4f54-893c-4423f5e21537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410215da-2452-4213-97b0-29dbdabf7ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2866f9-b6a2-4f21-a4ba-a307cc1deddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e4765-c4c1-4679-8a61-efb1fb87c91c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b3e5b6-daca-444f-b1dd-3f90e1fde375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be09b0dc-f256-4ab7-8ebd-bed378e4179a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431fc239-ec8d-41da-9a1f-afc6ef24ac23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c40f14f-9501-4dd3-a4c1-9466d4ffdc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cefbe8b-0ba3-4137-9ed7-fed2d34105bd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33214641-2957-48da-9fdd-c01f2b2e48c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bdb6cb-94e9-4501-8d37-b293129c9bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2864c9f9-f130-4377-90d4-8b1dab2c724c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc014f68-3381-4a8e-871b-35fd4338634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290fb61c-a6df-4bde-84ec-67facd05562b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86bca35-3b06-472b-a66a-f6d5c2401c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e201a53-96b5-4ca9-a566-befc40973ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3b5365-f164-49ba-9c55-88bf39265df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a05aa3d-29a7-4886-a5eb-293f45ce405c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66625a00-a6da-495d-9f01-5f645ebe1bcc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1371d26-35a6-4c00-979f-9980202f08bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f926379b-77f8-4150-8be2-3be869ec8dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312cf2d0-46bc-460f-9449-83014045ef42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef885da-a9f2-46a4-b84e-974bc79a5623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2063cc8e-3c97-4d86-971a-661735e62bb2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102188a9-b72c-47b6-9f74-6dbb08309030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdf2b97-56c3-4b87-afe3-d909d380767c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb088ba-656e-430f-9ff3-87dbb3c15cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1447d16b-ccd2-482c-9f1a-23ecb500c9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccea674b-cc9b-42f5-a08c-3cc04843204b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff081d3a-1c5d-45a0-a2e1-dbf6bfc04bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d418989-157b-4cf7-a62b-5bf466481f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa1aad8-9fc3-4682-8a09-42b3b104fd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf016d2-5eb7-4119-9510-0eccdf0b06fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67047c6-3c83-453a-8530-42ffe9ee944d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb92c576-8980-48a5-9099-749354c3592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8646e50b-3752-4cde-897a-fc1f3b74332f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fceb6c4-cf42-4128-878b-3107ccb03f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc144dcf-e752-425c-bd01-18530a7c2d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799b9408-a8da-4d50-95f9-6efef877d7c0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177cfcd6-fff3-4bf2-861d-d4833388501c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde7e15e-d78d-42c2-b7ec-6285e6f2d222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c5889e-f278-4e2d-9b63-232d2ea04e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b2f975-5d99-4cf3-9b7c-aa4849b394f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d693091-45b2-465d-82d0-c4d985f12312",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8baefe-cd26-4375-a3f7-432699bc7f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8495b7cc-f2ae-4dc8-89f3-9fac50f8814e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cdd1b3-a109-44de-a43b-fc800637b80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e74cc9-4e64-4f1e-a2ee-c80286873adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f82d4cf-3dfc-4f11-bc81-3a39031af6bf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb10e868-b682-4f97-a002-3afccac9ad64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980797df-7e6b-4668-946f-12903b9825a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0da2507-a5b8-47c8-a3b2-02d30bccc5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3891edc-6647-4077-999e-b64e1cfad5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4359f81b-41e6-4298-88eb-cbf397c0679e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dbf6f0-e5fe-48e1-9fb7-29eb3ba4128d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9f056d-b731-4795-86f9-8fcf41e9e494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc26ac7c-5c31-4430-b549-0878222a9756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8efced-e17d-46e6-b9de-e5612a8725c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d3f263-e957-4f2b-b6c5-b30d3cdfae79",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf98f6a-bf03-4191-ab81-267ce4dffdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e5d556-2834-4b14-b7ed-a8b654bac43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fa196a-c4c6-42e9-b11e-5d6600aa097c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe3e6f4-7d65-4d43-8051-d58d7da0d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f295929f-eaf3-427a-82ba-2e5767d4311f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7994f0a-45a3-4dac-9d38-d6383f5625a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41037b7-1519-4e2e-8c94-d21642e25862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6cbfae-cf51-4a01-ae99-b68b72fae581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9886777d-9876-4d95-a92f-4e5832248334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dd3c35-32ed-45b9-8bc6-e867796c7ee5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e675f0e8-6f14-4db5-86f3-d0d52779b56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fd5135-117d-4432-a09e-7fc6280d1435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8011b30-7698-4617-a285-67d4f6ac61a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8897fa8e-bff3-4eb8-aca7-cb6bc28b36d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d41ce1-9dde-4f79-b64a-ff9f30089e20",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074c0f60-5c29-487a-9344-29cbcf54f6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3130eb32-a280-43eb-a968-9185004f64b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ed987a-ece8-4e14-9bbc-763b9bbcd12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5e9c12-81ae-4c61-908a-7b282e825d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75b85f6-f592-4255-ba7c-c18bbe560cb9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1102d5-a1f5-40ed-a485-b1d04e5c47d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73beca73-4db3-4ef7-9688-2fc045aed215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed9e976-df6e-4200-ba16-c3a507f6929f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0307f5-e413-4769-9d47-0d40169ddd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04637a68-fb9d-4549-b5a1-ce26577364bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca9b539-0dcb-451a-930a-811f62f9a3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46d8cb1-a7fc-40b1-a5e4-c873202f8ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f34c49-86a4-4656-9486-31f5733623ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445fc7b3-215b-407e-a245-19981b9b468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c21222-8de0-43d7-9d62-9411082f8cdc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b751f18-0170-487d-b6ed-6bd4bba2e553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7611850b-42d2-4c30-ae5f-9c50c35c9e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63272bb2-fdce-47ff-bda0-27a39129757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e6fa7d-da92-4e9c-8c16-a3731722fc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b67f797-e05f-4889-ba0d-5a1a38c86f05",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c849de-dace-4299-b9ca-94eb8770bae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807b1abc-addd-44db-a2c2-e344375924e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830fcabd-523a-4570-88b6-2147fd043e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766b45e0-3fb2-46fe-9b93-745d3dfe23f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188b8d04-3859-4775-9093-d453c6ce8990",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3f1c54-3e3a-4ab9-94cc-a91aed796aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd63f74-ec21-4b65-bd18-370eb0dfa94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cb2599-9e23-4a0a-8dab-1c984167873c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460688bb-38d1-4019-8f83-ea77dc9234dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7062d-af8f-4e22-8287-a27a030aa364",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6995cbec-4791-4dda-a864-54721501499a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b133590-a6b9-48bd-95a4-cd3462f23b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbf95c8-c6c2-4f7c-ab98-68fb2c518f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dac53a9-7e97-4269-8390-368f9231ed9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e006e314-1dfa-48f4-a1c3-e01bb01a965d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f00b06-46b6-4a53-9be2-13974ba793bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e6dfa5-f6cd-431f-8bd6-03cfd5a42cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6168f8b9-0c1c-41b1-9232-33babab17b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a40dc80-63b4-4691-8ee9-11bba92908d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0c03a9-2a93-4eab-bf72-df838dd27c0a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803106c9-9791-4fb7-9d76-77a777d10a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cc077c-f752-4d96-ba27-07f5026d352a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced136a0-dffc-4ba1-83e5-ded1bb3f49f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15359156-d9a3-4026-8d5c-8252e84f70e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5774c5b7-40e6-44d6-8edb-20b09ce0934e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11115db-55c7-46ab-87e2-48f6989b9808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51ee14f-8453-42fd-bf80-17c9df776174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4be02-3535-4eee-94b0-5f69c6591aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76b7982-1467-4626-9d33-7a370490e747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3768399e-3940-44d2-808b-2816743dc110",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add3a979-14df-4bc2-89a0-e105d7a39bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad54a94f-0d43-4a37-9124-4e7bd4937705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed38aae-bfce-4ea0-8803-ca664eed9020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf2316a-6e52-4cd6-a1d8-d11646f39e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9e936-e772-4899-9259-be452a5a0438",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6815551c-9f66-4ca4-99ee-caf67cbd66a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e24b909-4b89-4153-bb63-63bef7cf8f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7474adae-09e4-476d-926b-9475c724c563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7b9417-e285-4c5f-94a5-a8bed53dee68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d3bfa-3070-4535-8451-35bbb406f9ae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077bbf3f-e196-4004-a6ee-1f2a2ef209e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe16b3f-49a9-4f09-8fff-0b7eb5f6d5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf8a8e5-1401-4421-b4b0-0b01206b1dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541a20f4-32b1-4422-aee3-e9d65f410cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fdd8f7-7c47-4ffd-ac62-45efe69c7384",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90e558d-834e-48b5-9243-9c151e213fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c53ab01-8067-4562-908d-fbd04bcf28d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cdbbe6-8dd9-46c7-af9e-b4212abe3842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ef3fb1-12d0-4709-921b-248ba563c535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b5217d-cd41-4098-a9d3-4f46dec02927",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6eabc5-62c0-4104-a594-370e073e7f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a674852-f06e-48b2-a235-2804aa210011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a7c53b-da65-4e74-ba5e-01d14a92b7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc9a4d5-ee26-4a67-9293-0caf4b5ed076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69044eb8-e243-4ab2-b3ca-b969aef247ef",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2227cab-f890-48f4-a53b-160b3ebd0239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49af35e4-67d7-407f-a3c8-24703b414c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87abb9b-9de4-41b0-b9b8-e3ae99dd2464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d56abfd-ec79-47fc-885a-5e54831ac8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba5ad22-b627-4ec6-b5c6-65c5ebff57f9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0e7980-be0a-4488-ba91-992686d0338a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6af227-6b5b-4c0a-9ac8-3f6b786a5a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a452654-4d07-4fb7-97be-b59a21d857dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebd2269-d2b2-4b42-9c56-24071fab9358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3766bb-9ecf-44f5-9663-a89661717256",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f8b9a-b3d8-4d13-899c-5a66e8688889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e0cea6-b3b1-4040-94ab-91c08e30e3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c9314d-4dba-4346-8570-29f24e5e1e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40405d3-17c8-4fd0-bd1b-a8e65fdf3feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f49be5-92c5-4dc1-9641-ab2fbf07f0bd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7549467a-9bcd-4897-bc0e-66fcdc259f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3535ca43-4fd9-43af-a665-e6345ac9366f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a32bb3-a70a-4e09-b821-7f70d9453cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98641955-9173-4211-bccb-68c5e5184612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50363fe8-0d61-44e3-87ac-d8dda4b00ac6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae46b8b9-377a-404e-aa72-5dc11aa60e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdfe390-0bc7-4503-b354-c74b46b7aafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a7625f-c6e2-4ff1-8160-9842bea4abb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbf654b-cdce-4a5a-abd4-6f3abae72a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f909dc6b-0858-490f-9add-c21132543706",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db451530-d014-4754-9437-10320ea0597c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be690545-e431-446f-a692-69b9343d67d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62008e1-518a-47fc-bc64-5ba778d88658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c31a5c-d112-4211-bb70-3bd0d3f437fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3695b439-22a8-4c87-a54f-46b7bd452a3d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4f0565-5365-47de-8383-8e885f2dbb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddec7f49-5810-4068-b059-e24434767cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc2d794-6ff2-4404-8dda-fa939dc3f3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c253d1-d0b6-4bce-8b14-5a136831ea54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40420155-04ae-44ee-937f-b93548cda5b0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fe999f-ee3d-47da-aa83-6a49ab5eab44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba10702-9d97-46c6-9771-cf815d562128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3e86a8-947b-423c-a2af-19de06918f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd098fca-2547-46f2-a4dd-0fd850c26e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fa55c3-316b-44e2-b82c-5e72b28233dd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3562ae07-9f50-4112-8a13-ffdd79cef2b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399ce317-de65-4e5c-9143-0b2148d6e7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b87a198-3515-44f5-9ebf-8b9384d46d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ff2ebe-fbc6-4941-9a60-2bd56fb72fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385f0e68-72c9-485d-89ed-183c78660fe9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb4197b-335a-4232-9b5f-621ba3cb58b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e48c03d-cffd-44e4-8503-4952295fdcde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6706afd4-4fdb-4648-8249-dd6137a6f4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0af583-d955-4b38-83b5-0f3848734de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f23f2c-ec0e-438f-9326-84393755b41d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fa275d-b2ae-40bc-accb-b625a28b0385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827825a5-26b3-4cd6-94fa-45c60a1a509d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833adb9c-f2d6-41db-a6c4-98d0285a2183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52d96d2-e024-4622-8fdb-5739c3d38d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095b0505-bb03-4aa8-8561-0ed6af12a37f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0d33b5-0dff-4ac5-aa4d-1ca68343adbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0eefbf-ac17-4a11-8d8d-e6e6d82bcb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a3e6cd-5caa-4d62-a8fd-67b138153fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b749372-f7f4-48a3-90f1-efe67802693b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe3cbe8-5905-4bc5-8cbd-f7fd385e7c71",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e9eddc-12a3-43f2-974c-1da3c21aec60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037ca98b-fd85-4161-8057-8f686b61a6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922fdd78-b478-47f0-b6a4-a5ecdd8896b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6297a2b-e328-4b4f-8a1e-ec3e32f8bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7750fa6-2b5a-46b2-832a-ad0593559735",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b304b-3666-4e8b-9672-0d9958734e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8feb6725-35fe-4256-96d1-99d76097f49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84eab6f-e1c0-4c85-960b-c3fe4e86a5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8562fe81-e8dc-4b40-8a65-fe22c88ce389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3a03ba-ea9d-496e-a98c-e59d8397e6ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc3d6f7-5f2d-4062-a60c-cfbedc3db9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7034162-6680-4896-a26b-3264c4c4e851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ed2ccf-e964-42d2-8105-e07dec75b6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631c8cd2-9f5c-4161-b8e5-7ad5419f13cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efbc644-37a8-4ad0-b184-5bc4c10e2c68",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ad1220-e7d2-4118-898f-949480b66864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97d446d-e4ec-43bb-a22a-f80271df2fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f986a03f-38ac-45ad-8867-53d9be48c6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6138ab75-9b29-4df7-96e0-b6ef46c88bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25adf24b-1ba3-4b0d-b0e8-ed5e9c6015f8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846cb9e6-090e-474d-bffe-aa3d319afe65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67016139-67d7-445d-8a44-0d681ccc9579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e21139-e749-460c-a0e8-a42ecd05f11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efbcd3f-7af0-48a6-987f-c448a5b26bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffde559-4a9d-4962-b191-145f308dbc3c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d5b3a9-4990-46fe-acf8-8f2c3e34aff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5f3eb1-e7b9-4c31-8719-cfc9d56d124c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e342719b-0720-4487-9127-1ef494791688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc41d4e5-aa61-43cd-b519-63ffe3711c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453b6975-0cb1-45da-a744-fafd34143514",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f0016-385f-4be4-9559-abb0e5b68969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3a80e3-90b9-4f42-887f-953bf6cf5e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a682a97-84bb-44bd-8b88-e0078911c4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b26ab9-c11f-4e65-bcd4-18b29867ce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1920c429-9aef-43b8-b7a8-9c70c6ad3e77",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e528f4-8005-484b-8dcd-067c026a510b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac04e82e-27cd-425f-8ecd-62f67de2dda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe30256-4578-455d-b321-7d753c0899c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042cca68-d4db-478b-8bf2-b12922d17fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc4fa2a-c3e3-4344-bf67-981b360c93d9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9ba038-2b66-4110-b2f9-bccc6eb45868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5bb35d-325b-4c00-a195-bd5f72bfcc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff4b17e-207f-4150-9c94-58731929b4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0511c2-ccf3-479e-a5fc-6bd4c45d0e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c413aa6-ef0c-4fcb-a2a0-039ae53ef7a3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15a0acf-7de4-4705-abd4-56794d42957e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef410fd-aa57-407b-9d9f-ce03cacf7f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8b463d-5c4d-42fb-8aec-63b32f81aa7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1538209-3b6a-468b-904e-6fdb9a51efec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c04142-1af7-448b-b893-a2f2400bb0fc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f276a4b5-0e61-4392-9b90-097654fc8493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa78d65d-3591-4a3a-9e84-8f0e930ec9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6b866e-e8fc-4ca3-8a50-ad5251348c8f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d67ae2-7e1f-42bd-a37e-3fe28dd7da3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18dec31-8706-43ce-85c6-293af0d6ea2c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a02dd0-7b31-49ae-a1f8-c2bfce463f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751194c1-e451-42ca-9d5b-091a828c4e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2a539a-f460-4c22-a161-a0ed086031ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b4e7e6-6402-4c93-927f-6bddb0e1d766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f9e3e6-4d8a-46c6-8cd9-8e99228849f7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ff75fa-a798-49c6-a369-82efa09553f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be955d7f-a0ec-4d95-a299-4b127954afa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64380699-5c7c-48e9-9049-9e2343f0c5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ba2352-5763-41a2-9135-f525f4c58dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26079787-6645-432f-8711-9463749b6101",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d25ea71-2c71-4702-bf11-e3b97b3e89b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67befe96-8cbc-459c-add3-e4bdad80822d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7cc6a1-4543-4f60-b280-1799d364ef3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f831614-3000-43b6-851b-57fd3439a0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17258cf-1b71-42c6-aef4-f28dcfb449d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f715a92b-1ae8-40a3-a667-f3ee782cb82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9499b99f-88d8-4641-9168-7a54dc6f7a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d16a3d-c62d-4eba-9e69-00d7b8742722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66819d5-667f-461c-b083-1606ff9715a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6a4f01-fc2c-413d-b330-640efb06257f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8f96fd-84b2-47c5-8da8-c642326a7579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c1a3799-9926-4008-9609-b27f86823123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afef3082-f5d9-491c-9d14-27c96b5ebb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d38720c-9989-402a-8ceb-233bb458e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4301b200-e422-41d7-9fb1-3f660e5c8372",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b02a66a-b5a9-4051-aed4-32c9404a1539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3911e2fb-f0d8-482e-b407-b1bc0ab68ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60428270-77d0-4678-aa54-f7d5bb0e5ca0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61173a18-4eb3-4e63-94a6-ef7f836535c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee478c3-b79c-49c0-84b8-c5ebfdc863c2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4716ccf9-9c0f-49d3-8f84-9f04ed07d530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1ed0f1-7f39-4295-9e5b-bc07e060a9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5598b2fd-3a7d-4c8a-ad9c-f1c3c23c9c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1920aa4c-4999-4ea4-bf89-7aacea31ec34"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad7a37a1-93f4-4fa5-a1e4-14e9ba241785",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "133037be-408d-4cc8-a5c4-f6eefea2fe93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fca0367-c7ef-4274-b1b6-191c329e2f8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9af4fe77-ca2c-47d8-822b-63fe868c1bf2"
                    }
                  }
                ]
              },
              {
                "id": "b2ee1218-92f7-419f-b45f-59925360d4b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1413072b-9ddb-489b-99d3-c31bfaa2b688",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f4676d-cec8-4abe-92eb-8dc311364eb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a34452e6-c96a-4a63-9cde-3a7268e6faec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1426a2f8-dfa8-46c3-a625-e7d63d01d9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37ff3d71-29d9-4387-9c84-aea2c9b08725"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d5382b4-a28f-4b81-9602-fe2e6fcacee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d588a2eb-79aa-45bf-ad53-e9092165aa0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11249128-cb15-4426-9d0d-9d698733ad04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "218fcbba-4038-4964-a624-cddfc1a0adf6"
                    }
                  }
                ]
              },
              {
                "id": "9780c027-1016-4f82-85b1-0d92d4603c83",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "367d7a0b-84da-4af1-918c-c17136fab6aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd84e606-b814-42b8-b978-0e6cbd09b43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0790b62c-8859-4df4-ab71-e1dae0720330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f710eefc-f85f-48ec-b20c-5d48f5c0e140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b075e11-177a-4827-a561-b109980dffa0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "97dfbaa7-33e2-42e7-bbcf-d482adf72ac6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71422a3d-ecf5-4e98-abce-2b5e39768015",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a307a77d-2d42-4c87-bc63-a092fff05a0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "745933d8-4015-4657-a47d-c50245cdaae0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b21c16f-2a8a-42f2-9f0c-dd9f6524d060",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4bafd97-b771-423d-82f5-7a959aee0b50"
                    }
                  }
                ]
              },
              {
                "id": "adececb9-b1cb-4763-baee-85783df9040c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2f2c1a1-a074-4a49-80ec-965b272cb472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f888117b-b496-444e-8a9d-33a9f7a3f6bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16fd3229-75bd-4ae3-bb93-b35d5f395e06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fc6cdd0-c4b8-4066-ad30-86ad260ae2e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09bb82c8-6c3d-4975-8b5b-61ded4507f75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e21a0033-ff10-409f-8a46-a5cde28c2706"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5e35758-6af4-49b3-be92-45fcc55cb84f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45cd3ed2-5d24-4029-bf97-c58779941fcd"
            }
          }
        ]
      },
      {
        "id": "e781b716-ac68-4dcf-a396-ee0feb72f10e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "683423fa-31c6-4894-9816-1b1d7a2eae49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d5acff1-5575-44a2-a183-22f05e724a56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e381d8a1-d4d6-44da-8ca8-3ed96206e43f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a192c7c-c0b5-4f8a-be43-5268a26302e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "affd9961-70c3-45ec-a790-fd76be66f498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ac0ec4-9cd1-48f9-86c1-710960311e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6acd1d0a-e931-4bab-a2f6-ce4bb03339e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3421b0ea-b050-4863-a943-535a2998f08e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77df6482-381d-4207-84c4-e25b4f72c7a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdc5f880-eee5-4b25-a315-da9255872626",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aad30458-15bd-4024-96fc-bd582905d5d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0945647f-5537-4518-b6da-9aa01e946baf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d0c493ce-01dc-421d-822c-4edcc33dcf59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c4a6a74-c898-4e54-9f63-a5bfcc0253f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc44f4f3-ac68-44d7-9917-73306dc28c65"
            }
          }
        ]
      },
      {
        "id": "7783291c-015f-4986-87bb-481f2366ab82",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f606f7fb-7428-4b0e-a983-b044fc65397e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47c8e586-28a1-4e1b-ae0c-599fa8ba28d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52dd700a-600f-4d1d-9f0d-41e5d9643024",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e5d2af-fda1-4fa1-ad18-84cd96a02238",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10a3b87b-600d-4ab8-9eb4-9d04a0500c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6166ef-056c-42b9-acd4-59ee3d8f2ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9334a4e7-2d5e-4352-9f56-2019aaf68f14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7f125dc-8bae-4d7b-a85a-34507faf31d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c794e2-ef4f-4a2d-bb05-9b45e3eeb0ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f647fc9-e214-4e3c-a629-91edc1551aec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11ef9e93-f9ef-4bc9-bcca-e4d7ae632e77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1706305-61c5-439b-98dc-8bca35dd8b1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8af93796-4ce1-4bca-a3ff-fbec1911eb20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fce7271-72a8-41e4-8e90-9583842be48b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7257e47-0387-444b-99f5-712d769f7535"
            }
          }
        ]
      },
      {
        "id": "b298f40b-4daa-433d-82e7-425587a56a1e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "24c8e7ea-f3e9-47dd-98ce-b0066a27817d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "743744b6-b279-47cc-bfa0-564d0669722a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb96d221-8dae-4394-a356-899f2eaca930",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba54cb6-2465-4eaa-9e59-a787eb5f2941",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dde4810-073f-4081-95d5-0445ab7cd076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc391bd-5898-4993-9cf2-b769b3741c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be755c51-5ed5-4e4b-8753-d14eb70e507c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f86820-5697-43dc-88f7-be3b079a1090",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af81899c-be01-483e-82a2-c97b3def84dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "483edcb9-7efd-4539-8a1b-fb63e0977723",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84b60c05-927f-48a4-a5ca-7876dcbc2cb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24730410-e7a5-42be-8bbd-548521f0a6df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3346eec-622a-495a-867f-44eac3d2a694"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fb73d05-a3df-4717-853a-e5da252f4732",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2c987a8-5a8a-449a-9ffc-cab80b7b3de7"
            }
          }
        ]
      },
      {
        "id": "f7aefa53-dfaa-455e-8d34-a1d0905072cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6367e5f5-c334-44b8-b77c-bbf72653236c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17758a38-b150-4935-b02e-282a870a7f9a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "991c61b9-a3c2-4ee4-85a5-eea8921791f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bc98a9b-829e-4d1a-8f17-3793285b8924",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e50972b0-d7cb-438a-89bc-35807954bbf1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 98.91228070175438,
      "responseMin": 9,
      "responseMax": 8369,
      "responseSd": 536.4629475180087,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711931921478,
      "completed": 1711931958878
    },
    "executions": [
      {
        "id": "052e91e6-4749-4c67-921b-790bc4b85435",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3a8ed5b3-5520-4475-b8df-43458f1a3391",
          "httpRequestId": "bcac2523-ab2a-4480-a78e-7c39f2a5fb8d"
        },
        "item": {
          "id": "052e91e6-4749-4c67-921b-790bc4b85435",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c1fe3037-2d9e-4217-b572-bd468e7d39e6",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "37bbbddd-23c6-4bf6-83f0-387f50bd565a",
        "cursor": {
          "ref": "27549ba5-0c67-4883-af24-5a20897c3308",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cabda255-de22-4d89-82ea-955129475da5"
        },
        "item": {
          "id": "37bbbddd-23c6-4bf6-83f0-387f50bd565a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a7b135fa-a249-4a37-8b9e-85521af54d15",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "649a439f-7947-4959-b4d0-bba1729490bb",
        "cursor": {
          "ref": "7f30c0fd-f1e6-4d7c-b840-8d0237809ebe",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9bc227ae-7053-40ab-8c76-3a05c5762cfd"
        },
        "item": {
          "id": "649a439f-7947-4959-b4d0-bba1729490bb",
          "name": "did_json"
        },
        "response": {
          "id": "ef643cad-bcad-4009-accd-78dad0c86436",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36556f9-c8fd-4a6e-8774-6139945a3fdd",
        "cursor": {
          "ref": "702a88b9-0bc2-42aa-b2b4-bcb54012f451",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bfda318a-4c0e-43d5-a09b-4d6f52db798b"
        },
        "item": {
          "id": "b36556f9-c8fd-4a6e-8774-6139945a3fdd",
          "name": "did:invalid"
        },
        "response": {
          "id": "0bf0c04f-0b3f-4e09-b8fc-761fa97f7a54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 381,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36556f9-c8fd-4a6e-8774-6139945a3fdd",
        "cursor": {
          "ref": "702a88b9-0bc2-42aa-b2b4-bcb54012f451",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bfda318a-4c0e-43d5-a09b-4d6f52db798b"
        },
        "item": {
          "id": "b36556f9-c8fd-4a6e-8774-6139945a3fdd",
          "name": "did:invalid"
        },
        "response": {
          "id": "0bf0c04f-0b3f-4e09-b8fc-761fa97f7a54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 381,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5337f4aa-6cba-4450-b519-4ea713bc0702",
        "cursor": {
          "ref": "3c5a51eb-868c-449e-b369-9e814c154852",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fd9de5d0-f7c6-4b96-8b50-6da1fa5a9c52"
        },
        "item": {
          "id": "5337f4aa-6cba-4450-b519-4ea713bc0702",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "79913fb5-1a8f-42bb-93b7-b317dac98b44",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9d3538-cf04-4a79-a8a7-a07ca595c8ae",
        "cursor": {
          "ref": "3ef00ad3-ccc3-4fb1-95a3-ff0f8d79b316",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c0e9d39a-ead2-4e4f-a390-70fdb99cd805"
        },
        "item": {
          "id": "7e9d3538-cf04-4a79-a8a7-a07ca595c8ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8718507d-ed80-46d5-b1f4-e259dabfa02c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12501f27-326a-4d1e-9aa4-e0370c9ddfb6",
        "cursor": {
          "ref": "f4b111bb-be0d-4be5-b7d5-b0dbfd64875d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "355a3b91-87d3-4dec-94a0-b5350d550176"
        },
        "item": {
          "id": "12501f27-326a-4d1e-9aa4-e0370c9ddfb6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "772aaf62-2eec-479b-b23b-273f6d38ea39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6af61b8-7c1d-4c48-8a62-dc415932f915",
        "cursor": {
          "ref": "f1d15a87-5a29-4144-b603-9f08123b210d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2b4c5b90-962c-4d10-94be-6ec01414f333"
        },
        "item": {
          "id": "a6af61b8-7c1d-4c48-8a62-dc415932f915",
          "name": "identifiers"
        },
        "response": {
          "id": "726e6efb-8cca-4003-827a-21061a1d8ae2",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dad782-6686-47b1-ae63-8afb2730a7fd",
        "cursor": {
          "ref": "16dbb7a3-6a0c-4795-93a1-85ccc1aba554",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "02697aa8-7d2c-4aa6-a412-7b4a43afbba9"
        },
        "item": {
          "id": "d3dad782-6686-47b1-ae63-8afb2730a7fd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b8e7b4a1-d737-41b0-b084-7f6f48fdb150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7992f4b8-89c4-40d6-bfdb-bda4ad0dcff6",
        "cursor": {
          "ref": "394cdc06-098a-413f-a4a6-346fb0beb35a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9c0c7700-24a7-4a48-b6a2-01899c936827"
        },
        "item": {
          "id": "7992f4b8-89c4-40d6-bfdb-bda4ad0dcff6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cb6aa6db-91b7-4ced-9db8-bde26aa92078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a0523b-24d6-470d-8a55-62abc9d8c1b0",
        "cursor": {
          "ref": "bde9e00b-138e-4cb3-b478-cf3441ee1648",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0fa63d79-cb66-44ca-8874-4db41307d637"
        },
        "item": {
          "id": "a0a0523b-24d6-470d-8a55-62abc9d8c1b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "34edd5b2-e53d-4805-907e-f231ae74eb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748ee65c-1dab-4f90-b5f5-34e28226d3b8",
        "cursor": {
          "ref": "41fd0a47-46fb-4513-a348-99e839e133cb",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a4da5272-de4e-44ec-8e8a-249b83096ea3"
        },
        "item": {
          "id": "748ee65c-1dab-4f90-b5f5-34e28226d3b8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5fd5efbf-971b-4e1f-9c1b-938198d0b0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0da1219-a832-45b6-9c1b-ba92ba162a3f",
        "cursor": {
          "ref": "121b88f9-687f-462e-87dd-481e91e94dbf",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b76f08bc-df11-44ff-95fe-c14a3aae824f"
        },
        "item": {
          "id": "c0da1219-a832-45b6-9c1b-ba92ba162a3f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "653f8cfc-a860-4ba8-8f9e-2a10ad765755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc2c551-17f4-41df-ab12-dcf40ebabf18",
        "cursor": {
          "ref": "17e2b1a9-e5f0-4ff6-8144-b0b473aa7893",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b355f990-1c1d-4dd3-9bfc-24eb552428a5"
        },
        "item": {
          "id": "ccc2c551-17f4-41df-ab12-dcf40ebabf18",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "50f991da-9a89-490b-9cd9-8ec7a76eca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd60ce1-b056-4595-840b-cfde0351173b",
        "cursor": {
          "ref": "7f07482a-4923-4a61-9038-d07ff042121d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e8d6999f-2109-4458-8f3d-400859a66453"
        },
        "item": {
          "id": "bfd60ce1-b056-4595-840b-cfde0351173b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4d9af818-e97b-44a2-9479-9609b1114be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d91088-0f11-418c-9479-4cd687943e65",
        "cursor": {
          "ref": "899cc33c-1e31-47fd-a184-5742d3a113fc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2384352f-d98e-4d21-b5c3-bf862f743181"
        },
        "item": {
          "id": "80d91088-0f11-418c-9479-4cd687943e65",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6239b785-be20-4029-99ad-5827976229ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a9392-3c52-4d8d-bd02-ffdb27cb3ab3",
        "cursor": {
          "ref": "d1b19fe1-5793-4709-a067-13bc52b05876",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7869a4cd-39c7-4716-a59c-00bf312320fd"
        },
        "item": {
          "id": "3b9a9392-3c52-4d8d-bd02-ffdb27cb3ab3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "53658a4a-e1fe-42cc-b086-14b784948053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f90ba4a-397f-4403-9144-bfc0119030d1",
        "cursor": {
          "ref": "68ccdb3c-fad3-48b2-90db-bc65325e3dd7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a05f88ad-f21d-4af3-9aa2-936a0ff1d767"
        },
        "item": {
          "id": "4f90ba4a-397f-4403-9144-bfc0119030d1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5f1a0bac-397f-4271-b4d5-254c3a358d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c109cf6-e781-46f8-bcd0-90ba56f4cb7b",
        "cursor": {
          "ref": "b621a761-c042-4381-a267-48e561fe11db",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bc94fc5e-0caa-445f-9105-88920d00e090"
        },
        "item": {
          "id": "2c109cf6-e781-46f8-bcd0-90ba56f4cb7b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "24e8fadb-9292-43db-8164-a2679b9490b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655b3f45-3409-4fa7-bad5-8dc328e5569b",
        "cursor": {
          "ref": "7fcbc591-f65b-4dda-9633-14d3f37d335f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7e6af260-7fb9-418a-a369-ecd1387e8b8a"
        },
        "item": {
          "id": "655b3f45-3409-4fa7-bad5-8dc328e5569b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e2d8fad4-7215-4fcd-a81f-59d1b964ac0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdffb2d-ede1-44ac-be83-d0dc91eacbb9",
        "cursor": {
          "ref": "5abfcffa-4c5e-4e26-b86c-2a7c572aefc3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a20cf442-c488-4c4d-ba17-e5c79292b4d8"
        },
        "item": {
          "id": "0bdffb2d-ede1-44ac-be83-d0dc91eacbb9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7820023d-29dc-4ecd-9770-39e57697d5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4614e23c-fa32-4b97-ac3d-5617509b43ec",
        "cursor": {
          "ref": "4aceb230-01ff-4674-af14-b334ee24b22a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e10daf4c-292d-4c3c-824f-634439b677f2"
        },
        "item": {
          "id": "4614e23c-fa32-4b97-ac3d-5617509b43ec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f8072bd7-575c-4c8a-8cec-d206613b36a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02596090-7e8f-4b47-ae9f-c850d3d6e5df",
        "cursor": {
          "ref": "7df8d97d-40a3-41fb-8fb9-20fd583bb096",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "484866f5-17c1-4b3c-9897-a9e930cea8be"
        },
        "item": {
          "id": "02596090-7e8f-4b47-ae9f-c850d3d6e5df",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0ac1853d-4cc5-4310-9fb3-33aca89f3bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78947da8-74cb-463b-a2d1-ec633309f489",
        "cursor": {
          "ref": "21b0b09e-ed1d-4b54-9b44-32cdf679900a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35d4e188-ba1c-4c61-93ad-a1bc026cdf23"
        },
        "item": {
          "id": "78947da8-74cb-463b-a2d1-ec633309f489",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e24421ce-924a-43b9-9c74-25a28d776657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740b3fe7-ce73-4b72-8db7-76a530fcb62f",
        "cursor": {
          "ref": "51ea51c5-1743-4269-9cf8-5b62d87caf10",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fecbe116-25d8-45cf-a22f-dfa91bc93317"
        },
        "item": {
          "id": "740b3fe7-ce73-4b72-8db7-76a530fcb62f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0ffdf200-40b5-42b1-a198-b687fcb15083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1394790-9561-4db2-8d1c-6be5889a6c0d",
        "cursor": {
          "ref": "f0c69968-94bc-4325-8870-6d3945f66f64",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "93051181-8266-4c61-8fe8-84cd7184c240"
        },
        "item": {
          "id": "c1394790-9561-4db2-8d1c-6be5889a6c0d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d114bbab-86b1-4efb-8fc6-74f123d91ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a41e21f-c92b-46b1-9ae0-e1e27be79243",
        "cursor": {
          "ref": "d4d60b01-1c90-4897-971e-c6344f8405ff",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bb7b1463-c5d4-413e-8b7d-6baae62747a7"
        },
        "item": {
          "id": "8a41e21f-c92b-46b1-9ae0-e1e27be79243",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7a4aa7ff-8c61-407d-83df-45dc617c83b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1546d760-bfbe-4309-9a8e-a148b4e46dbf",
        "cursor": {
          "ref": "324fae2f-e8d7-430c-ab78-ed48a472fe54",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e09b5887-ad6a-42b9-8d51-55dd5072315b"
        },
        "item": {
          "id": "1546d760-bfbe-4309-9a8e-a148b4e46dbf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "40e07aca-7128-4fb9-9303-a6211f2103a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60422bf4-7ae3-445a-bee8-2f91f0c2f49d",
        "cursor": {
          "ref": "8313b9b7-29c4-42e5-8bf1-13367425fa74",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e743de53-045a-4f8a-a947-96ddc023fe60"
        },
        "item": {
          "id": "60422bf4-7ae3-445a-bee8-2f91f0c2f49d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "da83ea7f-c784-4714-8c15-c72fbf03f6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d69d0f-7678-4463-8d47-74a5ff865d38",
        "cursor": {
          "ref": "62816dbc-3837-4453-b0e2-2db54b17d7cf",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "521a08a5-3b9d-4dd0-8582-c09d76868d45"
        },
        "item": {
          "id": "79d69d0f-7678-4463-8d47-74a5ff865d38",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9759a38b-7a8f-4f10-8b0a-ce9feb0ae83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac4b0c-e89e-492e-971d-2240b2d8c1c1",
        "cursor": {
          "ref": "2b8a2859-e05d-4d2d-967b-dd793c5398aa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dfa361c4-931f-43d9-80e0-9b4c7539ddc1"
        },
        "item": {
          "id": "2aac4b0c-e89e-492e-971d-2240b2d8c1c1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "040212cf-1776-4872-b80e-41f9449336c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6d8b87-126a-4e97-9aeb-f5c35426cf38",
        "cursor": {
          "ref": "440405ba-71a1-40fb-8764-67e4bbaeb273",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2be749dc-8e90-46ee-99b3-48770c7c3bf8"
        },
        "item": {
          "id": "ba6d8b87-126a-4e97-9aeb-f5c35426cf38",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "976eb607-7e96-4167-9b1f-2dd8e98eea42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b74ccc6-dd6e-475f-9acb-5a6079a594de",
        "cursor": {
          "ref": "a2d1b788-5429-4dda-9efa-34c9d9855a2e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ef916964-5900-4177-92f7-98865fba291b"
        },
        "item": {
          "id": "5b74ccc6-dd6e-475f-9acb-5a6079a594de",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "87625ac2-ab89-40f3-b79c-a82130f37ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1b9588-1cd9-4fc0-8494-bf20f635e8b3",
        "cursor": {
          "ref": "0dd29838-7b56-4dbf-8bbe-c671d5f5ee0a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ebb5a3a6-2695-4d3c-8c48-a649537fdbfe"
        },
        "item": {
          "id": "bc1b9588-1cd9-4fc0-8494-bf20f635e8b3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6def5a0b-36b5-49be-932c-5c7573c53e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baca7de-7d88-4031-bb89-2fd299cd2f6c",
        "cursor": {
          "ref": "eaa00301-a0d7-488d-8f52-475d3d420697",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4acf0a4a-20ea-4d5b-a78b-461b38f875d4"
        },
        "item": {
          "id": "1baca7de-7d88-4031-bb89-2fd299cd2f6c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4e82d9bd-c885-4b92-9b74-44c3de7b4aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025465d4-6fe5-4b3c-8cd3-fb76023b5b36",
        "cursor": {
          "ref": "70eab4d3-5cf7-4b2c-bf70-d940c667c571",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b235e87d-c4aa-481e-afb8-3e63fdba14ae"
        },
        "item": {
          "id": "025465d4-6fe5-4b3c-8cd3-fb76023b5b36",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd6f4490-061e-4366-b277-0f40680f6f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b82f2-5003-4ad2-86f4-5e222482f060",
        "cursor": {
          "ref": "9d667441-cf12-4aec-bd2b-1d9d53b6f0fa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cb7a3a8e-2bce-493a-9814-7f909d4da295"
        },
        "item": {
          "id": "be7b82f2-5003-4ad2-86f4-5e222482f060",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7edb4764-7180-4ea3-9379-8a43e56761c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4239f5-41ba-4a3e-804d-143686567e8d",
        "cursor": {
          "ref": "96942107-24c3-4843-857e-18a5690c0780",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "48f64a6f-eeca-477d-9db4-9c10c51e4d3b"
        },
        "item": {
          "id": "2a4239f5-41ba-4a3e-804d-143686567e8d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "381ab82a-625a-4e1e-a6ca-4be3791e6e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f2d307-b68a-4971-aa3c-c71d9b384e52",
        "cursor": {
          "ref": "4d8b96dc-9387-4493-8401-d60c1c5aa91d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cbff39b5-f33c-4f50-af1e-e0ffd9334e36"
        },
        "item": {
          "id": "a1f2d307-b68a-4971-aa3c-c71d9b384e52",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "66522f4d-f28c-421a-a897-b32bcbfaf965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441bbef2-497c-4666-808f-3e8a7c80f363",
        "cursor": {
          "ref": "ec3bf1ce-147e-413e-8a1e-284c69830595",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d3e6b19c-4671-4b47-910d-0674c6f87d23"
        },
        "item": {
          "id": "441bbef2-497c-4666-808f-3e8a7c80f363",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ed7c205-b857-4897-ad48-a93c8ee06929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f029700-e7b7-42e2-bdee-8d3027b053cb",
        "cursor": {
          "ref": "4b650de0-6866-409f-9e15-d762477e8cfd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "23ccb379-049d-474c-827e-f5317668fcdf"
        },
        "item": {
          "id": "4f029700-e7b7-42e2-bdee-8d3027b053cb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2ba0f823-0eda-49b0-a12b-d6e5e4a4a415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fdf7a4-59ea-46b7-a377-d2e940c50a8e",
        "cursor": {
          "ref": "91e252be-747c-4396-90e2-a7d550f06552",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e933006a-c79d-4956-9ccc-dd5792ac7df7"
        },
        "item": {
          "id": "b5fdf7a4-59ea-46b7-a377-d2e940c50a8e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "73e1a125-50ad-480c-b031-0a2d2b24e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b3bb50-79b3-4187-83e0-58c29b062ba5",
        "cursor": {
          "ref": "7786aa54-1e60-431c-8284-e4bdc0160886",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f8f1c8e3-8da3-4dfa-8fa0-741db35067ad"
        },
        "item": {
          "id": "e2b3bb50-79b3-4187-83e0-58c29b062ba5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8399a8a0-4cf2-40b4-84b0-7fac08351b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d9d3f9-e422-477e-ba65-e4e8ced8bad2",
        "cursor": {
          "ref": "7a3cefc2-ef66-4062-b5a9-d64059651ab0",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "80ea3d70-6e7d-4a5d-b688-c03f40108513"
        },
        "item": {
          "id": "45d9d3f9-e422-477e-ba65-e4e8ced8bad2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d1df6d82-693f-49bc-90d7-c5a5c4b91f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421347cd-c486-46d2-ada1-b1c464c02dc3",
        "cursor": {
          "ref": "c747193d-71fb-48e8-a3b5-f15e4bac7b90",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cfae5f1c-c4be-4502-a720-1dee96d9d8b6"
        },
        "item": {
          "id": "421347cd-c486-46d2-ada1-b1c464c02dc3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db0dfd9b-733f-4d95-87cf-ec78820c21c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a3bc00-410d-421d-9bdb-b82422e7c2d2",
        "cursor": {
          "ref": "0d58edd7-2aa5-4021-a774-416194b6ea4b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "58d47ce1-cec2-4bdb-8cdb-b2bc5a7e8af1"
        },
        "item": {
          "id": "a1a3bc00-410d-421d-9bdb-b82422e7c2d2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "690f6242-242d-4850-a02b-7c072c6f4f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9573258-5f5d-4327-bf24-df1e0e4774f7",
        "cursor": {
          "ref": "090c0a76-6065-48ea-a9a2-c49c36232a49",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "457875c9-377f-48e8-9d8e-d2e6d2316b66"
        },
        "item": {
          "id": "f9573258-5f5d-4327-bf24-df1e0e4774f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f247c86d-7a67-4e70-a541-fc82102983e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0fa1c9-4cbf-4c78-a2a0-22777b19b816",
        "cursor": {
          "ref": "8acf5d8b-fc3a-4228-96fc-a4c2bc3d8ee5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c41fdff-d632-4711-810c-1c1934df4a40"
        },
        "item": {
          "id": "6a0fa1c9-4cbf-4c78-a2a0-22777b19b816",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62ed9cdc-281a-4195-a639-f1ba3dbcb61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a34e790-33c3-4ecc-b107-59a9828f8da5",
        "cursor": {
          "ref": "2d31d2b0-2b72-43c1-b28c-9b37f4bd44af",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2a99e086-6b5f-47be-8db5-0255b6e38489"
        },
        "item": {
          "id": "3a34e790-33c3-4ecc-b107-59a9828f8da5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e2c02925-6a81-41ae-a928-a968bae93cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6044571-ef69-4126-bacd-64be8e42890f",
        "cursor": {
          "ref": "8b9824cd-778a-4597-b496-1de920338296",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "abe97a58-86b7-470d-ab38-e4cf92406379"
        },
        "item": {
          "id": "c6044571-ef69-4126-bacd-64be8e42890f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "62d4336c-0a4f-4d09-a0e3-2c73eefcac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a2f79-5481-47d3-8057-9faf97ccb7d5",
        "cursor": {
          "ref": "172c3596-eb45-4e88-af80-4c41fa963383",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a90dfd94-d5ce-421f-8090-5a3312405b9c"
        },
        "item": {
          "id": "fe6a2f79-5481-47d3-8057-9faf97ccb7d5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "310764fe-2c75-4196-8f4d-011d00a5204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa611bb-9dd9-4194-bfb0-c49656a2690e",
        "cursor": {
          "ref": "5b530194-e674-4c34-bb89-396ffef6bdab",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5a6dd319-53f6-44c2-b6af-a353c65a14a8"
        },
        "item": {
          "id": "7aa611bb-9dd9-4194-bfb0-c49656a2690e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "009745f1-38d5-46c3-9591-e2348a7b5541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22680fd3-ddbc-4e1c-b6d3-aa5156823079",
        "cursor": {
          "ref": "d566bc2d-1d47-4185-8f90-342cbde31423",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52761017-a5df-45d3-bbbd-e6d9c7272aef"
        },
        "item": {
          "id": "22680fd3-ddbc-4e1c-b6d3-aa5156823079",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "208ec824-1e18-49e2-909b-7c5feb476454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc022e-a118-446b-b5b9-aabacc308d51",
        "cursor": {
          "ref": "5b67a4fa-7dad-4fdd-8f86-3785bfb103bc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "467857b9-af70-40e7-b763-56625728e61d"
        },
        "item": {
          "id": "44cc022e-a118-446b-b5b9-aabacc308d51",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "924a3107-514a-4d08-be81-6e2f22d25c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e4541c-54a9-4aee-927c-6cbf0d2b049d",
        "cursor": {
          "ref": "c9c889bc-beec-455c-b580-c60319f7914e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d8956c9-d90e-4e56-adce-e7e287aeb775"
        },
        "item": {
          "id": "a1e4541c-54a9-4aee-927c-6cbf0d2b049d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6842981a-ffe9-4ecc-a0bc-02cd1400990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243b350f-adf2-4bea-9645-95cd907ee0a8",
        "cursor": {
          "ref": "fcf8278d-af05-4334-a5b1-e037c9f293b0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5f70bca4-a902-4971-978c-1a8d031a5186"
        },
        "item": {
          "id": "243b350f-adf2-4bea-9645-95cd907ee0a8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9696e2cc-c5cd-4f45-a96c-82993d33f10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b82929-39e8-4833-97ec-00a866702c84",
        "cursor": {
          "ref": "b3d99296-0055-491a-9c99-2d26ff5a6156",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0ab7ce87-0dcc-4755-86c3-1f9105910081"
        },
        "item": {
          "id": "81b82929-39e8-4833-97ec-00a866702c84",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "01af2d27-5e11-4a62-be4c-ce5eecb4c125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751a069c-64dc-4e54-bb6f-c093196392be",
        "cursor": {
          "ref": "a9aa6365-2a02-41ea-99b6-9079fd20ef53",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cffc5334-8fa4-4489-9d2b-f879119e6056"
        },
        "item": {
          "id": "751a069c-64dc-4e54-bb6f-c093196392be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0249c704-adad-46e0-b7df-af7ef069b0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a29ba53-385d-4776-b552-6ccebac517e8",
        "cursor": {
          "ref": "abb383db-52dc-46c6-b28b-9f5efaf0fe2a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "08001e30-ce2f-4ab8-a82a-598ea2a3a99b"
        },
        "item": {
          "id": "5a29ba53-385d-4776-b552-6ccebac517e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "78b904be-40ca-461a-95de-b053119a3c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658cc037-8853-403c-9e63-fcd2179eee3c",
        "cursor": {
          "ref": "d277d07d-2e8a-45f9-bb3f-325632e7979c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24fe15dd-fd64-4925-8ffa-149bca6e15d6"
        },
        "item": {
          "id": "658cc037-8853-403c-9e63-fcd2179eee3c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fc528c36-d360-46e7-a70f-c55e006079b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5323bf6b-3fc5-4090-b00d-e081aeee2f4f",
        "cursor": {
          "ref": "c1ebcd9c-173a-4573-9ca3-901766d22522",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a13d7f62-3903-4ed1-bad0-f9c0125fee67"
        },
        "item": {
          "id": "5323bf6b-3fc5-4090-b00d-e081aeee2f4f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3b43c189-0b8d-4fe5-948a-917bd6d1b407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dc344f-c5c1-4746-8f36-b5ef2e431849",
        "cursor": {
          "ref": "c103c40a-cbb4-4cd8-a7c7-b3c1ce83902e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9d276c47-419f-40f0-bb84-dc663a8fd408"
        },
        "item": {
          "id": "b5dc344f-c5c1-4746-8f36-b5ef2e431849",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6155fc8b-b70e-4670-a09d-ec7bf10b80bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9dfc38-138a-4c2a-b6fa-fdc403a131f1",
        "cursor": {
          "ref": "8ae121a9-d785-40d0-9638-3f6731d4f065",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "43b1d88d-de0d-4aa5-8478-8cfa5b57dd2e"
        },
        "item": {
          "id": "7a9dfc38-138a-4c2a-b6fa-fdc403a131f1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "da501a93-fa29-423d-b6fe-684f47ab615e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cec117-1ff5-4ee7-8886-a312e6f4e06d",
        "cursor": {
          "ref": "559356f6-aaca-4f6c-b162-311891325f2b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "59b61b7b-e90b-4c1a-add8-6f5583cb4299"
        },
        "item": {
          "id": "b3cec117-1ff5-4ee7-8886-a312e6f4e06d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9a79b4fb-d208-4a23-9dce-1fc86dbb52e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e836843-d742-441e-a0bb-cb6038d0738f",
        "cursor": {
          "ref": "b1bbe731-822a-4fdd-9883-ff0d7ff028de",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b857e724-5b5e-4560-a79f-be51fc9ee6d4"
        },
        "item": {
          "id": "0e836843-d742-441e-a0bb-cb6038d0738f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c70caf3b-091e-4193-b8ed-c67d3b1ed844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb3fc1a-54b9-4451-b9d5-5480c76b7e32",
        "cursor": {
          "ref": "1dba8b2e-51c0-4cbc-8190-98368bbe1955",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e8948e0c-51fd-4d4c-9adc-d908aff60dca"
        },
        "item": {
          "id": "6cb3fc1a-54b9-4451-b9d5-5480c76b7e32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d982cd95-2c3d-4be2-bbe7-ec95c8b43975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed53126-f212-4f3d-a165-98fbb2cd1fb8",
        "cursor": {
          "ref": "b5cfe262-6fa9-4002-abff-fd9e77ece0e1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "186c1607-1a5e-4ef2-a453-a5da2b657214"
        },
        "item": {
          "id": "0ed53126-f212-4f3d-a165-98fbb2cd1fb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9920c261-5f4d-4248-a64c-d47d559f1329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9884e5b6-00b2-4364-b419-88be4e0c485c",
        "cursor": {
          "ref": "a648d2db-5007-49b6-ba78-eb9e4428473c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d9f8f151-e16f-4c5b-8e35-c0386a1b57e0"
        },
        "item": {
          "id": "9884e5b6-00b2-4364-b419-88be4e0c485c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "93cd211a-20c0-4712-9762-353401031a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7581ab07-b644-4f91-8d74-fc6172e6f260",
        "cursor": {
          "ref": "ba8ed286-0ce6-4764-9a4b-a63fb0085ab9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "75f8971b-f3fc-41b6-87e4-11c6d678df55"
        },
        "item": {
          "id": "7581ab07-b644-4f91-8d74-fc6172e6f260",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a340a0d-d1de-4be8-a724-76776392cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d94650-571b-4fd5-b4f9-ce557f7e8dfc",
        "cursor": {
          "ref": "c45adec8-e664-43e1-8216-c64285b63f0e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7e25c1f6-d2de-4789-8178-202ebf3aef4b"
        },
        "item": {
          "id": "74d94650-571b-4fd5-b4f9-ce557f7e8dfc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0c6b5b2d-4b76-4bb8-b8f9-7d4f74108924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaf3d83-0d6c-4ebb-b87a-a1c83e91aa7d",
        "cursor": {
          "ref": "414467b1-b7bc-4789-92fa-7c1970c35d1b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a87d2c14-d2b3-46ff-8dd2-f71497074caf"
        },
        "item": {
          "id": "2eaf3d83-0d6c-4ebb-b87a-a1c83e91aa7d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4b0c27e3-0127-45a6-8801-49cc353ae569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336d8a5f-a67c-4ef6-8429-df9e4ad7bbe3",
        "cursor": {
          "ref": "3343db00-825d-4279-afda-295f48ab41e8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5f3d0607-415d-4dff-8ba2-9a7c1ceef9d4"
        },
        "item": {
          "id": "336d8a5f-a67c-4ef6-8429-df9e4ad7bbe3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "18f4e10b-0934-43bf-8e67-dbeee1c2fca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b31702-d783-46ab-85b1-1ae1e9d882bb",
        "cursor": {
          "ref": "df0f974b-6826-4749-97b3-07c9a5c57b6c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d71b26bd-7f51-424e-aae1-23915ab37023"
        },
        "item": {
          "id": "c4b31702-d783-46ab-85b1-1ae1e9d882bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "20c01f9d-748c-4fe3-b95f-69a26a5c9ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f00cd9-ae0b-4c96-89f1-dbce3d8af0ca",
        "cursor": {
          "ref": "36768feb-f688-4ccb-b586-e0b4adb50447",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3af69933-34b2-48b3-8b32-b9ba0e779c40"
        },
        "item": {
          "id": "e9f00cd9-ae0b-4c96-89f1-dbce3d8af0ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "621fe9d8-dae5-4ca6-ae92-8f5b4017496d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e430cb-9bb1-491a-87db-8f7637d8f56c",
        "cursor": {
          "ref": "4a885f49-2064-4fd0-ae43-91ebdfeb197c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa34d3b1-c3f8-4307-9927-aef9af62ddba"
        },
        "item": {
          "id": "b1e430cb-9bb1-491a-87db-8f7637d8f56c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "87b7b205-1240-4c8b-93fd-3c0a34d402d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18710e3-42c5-4389-aace-274a3921c0bf",
        "cursor": {
          "ref": "e00cc9c2-50bf-42b5-9b9b-2de758dc0b7f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ba158eb8-b428-4f1b-872c-b9d1798fda18"
        },
        "item": {
          "id": "b18710e3-42c5-4389-aace-274a3921c0bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a84b3363-17f8-49ea-a2b5-b86dcb566c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bdc40d-d8dc-4bb8-82d9-222a16f217d2",
        "cursor": {
          "ref": "124989d3-f40d-4206-94aa-514035ade916",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "15c9cf55-8af5-45c3-9e69-ea75d1b8949b"
        },
        "item": {
          "id": "c6bdc40d-d8dc-4bb8-82d9-222a16f217d2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da9f6a8f-4729-4dc4-9ae2-658a64e62e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9385cf2d-0e2a-4c7d-981b-26b8ad2ebd29",
        "cursor": {
          "ref": "d67ecc6f-9497-4123-8566-becd5f694c24",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "82c14069-c8d9-4174-bd42-5d573417a3f2"
        },
        "item": {
          "id": "9385cf2d-0e2a-4c7d-981b-26b8ad2ebd29",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3659bf7a-3e82-4d36-9efd-f50cece50cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d5a695-85de-4b33-9d5d-5ba2655da1f5",
        "cursor": {
          "ref": "45cda8ae-88b8-4513-9a1d-af145af27ec0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dafcc85d-0240-4d53-a419-b47c256e6aa0"
        },
        "item": {
          "id": "c8d5a695-85de-4b33-9d5d-5ba2655da1f5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "50ee30c4-d45e-455d-90f6-a5f0dd548cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea247e-7c93-4f94-b276-cbc47b0d36bc",
        "cursor": {
          "ref": "47799887-4b86-474e-9de4-6963e55ea08c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8b6c2290-9cf7-45c4-a2bc-a6d0b1399faf"
        },
        "item": {
          "id": "8bea247e-7c93-4f94-b276-cbc47b0d36bc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8f7e597b-b803-406a-ab01-6bd648fdbf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1962c89-4ee5-4617-84e1-ad1d536e43d3",
        "cursor": {
          "ref": "185abf60-2a48-43b1-9595-3bc6c7c7835e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0f4eeeb4-e824-4b73-a193-e745b798e965"
        },
        "item": {
          "id": "c1962c89-4ee5-4617-84e1-ad1d536e43d3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d2f1a990-c5bf-4d7f-823f-3bc7be2ced53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd2ffa9-0ca4-4c85-bbff-13818add7a83",
        "cursor": {
          "ref": "1a99f398-adf7-4929-8622-c99022712375",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6d1aadc8-c3b9-46d8-92a4-925b23b812e7"
        },
        "item": {
          "id": "1fd2ffa9-0ca4-4c85-bbff-13818add7a83",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e85385e9-7c61-46e6-afca-60048ed20ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e1841-0539-4ef2-8468-81bb504dd162",
        "cursor": {
          "ref": "fe840f17-6e82-42a2-b55b-1a33797bdd37",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cdba8c20-60be-4a28-bb01-47986df5c8b9"
        },
        "item": {
          "id": "ea6e1841-0539-4ef2-8468-81bb504dd162",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c22ccad4-58ae-4687-bd56-f98e463bd9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9fe4b0-0f33-4a9e-b0fc-42415dc87a6a",
        "cursor": {
          "ref": "6202f438-40de-4ffc-bb53-ec914611afaa",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7dd1b339-61fa-442a-bf6d-30439b965dc2"
        },
        "item": {
          "id": "4b9fe4b0-0f33-4a9e-b0fc-42415dc87a6a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4e9b9103-44a2-43f3-8801-d91dfb536deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18cfcf5-c343-4d88-94b5-ab7732a3dd68",
        "cursor": {
          "ref": "ed82d1bd-71a9-4f4e-b871-ea76760c07fe",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9d6671b6-2dd7-4499-b375-a08a2629928b"
        },
        "item": {
          "id": "b18cfcf5-c343-4d88-94b5-ab7732a3dd68",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "228d6be5-458d-4c9a-a264-39b480c3e650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f91b13b-27bb-4b05-91e9-fdac74019fbd",
        "cursor": {
          "ref": "dc7b605c-8c91-48e2-8909-970b04e5ebd1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "025e26ca-8069-4468-9cd8-1701efbbabad"
        },
        "item": {
          "id": "9f91b13b-27bb-4b05-91e9-fdac74019fbd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a4eab484-a815-441d-add1-91d323c75104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd8d5e4-ba8e-4052-b7f5-238fd7fb0957",
        "cursor": {
          "ref": "7d4813ac-7053-4868-8a55-56b54a055ce9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4796658b-bcd2-4832-9fe5-6b50ce97e013"
        },
        "item": {
          "id": "bfd8d5e4-ba8e-4052-b7f5-238fd7fb0957",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "341f85c6-7ae8-4dbd-90aa-ef0cdaa9e894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176ee594-56b4-4cd1-81a9-edcadc710fcc",
        "cursor": {
          "ref": "8dea7361-614f-4b11-88ae-a77a60be662d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ac0d0c3-67c7-4310-b91f-1997ab17149b"
        },
        "item": {
          "id": "176ee594-56b4-4cd1-81a9-edcadc710fcc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "708ccfac-c216-4f62-8701-429fbe15bef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbd6922-4c24-43dc-b59a-b3a749668f8f",
        "cursor": {
          "ref": "afade3d5-3270-4ce1-ba62-bb2f3169beb9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "909a6ac3-fb08-4f75-b407-b171bf2d03e2"
        },
        "item": {
          "id": "9fbd6922-4c24-43dc-b59a-b3a749668f8f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6834f041-d408-481d-afae-b42ea6deff03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2084c3da-ae67-4156-81ce-6c71f3972d6c",
        "cursor": {
          "ref": "054b8eb5-2d7a-48eb-9f65-a6b61fbd4549",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "84f4614e-25c5-4536-8f13-2d08c4402403"
        },
        "item": {
          "id": "2084c3da-ae67-4156-81ce-6c71f3972d6c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "49212c1a-7ef1-4836-b089-ddfc47d88644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c39e11-b81f-4e69-ae59-5b757ce0e9a2",
        "cursor": {
          "ref": "a59ee67e-7366-4b0d-978d-ee5f8a64548c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "af8f7154-8ed0-4651-9d81-e5308d18bbb6"
        },
        "item": {
          "id": "84c39e11-b81f-4e69-ae59-5b757ce0e9a2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7f0f09ac-2f46-4287-a46f-2c7cbf1dbe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27719e8-d72c-439a-b601-5a4d3c4b5f00",
        "cursor": {
          "ref": "120142b5-53c2-4fbc-8dfe-6ec2c10a5755",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f688e6a-ff5f-4c38-acf9-ac9fde0ec819"
        },
        "item": {
          "id": "a27719e8-d72c-439a-b601-5a4d3c4b5f00",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "365f1afc-7a0a-4de3-9782-206d7782deaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73762801-ab1b-460a-980e-2fd462cd3763",
        "cursor": {
          "ref": "936387d2-80fe-442f-977e-149eb0a4aff5",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a56627d-ef21-4f00-b303-c8a0913028e0"
        },
        "item": {
          "id": "73762801-ab1b-460a-980e-2fd462cd3763",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ae96b881-5d61-4084-872d-b6a1917a6e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1da792-52da-4d4a-b3a9-b2d8082c5170",
        "cursor": {
          "ref": "b01cb13a-1e46-4515-a645-291dd9d3edfb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ece9bca0-40af-4f83-8b82-305c5a10f44e"
        },
        "item": {
          "id": "2b1da792-52da-4d4a-b3a9-b2d8082c5170",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bc37ff8b-e702-4e3f-b894-72ee170da704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0638370e-b7f5-4bd7-b60b-71df1de8acd3",
        "cursor": {
          "ref": "5454dde7-9f7d-4bdf-b27d-3359e2a3d07c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ac425c65-9e9a-4d49-b2e4-6106f94eeadf"
        },
        "item": {
          "id": "0638370e-b7f5-4bd7-b60b-71df1de8acd3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "80730324-1da6-4a63-932b-6f2d7c4f1c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33444715-76f7-42c2-8656-d99fbf507eaf",
        "cursor": {
          "ref": "b92c4a98-6726-4b7b-b314-082cc57061f7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "af6d8802-7319-49c9-80d8-46dd6590fa14"
        },
        "item": {
          "id": "33444715-76f7-42c2-8656-d99fbf507eaf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "34fd7f2a-7a98-463d-9d35-d45737e4dd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be176f3c-72d3-4ad3-9c95-835efd2e0c34",
        "cursor": {
          "ref": "8b369c9f-0a4e-47e0-a156-e594ac19b4f7",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "69de36ff-680e-4f94-8d65-2a3c2feb4e24"
        },
        "item": {
          "id": "be176f3c-72d3-4ad3-9c95-835efd2e0c34",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ffaf62f5-c232-4145-9b43-37f5395aa7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1f3519-e961-435f-b8b7-bca5c20ce222",
        "cursor": {
          "ref": "cf80b259-5f45-4393-9cba-9ec30c135458",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ad771ef-32f6-4161-94ca-a1de438ec436"
        },
        "item": {
          "id": "1b1f3519-e961-435f-b8b7-bca5c20ce222",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8f6ce9ce-7884-49fc-8f84-4e87c1f614be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494099c7-7ee9-4efb-8e9d-ec4d4fc6e009",
        "cursor": {
          "ref": "ca8fbd85-38ee-494d-883f-be8ffa0bce68",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f96c7658-5c5a-4094-bedd-8b11648e790a"
        },
        "item": {
          "id": "494099c7-7ee9-4efb-8e9d-ec4d4fc6e009",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b06d6bb6-0650-4499-992f-d3272f2afbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f229e6-3128-478f-84ef-d35dd0bcb4f5",
        "cursor": {
          "ref": "7055b803-9b71-41ce-899e-df6a506e3d39",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b9665b5a-c04e-4ca7-83bd-8a172690f12c"
        },
        "item": {
          "id": "c9f229e6-3128-478f-84ef-d35dd0bcb4f5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b615a84-1552-4a69-a0e9-2414283a334f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a130b468-64bb-47fe-9be7-fea64737b8de",
        "cursor": {
          "ref": "9cf7b129-f003-4c88-962a-34a1c617c030",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec612546-2447-4938-a859-bcd8996e1c43"
        },
        "item": {
          "id": "a130b468-64bb-47fe-9be7-fea64737b8de",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7fbfebae-78d6-42cc-99fb-3cef069db5e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69be50d-cf22-485d-af67-f491951730e7",
        "cursor": {
          "ref": "b1def150-7dbd-4140-ba93-9c2956835a41",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f0f9303d-f5a8-4eb5-8eb1-0088bed2e07f"
        },
        "item": {
          "id": "e69be50d-cf22-485d-af67-f491951730e7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a3dd4d13-e966-43e9-a27d-37a8ae42fd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "87803256-430f-40fa-ada3-b16424954744",
        "cursor": {
          "ref": "4bc1f77f-f9e9-4c29-8a50-4a53b37a3a1b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9347f316-81e7-4003-8e2a-bce97053815b"
        },
        "item": {
          "id": "87803256-430f-40fa-ada3-b16424954744",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e28ac597-5fbb-4632-bc4a-283118c7af59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "96d3dd25-0446-415f-bc88-4577f121134c",
        "cursor": {
          "ref": "86333d0a-62fc-4160-85ca-3c38deb3b0b6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "701c110d-bce3-4809-9ce6-add2dfa79359"
        },
        "item": {
          "id": "96d3dd25-0446-415f-bc88-4577f121134c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "de85c03f-fcb1-4a59-8030-def4e964d85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "478853da-65a6-461e-9d95-3bce6e2b62d0",
        "cursor": {
          "ref": "2f352d04-5c7f-4920-bc4f-adbb8fd3f326",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d8eeae06-2a28-43a1-a15f-40dec7804627"
        },
        "item": {
          "id": "478853da-65a6-461e-9d95-3bce6e2b62d0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e9589dd1-cdf6-4e93-9989-838d5ef7923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f3a1d7ae-452e-4036-91e3-6a3416066575",
        "cursor": {
          "ref": "313d2987-49c7-47e2-b9af-f95a63e2bb3b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4b68d6a5-b508-46c4-9eec-75223d2530d0"
        },
        "item": {
          "id": "f3a1d7ae-452e-4036-91e3-6a3416066575",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "172c41c4-b31b-47ff-8f65-31c212c450a1",
          "status": "Created",
          "code": 201,
          "responseTime": 8369,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d5ad91-eab8-4106-b2e2-2ef73df7bdae",
        "cursor": {
          "ref": "b50b354d-0eae-4937-9507-a90bce0f3d1a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b4ecea92-493c-4cad-b3c3-089ae99cbe09"
        },
        "item": {
          "id": "a8d5ad91-eab8-4106-b2e2-2ef73df7bdae",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b4f778f4-e2f8-4f78-88f9-a978a35d98a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "58c9dc4c-6aa5-4c6a-b7b9-05eefc071497",
        "cursor": {
          "ref": "3700640f-44c7-40de-b668-0b94aa2cfbc6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69dc04a9-1d28-4e3b-a53a-f1fe03d188fc"
        },
        "item": {
          "id": "58c9dc4c-6aa5-4c6a-b7b9-05eefc071497",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "67860916-d227-48d7-af49-e92e21ec2dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7196da01-cbd9-4f98-86b1-78f96ec47110",
        "cursor": {
          "ref": "d33bed51-bf28-414f-a736-5eccbe7bf115",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "578bd08d-e122-4105-8858-7564479f00bd"
        },
        "item": {
          "id": "7196da01-cbd9-4f98-86b1-78f96ec47110",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d10eb78-97f1-49e4-b239-0ed5c43997a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd844d9a-7c05-4d5f-ae04-179021214734",
        "cursor": {
          "ref": "bd905724-e946-4409-9806-6aa8dd67a217",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e50056a9-676d-4ed8-b92e-faed4295a5eb"
        },
        "item": {
          "id": "cd844d9a-7c05-4d5f-ae04-179021214734",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "869d2efd-2ccd-433f-abdc-e90e9bf74954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c0af6a-a096-47e1-a8ab-af3845d940f6",
        "cursor": {
          "ref": "7d37b3b7-4e3c-4f53-95bc-34ed798e686f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c11f10a6-dc05-43d5-9022-aebf2aa8ccd0"
        },
        "item": {
          "id": "c3c0af6a-a096-47e1-a8ab-af3845d940f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "51ebfe42-c5cf-4c72-809b-7a1f830dbcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9306f70-fd82-4859-8f09-097868e44953",
        "cursor": {
          "ref": "63a02283-6b56-470a-8146-a6234bea1eda",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ce3b0daf-78f4-4f7c-a3ba-a96725b2c477"
        },
        "item": {
          "id": "a9306f70-fd82-4859-8f09-097868e44953",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "53acd841-d500-412c-aa25-b2f16883e86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408d2d54-8f0b-4f09-8c2f-f4d0c3a065af",
        "cursor": {
          "ref": "6e9664e8-b71b-48ad-b963-5e7bf3adc013",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "845420ca-3c30-4129-8ebb-929217c7a502"
        },
        "item": {
          "id": "408d2d54-8f0b-4f09-8c2f-f4d0c3a065af",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "42fbe8d7-8df6-4df8-9cf1-773f24f3467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb15089-d32a-4ae5-80af-446bd413f28c",
        "cursor": {
          "ref": "69622b71-5bd1-4502-84fb-35d9f5dbcb0a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "973f505e-f721-4db3-84b4-31af32c694f2"
        },
        "item": {
          "id": "2fb15089-d32a-4ae5-80af-446bd413f28c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e6c1b695-8260-49c7-9b70-1af0a5e711ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70633fa-a6fb-46f4-8d5b-0e3e69ee316c",
        "cursor": {
          "ref": "b43ed3f2-66a7-45bf-829f-3a2f439166b0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "932b32fd-5e6f-4fd0-a67b-dd1e62b8fcfe"
        },
        "item": {
          "id": "a70633fa-a6fb-46f4-8d5b-0e3e69ee316c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "27d8724e-ce80-43c1-950a-6c9e0a969f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af769f10-b024-432c-961c-4f31a54b4363",
        "cursor": {
          "ref": "bc3847a1-f907-49ee-897f-6836c54a8360",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "321abfa8-6cea-4579-a132-8f4c41ba3956"
        },
        "item": {
          "id": "af769f10-b024-432c-961c-4f31a54b4363",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1111ad9-9f58-41c8-ae8f-1376121ad129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4733289b-3a63-4eaf-a701-20aa5180de06",
        "cursor": {
          "ref": "b6e7e1d2-8623-4dba-98bc-51c9fe53ace0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a3818a31-d685-4585-b70b-26ca350c590f"
        },
        "item": {
          "id": "4733289b-3a63-4eaf-a701-20aa5180de06",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df32d005-63f6-4520-8ff8-7b6bd78df9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd946b3-f5b4-44f2-89ba-324e233aed5c",
        "cursor": {
          "ref": "3a07d6e4-97b5-4e73-9e58-ccebd4fa2e86",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0ffc5a77-ca71-42b3-b0d5-ded9987987ca"
        },
        "item": {
          "id": "2bd946b3-f5b4-44f2-89ba-324e233aed5c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "864c0dc5-c9a5-4e7d-b4f3-ddd5ca544913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede0f71e-f984-4a94-b5cc-a54385ee9c31",
        "cursor": {
          "ref": "85ba6c58-dfca-4937-883f-cf91e8af2480",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "33ed6208-fb4b-4b8d-bcf4-c6c362083bb3"
        },
        "item": {
          "id": "ede0f71e-f984-4a94-b5cc-a54385ee9c31",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "405c985b-271f-446f-9688-ee9603b8b2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07200ce-7612-4b5c-a4d1-defec6aefb43",
        "cursor": {
          "ref": "294c8ff1-df89-4974-903d-2fb6da46b903",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6c197462-a288-4a4f-9dbb-a021f41f7944"
        },
        "item": {
          "id": "f07200ce-7612-4b5c-a4d1-defec6aefb43",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7728cbd7-070b-4535-9465-80b95bcd2404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3682b738-fe80-48db-bc16-f103ed5c9ec0",
        "cursor": {
          "ref": "f5ac7828-59e3-4338-9bb5-03d0664dcf66",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fc9dba86-b549-4303-8cc2-006a46b52d6a"
        },
        "item": {
          "id": "3682b738-fe80-48db-bc16-f103ed5c9ec0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "78ad809f-e0bf-4a8a-8a0c-aaa546fd0527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3b1b31-99cb-49f2-abd8-50644c0781d0",
        "cursor": {
          "ref": "1181a3bb-3fbf-45ad-9c5a-40fb2f10bf1e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1d3bfee-c853-4d11-8590-d63885b8b4f3"
        },
        "item": {
          "id": "8e3b1b31-99cb-49f2-abd8-50644c0781d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1da8e227-6c87-471f-849f-e6fbcbbfc9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c81232a-bcfa-4658-9b94-3a4e7b68340a",
        "cursor": {
          "ref": "ab61438b-7051-40db-9b33-977c813d4ba3",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a11afde8-451d-41da-b24f-d103168abc0e"
        },
        "item": {
          "id": "9c81232a-bcfa-4658-9b94-3a4e7b68340a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d091676-f6a1-4211-8e53-3e19fee38a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8833c055-b9c0-495f-b308-2fad800a9b0d",
        "cursor": {
          "ref": "b3c8f58c-367a-484e-8d21-f665472db14f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9d031b46-5a31-459a-9170-38c15e747baf"
        },
        "item": {
          "id": "8833c055-b9c0-495f-b308-2fad800a9b0d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74c8255f-fd7b-4278-8cc6-eacccbd5ed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43972157-470f-406f-b640-b2816978cc9e",
        "cursor": {
          "ref": "3d161cdb-0609-46f3-bcf0-c4f8a0e901e0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "29472460-4777-405a-934d-f23fc6b0e061"
        },
        "item": {
          "id": "43972157-470f-406f-b640-b2816978cc9e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "73947c25-0cde-4837-ad08-50eadb574e1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d7ff08b2-b34a-4046-8c86-dcc9ee0ed3d0",
        "cursor": {
          "ref": "ba835d1c-a18e-4c97-9e3e-ae37ce543fc9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88c761ed-713e-4d2e-96dd-912a3b8b43ce"
        },
        "item": {
          "id": "d7ff08b2-b34a-4046-8c86-dcc9ee0ed3d0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47cb7be0-153a-4a62-be3d-c244416918e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53af592-a8e9-4202-b67b-1a13efba5412",
        "cursor": {
          "ref": "7a4b38f2-54ea-481c-ba80-b36279ea8c13",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6f75b11b-778e-4a35-96fa-2483e90df831"
        },
        "item": {
          "id": "b53af592-a8e9-4202-b67b-1a13efba5412",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b449917-ced5-49fa-a2fb-a0e7d54568f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6e188a-a0d3-4a8a-a5de-dbe711f3b001",
        "cursor": {
          "ref": "474230e4-e687-47fa-a7b4-36eb885e5bf8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "edfb82cc-d07e-4a1b-a12c-4591d3c4e033"
        },
        "item": {
          "id": "1f6e188a-a0d3-4a8a-a5de-dbe711f3b001",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dea5ab45-e5ff-4e1d-81fc-5ad0cd0dca36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d6d24-df13-4e59-bc6e-ce6a29a461f2",
        "cursor": {
          "ref": "d8995732-00c0-4fff-b405-dce493904373",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4dcbeecd-7dfd-4501-ab4a-b6779c2bf3ec"
        },
        "item": {
          "id": "4b4d6d24-df13-4e59-bc6e-ce6a29a461f2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b381ed2-047c-4feb-85b6-19fe0a1c934f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abb024c-7230-4d13-a412-bf9d2cacc749",
        "cursor": {
          "ref": "b86f2ad2-0792-4265-a761-53df4973966e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "de3c1962-80ee-4630-8e05-6a54e9d60d1f"
        },
        "item": {
          "id": "2abb024c-7230-4d13-a412-bf9d2cacc749",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81d67a98-a954-49e1-8a04-326109b4347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e61500-e74f-4084-8a09-b3e7d3a1226c",
        "cursor": {
          "ref": "4c9dd320-f55f-4c19-9272-33365ec89a3e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "33d4ce6f-2ec1-4c92-bdb8-ea3526a0ce0b"
        },
        "item": {
          "id": "32e61500-e74f-4084-8a09-b3e7d3a1226c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a08217f-d598-425a-b5d6-2439909bef9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4bf0f9-2ec2-4de2-906f-ebbeb2cf5dbd",
        "cursor": {
          "ref": "1fdfee5c-f444-4ec7-94c9-2ee6c017c736",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9b2f960e-b3c9-40d4-800a-de5937cfb13a"
        },
        "item": {
          "id": "1a4bf0f9-2ec2-4de2-906f-ebbeb2cf5dbd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7bc7ef25-a7fd-45df-9e52-b9da27617a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5960076-ff03-4264-8fef-61756db7978b",
        "cursor": {
          "ref": "ec8086a3-2f08-497b-8522-1b7f31b6a1e0",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "201ec4e9-b287-4fe8-9c8e-023ee76a74c0"
        },
        "item": {
          "id": "f5960076-ff03-4264-8fef-61756db7978b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "00ddd0e2-0e85-4ae1-85cb-91569ac9b4ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "dab5f633-1279-4366-bd47-e7bc4b9580fc",
        "cursor": {
          "ref": "cc2cb763-81dc-4275-ac7f-0dda77b62010",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8cce376a-85a9-4e02-b22b-995f9878f1d7"
        },
        "item": {
          "id": "dab5f633-1279-4366-bd47-e7bc4b9580fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e2eca89-df69-4ca5-a4ac-ff7f027d9f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5d106f-6dde-4a5b-88b2-11827baef703",
        "cursor": {
          "ref": "498db871-28c3-41b6-a51c-d9cc7716bc9c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b9a52c19-39d4-4393-aee7-3b3be6946aa1"
        },
        "item": {
          "id": "9c5d106f-6dde-4a5b-88b2-11827baef703",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "40f7445b-8cba-4364-a53e-138be1dff9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccede1f-1156-4290-8282-1736830f9bb5",
        "cursor": {
          "ref": "f4daa070-ca07-4e51-93a4-ccb4f730359b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6957e747-bc81-4a02-9507-385a28d2a150"
        },
        "item": {
          "id": "4ccede1f-1156-4290-8282-1736830f9bb5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7a06f04b-5a77-4bd9-81ac-7ace2d7b505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da118e33-f216-4695-8a61-8edf3f93e3ca",
        "cursor": {
          "ref": "71b0d61b-051b-4eac-9c6c-b151f4850f75",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "02d13063-4467-4e7d-b8fd-b4fc0e1bcd91"
        },
        "item": {
          "id": "da118e33-f216-4695-8a61-8edf3f93e3ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "71f347ac-b98b-402e-a6d5-4493ff9171c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882c953a-c6c9-4fac-9077-f128464d6c5d",
        "cursor": {
          "ref": "c79815db-efaf-4721-9b60-3c26da338628",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d2a916f7-a8ea-447f-9990-149ea094be96"
        },
        "item": {
          "id": "882c953a-c6c9-4fac-9077-f128464d6c5d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3702f7e3-b013-4dda-8afb-79b1ddd335ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b25200-a6ca-41e5-988f-0550d1e95c7d",
        "cursor": {
          "ref": "67b1acac-071e-4fc1-a4f7-2099a04dec27",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "440158fa-dea6-4434-934b-e321b187246e"
        },
        "item": {
          "id": "d6b25200-a6ca-41e5-988f-0550d1e95c7d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b0e74b0-0a38-4314-9acf-16e6ee8e3283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1670bc49-29b7-48c3-bab4-6290a762f06f",
        "cursor": {
          "ref": "aa518370-88f4-4491-afc0-213c50c301f0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "96dd82d8-9b30-4edd-8356-e2b6d17a0e9b"
        },
        "item": {
          "id": "1670bc49-29b7-48c3-bab4-6290a762f06f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "301050e9-6548-427b-8d4b-ca5420d95938",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 101,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b9a949ec-0152-4da2-a735-02c1d3e2dcb5",
        "cursor": {
          "ref": "176c5eeb-97c3-484a-93e4-b6976e6e87f4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a7fa37cc-4215-4408-8e10-2d60b04e045a"
        },
        "item": {
          "id": "b9a949ec-0152-4da2-a735-02c1d3e2dcb5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f8e4e9f-a528-4601-9ce9-0a97a17c6deb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417ab07d-f7bc-4e34-933a-c2d389006662",
        "cursor": {
          "ref": "a7cfe88b-318a-40fa-8098-2039032ab865",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7216c173-6a8d-4968-a4f8-6da8428f9eff"
        },
        "item": {
          "id": "417ab07d-f7bc-4e34-933a-c2d389006662",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7429814-16fe-4465-aa32-9285d9a8ca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a52e7c-d063-4344-bcdd-77b184387938",
        "cursor": {
          "ref": "7b853c23-b2e1-4258-aa3d-50adacf29352",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cabadcf9-fbc1-496a-bad0-c1ffaa67048f"
        },
        "item": {
          "id": "05a52e7c-d063-4344-bcdd-77b184387938",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ffef3dbf-9c23-4d63-92b9-cf4586c3c197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f6953-a290-4da9-a77c-4d6fe64a16cf",
        "cursor": {
          "ref": "40424a88-4d05-4038-83c5-4478021e2e9e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e926dce6-2603-4907-a5f1-a1e8ad5e2ff1"
        },
        "item": {
          "id": "647f6953-a290-4da9-a77c-4d6fe64a16cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5983b1f-1f83-45ed-8db2-49f153c06089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9b8d7-52d1-412d-b868-046491946276",
        "cursor": {
          "ref": "b8b73fb2-811c-473f-a910-d4c0131f8f7f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "161704f1-a936-42b0-90d1-dc114c9a3b3a"
        },
        "item": {
          "id": "86b9b8d7-52d1-412d-b868-046491946276",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e57d45c-e6ab-4678-a773-0fc38cca380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a0e99d-0f9c-4f34-abc1-4f58fff571f9",
        "cursor": {
          "ref": "1430404d-3fc2-4db5-ad1a-63b4461e2b96",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "be4aeb0e-7ca5-4797-b5c6-de2d766503bf"
        },
        "item": {
          "id": "56a0e99d-0f9c-4f34-abc1-4f58fff571f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "670e13c4-12ba-4df9-94db-94c89218c350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca2e54a-2875-4b07-bfe3-7f4bc7b13dd9",
        "cursor": {
          "ref": "107292f6-d987-45f2-9d99-6950509364e9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0f52f299-5509-444f-9448-4b906d93ed36"
        },
        "item": {
          "id": "3ca2e54a-2875-4b07-bfe3-7f4bc7b13dd9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5087f486-4cf1-486d-ab0e-b9648283d71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f16cf7-b984-4ddd-9b84-fa051d312522",
        "cursor": {
          "ref": "e5aa2ee7-6985-4263-885f-fa20f14d4413",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "82a66fe9-8032-49a3-afb9-52ab2c54e7f1"
        },
        "item": {
          "id": "10f16cf7-b984-4ddd-9b84-fa051d312522",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3bccff8d-1534-4068-99a0-9d875a0ab29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbbca06-e733-4d78-905d-15b9b8208632",
        "cursor": {
          "ref": "a3c809cb-9afe-41a4-8760-180f7ed33651",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e8bcc2a6-e8ed-4be6-9380-5ce0a68ca70a"
        },
        "item": {
          "id": "ebbbca06-e733-4d78-905d-15b9b8208632",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0e096619-8f02-4751-a5b1-49a8b54a78b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8e0130-080c-47c6-a843-6242cff94ddd",
        "cursor": {
          "ref": "08570828-31a3-4ab2-b696-d2c4fd63ba53",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0bd6e277-8ff3-4939-9b58-01bf68cb6e70"
        },
        "item": {
          "id": "8c8e0130-080c-47c6-a843-6242cff94ddd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2309f979-d867-48a2-a157-5d642118cba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f44e1b8-afa1-4aa8-9953-4619811396ae",
        "cursor": {
          "ref": "e0cdf8ff-b04a-4941-8a84-94b8dcbb8090",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6b4c0b7a-6098-468e-943d-420fe79efa25"
        },
        "item": {
          "id": "0f44e1b8-afa1-4aa8-9953-4619811396ae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "12f398e0-f4dd-4dfd-8884-3ddf106d9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaa3ccc-01f4-4e26-b459-1dc43dfc32d1",
        "cursor": {
          "ref": "8aa7c011-3e0a-4c8c-8c0c-682d51952576",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b933ce9d-c60a-4c72-b493-bff0846e8ccf"
        },
        "item": {
          "id": "eaaa3ccc-01f4-4e26-b459-1dc43dfc32d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e7e50341-7b36-41e7-a1ee-fd4ccf7c4568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e354865-b40e-48fa-aad7-887fb30aa052",
        "cursor": {
          "ref": "97f2becb-909c-417e-bbcc-3b5c70ad4d19",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "09a0257d-52f3-4ba4-8880-419f20e9df61"
        },
        "item": {
          "id": "2e354865-b40e-48fa-aad7-887fb30aa052",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b61dfb69-70d3-496a-8361-39cc153e5d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c17bd0-e876-414a-b2c1-578fda4a6c30",
        "cursor": {
          "ref": "d1bcd7f1-e55d-4652-8501-14c2b60525cd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "be103c27-ed80-44b3-8829-fd7beda4537c"
        },
        "item": {
          "id": "e4c17bd0-e876-414a-b2c1-578fda4a6c30",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07ea702f-6d74-48c2-b0af-e92c3b92a4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392e41f0-a18d-442b-841b-759d38c0628e",
        "cursor": {
          "ref": "7ecc3de0-76d9-43b4-9c8c-54303da35e45",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "03deabf9-c722-45e5-b39f-efe311d66eec"
        },
        "item": {
          "id": "392e41f0-a18d-442b-841b-759d38c0628e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21c7579d-df96-40ed-a430-0fbfcd3c5993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1087ef38-887c-4640-8133-2f163c6cdafe",
        "cursor": {
          "ref": "8fba560d-d4a0-435c-b13b-4e1f8dc5a30f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d1ee4f1f-67e4-452d-ab26-14ea59433e90"
        },
        "item": {
          "id": "1087ef38-887c-4640-8133-2f163c6cdafe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e5bd978b-ee13-4300-a59b-5a31757f70a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa4d86b-5e86-4961-8817-6aae42eee5dd",
        "cursor": {
          "ref": "57906c73-44a2-41ba-b561-1652db4bec20",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7eceb78f-b7f9-4e80-b1e8-06bb98d529c4"
        },
        "item": {
          "id": "8aa4d86b-5e86-4961-8817-6aae42eee5dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ce16d6ea-aa23-45a4-9fa9-a5c66682e134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054534f7-679b-4c07-ace8-f103b9e6c781",
        "cursor": {
          "ref": "afba75dc-4f62-493a-9595-e8d0f5b40553",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "529bfbb1-f189-496d-a57d-b9d468c93ec5"
        },
        "item": {
          "id": "054534f7-679b-4c07-ace8-f103b9e6c781",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7d80323e-b6fa-4f44-9de9-b32cf15ade02",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "e6c402d0-9a19-43f1-87be-f6c16cdd4b63",
        "cursor": {
          "ref": "033750a6-9cc3-4152-b63b-26200aefe58e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4ad5443-f159-4310-b2e1-eaf286dcb9c7"
        },
        "item": {
          "id": "e6c402d0-9a19-43f1-87be-f6c16cdd4b63",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "224a3549-58e4-4c4c-af9b-2ebadf2326ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e15d7ea-4c13-4fdf-b5a9-5f1cf632f3cd",
        "cursor": {
          "ref": "ac7f21d6-580f-4d9d-845c-0297421f81a1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e47c32f7-f5ef-49e8-9d76-6259e4f1bae0"
        },
        "item": {
          "id": "1e15d7ea-4c13-4fdf-b5a9-5f1cf632f3cd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8fe2e87-f485-44d3-9429-a1afd4f7bf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75708f3d-3379-434f-8397-a28db74cf76e",
        "cursor": {
          "ref": "3be0d19a-2fe8-4683-afd7-9e118f9b63af",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d0d2f054-5c42-49a1-ac3a-4537beeda323"
        },
        "item": {
          "id": "75708f3d-3379-434f-8397-a28db74cf76e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6418c467-822d-48b4-9309-15bafd687a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e1fd4c-e91a-4115-91a5-42ed271ef7af",
        "cursor": {
          "ref": "e94e2daf-3a9e-4827-9d31-4157adee6ed4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2c733516-4ee7-45f3-9555-65d57b11de58"
        },
        "item": {
          "id": "99e1fd4c-e91a-4115-91a5-42ed271ef7af",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2a9a59e-93a8-4f08-896d-47e485858bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c0ef0d-08a6-473c-aa5b-2ab90a901968",
        "cursor": {
          "ref": "55d87245-fbce-460b-a5db-a6739a922395",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "db518edd-d4e1-4d31-a1e3-cf8604562917"
        },
        "item": {
          "id": "34c0ef0d-08a6-473c-aa5b-2ab90a901968",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "764efdaf-dfbb-44ca-a350-573379343bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943b7842-290f-4fe6-8be6-f03d43be3b08",
        "cursor": {
          "ref": "356945b6-1c81-4ad5-aa12-3880f32688cb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4e587c71-54ba-42a0-bf50-8fa73843a25a"
        },
        "item": {
          "id": "943b7842-290f-4fe6-8be6-f03d43be3b08",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1b02f7a-1f26-411d-9a22-72285fefa3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bd0205-8a91-4afc-9705-afb309fe8fbc",
        "cursor": {
          "ref": "0850274c-7f90-49e8-b074-cac27469af19",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "33592c2b-f6e8-48a4-9d88-3f63a73ea217"
        },
        "item": {
          "id": "83bd0205-8a91-4afc-9705-afb309fe8fbc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4c69a8b4-baed-4e4e-b9c0-50dea1c8d30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4343bc70-67fb-41f5-bfb5-ae62269745c3",
        "cursor": {
          "ref": "705a3201-283c-44e5-b921-93797df26915",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ef5f61ae-bb43-4c8f-9729-b57f9078a409"
        },
        "item": {
          "id": "4343bc70-67fb-41f5-bfb5-ae62269745c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d421959-b5d1-434e-8d05-3725003d629d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "1847bc5d-7bd2-45e1-a562-df0950147930",
        "cursor": {
          "ref": "b5a4092d-59c1-4238-a6b9-f46cc5f5c53f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "560ed83b-4890-4736-a250-465590712cd2"
        },
        "item": {
          "id": "1847bc5d-7bd2-45e1-a562-df0950147930",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bbe5dc8-691c-4e7a-9f3c-f1d83580e0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77861f6-9a7b-49d8-a610-a43848c15e67",
        "cursor": {
          "ref": "1b5b3d26-f5f9-42a4-bfa5-08710c772074",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "170ce676-e1f8-4701-80fc-aca6b2a06780"
        },
        "item": {
          "id": "b77861f6-9a7b-49d8-a610-a43848c15e67",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70cf36aa-6ebb-4de0-831e-2d9aa0555e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc45e7c-a595-46f6-9513-8e8b427be438",
        "cursor": {
          "ref": "6ee56c40-5a9c-4f62-a169-d70dd492cc65",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5654e2c4-d90c-4cc6-a30c-dd07bc110153"
        },
        "item": {
          "id": "5dc45e7c-a595-46f6-9513-8e8b427be438",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "760b4b51-020b-4a90-8408-fb000a725fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4dbf0b-906b-479e-af93-ab2ef727cd3e",
        "cursor": {
          "ref": "b2db56ec-450b-4f2f-b518-df309235ae30",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aeef7487-f8ef-4373-9141-622eb9a296b0"
        },
        "item": {
          "id": "1a4dbf0b-906b-479e-af93-ab2ef727cd3e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4550be47-87e3-4c03-b5b2-07b00540cf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5419a5-23d9-459b-93cf-87de1a36ea09",
        "cursor": {
          "ref": "47f770c2-d730-473e-8ed7-672e304bfa3d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2fe7a514-e293-42aa-8795-4af961297f84"
        },
        "item": {
          "id": "db5419a5-23d9-459b-93cf-87de1a36ea09",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2e4edf83-2eff-44ee-8dab-7fa4ee97a60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba65aff-f6ea-449f-b2f7-d3b83b60b943",
        "cursor": {
          "ref": "d68a777e-17db-4ced-9c2c-1b63c1253ead",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "44d4d241-21fb-49ba-b784-45bf104ff62e"
        },
        "item": {
          "id": "6ba65aff-f6ea-449f-b2f7-d3b83b60b943",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3cf7e1f8-3946-4edd-b521-722842afdfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecf78e0-b1cc-4e2a-b43a-7c35d3ae9268",
        "cursor": {
          "ref": "6188ff16-e78c-4a1c-b13f-c2ae7bebe2ef",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "57b35a46-05fc-4310-8581-5091bfa9d710"
        },
        "item": {
          "id": "4ecf78e0-b1cc-4e2a-b43a-7c35d3ae9268",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9ca44d71-34e8-45a2-a737-ab4d200e9424",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "92ff2d3f-3dd5-4b86-a70e-18dd29efd8b7",
        "cursor": {
          "ref": "4b724e0f-dd59-459f-a3f9-78d7e3d9e691",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37ea2f4f-54ac-4250-ab4d-9c2e861bdfa0"
        },
        "item": {
          "id": "92ff2d3f-3dd5-4b86-a70e-18dd29efd8b7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cc92c77d-2687-469f-85d6-89576566a1eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "0fd6a7ed-19f9-49f2-aeea-2bdec28265bb",
        "cursor": {
          "ref": "2d9b6893-82c6-4979-baa1-dc982dd6950d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b0cddf3b-3229-467d-b9db-f21307a87d50"
        },
        "item": {
          "id": "0fd6a7ed-19f9-49f2-aeea-2bdec28265bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0f9d5101-a724-4e4f-bd05-e88ff886ffe9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "badba589-3c83-448e-ac0f-1893c160847e",
        "cursor": {
          "ref": "962911db-c3c4-4ffc-8e23-34f8b60368b3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e095eb56-50c0-45a7-b7cd-3a7b57885812"
        },
        "item": {
          "id": "badba589-3c83-448e-ac0f-1893c160847e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cb271694-f451-4885-b3cf-8a8f458a37ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "6c460866-9b31-4abe-924d-60c07580cc8e",
        "cursor": {
          "ref": "57747c14-7927-49b0-b4c9-d0ca3bc49fef",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3144f55a-f6fc-4b38-98de-9a17e82a42fb"
        },
        "item": {
          "id": "6c460866-9b31-4abe-924d-60c07580cc8e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "582abda1-afcf-469a-872d-1688bbda7e4c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "841173b7-cad4-4b15-8e82-e3c7c7c44742",
        "cursor": {
          "ref": "6e22a030-0126-4ac4-bfda-37df6c506a12",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8fba76b9-fec1-4683-96ff-42fe3eb47376"
        },
        "item": {
          "id": "841173b7-cad4-4b15-8e82-e3c7c7c44742",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "59cd6f83-07fa-4e48-b6a2-6daa4243cbae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "c51c124a-8c3f-494d-b97e-7dbec2d472ff",
        "cursor": {
          "ref": "da66b92f-f023-4410-998e-f7492c943506",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7e1da28f-bf06-4a8d-a879-4ffa0ca6a34a"
        },
        "item": {
          "id": "c51c124a-8c3f-494d-b97e-7dbec2d472ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2d52ef86-8ba3-4f03-9c10-adea63f40ca6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aa9fbb-71a1-48b6-b6c3-d8a54c19cbc2",
        "cursor": {
          "ref": "5046f2a5-199f-4e46-bb66-905fe2447576",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "01e4d648-6eaf-4cfd-a065-3b2ade16226d"
        },
        "item": {
          "id": "03aa9fbb-71a1-48b6-b6c3-d8a54c19cbc2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "51e7d194-d23d-4f13-89d8-abc180da7776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4ab875-76be-46a9-9d6a-9ddbffcc2d70",
        "cursor": {
          "ref": "4435984a-b3c3-4384-aa45-b11f4eddb312",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9480fb21-cbed-4d09-8870-e16fb511f9b4"
        },
        "item": {
          "id": "ee4ab875-76be-46a9-9d6a-9ddbffcc2d70",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "07ebbc17-d4d2-4a77-aa70-c74f6a5b0e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6daeef3-c633-4b7c-a7db-8dda11393400",
        "cursor": {
          "ref": "03198d2a-c151-44e7-998b-7834047f513c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a4b8ec64-5578-4a6c-aefb-553a88189f1b"
        },
        "item": {
          "id": "c6daeef3-c633-4b7c-a7db-8dda11393400",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3360e2c1-bb03-441f-abb7-9a5f61c557ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc11ca7d-2fd5-4f03-a79a-273614590fe8",
        "cursor": {
          "ref": "a2f9c93d-7c69-45f9-81a5-a43c3331f7c5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5dd5f468-ccf5-4f12-8d52-f444103f6e9b"
        },
        "item": {
          "id": "cc11ca7d-2fd5-4f03-a79a-273614590fe8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cc848003-3543-4c13-88e4-dacd375aca65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac2a579-4a7a-43a7-b50d-dd7556ea4540",
        "cursor": {
          "ref": "24ab7006-660b-481f-8734-a319bb0991ec",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8f11fe47-13cb-4210-94b9-2db502ef9a87"
        },
        "item": {
          "id": "6ac2a579-4a7a-43a7-b50d-dd7556ea4540",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3d2f987d-8485-475e-b73e-5ceb8d307f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0722e1-b605-4186-9dcd-8e923ae9f65d",
        "cursor": {
          "ref": "fa7f0df5-1073-4e50-9ce3-61dc5321e728",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "911962a5-ec19-4090-a0cd-f7f5c9c475cc"
        },
        "item": {
          "id": "ed0722e1-b605-4186-9dcd-8e923ae9f65d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "daf71e6e-93c1-4a28-8e61-261acca1c21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e46dbcf-422b-4727-ae82-c8130af3b3ef",
        "cursor": {
          "ref": "fff89feb-b941-4acd-91ed-858b67b4e206",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4b9257b7-54e7-4d81-b14f-396b1fff02db"
        },
        "item": {
          "id": "4e46dbcf-422b-4727-ae82-c8130af3b3ef",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e785c7f0-ad06-48ae-925e-dc067cfc19c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e3e055-9c24-431b-b291-ee7e4528d887",
        "cursor": {
          "ref": "00368165-4862-44e3-b49d-e7bd3b83d5f0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6387115d-0b1e-4eae-ad31-c22fe0226344"
        },
        "item": {
          "id": "25e3e055-9c24-431b-b291-ee7e4528d887",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98766b3a-bfb8-4f83-8e7a-a5b99c6a0227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890dcd81-664e-48bf-86db-9484846e7c76",
        "cursor": {
          "ref": "f7d3cf71-530c-4172-b1ba-b3a325a41836",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df4b16c7-f04f-4b85-acaa-1e988cd72530"
        },
        "item": {
          "id": "890dcd81-664e-48bf-86db-9484846e7c76",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b424faac-e0c7-4e1d-9bc5-4497107a3ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176c0880-ded8-41af-bf92-34b6363deac7",
        "cursor": {
          "ref": "f32ad762-9801-42c8-b0de-7e114868b480",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bb922432-98cf-4997-992f-d24caa4cbded"
        },
        "item": {
          "id": "176c0880-ded8-41af-bf92-34b6363deac7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e02fde6-0a76-4dd6-a361-109006c1f2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a0f2df-c9c0-40f2-870a-0a15ccd69420",
        "cursor": {
          "ref": "f9096e99-4b0c-46db-99db-12d8c6327bf6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "de73f939-9d9a-4449-9f2b-f242393b4973"
        },
        "item": {
          "id": "27a0f2df-c9c0-40f2-870a-0a15ccd69420",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "09baacca-b31d-4eba-aff1-0dc42f696aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0580051-45ed-4774-999f-1ff7d9969505",
        "cursor": {
          "ref": "d9254a76-759f-402c-9ea8-addab61823cb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a0bdefa6-4859-4147-87db-14d3942e45db"
        },
        "item": {
          "id": "c0580051-45ed-4774-999f-1ff7d9969505",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a45fb34d-7c70-4c8e-a32b-4dc03116a161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c335d8c7-e0c2-4d45-a2a2-d050581691a1",
        "cursor": {
          "ref": "19329d7e-9ef7-4998-b7c5-988c545ca9dd",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "863d2400-b991-4cad-aa62-8beabd6f8cd6"
        },
        "item": {
          "id": "c335d8c7-e0c2-4d45-a2a2-d050581691a1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0291ac38-d11d-4bc5-b75c-5887b37f0c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c9056-ef4d-4c6b-a35b-9dabfafff0af",
        "cursor": {
          "ref": "2e2bbd97-8eb4-4e99-b8a6-2be84e200f27",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c93c17e3-6220-439a-8de9-56254ffa0877"
        },
        "item": {
          "id": "101c9056-ef4d-4c6b-a35b-9dabfafff0af",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b7b6e5da-2366-495c-b360-eb670dc8dfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5393543-c3cb-454a-9e02-684b08f3b363",
        "cursor": {
          "ref": "312f982a-3de1-445f-bf1f-f596eb465470",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a829ccb1-280e-4887-af75-ca0af656bbf4"
        },
        "item": {
          "id": "e5393543-c3cb-454a-9e02-684b08f3b363",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f3bb1b2a-d8b6-4ba4-ae20-e22500b450f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93de471b-5e2b-4ed1-a7e7-9341a6941a23",
        "cursor": {
          "ref": "fbb0bf92-c5ee-4d61-99de-a85a0e6fd614",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9dee66fc-5598-4312-a7d8-f77b1de5b942"
        },
        "item": {
          "id": "93de471b-5e2b-4ed1-a7e7-9341a6941a23",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "37ea7f2c-488a-40c6-ac7b-fe2bcfb8b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e7ea79-94e5-4788-b5a1-b601cf31db1b",
        "cursor": {
          "ref": "72c53014-0582-4138-aa97-558f17f8ec2c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7c235a06-bbdd-44ce-b1fc-efeb9410c1d9"
        },
        "item": {
          "id": "84e7ea79-94e5-4788-b5a1-b601cf31db1b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "79064f14-e12a-44ad-9790-47fffa4f6e2e",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a2914749-77dc-45cd-8804-5e285780f514",
        "cursor": {
          "ref": "a8ffa58d-1649-44df-9ba0-58324eaaae33",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "86cfb440-463f-4d4b-966a-98de0a4ef1a8"
        },
        "item": {
          "id": "a2914749-77dc-45cd-8804-5e285780f514",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c167cd7d-9dcb-43e8-a3fd-24877b5713ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a642c336-a309-469a-b38a-4b99837aeabe",
        "cursor": {
          "ref": "d8126172-1791-49a5-9759-03b6add821cb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4d480fd1-3a6c-4ede-8dff-078c31a2b835"
        },
        "item": {
          "id": "a642c336-a309-469a-b38a-4b99837aeabe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5feb2d95-1de8-402d-b7e6-c97e7985f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224013cb-ec1f-4d5b-837e-7d7773f90964",
        "cursor": {
          "ref": "51532703-33d2-4340-93f6-d868e20d75ae",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3ee8766b-d2ed-47bd-a952-3059bb53ad17"
        },
        "item": {
          "id": "224013cb-ec1f-4d5b-837e-7d7773f90964",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "19cfb9fc-84a8-4a5c-8bbb-a2cfde3ba1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d460c5c-0e6c-43c9-8cf6-630acd70a5c0",
        "cursor": {
          "ref": "bae1d135-186b-4cc9-9f9c-f1b238e6f8a4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9065cf1b-2200-45b8-8fc5-305028b20e69"
        },
        "item": {
          "id": "7d460c5c-0e6c-43c9-8cf6-630acd70a5c0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2ad94a62-8526-4fba-b4f3-3d0c596357c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ec0b3b-ff75-4954-b718-2ce6c395bf13",
        "cursor": {
          "ref": "9282a447-2944-49e6-92d6-244e62f7f740",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2ec8ca03-6cd3-4e3e-ac9a-c8255fbb1d2d"
        },
        "item": {
          "id": "31ec0b3b-ff75-4954-b718-2ce6c395bf13",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4d66f3ed-d0ca-426b-8cdb-ad42b5c4c592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf205266-13b8-41ef-afb8-80792d70451f",
        "cursor": {
          "ref": "0475e65d-b50c-402e-9fe4-4ecb10e01c7f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f7a8f730-ced7-45de-824b-b69b748b44fe"
        },
        "item": {
          "id": "bf205266-13b8-41ef-afb8-80792d70451f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3368c5f6-65dd-4795-9ba0-d7c355965434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5ac84e-98c7-449e-b970-20417e164d6d",
        "cursor": {
          "ref": "7273d4bf-2463-4f6c-8818-8b4f961c7351",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5b527828-c742-407e-9a21-c844075d3fb3"
        },
        "item": {
          "id": "fc5ac84e-98c7-449e-b970-20417e164d6d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f12b68b2-9224-47b4-a158-367f11c9996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf3e67-df5c-4fea-bbf9-03c97bc4cb6d",
        "cursor": {
          "ref": "76e8538e-3750-4caa-8ae4-a3b05dff7cd8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5073fc13-b4a2-4736-84c5-0e995e9e905b"
        },
        "item": {
          "id": "36bf3e67-df5c-4fea-bbf9-03c97bc4cb6d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "80a276c6-d397-423d-b49d-c69bac46ed6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a589196-3a47-44c2-af2f-c40f79e49af5",
        "cursor": {
          "ref": "3791e468-5c2c-4d18-a8e3-39a89aed9db5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "341195f2-dab9-45e6-9e3c-624cb8d87a5b"
        },
        "item": {
          "id": "0a589196-3a47-44c2-af2f-c40f79e49af5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "55124c94-744b-4465-b782-1d320ee9b416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdc5392-4438-4f50-ad12-b18a3b520bc4",
        "cursor": {
          "ref": "d2d648ba-bc06-4a62-ae18-f2600b92d58d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c94b994-2c65-42e0-babb-3c0d01d61256"
        },
        "item": {
          "id": "0cdc5392-4438-4f50-ad12-b18a3b520bc4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "98ef6320-1afb-4386-92e1-813dba2de12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0a78b5-8c0d-4bf0-ade3-bebbfecb24f2",
        "cursor": {
          "ref": "4ea25b3f-814f-4831-bb02-c9add4985c23",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d63d75ef-14cc-461d-bd63-c611861ccb78"
        },
        "item": {
          "id": "7d0a78b5-8c0d-4bf0-ade3-bebbfecb24f2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6c6d5d88-6270-4b72-848b-4b455c208712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8f1c34-12eb-4bca-9fb0-65393a3173b3",
        "cursor": {
          "ref": "63c78de3-9be1-4c65-8c3d-a3c0f0897946",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2dacb8c6-1a03-4cff-a1c2-c5812f0de519"
        },
        "item": {
          "id": "ea8f1c34-12eb-4bca-9fb0-65393a3173b3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4173a2f3-7640-4200-9880-8bc06d1492f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a566b7a-99d3-4a76-853d-7a733254e9f1",
        "cursor": {
          "ref": "858878e4-95a3-443a-93b3-d20cc54022cc",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2356b28f-5e18-4719-a074-8de5358b60c0"
        },
        "item": {
          "id": "5a566b7a-99d3-4a76-853d-7a733254e9f1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1f33d10-6b9f-44d2-8087-7c3f3b239aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be100d8a-c6fa-4499-a71f-315ec6dccb67",
        "cursor": {
          "ref": "c2accb22-73f9-4665-a0ee-ac1f29c8529b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aa416b71-1a27-44ee-9c5a-5aad454b6291"
        },
        "item": {
          "id": "be100d8a-c6fa-4499-a71f-315ec6dccb67",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d70936a6-18ce-4dac-bc60-9044a1242447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42444522-344a-4c57-bd50-6298087e412f",
        "cursor": {
          "ref": "779bc71a-0d9c-4def-a85a-e65e4e15d4ff",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bae78d9f-67ab-47d0-935f-746674dcaa9d"
        },
        "item": {
          "id": "42444522-344a-4c57-bd50-6298087e412f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9b2f9e8c-27e0-4815-abb3-d6217bd1e385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40677c6-294c-428b-8f67-1ea91ff35e1c",
        "cursor": {
          "ref": "e2b9d679-6d0c-44b5-ae4f-86832970832d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7c11ffeb-3d9f-410e-9f51-0ba4f363421e"
        },
        "item": {
          "id": "f40677c6-294c-428b-8f67-1ea91ff35e1c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9197813f-8c7b-40f4-9b0c-6d3b5f4778e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d6179a-6283-4db7-92d7-7f0d1dc9198a",
        "cursor": {
          "ref": "dde00f51-5799-4fec-bbea-5b254b60982a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a93c40c0-bc87-4c12-977c-cc4ba7e3e77d"
        },
        "item": {
          "id": "08d6179a-6283-4db7-92d7-7f0d1dc9198a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9fe9f68-5988-4125-974f-f966ad9dacd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805de061-1824-40e9-9447-f52c67f0e5dc",
        "cursor": {
          "ref": "3b391407-8683-48c2-bdaa-7184958b474d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6d0f45a5-e129-44c0-ad26-9e0e202e392d"
        },
        "item": {
          "id": "805de061-1824-40e9-9447-f52c67f0e5dc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "59305f53-1af3-4111-84f7-e5e168612c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1b8fc0-1fee-4acf-9194-ec039d82054c",
        "cursor": {
          "ref": "416de949-aeab-4e00-a8ef-ee314ce89424",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "77013779-7ff2-4379-a456-ea073758d5ea"
        },
        "item": {
          "id": "ea1b8fc0-1fee-4acf-9194-ec039d82054c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7bbb319a-4ae5-44b0-9217-fdd11c0d2a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2508721-0ed6-44b9-98cd-b4898c63eb11",
        "cursor": {
          "ref": "57848b77-d4b2-4aa0-8057-1c3e9e523c50",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "50f8491d-d1d7-482c-826a-09d74be3dc97"
        },
        "item": {
          "id": "f2508721-0ed6-44b9-98cd-b4898c63eb11",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0c0ffa21-ce96-4a95-8d9e-b3fcec396d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef3d3b8-267a-46a9-9ac6-2e6a1c9ad969",
        "cursor": {
          "ref": "702aee2b-2961-4e4a-bf5f-297a7a42bd3d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cd1c09cf-5cd0-455c-a2fd-4bf98274c5ff"
        },
        "item": {
          "id": "6ef3d3b8-267a-46a9-9ac6-2e6a1c9ad969",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "055b813a-e0f0-4665-aaf8-cbcb5c4bf4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e4765-c4c1-4679-8a61-efb1fb87c91c",
        "cursor": {
          "ref": "74d56c97-db7d-4a57-9952-28a4a707ec16",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7bd66f9c-43a5-4d60-b2f7-0d3c74c363a3"
        },
        "item": {
          "id": "2d8e4765-c4c1-4679-8a61-efb1fb87c91c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c39eb525-a74b-45cb-ab45-0172dc5d8524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cefbe8b-0ba3-4137-9ed7-fed2d34105bd",
        "cursor": {
          "ref": "683f4125-3f2e-479b-9375-a658e8e9cded",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "570b6b31-7613-416b-ab41-cb171f831e56"
        },
        "item": {
          "id": "7cefbe8b-0ba3-4137-9ed7-fed2d34105bd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "493a4002-d33f-419e-8520-2d9129586039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290fb61c-a6df-4bde-84ec-67facd05562b",
        "cursor": {
          "ref": "dbc4a296-fb36-4e42-b90f-8beb3825f592",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c5879649-3fc6-49ca-a3b6-867d35702e09"
        },
        "item": {
          "id": "290fb61c-a6df-4bde-84ec-67facd05562b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "efe9c861-24f2-411c-a15a-370b7103f7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66625a00-a6da-495d-9f01-5f645ebe1bcc",
        "cursor": {
          "ref": "bbfa48d4-2657-4bae-93b3-aec8a3993142",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c9c769f4-e7ce-4de4-8d7d-5889b7d6f5d8"
        },
        "item": {
          "id": "66625a00-a6da-495d-9f01-5f645ebe1bcc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "54e9a5b5-c1b1-4c4b-8ee6-ba9424f6e8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2063cc8e-3c97-4d86-971a-661735e62bb2",
        "cursor": {
          "ref": "0ccfeed4-220d-40d3-b904-94b5887f5618",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "47c0d56b-0dee-4619-8f0f-df1f3b322b26"
        },
        "item": {
          "id": "2063cc8e-3c97-4d86-971a-661735e62bb2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ef8c558c-f2db-487e-8993-29df17968cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccea674b-cc9b-42f5-a08c-3cc04843204b",
        "cursor": {
          "ref": "16630f9d-973f-41a1-bc1f-960d6d9dd279",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ac29c0db-7d7b-424b-8515-1ce747e65606"
        },
        "item": {
          "id": "ccea674b-cc9b-42f5-a08c-3cc04843204b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7eb73bf8-e28a-4f7b-9cac-5b18147c3f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67047c6-3c83-453a-8530-42ffe9ee944d",
        "cursor": {
          "ref": "7589495c-f4fa-45e2-85ea-0a1ed78e1f9d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "75e166d0-dcf0-4d54-a558-d071a5afbd40"
        },
        "item": {
          "id": "e67047c6-3c83-453a-8530-42ffe9ee944d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18c192b4-d250-4bd9-8a9a-694bff402143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799b9408-a8da-4d50-95f9-6efef877d7c0",
        "cursor": {
          "ref": "b4fa513b-1a02-4143-b9a2-72e769287333",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2432b90b-7fbf-4d8b-a35c-cc72a382d5d7"
        },
        "item": {
          "id": "799b9408-a8da-4d50-95f9-6efef877d7c0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2f62fed0-a055-4dda-b2e9-14cc4f826eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d693091-45b2-465d-82d0-c4d985f12312",
        "cursor": {
          "ref": "1eb10dfb-b43a-4b9d-84f8-acf7f957453f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9dd7fedd-d694-417c-8669-4f4a1533f249"
        },
        "item": {
          "id": "5d693091-45b2-465d-82d0-c4d985f12312",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9cd0c146-61ab-4c5c-976f-e69ee6f8daa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f82d4cf-3dfc-4f11-bc81-3a39031af6bf",
        "cursor": {
          "ref": "4e013fcd-684d-41f4-872f-52f1855e6a3b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "07276b5e-eea3-403c-97f6-51bedbf1e06c"
        },
        "item": {
          "id": "6f82d4cf-3dfc-4f11-bc81-3a39031af6bf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "37effdfb-0a1f-42c8-a442-9dd379eaaa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4359f81b-41e6-4298-88eb-cbf397c0679e",
        "cursor": {
          "ref": "e587a402-9c4e-4bb6-b5d8-8436ea70a6c8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de28798a-ca39-48cc-bf13-0f9f02f9671d"
        },
        "item": {
          "id": "4359f81b-41e6-4298-88eb-cbf397c0679e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a0d20ba7-bf49-45d8-9221-54ebe52a0234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d3f263-e957-4f2b-b6c5-b30d3cdfae79",
        "cursor": {
          "ref": "9a2c001e-7b07-4902-b696-76a054389c8a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9e34bea1-2cb5-41dc-b624-3a0dee45ae4f"
        },
        "item": {
          "id": "74d3f263-e957-4f2b-b6c5-b30d3cdfae79",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bb8e2775-c0eb-44dc-89a3-8b22c18925ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f295929f-eaf3-427a-82ba-2e5767d4311f",
        "cursor": {
          "ref": "d8660743-32d5-4233-870e-8c4831a106bd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fd7739bb-e5cb-495f-a61a-7b1e86b6d146"
        },
        "item": {
          "id": "f295929f-eaf3-427a-82ba-2e5767d4311f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "26e25c7d-175e-40d4-a2da-b7a98b907335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dd3c35-32ed-45b9-8bc6-e867796c7ee5",
        "cursor": {
          "ref": "c2abfd10-12cd-4a0a-a9cc-44f0bc9eab22",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d5e5157f-4a12-47b5-8a40-3eb871dde2ac"
        },
        "item": {
          "id": "01dd3c35-32ed-45b9-8bc6-e867796c7ee5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "79b4f27b-e4a1-4b6c-8665-0094985abc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d41ce1-9dde-4f79-b64a-ff9f30089e20",
        "cursor": {
          "ref": "1d366e37-393a-4374-9024-b81a6cb1eae8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "33c1e3d1-ea55-4cb5-9702-50b21dc102e1"
        },
        "item": {
          "id": "58d41ce1-9dde-4f79-b64a-ff9f30089e20",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "41031913-0b6d-42e6-b06f-a90779cf7b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75b85f6-f592-4255-ba7c-c18bbe560cb9",
        "cursor": {
          "ref": "8626ec0e-2d90-4b66-ac06-d7b68f895ebf",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "edac3c5e-26bb-4a83-bb66-e7556f5a3162"
        },
        "item": {
          "id": "b75b85f6-f592-4255-ba7c-c18bbe560cb9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "879339f3-f095-4b8b-bd47-95ef42ac258b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04637a68-fb9d-4549-b5a1-ce26577364bb",
        "cursor": {
          "ref": "79125adc-8f74-4cbd-b7de-7a3611dcdd41",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5384b349-5555-43e5-a274-043e58e48bb3"
        },
        "item": {
          "id": "04637a68-fb9d-4549-b5a1-ce26577364bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a4f1b253-4fc9-486c-841e-d8cf05a8b43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c21222-8de0-43d7-9d62-9411082f8cdc",
        "cursor": {
          "ref": "6df788c6-28ea-4b9d-a9bb-1a03e44bb239",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6c202ff1-7349-4609-8d98-5d371f168c2c"
        },
        "item": {
          "id": "17c21222-8de0-43d7-9d62-9411082f8cdc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "813e1f65-3b60-47a5-9845-e5963d0c288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b67f797-e05f-4889-ba0d-5a1a38c86f05",
        "cursor": {
          "ref": "29166c20-e5df-4668-a169-91638ba6cf3e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "53c59464-636b-4b39-b6be-f2aca0b0d24f"
        },
        "item": {
          "id": "6b67f797-e05f-4889-ba0d-5a1a38c86f05",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4b9b1ae4-6881-44c6-9a9c-8395560f9455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188b8d04-3859-4775-9093-d453c6ce8990",
        "cursor": {
          "ref": "677552dc-4dc8-49f1-8f2d-7d76717fe294",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "93fbdeca-791d-45bf-a6af-f86ef52fde46"
        },
        "item": {
          "id": "188b8d04-3859-4775-9093-d453c6ce8990",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "227d82ea-86a4-4423-a343-96923969879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7062d-af8f-4e22-8287-a27a030aa364",
        "cursor": {
          "ref": "67c6a283-a786-4c18-b522-6e5990bf8900",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f57fe5fc-2ba2-48cc-966b-5d17cd3336a5"
        },
        "item": {
          "id": "70e7062d-af8f-4e22-8287-a27a030aa364",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5300ef1c-7b0e-48db-9f44-316be8df5eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e006e314-1dfa-48f4-a1c3-e01bb01a965d",
        "cursor": {
          "ref": "4070d3db-b9ac-476b-b374-4bfb9667ff02",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "568bc8ca-7487-4c31-afe7-fe105fed9cf7"
        },
        "item": {
          "id": "e006e314-1dfa-48f4-a1c3-e01bb01a965d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e7fc3583-170a-494d-a916-3bea42e7d14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0c03a9-2a93-4eab-bf72-df838dd27c0a",
        "cursor": {
          "ref": "40ddb561-7486-4621-9dca-f5adf96b9a1e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ff987de9-cae4-49ee-a3cd-1ddc92ba762c"
        },
        "item": {
          "id": "3d0c03a9-2a93-4eab-bf72-df838dd27c0a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "86061d2a-abd1-4a8f-a7e6-d48de656cbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5774c5b7-40e6-44d6-8edb-20b09ce0934e",
        "cursor": {
          "ref": "445de893-facb-4cb6-8a2a-41f72a9d3d37",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4cb3ad6a-ad9b-4406-a9e0-4e93ff11c40e"
        },
        "item": {
          "id": "5774c5b7-40e6-44d6-8edb-20b09ce0934e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ba28d18c-2817-47e6-b163-a1e545fd423b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3768399e-3940-44d2-808b-2816743dc110",
        "cursor": {
          "ref": "23e0b9d0-4b9c-47cd-b18d-9fd2fa13afb4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6897a890-6f0b-4b34-9c56-9efd6a9796ca"
        },
        "item": {
          "id": "3768399e-3940-44d2-808b-2816743dc110",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "82a98e92-ea93-4a53-b101-decf0a589fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e9e936-e772-4899-9259-be452a5a0438",
        "cursor": {
          "ref": "92e9eb45-cab0-4a59-985e-7207b40aed5a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "820706fd-e6c8-4dc9-af57-5980855a74a8"
        },
        "item": {
          "id": "16e9e936-e772-4899-9259-be452a5a0438",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "af1f120e-699e-46e2-b46a-3baa8591a3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d3bfa-3070-4535-8451-35bbb406f9ae",
        "cursor": {
          "ref": "16650880-87c5-4158-a956-9ac7f9b038db",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c040bd0-3251-4138-bb8b-19d41ba8f5f3"
        },
        "item": {
          "id": "721d3bfa-3070-4535-8451-35bbb406f9ae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f5908102-b46a-48e7-8c19-fb700aa5a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fdd8f7-7c47-4ffd-ac62-45efe69c7384",
        "cursor": {
          "ref": "a9e1f123-57bc-4928-b112-6553abbcf775",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f929b72c-f80f-4502-a223-c45623b30a66"
        },
        "item": {
          "id": "e9fdd8f7-7c47-4ffd-ac62-45efe69c7384",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eaa296c0-d853-44ad-ad27-74d2fca2ef84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b5217d-cd41-4098-a9d3-4f46dec02927",
        "cursor": {
          "ref": "93375048-23b9-428c-95c6-4bf830bedaec",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ac322a9e-26bb-4d9a-a653-4791972793e6"
        },
        "item": {
          "id": "38b5217d-cd41-4098-a9d3-4f46dec02927",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7c6af369-e586-4ffb-a10e-e0d94f848cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69044eb8-e243-4ab2-b3ca-b969aef247ef",
        "cursor": {
          "ref": "b637b5e3-abca-449e-8209-bd8a2d47fc61",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "029afc05-efcf-4112-95ff-279f48f49cd3"
        },
        "item": {
          "id": "69044eb8-e243-4ab2-b3ca-b969aef247ef",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ee75247a-18f0-472d-aa40-0c1e7d510470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba5ad22-b627-4ec6-b5c6-65c5ebff57f9",
        "cursor": {
          "ref": "9e70efeb-7c4a-45a4-a1f1-97bd6ff8cf32",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "418f12ef-8b3a-4820-86cf-864376ef8041"
        },
        "item": {
          "id": "9ba5ad22-b627-4ec6-b5c6-65c5ebff57f9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e6bdfead-870a-4b5c-8aee-b1ae445e21ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3766bb-9ecf-44f5-9663-a89661717256",
        "cursor": {
          "ref": "c7a74fb7-de96-4f9e-9e26-84824d55d3fd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "61c3869c-284c-4a1d-b8bf-866e55807eb0"
        },
        "item": {
          "id": "1b3766bb-9ecf-44f5-9663-a89661717256",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4996c275-b8e9-4b90-a438-a7462a37df38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f49be5-92c5-4dc1-9641-ab2fbf07f0bd",
        "cursor": {
          "ref": "381f4f88-cf39-4fc2-a2bc-5f8a2964989f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1b6685c9-d33d-459b-ac1c-14e182791022"
        },
        "item": {
          "id": "32f49be5-92c5-4dc1-9641-ab2fbf07f0bd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5dc009a8-03c8-4928-8e6f-fbe0dcea9201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50363fe8-0d61-44e3-87ac-d8dda4b00ac6",
        "cursor": {
          "ref": "542a6cc9-197b-4379-83b5-41ea635f6e32",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cfc9547e-c4ec-42f4-af5a-4ecc627abd7a"
        },
        "item": {
          "id": "50363fe8-0d61-44e3-87ac-d8dda4b00ac6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bc6e06c5-618a-43c2-9b6a-a3f74c5b3e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f909dc6b-0858-490f-9add-c21132543706",
        "cursor": {
          "ref": "3126c474-47a4-4878-b0d6-44aad07c869e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9a1cb595-d503-4524-912a-434c906b3edd"
        },
        "item": {
          "id": "f909dc6b-0858-490f-9add-c21132543706",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7947e943-2fb8-4f83-a125-54d0bd912ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3695b439-22a8-4c87-a54f-46b7bd452a3d",
        "cursor": {
          "ref": "17932686-cc91-4943-bd75-2453595b6bac",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1c3e1ff4-26e3-418b-ab0f-bc613a328f01"
        },
        "item": {
          "id": "3695b439-22a8-4c87-a54f-46b7bd452a3d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b3a10f99-0cea-4968-abc5-8e032ebb877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40420155-04ae-44ee-937f-b93548cda5b0",
        "cursor": {
          "ref": "aef6942d-6e20-4239-8f47-10adbb9353f0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3713c372-2851-406d-bc4e-87eec5f18019"
        },
        "item": {
          "id": "40420155-04ae-44ee-937f-b93548cda5b0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "78ceaf7d-40c8-4d67-8f23-d2905460211b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fa55c3-316b-44e2-b82c-5e72b28233dd",
        "cursor": {
          "ref": "85784e34-041e-4a96-887f-8ab36a16b018",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d5bb150c-97a6-453d-b689-0f13f3554ba0"
        },
        "item": {
          "id": "a7fa55c3-316b-44e2-b82c-5e72b28233dd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1ee29f04-5792-400e-a5bd-dca880e04ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385f0e68-72c9-485d-89ed-183c78660fe9",
        "cursor": {
          "ref": "b1977c9e-5e18-4284-bd7c-73dfdf5dee5a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "54aebc3d-9fe0-4da1-9c82-a07700a2e5ea"
        },
        "item": {
          "id": "385f0e68-72c9-485d-89ed-183c78660fe9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6ac9d379-3789-4174-ba8a-5fcbab081e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f23f2c-ec0e-438f-9326-84393755b41d",
        "cursor": {
          "ref": "012e7f22-cf6d-41ca-a30a-47855e16e2df",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "504c52fe-b467-4095-a8e6-548c7433e24b"
        },
        "item": {
          "id": "32f23f2c-ec0e-438f-9326-84393755b41d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "86bca063-8743-49dc-85bf-797a07245c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095b0505-bb03-4aa8-8561-0ed6af12a37f",
        "cursor": {
          "ref": "e0c0b107-66bf-49fe-8108-7ee1478cc55a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "47b80841-c704-45b7-a296-8a4591b91b13"
        },
        "item": {
          "id": "095b0505-bb03-4aa8-8561-0ed6af12a37f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "88063d53-4d70-46b9-bbce-8b494c1719a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe3cbe8-5905-4bc5-8cbd-f7fd385e7c71",
        "cursor": {
          "ref": "2cea6de6-ea28-4270-8fa3-c110c43088a8",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b0d27f7d-b195-4f15-a935-f8700daed3e6"
        },
        "item": {
          "id": "5fe3cbe8-5905-4bc5-8cbd-f7fd385e7c71",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6a2587b0-fbae-4919-8248-8817f1794906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7750fa6-2b5a-46b2-832a-ad0593559735",
        "cursor": {
          "ref": "f77c9f94-af06-46af-95c8-65067be6ff3c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "23c7fc6b-6dd9-4bd2-a3d1-56153705cc50"
        },
        "item": {
          "id": "f7750fa6-2b5a-46b2-832a-ad0593559735",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ee06dd0b-c3b1-4f39-9b1a-cf1c6898b7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3a03ba-ea9d-496e-a98c-e59d8397e6ed",
        "cursor": {
          "ref": "edd801e0-8381-459e-864f-dd5cce57afa1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "faec79f2-b3ae-4b6b-8911-471c295c14d1"
        },
        "item": {
          "id": "cc3a03ba-ea9d-496e-a98c-e59d8397e6ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d7844375-77e4-4bdb-8eaa-cb61b891bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efbc644-37a8-4ad0-b184-5bc4c10e2c68",
        "cursor": {
          "ref": "15164c1b-4610-4b18-bb90-ea9facd36b4c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "04607f5d-2c57-430c-b7b2-db462896267f"
        },
        "item": {
          "id": "1efbc644-37a8-4ad0-b184-5bc4c10e2c68",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4eea3d4f-6067-4c93-8189-0a1a9ef8a4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25adf24b-1ba3-4b0d-b0e8-ed5e9c6015f8",
        "cursor": {
          "ref": "4955a956-bc5d-4080-8f98-bbf65ec96d9f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7c17c1b3-d605-41b6-9b77-4b4376f5f2c5"
        },
        "item": {
          "id": "25adf24b-1ba3-4b0d-b0e8-ed5e9c6015f8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "695f6e06-d37a-4f35-bdd0-cd35c1685a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffde559-4a9d-4962-b191-145f308dbc3c",
        "cursor": {
          "ref": "0b205aab-e0ec-49f9-b2d3-12b0e706afea",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8ee0d97e-6d37-4b0c-8b1a-5d19e98ab95d"
        },
        "item": {
          "id": "7ffde559-4a9d-4962-b191-145f308dbc3c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82fad5f4-704a-4621-bbbb-eb692eaa43c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453b6975-0cb1-45da-a744-fafd34143514",
        "cursor": {
          "ref": "9f2de3ae-e2cf-4f1e-87d6-185f56614f76",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "72c859fe-a8e9-4466-a95e-48bf50075db7"
        },
        "item": {
          "id": "453b6975-0cb1-45da-a744-fafd34143514",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1426e279-0669-4906-baa3-280957599290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1920c429-9aef-43b8-b7a8-9c70c6ad3e77",
        "cursor": {
          "ref": "253814a7-88f1-4f13-8b7f-5330932650be",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7d23db1e-a410-4e83-b5e2-49036767c503"
        },
        "item": {
          "id": "1920c429-9aef-43b8-b7a8-9c70c6ad3e77",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "94b3b18d-2199-439c-b64f-14e5b16b76f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc4fa2a-c3e3-4344-bf67-981b360c93d9",
        "cursor": {
          "ref": "5f165963-9793-4297-9c27-0efe3451693e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3772a411-b79d-4360-9601-55727b6f25b4"
        },
        "item": {
          "id": "ebc4fa2a-c3e3-4344-bf67-981b360c93d9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebc082b0-779c-492d-8e44-99960e6bf23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c413aa6-ef0c-4fcb-a2a0-039ae53ef7a3",
        "cursor": {
          "ref": "443262ca-d459-49a5-928d-94a9139c46df",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3f28f10c-bfc5-4561-92ac-6419a0264f54"
        },
        "item": {
          "id": "4c413aa6-ef0c-4fcb-a2a0-039ae53ef7a3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "31fad112-d1b1-4a7c-bf96-2197311f9e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c04142-1af7-448b-b893-a2f2400bb0fc",
        "cursor": {
          "ref": "7a08c7e9-c861-4a29-86e4-d7d64572280f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ae535596-ee0b-4a39-b4ca-d6112d040d20"
        },
        "item": {
          "id": "c0c04142-1af7-448b-b893-a2f2400bb0fc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5be31c3c-5657-480c-82e7-5a1ef67f100b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18dec31-8706-43ce-85c6-293af0d6ea2c",
        "cursor": {
          "ref": "e56c2147-a7b2-49a8-927c-5f32184cb4db",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9ffb0c15-45a1-4785-9224-72fd22c99896"
        },
        "item": {
          "id": "d18dec31-8706-43ce-85c6-293af0d6ea2c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4e421067-9ee6-4d9d-98c8-8b4124ffeb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f9e3e6-4d8a-46c6-8cd9-8e99228849f7",
        "cursor": {
          "ref": "3bf24be4-a4fa-4878-a0c9-b50aab003db7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d7990e22-f80f-45ef-aa03-ab21962f05c2"
        },
        "item": {
          "id": "e9f9e3e6-4d8a-46c6-8cd9-8e99228849f7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cb792884-6a6a-42d3-a147-b8b6e93d51de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26079787-6645-432f-8711-9463749b6101",
        "cursor": {
          "ref": "2c425a85-b2de-4054-bd35-c37c73e11cef",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a1983399-10cc-4734-92e4-e9aa2e868b2c"
        },
        "item": {
          "id": "26079787-6645-432f-8711-9463749b6101",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "90e4fdb8-d8cf-478e-8bfe-18146256e1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17258cf-1b71-42c6-aef4-f28dcfb449d6",
        "cursor": {
          "ref": "ea52dd60-fe0d-4ff4-9871-ce62dbfb5df5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c6faf26a-a3e6-44a3-ac2a-524552ea4fab"
        },
        "item": {
          "id": "d17258cf-1b71-42c6-aef4-f28dcfb449d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e01054fd-f292-4c5f-bccb-956c39dfb581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6a4f01-fc2c-413d-b330-640efb06257f",
        "cursor": {
          "ref": "5fa0a3ff-29fc-463b-b5fc-17f3db9cf32b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0a73da44-cc10-4eac-a7eb-0065bcd37da4"
        },
        "item": {
          "id": "5e6a4f01-fc2c-413d-b330-640efb06257f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "08ad4fc7-fe6d-4eff-a3d1-fa4231dd36b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4301b200-e422-41d7-9fb1-3f660e5c8372",
        "cursor": {
          "ref": "05428999-0e8d-47bd-8432-034640525333",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0b24d8b3-e69b-47fe-88c6-6ecce58f1363"
        },
        "item": {
          "id": "4301b200-e422-41d7-9fb1-3f660e5c8372",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8250c289-fda9-424d-9c72-6db7a1bab122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee478c3-b79c-49c0-84b8-c5ebfdc863c2",
        "cursor": {
          "ref": "713b58c3-9827-45cf-a767-270f512d6c32",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "717b0bac-5533-4a12-ba37-0d22331004ab"
        },
        "item": {
          "id": "aee478c3-b79c-49c0-84b8-c5ebfdc863c2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "724b9530-8e8a-444d-93d9-7de595d44f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1413072b-9ddb-489b-99d3-c31bfaa2b688",
        "cursor": {
          "ref": "fa49349a-6e30-4130-8e80-c8fe3026ec69",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c880dbb6-d237-48dc-b45f-d96e10c5046a"
        },
        "item": {
          "id": "1413072b-9ddb-489b-99d3-c31bfaa2b688",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f8147bde-63dc-4e5e-a03d-d8b92588b9ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367d7a0b-84da-4af1-918c-c17136fab6aa",
        "cursor": {
          "ref": "091c0023-e121-4e5c-b8b5-6de9abc1c06d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78ec1ca3-59ec-4c36-9fd3-f41a0bdd46d4"
        },
        "item": {
          "id": "367d7a0b-84da-4af1-918c-c17136fab6aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "600f5b31-0f9e-4cae-9ec2-87c4eb6856f1",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "71422a3d-ecf5-4e98-abce-2b5e39768015",
        "cursor": {
          "ref": "bf3a269c-00d5-4628-abe8-3da02c5dcc2d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9b2eb231-bcd6-44d5-bc44-6dfa77bba674"
        },
        "item": {
          "id": "71422a3d-ecf5-4e98-abce-2b5e39768015",
          "name": "credentials_verify"
        },
        "response": {
          "id": "03876ab2-ad73-4ada-bfd3-687dac2ca278",
          "status": "OK",
          "code": 200,
          "responseTime": 2993,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "adececb9-b1cb-4763-baee-85783df9040c",
        "cursor": {
          "ref": "ad8adc82-07d5-4d3c-9082-6cf4979b1ce2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3ef4f9d5-9052-4064-91a0-66ffa5de9b98"
        },
        "item": {
          "id": "adececb9-b1cb-4763-baee-85783df9040c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4b3cc921-a867-44b2-a339-2e16fc08c65a",
          "status": "OK",
          "code": 200,
          "responseTime": 1857,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e381d8a1-d4d6-44da-8ca8-3ed96206e43f",
        "cursor": {
          "ref": "032c098c-eaeb-438f-b0b4-5a368be475a1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "07efc112-f1be-4e1d-b0c5-549123342943"
        },
        "item": {
          "id": "e381d8a1-d4d6-44da-8ca8-3ed96206e43f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42567a34-c846-4af6-a676-5138c1cd177b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e381d8a1-d4d6-44da-8ca8-3ed96206e43f",
        "cursor": {
          "ref": "032c098c-eaeb-438f-b0b4-5a368be475a1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "07efc112-f1be-4e1d-b0c5-549123342943"
        },
        "item": {
          "id": "e381d8a1-d4d6-44da-8ca8-3ed96206e43f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42567a34-c846-4af6-a676-5138c1cd177b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dd700a-600f-4d1d-9f0d-41e5d9643024",
        "cursor": {
          "ref": "efb7960b-2380-46f9-924c-ad5e6c47efa0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f9803659-5d2b-4ff1-b764-95f2b3d2be10"
        },
        "item": {
          "id": "52dd700a-600f-4d1d-9f0d-41e5d9643024",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fce5cfe4-911c-4939-8f54-091c50721cbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb96d221-8dae-4394-a356-899f2eaca930",
        "cursor": {
          "ref": "18e2bf25-f675-4745-b631-28c40ba705a5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7838fdad-807b-4e02-a8e9-3d4ef6b59fa2"
        },
        "item": {
          "id": "bb96d221-8dae-4394-a356-899f2eaca930",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b57bf0c9-e409-4c11-b927-571aac60abb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}