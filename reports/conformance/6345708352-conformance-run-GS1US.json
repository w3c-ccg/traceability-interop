{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "520a86d4-bc2a-4e3c-954d-1bdf61ec84f6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4611e9b4-6422-4436-b220-ac243d48ecd9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fac9ad1-8c12-4303-996e-c87894967cf2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ddde177-11b7-4997-af15-59c7226fd837"
                }
              }
            ]
          },
          {
            "id": "c4ab52e6-2e10-4557-8eeb-e1f2d4dff9ec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "639682d9-fab2-4337-9649-5bf2eeebab28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05cfa488-6add-4582-9688-edbd45268218"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4475a03d-849a-4784-a99a-af85b4792ff9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2d514e23-6040-4490-a0e9-84724f46e9c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86439130-2fa6-4155-9a98-45fbfc5b79a4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72494b7-7c6e-4f32-890e-311e68ec7e23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05cbe9c4-d53e-4b75-b18e-290ac66387c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be789004-31fb-405e-968b-16e89319a0e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42c4c984-080d-4b85-9bd3-3c1de236d5b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b6ea650-8966-41da-87ac-a4baced572b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e772a80-6602-416c-b70e-7a8d6bdb601e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5df86aa0-2887-4ff2-8472-30dab72e4e12",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ca7efe4b-e6ba-4450-82b6-6d6c4115920f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10014eb4-f05b-4c2e-a408-e2bd6fcbd94d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11ae1365-4da1-4280-b2bf-07a285a4b1d9"
            }
          }
        ]
      },
      {
        "id": "8102f2c6-a877-46f1-95af-11aea0d7cba3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "71bf2729-bab3-43bb-b718-62aaf0e80653",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba1c3770-13aa-4936-9580-260992f4adfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "477aad8c-2049-43d2-b4a4-858647a4bcc4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac809d4-bd71-4e32-a34b-17d99cd8a504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bedfe379-c3d0-4d8a-bcb4-a1ce206820f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4289147-9726-4f4b-a540-c9ff893edb7c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd6ef05-b2ba-45d7-b535-ca788e4f85e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cb899d7-307e-4a94-8a19-cad24e09de92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8ea0a9-8d90-4ded-9896-0bec5944ce44",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f36b7b6-88ea-4df4-a67e-277714bdbc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71677b4c-ea3e-425c-bdd8-9ae004836142"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ffae754-5f4a-4626-a830-e6fcfe779d32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7c3eb87-f841-46a9-affc-4ef5e47d57f0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3ea9d6-e836-4818-aa99-c7e206d0e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96dbfc2f-64d0-499b-81a3-9c0c217585f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba240d6-7e31-43f8-b512-389d20a67064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa49c268-b5cb-4e5a-a1f7-05eb793cc391"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "825708be-5fe6-43f1-9541-f53f0344ef7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9186f67-f1f8-452f-99f3-01dbae9ee867",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d16ac99-f71f-4385-bd10-b11c3965bdb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3a463c9b-c25b-4b11-b772-f7132731ce36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c503eb67-6308-4f8d-b7fa-3a68604b3c11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b4bfe7e8-20a8-414b-8223-c20077f78e87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeed23b2-ff0a-4023-a777-f52f41262d89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "976183e2-c8c9-4164-928e-07b602de5744"
            }
          }
        ]
      },
      {
        "id": "3ded9ded-8e6a-4ca1-936a-ff20247383d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "09a1dca8-4ef3-4c63-9110-c2a8db9f53e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "098ecd29-7d74-4636-8ea1-3ff02c9d3d61",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1fd586e0-8b7c-4a61-a18f-bb3bb80a933d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c634a06e-fc1e-422d-b685-97364a693274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98484fb5-8921-4681-b848-7f6be2b2c1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb04588-e4ec-4570-970a-33431b335867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dc26a1f-d214-4833-af48-548dcb054e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a99497-de6a-44a6-80e1-c69bd1594a2a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ad0a5d-6685-4a97-843a-432fb4e29d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d9c663-fd89-4b5f-9c00-9a4a7592899a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708980d2-dc78-4bd6-b82b-dc7d776917cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b44fbcf-2b6e-40b4-a104-ebfb2a1e7588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d7245-6dca-417a-ad18-bb9d2e4b93d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db62702-9f3c-4d2b-9cb4-61229a8c0f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc7261f-024e-4113-8724-5f8f602a20c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39ec4d1-ca57-4485-bc3c-5de7a22ffc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c804880a-21ac-41d8-b7f1-5a9dc9e99f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bdb137-f141-49c2-8542-483e96f8abdf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca73f4d1-f1f0-4b42-9a2f-5bf013501296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e1b0b9-3db9-42c0-86d3-934c6a3853d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5856184-dcec-4d90-9593-a3a10911dfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d07960-a008-4d0f-81dd-14d44052d629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b7e6a2-c76f-49d5-b72e-75797dd58a41",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d25cc1-646d-4aa7-a6ed-c710dfe6c835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723006dd-b148-432d-803c-306d60df3f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd8d6e9-d022-40e4-aa3e-218acd9b4541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de238ed-6875-4d04-a6b0-cbd8c707bd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe7a839-7bdc-414b-902c-96e39c90ff96",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcccb55-25ec-4563-9eee-e912adc9fc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d41223-31ed-40e4-9a61-f87192d61b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dfad01-bcdd-427b-92cf-84ab88d0f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71201f83-0290-4736-ae7c-3e11c52e9bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64353605-1acc-409a-b34d-3760f4511e77",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c16c2c6-7f09-4e41-b912-0c6e75f3b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d6f641-ac52-44d1-af2b-e46d2438c8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecbe36b-3890-4391-8b6d-b1c84ea849fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee052bbb-fe36-443c-b245-8586a004e8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064277b3-2a48-4dbc-955e-86e7b8cc1dab",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d07478d-8483-4171-811c-349ddc56c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c22a084-75ea-4cc0-b4fd-a44d7e174fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158d251-d7dd-4dcf-b47a-7f97185db6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70dd33f5-2a34-4e4d-8ba2-6ba8f723ba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b30ec5e-14f2-4130-9a87-f35672b6a9c7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016646e9-8a0d-403a-a8f4-0aadc9b05af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e3ee50-819d-4971-b4b2-e180aa31c88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ddbddb-c53e-4aca-bb6a-dfa2bfb8f903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe3cb45-62e0-4512-9eda-ccf59f9b1b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72c2414-84af-4f2d-82b7-7c74b7a85408",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243c5136-de90-4b0f-8a21-ff238882600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e56693-36d0-4922-87b5-7969fc9eb00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f055b700-aebf-4cbd-9aec-3536e36a462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfcec466-7bb6-4512-8743-018b953e3544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e120ab36-bfca-4880-b3a2-8210cd2724c0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09203eee-7f4f-483c-a274-7403a8303e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019e7668-09e4-4c42-b9c7-bb323174f6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68db271-9322-4148-a923-fbf4d4a32f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e5c2ff1-a253-44b3-a753-bfa2e6e5a706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3751ff9b-2260-4c48-9050-a345ef0ce829",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e52059-2945-4b82-b1f7-c55125675072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8ca6c9-aff2-4023-9f7e-066034d78e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea55fa-01ef-42c6-a978-fad617e73bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e175bb3a-f026-406f-8325-c6aef828ee40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5de3604-13ec-4e9f-9cb8-4635e381184f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdc88aa-859a-4acd-b531-a035b68ec3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6720e2e-9277-4a8c-a123-9edc47032a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548450c4-2c9e-4bd7-8ab5-17f675076b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a38d0d-849f-4843-a493-3ced43cd56e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13d2c03-6868-474b-bf94-bd81b8f1b42e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97053e1-f6b1-415d-8da4-55c0a1d74b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac1767d-2278-46db-8d53-263de2d8163e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733fcfc5-c2dc-4349-987b-488d5bbee7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5607096c-ab5e-4c6e-891b-dea3681dbf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c286194c-2f50-456c-9101-df6be9006c49",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b51ece-e3b2-4737-b35d-60edc6dc1d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2870f4c-8081-4bb3-b7fb-d96bdef4d7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c938290c-fc0c-4283-bb76-0e60ba57e028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f3bcc84-e43f-416a-b3bb-08140c545c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9fb1b6-bd22-4b2e-b306-765cc6f79087",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5088a967-2b63-48ef-ba77-1b20b102aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfac47b0-7f15-4796-a9c2-f03db5740402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc00925-0082-455b-89ab-2c0b5a8416d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "422ab890-4043-4423-a1c6-c39430967acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4276a6-249e-4c81-a3a3-b907b74765fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebbf376-2de1-4559-8a12-5fcc56b7d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad952726-cdf4-40d8-bba3-3aa3ab010b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ed750f-74b9-4b36-b984-3f194f9da857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3ab415b-3f10-43dd-a423-c09da389b147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696a5d34-612f-43c5-bb3b-58eaaec0765b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c55ef-3f7e-4824-8dba-cc1e961f8899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cbcdba-0947-4804-ade0-46943889b299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff8804f-0bae-4e9f-b409-d95ba4593110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c197951e-cf31-4192-b711-fadbd64c2167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278810e4-18d7-4732-a775-4295fa2924ee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b967c3-60fe-444d-ab52-add3a0cdb39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1279bd-e78d-4a41-9768-4ff4b210f10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dfbde3-6461-42e9-93ec-1914e06c0aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1a1ba8-f157-4bd0-844b-91b004aef992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c902f06-19be-4bac-9783-f4cfa559c7c3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339d9818-a4df-4f55-a412-9fde0ba0e036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae7e3fa-5e7a-4566-a294-820af9b951e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44098b26-efea-477f-bb71-298efb0590c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c525cd8a-17da-4035-83dc-87288c254c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fa20ea-57d8-4f3f-8dab-c64a424490be",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fd5aa2-6537-4564-a990-15a1d6fe48b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1442f673-213d-4f6d-b96d-7f8cab07e262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89de9e45-1bf6-420f-b508-85f5cb51db20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1381c5-425c-4ec6-b0eb-ab79d7b8cfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30ef9bb-dbc4-4624-b14f-9072756b3c37",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bcb336-6984-479c-8ccf-ae2dbd92f651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95da7d25-74f1-4a3d-b782-3fd969d3db51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1849bd-a13e-49d1-8ef1-0625fee3fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbf729e-9cb7-4f5c-adf7-8edcc57f8101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5d8d6-6240-4eac-a3e2-abb8615af34a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53ef7d-7415-4674-998d-3fbeb4dc1757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad40ee2-8fe9-4f92-8dde-a94916dcbc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5adeb3-7947-4ca6-869a-f8208e00eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "817ee0d6-d40a-45bd-a55a-92ba94da60db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f80e465-054f-43eb-af46-f3e5013206f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e99291-8f76-4fad-bd46-648471c0ef6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e66ce43-f8d8-480d-b50e-58ee43010637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50b1c4b-6fff-40e9-8346-8de4add5c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cab4cb-186a-4e81-b176-92d6417910ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7131db8d-5c0d-4f4f-8866-2e530cc6ae73",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2519738b-ef74-499a-9192-17375f9acc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345f70a3-66b0-4c7b-b954-c84d7574ef30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f721652-d6ca-4e40-b86b-96601bc84f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e899c003-24a8-4ce1-b86d-d6479f424048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895c2186-5a29-466c-aded-8ea568324247",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c9723b-4707-49bf-b911-2eb05242a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71f10a2-fec6-40b6-9367-bdf731a39383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357f3ba9-a38d-4a4f-9100-335b48c8433e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc195b30-8cbe-4ae1-996a-0c47e900c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac77020-8f23-44da-8916-63f684d3e7cb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f90ee6-6537-476d-b44a-8348313e0908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89711863-e53e-460f-b7f9-dc622e2b1ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb2a5bd-9136-4f93-ac0f-73740c616a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7098a2a3-b3bb-4cba-885f-3cdd4c97ddf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4191abe4-3bb5-4952-9fd2-a44878941abe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1231e71e-b654-4f77-8fdc-a561d2d8e8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b1fe49-a62c-4ca6-a62a-1df146ed9fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71603e49-e478-42ce-81f0-39f43986c839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e66be5-f9d2-4887-82c8-6613ff0abf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b318d2-1601-4099-97fc-1b90843d95f2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f216218-3f1c-41d5-9b48-101fc304533a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75163396-9778-4ae4-8d6c-cf1e20897ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0d9f08-e204-4be2-9f11-ed6e70854dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30484ae-7681-45d4-ac26-060c8fa45bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b7b66d-3dc4-44fe-8c87-27ed679db280",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d486ad-714d-4d30-acae-15d3a80a7ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b429e8-0555-4c77-a466-2366679274db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57d2afc-74f5-4908-9fe3-0d3ecbfb61c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f2b421-de07-4d8a-a785-cc7965c6c48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5206636b-10a6-42fb-a3c3-c081ec08d97f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee749f1-724f-4f55-9c99-393e3d593887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f27a60-b215-43d8-ad6c-c4f4d49b1032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a5ab2a-691f-41a6-8fab-6ec205a413b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18eaf5f2-cfb8-42fe-bad1-0b4f7223cbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f240ab6-e682-4ed9-a937-1e4812f9b397",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78db917-0b69-4a28-a6a9-432f1fafac27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f598e5b0-9a50-411e-a7df-3e3afc794cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5891aed-7af3-4723-809c-d4a2beee3092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ae6e60-54e8-4989-92fb-321bcac7b6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb396ba-46e9-48b8-b56a-cc7fbb221f8e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9ce69e-8a29-49ff-b7d2-bfbb7d2fe7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e70df0-c2ba-4147-bd6d-835a544f919d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca28b5-b66c-4de3-a612-353d30cc096a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14e114f-a7d2-4fab-8bd9-1667a8e747b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb88e85-0414-4fe5-97bb-9fbe4c17e829",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fcf1d7-6ca3-469d-9c49-94dcad1b62be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060dd3c7-1d98-4095-8864-1c84297cad1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d3156-ee75-4b4f-ac3a-807fc562bddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d459aa85-6034-4a71-aa0a-bf8b82145fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924cbcc4-2888-445d-9e9d-368e8737c518",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b009e6e0-37e7-468a-a9d8-868dd130fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2f0597-2a50-40fb-932d-0e1a21c7369e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff861710-6c58-4f84-b4c7-eefb39a74ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0eb6d5-71e0-43bf-8f21-9391247eab38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add2b426-3b24-4aff-8845-a3829ce6ac9d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f6da91-d369-415f-bda6-7e19e394b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd7a51e0-1dec-4c19-95e2-19995227dd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec960995-8fe4-42f4-bace-55e3c8ea84fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06b739a5-e472-42c2-9d3b-5403a39f6403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c257cf69-c164-4d92-a9bf-81b5da6a2ba2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5043d841-1d50-4f28-8f17-49685fa6f79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56f7729-6ae5-4f1d-95c9-24eef870294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03913cc-9e04-42c1-b6e8-c231ff725aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d582a5d4-ca7e-46ef-b165-74a09d668f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1344f-425a-42cc-9479-d9af6dd4913f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cea131-20a0-4783-821e-d1c2e774d397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02f8109-4d3f-4cc0-b3d9-428ac486d159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0009c0d-398a-41be-866f-f09bb54c475b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9423f52-30fd-41b8-9ca0-ea9658a059f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b193d3bf-7ecc-41c0-ab3e-2e09fb8d5174",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaed8fb-e06f-407f-9fa5-c71f569c40f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509cc0a3-259a-417f-b285-5e22aaa841f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23afb208-b12b-4d7b-bf9e-795db5b05db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0ff327-8433-45b0-aee5-ed05f8a20a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0fdd32-bc0d-4f74-8756-d0ec68a7b669",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e987e22f-6b5c-4a4d-891f-e3e8164b3918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd8dad8-9902-43e8-889b-fe5ca2b7bb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf5ae7b-c5ea-4253-9931-02401527c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0feb86-956f-444e-b306-4ef85b9b1117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75adc18-cb11-4e1a-9ab8-cb4745456b01",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df144c92-9e14-4220-bbcc-ddee937af7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd82b70f-1f51-4591-9020-9fbc93a5ad4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182dcf50-c937-40cd-b13d-5949b2cf7200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b6f546-ed85-4f05-ac3a-eba22976dda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07919f9f-ba8a-48a6-87b4-b548ae455718",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9a06c1-15b3-4654-bec5-0ac364d2c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115708da-bd64-433f-9797-0588ef82f544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad276b96-b855-43ea-b1cf-d4410161f651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e40236de-d14a-494d-824e-fe0022f2f2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f33bf9-36b7-46f4-9cdf-81522ec38b35",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08eb08-0ae5-4da8-bf9d-ee67890cb6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0c4656-175f-4ce2-b3d0-987f43bde2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42431c04-22b1-4473-882d-e8b1d17d99b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "55beedd8-c3c1-47d7-9561-73658d02dac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f499ce3-a094-4cae-8967-82ffceaed1e5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25196180-0254-47fc-a4f8-70a2fc2d040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa407449-d119-477f-9b82-5f65c602a5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccca534e-4ae6-46eb-a2dc-c96895a55ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e629fe84-a8e6-4766-a0e0-a6abd1d5d174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79e4ffa-d378-4175-a312-a2132c0bf7a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e86d90-9a08-46d9-aeae-917be97a2491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf7bb03-8160-4277-ade4-053f3ac08b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e73565c-16e0-40cc-8c27-b2f2e060f5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "886df379-9ad4-4555-a047-bd3cea9d8199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca13589-8345-4fb1-abeb-13393d5cf75b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74de90bd-e80d-4508-a746-77ccb0a1ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd348a-c278-4563-b4f7-14c6cde21279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f669a5-2732-469c-81e1-56801e14193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c9149b-9575-4cc6-9b42-6ad9d2648980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00826cae-5870-4f21-810d-d8ba8311cf56",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75fedcc-0cfa-4b92-99a7-b1f60463484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3879546c-b6f5-4c9a-9ba6-9cc3154e19a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a34f829-a331-48b3-b90e-e1c658122159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b8d359-86b2-4eeb-96a0-4442bace0b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715ab42f-8443-4bdc-95b4-12eb754d9672",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd8dea3-5439-42ed-8233-ea5b13c16d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad163971-00cb-4303-ab62-30e26f254fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b300bf-8e4a-4218-974a-d71af28eaf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a934d8-fdca-4a0b-9613-1aed20f16b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6716ef6-b9e7-41cc-b19f-2e0268f4d1db",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e674f6-3c06-4f8f-a506-03f90ca19ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ddd159-b1e8-4ecf-8aee-a6a75851d4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb916e51-90c4-4705-88fe-9b632042a92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ae2e17-e0bd-46a3-b309-dfccb563b301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb9b620-ca2f-4c35-93bc-4bab14d8a226",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adadd03-840b-486d-bb3c-c15b1ae94032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dcf4eb-b22a-47ae-9db8-2c0b0abca0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec877e94-af7e-415a-af98-cd9efabbfec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "390b4a62-7c43-444c-9fbe-529665133cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a29fe8-b5e1-480b-9cfc-7f074a6522d1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81963fd-23f7-4b85-8424-bb1dceca2898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc54312-54fe-49ed-affc-a40f5542bc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880687eb-093e-4dfb-b211-e853322f41c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "08efb558-5479-4193-a4a9-14ab6893a93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449ba98e-24ce-42d5-a4c2-2f38717ab8fc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c257d2-8692-4d74-864d-6cd8504bf76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b395a2f7-9a82-4610-9251-055a23ee8dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30a56ba-14f4-4ec6-9ab6-d055796ae256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "710c4f81-0821-4d1b-b1cf-2074ba1023c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00806cf-7522-4207-8a0e-15bc133a6501",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3323b57-d210-4dbc-9485-6e871f9d5a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a88b86d-85be-48d3-9730-fc3f094cd068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b79f23-d12d-4080-bb80-8ddcbf1d0d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f00ded-ab79-4a2e-9124-e31015a0841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ac95af-2d98-47a9-b8b3-fb3e1f8b8507",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b99a351-9b2f-40cc-8f9a-feea21ebdc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ed2b6c-7b9d-4d61-a074-9a9d2fedb99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4a9c55-c90d-4644-bea7-1a3fdb0403e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5bc7df-e4ac-49dd-a68e-a4b3b61713ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c769d7-d31b-45c9-8e38-01637f5afab8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a434ab-f684-46f7-9e42-6929a94c02c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b890a3dd-a37d-44f3-b7f3-fdc06d9ff070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791d6f3c-3d92-4df4-a858-059af94653da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72f281af-9bb6-45f6-9cab-2f65c61bb629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d0f94e-6fa2-4bd8-9c08-1ab54d7c4925",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa2c3ea-19b0-41d1-9aa2-88538230a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fc6463-ddf4-480c-a117-764820d943de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c14b1d-4bd2-4cb3-8e08-f33a1d69446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "464a1eed-1b4d-405d-8f43-35bcfe985d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1ea301-8bc1-4909-b666-ef57b479e1a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9316c28f-e712-4def-be6b-659c211738d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d90494-29e1-4d08-b667-5b3749643fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187a7536-0f3f-4ca6-ad3a-8334d9419add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7203c1-4058-40bc-86e1-80a88ff6ebcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1136ce89-8245-4f50-a8b3-15e0e6da0438",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca7ce82-b133-43b3-b343-854b5069dc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00164d5-9b05-4fe0-a90e-a8f44d6c5153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aeb683-2b4c-4485-befc-41bd6f16c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "886dd381-188c-4b30-9031-56f197702e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc9f24b-5207-4213-a056-007805fad91f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2053177a-132a-4a20-9402-64c048a04807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81b3cbb-80d3-4fbc-aa65-bafc75acb5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d90d989-7447-4694-bc03-0a8fba237085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fee8106-fc70-4ebf-8bec-26a56f007277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64ec16b-654f-47a4-b6b9-15d6e6ed5d16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd6b5c4-0345-41eb-9a67-a593077b3f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71404b4-602b-4402-9c6a-a42b73dff0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8208df8-8c76-4f2e-b76a-d1415c6f6eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "042a1a49-7ea7-4404-9aa6-b694f066e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d06f24f-7ebd-4559-83c7-f92ffd391741",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03e48a9-f8d4-4227-ac05-d6a88015c226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4d2af9-10db-45a4-8f9e-40397e101db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ebd218-f55c-42eb-a62a-7c7039301dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4963d8-3246-483f-9945-24afcee83a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fd91da-e466-4129-9bcb-e76362d3521d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4609dbb-75d3-4b45-b639-aed90f4ed68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54899ccf-5d97-41fc-9dc2-d2f072426d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb7d078-ee43-41fe-9686-5ea51b891eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c61c63-745a-4773-b9a9-e65dcb59013a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f247cf-7f35-401a-8860-8eeec17d050d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7b787c-1dfb-4c50-90e3-5a5437c39562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e6c09-204e-4ffb-bb50-53c33fcd5ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682956a4-972a-4dd7-a535-418efb191a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e639d2-4b61-42c6-b2d5-b002d56df046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf20945-4195-47a8-80de-1ed199e35275",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f04c17b-af9e-4def-acc8-e08a98fcc6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa938a20-778c-4755-85de-392ef9166f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae9c901-0ba6-4cce-9c93-7c51ef90ee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8627ad2b-efd1-4ba8-99df-bd8b9025f85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa18ef25-2ebd-4cbd-8300-9cd52e17b10b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcb2294-f1da-4891-959c-b5c2dc8cda64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2860e9da-fe1f-476a-bf9c-71710165d92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdff561c-91b9-48ff-ace3-ec13cd8ba4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1de903-d92b-46a0-a768-f4d3ace92f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985b63db-4ec9-44ab-9236-05d00c2e64d6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995214a0-2a51-4596-a96f-bf68c573e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d7e3be-d459-4a4f-befb-698ebfb5f8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f40394-d0b6-4f30-8fbd-38484ce5afed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5d52bf-bc88-4a4a-9ed7-d5dd1d5ddeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5566cd-843a-4907-87b5-5f9615c4c270",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257b8205-c1d8-48fa-9708-fa3b40cfcd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721f9ca6-9140-46d7-ac3f-ed60bcbc44eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5510635f-f983-42bf-a9c6-30ebc5787c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0695b31-38df-4141-ab6c-ea08a310830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e472088e-3ae7-49dd-9eef-79ac6ddb2814",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8003a822-76d6-4927-9770-5e17eb9e83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d29fef-cc8f-4ee0-a195-6d869f5e1950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c975169-b946-4737-8b9f-999c01836553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4fa208-6de1-46e7-9470-15468fbd995b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570b5437-cbf3-4261-b007-a7046f1640f4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d94fc79-3c03-4119-b137-605c1600b89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d94a35-220d-49a3-968c-f9b5349c6924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d00fe-8bb0-4a03-b0e7-5c612ed6b350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fcc05d-d1b5-46dc-9e9a-7ebdadff6abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5431e17b-1397-47a0-9fa3-51bd30561742",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5db06c-2f25-403d-8871-418770281235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1a7cdf-5bd1-4272-90f5-918c3d2dcf4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1eb4d2d-d062-43fb-9a6e-2962997299b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a71773-8ac5-44e1-8830-d8cbc5694552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93db5e66-7f34-4769-9e7d-73fa29f9830e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcbbcc2-1890-465e-a873-72d57f2e8a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b54799-5929-4e78-b576-3d61e7254499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbabc825-d96f-4883-929e-1993374af585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00bf3cd4-cda6-4b93-9417-8bd43160dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbb8441-166d-4919-aaf7-3350d9bb65b2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812744e2-c7da-4831-b51f-c3c74d2d8846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8993d161-aea8-4649-bb57-05824c18d7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001a07c2-a90f-4680-9f26-049face32bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab5a8ff-c2ff-42a6-93bf-7a00c1a0cb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dabc5d1-7c6f-44e4-b14a-774cb8cf095f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f0ae21-1ccc-428d-92b4-dde038fe5349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acf36b9-1637-4cb5-8ee4-d039d13c18cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60ad5c3-4d85-4b93-b393-b74a016bfaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b897022a-6236-4842-b028-0dc97b411eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3492ea23-428f-4838-98c5-5a23da59e611",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e252b8-59ce-4e42-9ac7-f6a1f82d72b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a65fa-568d-4dd2-8776-606be89d2777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fa5aff-a270-483a-b556-97b2c5b730f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fd5d19-7c67-4559-995d-190393bd8d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf1ee07-6ced-4ca0-b8d7-f939c8127569",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44ec270-c1f3-41d4-8f8a-410ccda2f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98f4c7a-9422-42bc-99e1-d7789dee8811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01710aff-748c-4925-93db-da5170622cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0a59c6-40bc-45fb-9e4d-3e4a2dc4f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65cc371-7d7f-4950-9065-d2a0fea4e920",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fba9bfd-3265-45f4-b5b6-8a01fc85792b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13893b5a-48ff-4406-9f4e-9b5920522ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a2d44-c2bb-432f-8e19-0d51ebbeaff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "153f81ef-6ce8-4d0f-82b2-2be0c0c399fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3636578f-cd14-4596-abbb-6640be21eec1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0343c9b5-7b7a-4cce-bd39-58d3f5e540d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95aa665-e177-42d0-86d1-9ec77f4e9248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88469e7e-4471-4f9e-aae4-584beb4552bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2db8ed-f33e-482c-b9d5-8564262b442d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2152a41-031c-41fb-8980-21624abad092",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da03eaf-605c-48fa-b90b-72d6bbdf9f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7858b625-85f8-475b-8853-8b948b624b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4615f66c-1360-4fc2-a202-fb3406345323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b977ed-8055-45f6-8a86-09894a4ec303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b783ab1-76f5-4b1a-ad54-47dd78a39f28",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2ab473-766b-4746-949c-b949ff27150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c536ab-6463-44a8-8958-117037ca7f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ab82a6-80f8-4ed1-bc47-662a5c51b501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e23487a-c174-4aa6-8d61-bff4fc15a5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaac5f0-ffe9-4324-82cb-151d10b9dbf9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d87a8bd-3806-47fa-b6c4-1079a055b266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc76515-5ab1-4526-85bf-f43de710047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff308613-0547-404e-a8cd-63fbdab2bf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c171ff-54f5-4bde-a646-326b71bbe954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c72e349-5944-44f6-be8a-42a0b7301403",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fdeb28-f879-4280-874d-d1588add7bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00e01d6-fcd1-4256-a16b-d4e75b030af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233b338c-a6b4-48ff-b6fd-77e7833e623b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a54ec6-72d6-4ce8-98a2-50d12e8c7516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbc8976-09c4-4acf-913b-dee4b5c485eb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d66f58c-4e27-4f95-a13e-0a844f345aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f976c7d-7278-4288-a4d8-dcf322aeec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709fcbe6-3c1c-41d6-9060-aee52b13fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57e4953-3767-4601-a1bf-90f1f3b5d1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f07c69-88e5-4cee-81c4-56f58a55a2c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c9772c-5612-4139-bf7c-763e30845b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e7a23d-70c0-48dc-8cd1-51963c15b005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee679b73-a2a8-4dad-bb1d-f309fc8b6e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d822c2be-d5a7-4a6b-8a8f-aa7bbba25877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f227f515-fbc4-493a-a9c1-ee1e7e7f9359",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b299eb4a-94e1-40d0-8ac5-cd45ed693d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a9819e-1762-4fd7-8bea-1a7f980fdc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89717a94-b13d-4f2e-90de-73b95fd59787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34246dac-de8b-4d2b-99c6-cbaaa264162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec7da0-86cf-48fd-8582-39cd1ff99e1a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d72eb9-79ce-4154-8349-2c682dee0e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba55c67-73db-4cd3-a6cd-556e998162d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfe4f6a-701a-464e-87a1-b0b9be0b0a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4570fc1d-c38b-4a0d-8825-5f279776453e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2387dd99-6912-4ff7-8883-50ead3d945fd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49119309-c094-46e3-bd80-63616936815e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff394608-2fe7-4b4d-9d1c-ab6559302efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e33631-3986-4b61-ba84-e8d42e1d2bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df2956af-2b36-4ad8-a8c3-21cf052c3934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36570e8-659b-4455-976e-ec9985425bee",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21abb4-a3d0-44b5-b0ec-3774a4a7566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163f6f7b-f192-4994-8926-f62aba6aab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1d702b-8612-40fa-b5b9-f5c979034069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "efe28cef-c082-43ed-a66a-49f39e7aee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f2df95-595f-4298-9580-2c3b84292735",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8e64bb-060e-4e8a-8b07-1b5aa85defc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af16f950-ab55-4630-a928-2c904d45aede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9675a1a7-6631-493b-8cbd-3d71d13f3871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "edd82d00-054f-45f8-ba84-edb475302161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95640a72-59d7-4032-a231-25f6d09a4c1d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581e3a9e-f75c-407a-a6bc-8deb676284eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ade2dc3-cfd2-4f31-8406-446268c72ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4afb36-76e9-4a00-8fa3-34e244d5f98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b159978-5189-45b2-9ea8-7f3aadda689d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ece08-4fd8-4e19-ac82-90e1d70bd891",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5486a1b3-3633-4f55-9ddf-36a6fd987c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e972c9-0683-4751-9a09-163a38a6d337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9f2acb-7c2d-43de-ac52-40e29bbb27ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7951b19d-cab0-4ea8-829c-2eef558f8b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60667d9e-f7df-49e1-a96a-6636690f39ab",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f01a4fa-0a5f-48d6-9c88-62a33158171a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ff659f-b48b-4db2-b795-26d0550840c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e374547f-ddaa-44c2-a806-1abc67bd4371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b194b64-e16c-41ee-8d3f-ec1966b0a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b818de88-583c-4ef9-beec-95bfa9797047",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8960ef7-b7d3-4cac-8757-73b40b9f08a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c93e0b7a-d397-481b-b7ea-fcdca775de94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f040c3-85a6-4112-b54d-9d2a666f68c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8deef1b3-daaf-4aeb-9e9a-62fc833b05fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c09d68f-14b0-4e97-8326-86ee62b67a14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c842241a-6d65-468e-a675-2fc213b3774a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfd441f-a686-4076-acb1-e6397ef2d65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1562f3d3-6a43-436b-abb9-eecd52a15921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06d4722-45ac-485b-82ac-6f846480012b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40507c2d-cd87-4d78-9bc4-53c31aff6f11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f0b5251-0113-4185-9913-745fd5c20050",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "537ce9e2-e776-4e0a-a44c-6959beb7ccda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4de0e733-176b-495d-b62c-baca09403cca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd2f04d1-89b3-4d5b-9402-78fb6dcf016e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09047370-4d05-4070-aef5-9fd8cedfcb90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7f3973b-821f-4fa1-b165-0fd387665d81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2ae043a0-bdcd-4535-9807-a900b952e1e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7149b14d-cf84-47eb-8736-ce416029f691"
                }
              }
            ]
          },
          {
            "id": "a2f62ebb-cd20-46d6-ad97-35d1a7b094f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39d50643-fcad-417f-99c2-e2440b65ade0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c27e7588-a7ba-4b70-a2cb-d269efadd7f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a01613e-b39b-4d48-8f92-36fba8fe7247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "653fe03e-7e52-4664-93ec-90527403577e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3038867-0ec7-490e-a3da-7fdde0cce7e7"
                    }
                  }
                ]
              },
              {
                "id": "b04d6c71-76b7-4359-bc15-03ede82f552b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a70530a-04d3-4bb8-b12b-27e816c6f059",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24190263-f9f2-4b61-a5b0-8168ea4f6a14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "150673be-6a31-480d-bf96-d07cb4a92acd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1754cadf-7c94-4f80-b781-88a1aca0b011"
                    }
                  }
                ]
              },
              {
                "id": "2d528f5b-9e7d-4009-ba52-e469119adc5e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb76aa6e-6c41-40e6-889e-96ef1a045f9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bab20f33-72a5-40c7-8d7d-84a1614e7539"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50573e3b-d10d-4b21-bc51-9a1987044f00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23c7a832-73f3-45b2-8032-82999b58dd57"
                    }
                  }
                ]
              },
              {
                "id": "3f085b74-d7d7-457f-a196-c03f1fefe0db",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2361b89-637f-41c4-b157-3d1b6886d077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2205d7ac-0a84-4e13-b673-08567a3dfbc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a47e5454-f63e-4480-af93-700f94025897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "afa214cf-dafe-4905-9a05-64a017bf918a"
                    }
                  }
                ]
              },
              {
                "id": "1cf96300-b7bd-4fcf-bf77-5302ce93ed4b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fb09090-82eb-4965-bc1b-7e854045fc3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "785e0dcc-1f02-4a67-a451-5d8db8c88a9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "375af5db-ce61-4081-a277-dd8ea607e989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "edb2877c-f897-4106-b8ae-7b702ff688f8"
                    }
                  }
                ]
              },
              {
                "id": "f2d7ad59-c6f6-446b-893a-dbf7fa32e602",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b98e7c2-52ac-46a0-99ce-3288e5ad5cfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c99cb73c-5f93-4b49-bae8-d6e04f6b3a0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b659d61e-96e4-42b5-9983-146b62acd381",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9bbe687c-b11b-47ee-9bac-01989f8038d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2531aeb-fb36-40be-8b56-b342bffab640",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a70c8a80-1518-4cd2-91f8-02825d030ab5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2760c19f-ebf5-45d9-9f4f-826f4dd57855",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1efb2b7e-3d62-4af3-b747-381768cee544"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26831b04-0bef-4447-9155-a52dbb24b1a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4621e45e-8d17-4378-aa93-48be4ddae18a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80e69e66-4b19-48e6-972c-8ff86785b303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1f8e3ca-72dd-40ca-89e9-a8e9b6add55f"
            }
          }
        ]
      },
      {
        "id": "38667d3f-3b16-442b-b0fd-2715556a95a5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5f381ec4-f3e9-48ba-97ce-91fd444e453f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af199998-e7b0-4f02-ba0d-33f01fba7ffe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a6aa726-a064-442b-99a0-b5ebeda3402f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6029de13-b633-40e4-97d4-03fd0faab850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26801cd-86c7-4827-b1a9-3aba836f8188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3dbe28-beaf-4221-bb2e-13dfd0646f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0fc5fe-745c-4d5a-bb49-492fa57cde1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd21bc67-6052-484c-9f25-75d8be45119f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bea51c7-4b2f-4eaf-a5fa-82d0d839ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69841d26-61ed-426c-9f63-41eb076c85fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f45ce3-7418-4826-b72f-b57bcb4b5f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56ac961-2faa-49db-88f1-5c981f7b882e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32e783c-f8fe-4165-8c69-4cd74405fc84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78e4465-c762-4e80-9b05-acf4d2228858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa736b8-6b41-4da6-ba4a-ba323ab20394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7201f2c8-e61d-4d8c-8b8f-83cfd11edc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cf8f1a-d155-4a68-a73f-6fe70b4b87ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b8237-e28d-4eaa-ae38-e55bfe139d53",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544368c8-ffb7-46b8-b65c-8c226fafbabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27551777-04cf-4825-b12e-1645937c2617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c5ec5e-0b17-46e1-87fe-a9d3ab5cf884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3690c7ff-50cf-4819-a848-883a53218fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbfc77d-b1f3-4b4c-b05b-6b9127b7c719",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80675b9e-c4a2-4c15-bde2-4f8d3779a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8683ab87-4cf3-49a0-b2a1-d83750918f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4628cd30-af09-492a-a4df-fbad42ac5521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c4edee-2b0d-4f72-9bd4-d74d9fb03932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef2c8a4-85f6-4146-b45b-2673185ce2b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba731d65-4134-4551-a0a5-803d99278be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0d52ad-cce2-4245-8dd1-e0dd7cc24447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a86bea-0a3f-4bfb-be61-549d138181e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb8bcf1-9e89-4d44-8997-afb0cfa9abad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09eea95-6c18-49af-8884-831166a436ff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249fd4c-3a64-4732-9957-740822bf7f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9055fa-89ba-4404-ba38-188b83c71344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2a9642-583a-4b0c-8286-8352ad6c7337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e87a166-d0ef-4b9d-8b65-ce3e20238445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617ac40f-81c2-449d-b1ef-b7ba36bef221",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342a2dc0-241b-4d04-9f2a-aa6f81229a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e417d8b9-4545-41ff-b380-8cb436e8ec1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c48948-8eaa-4474-a451-1163d2bb8cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c49f91-d371-4542-8dd0-20e87fe6b7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4360f056-ab19-46d1-9484-f597cc3c9d50",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c24819-f222-4e2d-91d7-71fe058061ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42392167-5e11-4640-b292-5cf1e3892223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c11806-1242-4632-8cb0-687f085b0317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca501bb-2812-4a61-aab7-bcd6aac65f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed1acd-6fad-4df0-8017-6f2598dd9476",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f5e084-c083-4828-b25c-811a8052d4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014c8ed6-fa4d-4196-81d7-06dea3b0ee95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419338c4-2a47-420f-96b0-f3d504adb90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a8715e-ee97-4f44-9ad7-466ad2e1d786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad47371-22a4-4ce8-a944-1c11e0a67eb9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f9df60-f148-4261-9f28-0ad1969e56b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9f32af-192f-455b-b831-95d2255b41da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfda513-787a-48e9-982a-e304ff3c1ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1cb704-6cb2-418f-afc4-6ab7b1a894b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c60dcda-d8e7-4477-b62d-8d3b2ab65431",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dfa9ec-9bbc-4352-8348-7bd3125682bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d925b6d3-9fdb-45e4-8203-acf7f1eee9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52826a08-ccd3-4eb4-a63f-5b61e8c281f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2b81b7-3533-425d-a521-c1513b22d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cd12bc-2634-4abc-a6a3-95075b721bd9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35494354-ad64-4981-ba28-1a92081a36c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc6d473-1a95-4064-858a-aabdcf611991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae2042b-2821-4468-97c9-9ba25a533fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffec0e3-a9a6-4852-8312-8d331b13084e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d83a43-c118-41ab-9332-f2ca8d49fba1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5696fef9-076a-4db8-aed8-8de315effda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dde755-61c3-421f-8356-418f45688d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54afca2b-ce78-4df8-9d05-c58f786fb895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f447e1-16d6-40f8-a133-56928ff4545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a1022-3347-498c-95b2-dc0ed2c721dd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed938fa-2e6a-4f81-a035-1342254e49a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991897ab-1960-4efd-9a81-6f8cbec9e755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ca96d3-e5f2-4398-b24e-6167b2bfb4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9fb3d1-abf3-479b-8a1e-7ad6e115784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f63185-61e1-44cf-9027-848f0d92acd7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cb2c45-beba-460b-ba92-ef15b52c9334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4cff4e-2df7-4c82-898f-756ec87ca3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97576e8a-09b2-434e-92df-d09e3b4d8489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb8cd60-4dfc-4a51-a64e-7ab6e8216f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d962ff0c-0a70-46d1-b5fc-a38b3396d8ca",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c71389-1e37-4754-9d1b-2f15d891e904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9523e1-2a27-4b63-b5cb-cf962d790286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3012af9a-36e2-4639-b89c-bcf30a6d0313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1250909-614d-41a1-94a8-e143f23802e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4cc09f-3a2d-4a72-ac1e-b4a29625ff02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6069af-50a5-4ea9-bf1c-fddc50a137f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f368db5-5f4c-4e4a-8000-e65ee2b7890a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd69870-a3c0-46dc-afff-da5de294c8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b13eec9-243b-4651-81e2-dcc1b50e5903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e4ea49-c799-4656-a501-684232bc3fc7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f0bb14-61bb-44e4-a658-4822fdad5e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629f8a99-dad8-488e-b11b-5b1395e165a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78594dd-2ed1-4966-97a9-5167838a2aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3b1244-305a-480e-9965-f4c043f8342e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89cc9bf-cff9-47fe-b982-9fd209e7d462",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d7a9c6-c3b3-4f07-afbe-67ee7be5dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56cd2d7-4a34-4c26-95b5-c554f2a5580b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdbf0d8-7cec-414a-8601-f2a0adcfabb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab7ae21-8163-4c34-8927-1520b0704740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012ec52a-a31b-4b7e-b8cc-f633f54ef29e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56685c15-0889-4790-b282-53f2e7cc49d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f30fb0b-06b2-43c6-80ac-34e6e0bd8e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be8929d-cc7f-43c3-87be-b73f12632c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "150d8b9a-c4e7-4be4-a5a5-669049fc39cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c1d462-a6a3-424d-9bed-70a263c3d23e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f0775d-308c-4b63-afc3-baa87a85414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aba428a-8186-42ff-8235-79c83954fa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7504073-533a-4bd4-a6ec-8968da523d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a01c3d0-88ea-47c7-b730-05f54edce199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d350b77e-6df5-466d-b0cd-d0673b05e095",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485f968c-88b5-4906-bd19-5edcbe893e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cb908e-cee8-4c4b-bfe8-3e27ce8ba8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c7d8d-1de6-49f5-af40-13d92fdfd66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4e8376-6c69-477f-898f-a7cb5a5130e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa37b87c-9238-4538-9c7e-ac945ff5f6b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d68415-c77d-4f3c-ba17-499a95bd5b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05703f69-7cd2-4cca-9d99-1674cdadd5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a264cce-d208-4fa7-a3e2-24499d50fb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeecb99f-be40-444b-8daa-74a8f4973409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29394ac7-11a2-4672-b9da-9b0e9cea8643",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd47dcb-7332-4e1e-92c3-c36fad263118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8522946f-acbd-4221-9d39-be3d46f9139f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3e7129-a9c4-4add-9a7b-3118f763485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85de178-993b-4fc8-b1ea-d7f37cfeb4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ebf7f3-ed77-428c-82d7-d87d6f1b0784",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ec22f2-df79-473d-97f9-4cdf3f42b54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6aba65-d6ff-436d-a6c0-e570015dde97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c14a556-a049-4807-9c0b-08cadf174abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3159f846-7117-4d52-b1d3-795b383fadda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fadc8a8-09d1-494e-b609-158f0e5ec5e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a16b15-f417-4ca0-a851-ef0cb5536c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480cd895-2300-4f1b-922c-75af5e83c049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae06857-b9f7-4efd-9231-4c4e59aa3315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ef0144-1645-496d-b3c7-515d11cff6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b15f0-f757-4a8c-98a2-9681d071504c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd711f-9ab7-41b9-bc35-a2677eea2696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f36677-6007-48be-a144-e08afbe7e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9c288b-9059-47b3-b72e-cb7831fc42e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8488c6-4871-48b4-a8a8-ddb20ac14ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee8a9e1-1bc7-43ae-b697-3056c99e386a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c671b6-30dc-405f-ba14-98baf71cca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad7f96c-e9d5-477d-adfb-a51168a23171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06099e32-c3e1-4537-8727-017e15f74f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efdef9c6-c685-42c4-b4cd-a0add876597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac00045-dc87-45c4-8101-ff2db903df6c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70edd74d-c4da-4d18-b81b-b360a6470424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bb63a8-49ba-41d9-9a7e-520c5615d95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958873ac-e256-4ab7-829d-99d2c0894b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5131be-994b-40a7-b7f0-d97f7794a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9aabc6-bd22-4c5b-ab9a-a0aaf2cb100d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1606f1e0-ed6b-470c-8e40-ca46d4c9f2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32827e2-7614-4722-988e-65cde5e7c679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671e1735-4a0e-42ae-b98b-9dcbda13e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19894e9-1c44-4f12-802c-57b5842db461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881ab722-e512-42e5-810e-2bb1003d8995",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9966dde-95d3-4909-ac63-8d4580adad7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618427c9-a6b6-4bfb-860d-e5d674e84b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0eb5982-9f23-4819-9260-320a58d8b0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3488eea0-ac44-454a-b2a8-7b2e4fbdb332"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31e31d2b-7663-472d-bc28-a3b05262dddb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56d53773-b3da-447b-8873-6af240789e5d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2b7948-ae30-46f4-b870-f17e8b5cb9d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae281c4-c9a7-4662-805b-981a0d7a824c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46c19bf-e30c-4fff-a40f-f973d4a47ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f682256-e0ca-4464-8e4a-4690c5e37ed3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53add6ab-4e2d-467f-8efc-ebdc4d2edfd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f96fba4f-159d-4a95-a03f-65a6d2ac54f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "753fee5e-4360-4d16-a451-621a83e7c2da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91e9286e-0d82-4d69-9a21-35c631cef6da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41970ce0-34b0-4641-871e-0568f19ca3d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "00b39c6b-82e5-466a-bfb2-37f9fa9ac741"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21e2b91f-b435-464d-a896-0c4216492e19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0efacd77-3889-4a14-8910-2d5d3b32565b"
            }
          }
        ]
      },
      {
        "id": "be01d8e1-2fd8-4cb4-836f-f1f8ce739c2b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9fe06403-b555-4271-ab55-3e3ffdad638a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92a42011-6dfe-430f-8742-9ea4b5fcefcb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6df2b1cb-7cb1-49b6-b306-f5da1189ae3a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a21f37-6deb-443e-8f23-2510b8e8e461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b920095-ef7f-4457-bf4f-2e6367b2da0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b77ade-a962-4156-9ef6-094b1597af6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30adc96-04f9-456f-a07a-dd17b1cfa3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b038398-0c58-4193-846d-f7a1f0faed33",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc164565-4193-466b-8126-f05254b987d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c82145e-fa5c-4c2b-9b77-b57e162e5e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0626796-cb86-4932-a821-79dda7c0264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c93f5e8-d4b9-442e-99ca-066a6745502c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa68624-89e9-485a-a234-eb518b036c66",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb8a71d-d43e-4180-bc46-4b0f8c9234da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339e213a-828c-4ead-8b7a-7779797eae02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f81e3e1-c9b8-47a2-94f5-fdaf0f670d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25fc223e-494f-4571-8e10-280bac892055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dde370a-9b1b-4d0f-bd9c-8c2958062cf7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf66285-48df-40dc-b0a7-5a2eafec8eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6ea0d5-b2e0-4b19-82e7-d6a78af265a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3bb8c5-91bc-4867-9608-e0ad4d3ed780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "181df59a-69eb-47c3-8833-ced425bc473b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b408fc9-9cb1-4151-b960-69051b175506",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e61add1-7c8c-4e87-ba3e-e7dfb91d84a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de6746a-f093-44b6-86ba-d18083b2873b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e29f32-65fb-45a9-b39f-9e2609642f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3220971d-de4a-4822-b061-86bc3dccafd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d96bcc-d014-4b07-b591-ee0711456984",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dcaf5e-bcb9-4b9f-835b-c57869d82e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b75720-1f0c-4e1a-bab4-d4e4f231601c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188fb28c-8830-4441-94ef-2cb99947285c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad431216-58f3-4219-967f-4cb57faeef28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a81575-703b-45cb-ba0d-5240f534faa7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1482a4-ba3f-42a9-8144-78edf5dc9e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07921a47-f9ae-4d0d-87d9-0fe4c8d6eea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217a18f2-0ac0-42e3-9dc5-9b978976b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e413078-5c47-40ab-8c5d-44f1076a7f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c8a7c-e343-482a-b8e0-a7faca5c366a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e2c74-d5e8-4c21-878e-7ad302ab512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cec25e-ad47-4ef0-a9ab-eece55d8f7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93159f5e-d83b-444e-9f87-cccfd699d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e935823-f233-42da-b2b0-7313f4f54f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4a7814-190b-4434-a20f-7e93a99e9d8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc87306-fbc6-475b-bf2e-6918ba2c84e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806aaa6c-3b2a-478a-85dd-bbe4f4c4d99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa83c07-424a-45dd-a546-a4c2993e549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de75b3bb-c2c1-4192-a297-6326daebb74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f302a5-49b6-4fea-80a9-ec2f6cd2a8b6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb3840e-d533-45b0-ad46-c13fff098ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6191991e-2fbf-4ffc-9f01-e6ae714a0ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6188b1f8-3a6c-445f-82c2-797de3ef0acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2bcea7-1c73-4f86-a822-6ac3c058d006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe57e1ef-aa8b-40fd-a1f7-883cf3c44616",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5023a24-2d30-4261-aa13-9cbced7c43e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f304a4c7-5fc1-48b8-a31a-1a8830a39553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379f2eb7-7725-433d-a682-c80305aaf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "930eb249-b116-42b0-ac82-23b744281433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d656c14-bd37-41b0-8650-92f756c8757b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f725cdca-be30-4ae0-98ec-820b37102d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d82543-6ecd-45aa-8af8-5f31d15500b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b497a-f67c-4f7c-8687-de301322f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84e91a94-1ec5-4676-9dd5-3b1b63eef08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c801a2-ce5e-46d1-96e5-8a4e82e6387e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31557bcd-22fa-4010-b28b-e100e93db4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3d2619-69db-4b65-b56c-82f0b1327f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd32677-237e-4682-ba0c-87ce6a5301dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a334c30c-2666-4f3a-b844-8da3f8eeebbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e34b81-c222-43de-a6f8-de131b597f9b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40727c2-f1b5-41b1-a60e-44f3b8491d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378922b0-b55f-42ac-ba58-5713e09cc4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb18c12-6a27-447b-af4d-b9265baccbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b96c26-ba0c-436f-be41-17bb41c53751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8793babc-892f-4698-b4f8-87271c86bf87",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10724b87-1482-464e-8dc6-c18003cddba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c263ef68-f347-4f63-8940-8a305f91d58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3a73b3-8c30-4850-bf8a-c7ea68f66fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3b2eb0-859a-40f3-afad-68a6f41c9b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf7b14-d79a-4dab-b3e1-a11c02c8cef0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57b8af0-91e7-4fbe-895e-6e0df10da136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4657ae84-682d-42c6-939f-6eb079540a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214f30a1-3adf-4bd3-afb8-4464cb9d8305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "550ae897-a3df-4539-b88d-aaf9963b5e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2e7b11-1ce0-4fc9-a5cb-c961a215970c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73df315-c0c0-41d1-82e0-9649b001ce35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6399992-374f-4ac8-b609-d416c5c4a773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9a0038-26d2-4512-8a78-14a8a0950eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd9fcfe-0f4e-48ce-a16a-b23e596a2fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accb68ff-e659-492a-af33-b1a219586f67",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b339ab5c-ab35-4f85-adb0-68c63c6133a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea14dd7-1dcf-49f9-a816-183cf74bb75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b5777f-d075-47bf-b5ab-eeb023b54692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "755263ce-f9f9-46a3-a1bb-b202e89d7679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45bdaae-f00e-45ad-86a0-46af12d049dc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a37947-3de8-4b50-804e-516637961aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50b45d6-843e-4ca9-9466-b6136c1406b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24787ad3-c9fb-435c-abb5-ed9d3a48bf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad0f45d-0aa7-458d-8594-43eb2477935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707cd985-72ff-48e3-9fe3-fe2320852804",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ae1fe4-c0d6-4590-88e0-289ba7e040d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b6e687-a4e7-4da8-8498-497457e60367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c109122a-aac1-41ce-a301-9a4b17801f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86f1bfd-b237-4e4b-8cf7-4818d6555318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04116599-7d8b-4a08-81df-e8149352bff3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a353f65-e470-4aad-aaac-4c0109ed9dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd83f9b-74fa-45f3-b7e2-16143de994d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7294d4-a7d1-41ea-8f9c-dd66840f3014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5822f-99fb-4487-8225-72a290096d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b6c06d-603d-4a65-b19e-da09edf011c5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8f48b8-bf79-4d43-a40a-419743bca726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5bf211-07b6-4539-92ec-62f1bb7ed27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274913d-1b6a-43f5-9d85-cc660068ae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee1b210-e126-40e0-b8d8-5f29a97ab2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68856024-49bf-432e-81c6-ada2be304dc4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1a7a0e-d320-4acf-9b04-243b0f8a0d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9b0dcd-f368-44de-91a3-edcd211370a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e262718a-2aeb-4940-8a5c-52608d8185f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2cf043-32f1-4936-9e31-ee239e2d6116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc5cfb1-849d-4c4f-8091-f1571635ecb0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9067a7e-a123-4ae8-b02f-f0bb3e122a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a187ec6-f114-4e43-a1ce-2a102bdf716f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc4a591-bc7a-4aea-885a-d14833423f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df48a43-6e46-40d8-b506-3052a6606e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff10c5-a6d2-4c59-b261-dda6e3a9b771",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef699a3b-8903-4282-8bc3-9b5470b922d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580e8352-d0a5-44cd-9777-a9cbd5d82973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b8f99-980b-46d1-8804-6bd47acac785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a2fed2-5ee8-486c-89ef-14dd410990af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4f4f85-524a-461d-9334-c8866b13bf0c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dcaa51-8f13-4fbe-83d7-74ebec8b0e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766d6128-6a3f-4e3b-ae86-6e552e6a364b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cdca5c-8360-43ac-81e1-c5d1626df508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f078b6-bd60-4207-9025-a319a0fa8951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa774b1-adf6-4637-81a1-5ef2173446c5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b03b0c3-092d-496e-85cc-792a6381e921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e379cfbe-fa5a-4a84-ac02-5fed31e4ede2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fda3ce-b91c-49eb-885f-3a29604e9770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36220ba1-df37-4331-ac32-d2e8e9f39b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913c6659-67ae-4569-a8f6-867ca6decc7a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0089bc5f-12c4-4213-a88d-59a6bedd4d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211f9232-7bbe-4d99-a87b-698fe92a4894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad97ee7-0427-4e2c-b1d5-8999608abb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea76d1e-b980-4300-87a9-e0d7d58ecedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bf1d1b-fa3c-4d2b-8706-7a6655ab198a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745f117b-a4de-4063-b3da-82ccedcd4a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1586253f-d06e-4a7b-b388-8bc303ca4385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68ff9e6-2fb4-4d3e-af93-3d530efbe2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbb6e3f-3814-450c-ae16-df4504b5eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e107147e-0b9e-4566-8217-4bc025a2cda8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be624243-0e61-4177-a714-716375fb0902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7838841b-a654-48da-81d9-691cb19cb2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44eedff3-311c-4542-b07b-ef8adeeb695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd488c1-21c1-4703-9cb9-5b517a42fd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451014f4-7068-4e42-a621-f16152e44aa6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adf6031-ff21-432e-9877-73496a410a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f482edc4-e431-4f1a-9b2c-b33116ece531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22dd612-0241-47a0-84cf-52bd3d279777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d88c7fe-465a-430a-93fc-c50d3ebf124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a9074e-85a5-4a39-86de-12754b2462e6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63adc3c8-5203-40df-9f42-f3493b17206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1556431c-52e6-4bd6-81f8-f2a7295897d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba5c8cb-d1fe-4266-8471-cbbccc944107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a42ed-460e-4707-8a59-7fa0083d8c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d3a0db-fa6f-481e-9014-586a9cc475fd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f980102-202f-4f66-b442-2532627e8966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eacc3d-74aa-42a7-9a6e-1b51fbdd4697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c9c872-f98e-4d4c-8e71-bc4951e1ecca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d044be4-6668-40a7-94d8-6c9f5b7430d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee864e7-0206-488c-a225-a34704586948",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aede7b-6597-40e0-8561-72b2cc23f042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a023060-d2d6-4e07-ba4c-30b113479e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc14508-1af9-4388-bf12-4c6aed2c266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7666d243-cae8-4c05-874c-4ce51b46a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a846e37-534e-48b9-b33f-82e17a555387",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d625a4cf-4741-42fb-bff1-302e667eb248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7244449e-144e-42f4-9ff0-16a20be52dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec91b782-ca92-41da-9530-eb0a9db7fb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da4a38dc-2a2e-484f-8cc5-af152a6e579c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2737394-12d7-4850-8415-689c96b7a487",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de982ce-ca0f-4818-8f44-4656714462e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bed2a3-8865-4d1a-8c18-c7050f6b75be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbda07c-788c-456d-89a3-98c826f2ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ec2df4-ee92-4bcc-a5ef-54beb7420ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3cd26e-91fb-4832-aa70-e56e0be7d206",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ff22a2-1088-4de6-b894-cf8ff2e1e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f215cc-abe6-4038-9da3-64088f27eca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ab7429-244c-47ad-8411-4d3133839b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "204f9767-414f-4f8c-af2a-975b176a6e8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13985873-2dfb-4adb-ab92-3feed7805e69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc5e24e2-159a-41c3-ab56-28e7eb4d74d2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7567a4fd-762a-4bfe-98ac-7dfef434c2c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "89f387a0-5fd9-42b0-8b0a-097ed3a21ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05970427-e6f6-416d-b319-6f136c302c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36600bb7-4535-493f-ba14-ce76fef74cb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "106238ae-59c0-451f-8eca-6c4931f380fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f156706-d97f-42f7-8ebe-685fdc0022e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7238bc3-107c-4ee6-9426-363f3f192ace",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb6678d-b590-4970-8ed3-2ab1a89e7dfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efe23be6-a797-48a5-941a-a54457581946",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "168cd1c6-0944-4b27-be2a-1f14b6c4f81b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "208add83-56a4-4a1e-a860-d832a29b1ef2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d30bf81-e614-4122-9582-8f7db04c5c8e"
            }
          }
        ]
      },
      {
        "id": "1c5e3409-1bdd-4aa6-a7be-81f11a6d2394",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48eb2434-aa9a-4d87-b9d0-5fe372245aa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f213c3c2-d9c4-4dd7-af2e-4413eba587d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db335b57-f15c-41e6-ba1a-7abc3dc350b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a78c5c-eb98-4f16-aa28-421c632f9be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d6a268-919d-42a3-86d5-cc2ddcfc050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33326c3f-a265-4a41-aaa0-1cae4b33fb4a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e66ff30-6f1b-48bf-9142-c0cbdc3b7962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e8bae4-0564-4d2f-992e-b012f4628e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe06a74-d57d-46c3-bbfc-190490b877ad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee280f02-5522-43dd-90f0-f1b8f539845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627bc128-0088-4218-8486-74f25506daff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ff2df8-8012-42d7-afd7-d824015026d5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2084078d-7f72-4f01-9b1b-cc48edb6d97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712ad30a-269f-4a4a-8c86-9ae601e0a76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490694bb-a4d8-41ae-a06b-668c4176a446",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197fa9c5-3b58-468c-979e-5e839ed67371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5114188-19ba-4b10-bac3-4795b994a438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183400aa-8b82-424e-a8da-0694fd55292d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3584bc96-02c5-48d8-92f9-38f4368520e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ba8922-8eb2-41d4-bd44-a14031b0fc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53e612a-8ec8-4c48-b489-8022c0ff4286",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff78a661-8d60-4f21-8a9d-8b3623d3fc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f86d20-c1b4-47c7-9337-395007540cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d818d764-cbe2-4818-8a05-72304a0d1506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec064cd-a8db-4eb6-b2f8-6d19b7cd5126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8e518-2102-40f4-b872-00b10636de9d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f78627-13e2-4045-8142-1abb4243d6e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3aca68-8f75-4d90-9ba8-9e8f734662b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce50adb-0f71-4387-bc6c-2d4a9354e256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baaa5123-b030-4c32-a1b3-bdebcc63e5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73c31a6-8f08-45ae-bec8-cce0af6ee161",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb792e3-7d81-4cf5-8b8b-09190ad0b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229f5a32-835e-4942-9181-47b87649cb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b775774-95ca-49a0-809a-af85fac1f416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b726d1a4-f573-4e96-8bd0-ec38a459b2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3623dd33-0d8d-41f5-927f-e3b92d777ced",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4b118f-5869-4215-b512-24d369973753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f87f3e6-a120-426d-ad24-8f7019f504ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3758b188-71bb-4340-9c6c-48cc7215d805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a36e8b-4ba5-481b-8b5e-db1d8f7825e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318cdc53-b481-4893-8ffa-741c1d965fbc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b34dfe-9538-41fe-8431-5889422a3d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5067a090-2f95-420f-828c-afe941bdc79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef59603-ed9d-4ab4-9328-42d5980eadba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08b9a1a-e25d-4911-8df9-741bb6a1a520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321e464-8789-4b4e-804d-7f1ac0878a7e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5196de01-1442-4f6d-9a70-7c10d2d26572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e21632-48f0-4377-908f-9a19de2fb5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c1c17c-608a-459a-bb4f-1204002033ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f313cc-15a7-4ff4-bab1-e374c2d8a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d049b4e0-247d-4dcf-9130-085bcdd4f68d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b47ff2-5aec-46d4-aaed-175a0c70cbc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df477036-a361-46d9-8ffa-d547aa7d1a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da301708-083e-480a-b225-ab6adfe96638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac4a550-21f3-4394-96f0-94872bb55563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b785df2-ea6e-4ac3-9b1e-e0b54ae02434",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f5535d-b841-4c0d-8f57-4f620563f024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb10e5ff-e735-47f8-9d8b-946211c9ad42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4822a92a-19c0-482a-88c5-b2dcd734ffc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcd3e31-a22d-4f07-939e-b41ff6a041e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bd6eb8-5e9d-4fbc-ba52-c0256c91f5e6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942068f2-d89c-4521-a4eb-a8941cb03153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585ce733-9947-4712-8b3d-a55e953571bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eddefd-6f9b-4594-a2ba-84baed6b4b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97e0bce-224a-458f-8f59-b1bb12433eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a008ac-435e-4e30-8a3d-36c8acb8b7ea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa23512-52e5-47d8-9e82-5896caf48db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa21a40-6060-4a56-a096-2d7fa5a1ba4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300c763e-f66e-4971-b07a-d40d420f4d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84eccadd-94c6-4bd0-8c22-30ba193dd114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f0bc8-522f-4909-a1d0-aee8c5407abc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd90732-be87-44dd-be6a-f99adc618c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad68dbba-b76f-4aab-8dd3-6541f4658062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ecd36a-a90b-4cdd-aefa-be096f02fcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8edef3-91e7-401a-b497-0d31d69fd8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7f24b7-810e-498a-a0ea-f489065e12fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff62dc44-c816-47a2-a537-14892fd7ab63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9312fb6b-f18e-4fef-85bf-e38f27e9db65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5374618-5162-454e-8ea0-85262d1c1029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42cf47d-cafb-4e9e-94ef-33b65809a404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4982e26c-0ac2-407e-bfdf-13e8724cd625",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94762385-852c-4ed2-b301-d1a3eb7d1041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261cec42-0275-48d4-878a-5fda5c54a2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92bd618-ce39-418d-9cd9-8d762cc3c7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf0a41a-a49e-4207-a612-cfbb214fa62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a88cdb3-9fd3-4d1d-a55e-97cfc9a0243f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9a9f7c-f65e-4f8d-a8e9-351bd2bf468b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9297e73-88db-49da-8dfc-aca17e206e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcd3c5e-6347-4c32-ba40-3196d19274fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d5b506-4af0-42be-9c0b-71abfd643fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094ea2f3-9361-4238-a306-c443ce8290d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35fe2c1-fd9b-4ce6-a395-1c8efcb7a541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d33e165-2a9f-47d2-95ad-345816d408b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d77a9e2-c849-4a0a-a91d-d987e53d0891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352268db-c65c-4b3a-b915-aae9ca26cef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec55b17-eba7-4934-aac3-1ff8ac9d7d3a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a120eb-ec33-43dc-b6f7-9249d6b240cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92052d0d-6c99-44a6-b45f-f01cacea48a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d14acc1-a0c4-4e02-af34-1e72328f9ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e85fd7-23bf-45a3-bb8e-0875872e4e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a940913-f4bb-4086-8fdc-8d778c1d6cd0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b9e6b6-d873-49e9-a8e8-6e0574acd4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d959488-daaa-4a12-91e9-4007eacfe179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8c1248-f17b-4a13-a7b2-82e0a2df248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8efacfd-8346-4083-9148-d0536f734c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4ae0a6-215a-45bc-948b-cd43bdb2b08c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62973f1-e255-48fe-b522-82146d4a4c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8173aaf0-9d63-42c4-adf9-88600d32ab9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa437ae-1d3e-47ac-b3ec-2f156c1b9cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597ccd08-6fbb-431a-b5c8-a76214e5957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192efa25-e0f0-4843-a230-1b98e4cd59c2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b864fdc2-7879-43d4-b167-985dbe49b41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19487267-1a25-4f43-a859-035b4b118d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6593bfa-5c78-4613-a0c5-f96857fc740c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421f997e-161c-49ad-96fa-bffdf8ef4154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13e92ba-fbf7-4fd4-a471-2a3a6875a473",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193be3c5-130e-4a57-af9d-5f7a168da8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5c9138-cd81-4465-98cb-5b55d4aa1c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa67bd-d091-4f8d-b107-2ff2bb379e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1901fe4d-dbf4-4a72-b6ac-d21f34ff723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9517928e-bd3a-48cb-b7b1-74ca355bfb5d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001f9ffb-e7f8-44db-8892-0d8ab2b3ff25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ffff78-d5a6-4f8d-ad4f-fecb0cb0d61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d9da4b-1424-499f-a074-b31ddf4cd076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2128fc-403a-4237-b334-4e687c523d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113f91f3-3da4-49e1-8a88-f5c590c933b4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c42de1-b4a5-4eb1-8797-d9e1fd0f4849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b97846-d059-4006-8b68-efcf613b9aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e8f671-6fe2-4b7a-b94e-9facb0efdcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82670665-f999-450f-aa5a-683ebf4d5aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0191c6-0248-4f7e-acdf-10dd37a941b8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f1af21-b912-4061-aa85-a908439f83fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b04e01-1adb-4c12-9e6b-50f14bc8bf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6042c614-89c6-4344-b0b4-04a5aaacecc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0790f5bd-b023-415c-bf10-07bbcaefb230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd82266-675e-48a0-8e53-c44c8e2485c0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1b7ec4-2c4f-4870-992d-398f6703db6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26987db2-9fcb-42f0-9d99-b7d384c464b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3421a4-1067-43bc-a521-26fad824d584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5acf075-702a-4ab5-bc6e-d8bbf01546dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e9afe-e11a-458c-b146-016421b89043",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbd0010-d8e6-4f2a-8ccc-ab4633acf22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024d201a-b2f9-4dd9-be73-d84ab7740349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04317202-bc0f-4d9c-af60-9dd37e504a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886ad94b-c1dd-4042-a016-255b54d1bc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fdb5c6-9daa-4d5b-a15f-8407395c150a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1b7731-96b3-4d7e-88ef-54d93074e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd82448-b4b2-4a26-83a9-c7fba38d433e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff82eb7-96d4-40be-860c-24aaed82e026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa44f733-644f-47d2-b1b8-e37dbc87cba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3030c93e-4989-4e57-9401-397e7277fc5c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b0ec47-febe-4b37-9ccd-e585932ac04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e805ae4f-fd6e-446f-b50d-f05f3917d98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ed8d83-f6d7-4ae1-8671-e602ddcb99e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fab643-3ab7-4026-bf89-736c872e71f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a354184-0118-4835-92ce-17d817cae7e7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a493af-69d3-4dc3-b0df-26f98dd3ffdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba07833b-762b-43a5-b7b6-b73f2fa557d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11872277-8562-4b3f-b8ca-1f0835b0ee47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008f24bf-cee7-4491-b7b6-fc242810d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba810fc-270b-4df6-8e9c-5801aa4545d6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aee3ee8-3fa1-413a-945f-fc478d3d6816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7828c2d-cf16-433f-a1c3-bba66aa34460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f4e402-8937-46c2-9c93-02bf8bd9ea44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba369ae6-eeb6-4576-a390-30e4cac812d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9b6bf4-9ced-44a0-8127-3b551bc010b5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c6eb89-59a9-465b-bb39-c63002ab817a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d865de-fa6f-4a91-b2fb-9a125256fb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9824e22c-69ee-4d1a-af15-77f0e93610c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ea9fce-753f-4528-9ae4-dffa59f0501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02e5a50-1b41-4335-a5c0-d481a9c1ed27",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168b07f7-8d80-4538-bb8f-db6f97c0cdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc2db7d-fb72-40fc-a887-7762e0f3b72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5196332f-570f-4bea-84f8-25ea7d803906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267b0a73-42e3-475f-8c66-b29a4b14d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8751793f-d45d-4449-bd07-e1e1e3739244",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37572918-399d-4d72-9f03-07d6be4d0c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb51221-9184-4b45-a571-e6d4364a7f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde26440-86b0-4a7f-ab88-9b370507cb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee4c9cd-d049-436d-a8e0-6ed80f3e0ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e192086e-5617-4c95-aa2b-83f3670ca355",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62fd32f-fa7a-42ce-bdbf-96a685245a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c34d05f-1f0f-4a05-a994-ac503a255b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71a8c33-a7bf-433e-8341-1ea8d44e6fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d6ad95-d7f1-44a2-b904-e68afacffef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a179549-7b4a-4315-ae54-a544308485b4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08d39df-98ef-4039-8eb9-c3c0094474f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c222b53a-ec34-4b9f-9004-6d8f26a94655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f76c998-2d50-415c-b740-e02890586e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f2c9fe-b176-4b7c-9a7b-0cb77be544f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ca27e9-77c8-41e4-8ab6-9d8f02996b44",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061eb779-611b-46fb-8ab4-0efe75169080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a74d3d-6bfc-4048-9d16-225e4d347f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5462a6-1430-4d89-bc42-3b527453091f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d2a2b1-42dc-4090-8389-45b0de5b7701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0749625-a6b5-4953-9ec9-fba3b0b7a468",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf8252d-4255-419b-acca-04ab766b5d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a904711-d438-4636-a618-b18692269ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd13cdc-1150-4e2b-8522-387c7419f1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedb1ad2-d0b7-4799-bbdc-86c2bea41059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65542ffd-c4d3-42d4-9321-d0b191c435b6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a628fad-adcf-4975-8689-d900f0fc4fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee78c6ea-9a1b-41ed-88da-90d2b7e8d942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d50de3c-b6b9-488b-bf18-57dfeea240b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417285ab-fb6c-4591-aa7d-29da9bc86dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e051df94-231d-4b2f-9259-3350f206d785",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7354c9eb-4454-4b32-9639-e3784e07a5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4765ba5c-a506-4038-9fe4-2aa90c3cc961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277dd365-2714-4856-8bce-e0309fd71407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9abcf8-a801-421c-8371-1f7fcbeb19ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a766f1-97d6-4f0f-97d1-a7055d083cdf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b47e3-bc58-480d-b4b9-e01c0e459461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179a5cb1-2c4e-474e-bfd7-08aa6b40122b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb72de1b-e5eb-45c1-9e99-8b744a0db2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fca489f-19db-46ad-bd0a-1cc671aa6256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d540cf-51df-404e-889d-ed912cd8acdc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac25888-78d2-469e-aa86-3630f3ccaccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03e48af-904e-405e-b4e4-007406b69763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430e0a10-a81d-4382-8e4b-2ab27a6cdfcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2682b9d4-b601-4eb0-b45f-08af9ed4dd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba456061-e89e-4bcf-b739-703ac69ff0c0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c681cd4-0e65-4b14-a44c-a892275aafdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2244942b-ee1a-4eed-9014-27a2d810a898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a30920-4242-4f40-b7a6-15aa999ec396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c72a56-7451-4d77-9200-cb78dd4df585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd72795-5ebd-44d9-90c2-c77395ad6780",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a831c0ac-1c18-4cee-919d-c86e3434a067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b67f64-96b4-4b67-bf28-8a5c573d5498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb66a396-e4a5-4688-846d-e46a4de77063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d469bfc-8dc7-4bd4-b5ea-b7df9707f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cada96c6-a77f-4c4a-87db-d2bd30c65f83",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f25429-5128-4aac-b580-2748187a4eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0668f068-682f-482f-9159-36c1c19147cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2561b3db-44e4-478c-832d-4de0eaa0e295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f508a22-91e6-4f5f-b287-24acddbf5242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b64c37-4b5c-465d-a280-a09f824067ed",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c96c30e-eb0e-4b42-be1d-8ca8740a9105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328218bd-9bdf-405a-868e-aef0064f033b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5acda62-54dc-4403-b4b3-00ddfdd9d02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cecce3e-a5a2-436e-ad30-eecdf49bd900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962def4c-f037-44ed-8951-31541fe762d2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fea39a3-e9df-4d59-ad4e-8e46502bdd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d3fd0b-a372-4e8d-81f2-18a28c604a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d212f3-28a4-48ce-b297-5f241484eeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa5b17c-da64-497c-81b7-4449246495ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39842ad0-e201-4ed4-ae8a-c5425d48216f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4313c7-849d-4c6c-87cd-b48ecc3b5745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd3de77-d285-469e-9547-422b625a9837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c233405-7cd2-4e2e-b4e3-61e553112c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbfa2c2-ff30-4536-a599-c05af3eebbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e34c816-2112-45f0-83ad-95782c787330",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039f37c6-9c2c-4c88-9879-c920b3980139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbff3775-dc7f-43bd-b433-8303d905a0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c201e6-3eb0-4d89-a858-6581f91be8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86dd426-6406-495a-b4f7-7cf37d4b7cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ba9096-758f-4b59-a416-5b1cc1639ff5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c979f2-3fc8-480b-9f40-26760e80531c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d832ab-3e63-4fac-a138-baaa3509a8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fcd3cd-5e1f-4c4b-80f5-636271c7adab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9c03e5-ccad-437a-b37b-f307d73d63ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196bf956-8ea2-431e-a1cc-7fd89544d8a8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6825259f-3ca8-4ced-b187-b90a67cfa92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f4fdbc-f8b6-4772-a4ae-5b466def729b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec5ecec-0132-4eca-a2bb-0b6503652c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcad5b51-98d9-4af9-8155-d32b38049444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4e214f-b257-49ed-a901-91e148ebae74",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8288f9b0-385e-4bfa-b46e-23a219cac79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368563d1-6efa-4053-8ef4-1af8f1536b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d79fe00-390b-4715-b9d4-21cb9b30fff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab7d85e-f2e6-4a58-8044-6a4e1b530749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a067a11b-2e68-4203-9ebf-bba2eda8d55b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869b12e6-0616-492e-8a96-4615863942b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5739c1ba-3385-4323-9959-38d43aee1625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eacd28-2416-480c-873c-17a721eb4825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014b06ac-b4be-4e23-9f3a-19f5dcb18e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d03df5d-df62-4ee5-979d-cfe9366114c9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02142072-c9c3-4ac0-b087-7bea5e8384fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40935d32-f0b6-4e2c-bd15-90711a92321e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10f3e39-4f4a-4923-a274-0753da34679d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af29015-cd88-4bad-b0d1-c3cfda40d118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c303a190-b4d6-457a-b9c1-db51d861040a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ca123-3f72-4d34-8ca7-739817b0abaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5694b63-e8e3-4959-91b3-f53a478aab41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5b7482-290e-4bdf-a35f-8c02bd69bbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983ca717-d3e5-4d43-a2ad-5b2c2e1248ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9feca5-4146-419a-be71-752c89408cc0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3b629a-3820-4f4b-8fd5-6a0994f05e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8233a5ff-c7e8-4909-851e-fd648d7f699e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b8531b-f3bc-4af8-a8d6-9ae0d7033de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24c72b8-f9fe-48a5-a598-6d99f3fc2095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8efba0-18de-436e-927f-65806c34290d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0d205a-9b51-4c93-b2a4-515408455c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd743d2-eab2-43d8-8b03-8939511cf824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a48050-b385-4157-aac6-b5c3f00c5a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02f9d5c-8bb8-4aec-b64b-b379f3e97f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b4b416-f019-4f92-a1c2-da18f42db509",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471ff3b2-acd6-4a54-91fb-58359968f89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402e5a14-5652-4479-920c-6c77fb26006b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd19ed70-1dc9-4ed7-ac57-0aa1b9274408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5c72a0-5550-460a-af30-68fd062a8363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b962f610-fb43-4d21-8ade-ca84da7725ca",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e795b751-dca8-47a0-8b2c-798598f65d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1827b1-3f36-411e-8ba2-1af53fdccf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e365abf-29ad-431c-b599-c5a6737715f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d21e58-fb6c-4b77-9871-9c170fc5994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65ed7ea-790d-466c-8b8f-dbe064552f9a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46497aea-b09a-44c3-8759-c9198ec493d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e159fada-ba1e-41ff-a90a-2e02bcc7a972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3ed9f2-d4bd-4741-aa5e-e025364c5d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39e9b51-a972-4c5c-81df-d8e17084f543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627943f5-24bb-4af1-afb5-74c19cce9434",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e953bcba-6cf9-4484-abb2-f5ba2deb7748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725ed2ef-9a36-48b4-b4af-681f31e775f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bec7eb2-dc1e-4f59-bb02-1586459d4d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d94b093-3bc1-4717-b357-ca5505cd9649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c17a8ff-3609-4617-9e8f-ca124cd1a7db",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc08f94-ade6-4707-83d4-bfb0f8230830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b966b2-b58c-409b-a12c-f86a436fea1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f009e20-ddb2-4e50-937a-b3b6098a179b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d89b343-f0ee-4160-9852-48cf0c745067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b966d648-8c0f-4231-b96e-a7ab7de1c9e8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88869094-4b82-47ec-833b-50e87ab24f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c87aef2-1057-47b2-9c6b-0757bb000b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6470dfa-7ec5-434f-93d3-0f85faa2b264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdf357d-5da9-4ce1-8079-0c4e0b8ee1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6304e1ea-2a6e-4a22-91cc-776289838ed8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9241e05f-390e-498f-b1d3-e968335b7ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c90384-1ce3-4657-85a4-3c98f41b3f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66db623-5e36-4fd8-a813-d6f00350922a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86b2136-fa9a-4392-bacf-b5b3e409a86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdce49d-c1b2-4879-9c95-72f0dd4ac69a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c6de94-e096-4226-9127-45a985d7aeda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e05351-ac20-4e80-a971-aaefcb13e692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1485a5-da60-4879-885f-de6958e43d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c5b6d5-c91b-478e-bb22-c8d95f950b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6249576b-b888-4d6e-828e-0cd76316c1ca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e206776-d356-48d1-a09c-fa9f11324df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0e1ce6-5fae-43b6-9b58-dafb4c3ff035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d4c143-1f13-470c-a949-48424b397a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d765bb4-5d73-4a44-ad67-0b9a1986e6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bf4fcd-27a0-4e29-b3ce-6695fc9bae47",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef28da69-0d0c-443a-b7c5-2dc206ea9ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce94d0ff-f026-45bc-b5e1-c4d7964b540b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c45436-064a-45fe-8395-f2bd144d934b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b3216c-0ee5-423b-a8fa-5ee5d2632f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dee39d-e101-4c08-b3cd-ca9a45f03004",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8321a8b4-a49d-45fb-89ca-f908009d5366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574b2e4f-a78b-47e3-9142-9a6e7143a239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f8da8-2f32-44ea-9d05-1da21ba8ec34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdc3189-3895-4624-bcfc-6c001e5b6938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60ea665-aa0d-44e8-b46b-639aebcdcdb2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0e7f80-6980-453c-a3d1-2854907254a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0331bed2-4715-4a24-a44d-f5966573d3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8544c7d-7df4-4073-a9d4-4c92c1d2da6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6faf99c-82b0-4622-9169-03778bb531c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3611552-0047-4652-90f1-222ad75ce6d3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c9aa89-f077-4283-958f-f0952b4de996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf7a0ee-4866-4082-ad32-4800b14ef031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695164c6-10d3-435d-8c3c-512eedad61ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6ecaf2-ee9e-44fd-86c1-69657ab17b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e472e5-eca2-4eb1-b57f-078b963ab130",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0756bb42-6433-4462-95bc-1c349bab9880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e436e5-65a8-457f-9ab0-2d4eab75a4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e79ff9-175d-407f-8c1b-925ce0ba369a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7cf83a-e244-4889-96e5-f0d797cb243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50e78b6-9970-4249-bd1c-d5176d5f657a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e752ee1-a55c-48c7-b9d8-1aeb40449f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef98666-14a7-4b5e-9f19-d1fe46b99bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfa000c-7395-4eec-9039-8f2330471b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a71ddaf-38f2-4038-9991-127d6b50dba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee0ccc0-5e15-478f-aa0c-6bb7208eb87d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3a2c8-b444-4cc4-9994-de3745e5d5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca9ceb6-2d23-42e9-b9df-93a4fbbe214a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b1a57-5482-46f7-8063-ebbf81a69a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda7ba90-0581-4fa3-8ca1-5e3e09b4e627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806eb97d-31ba-4c58-be73-5d02d3128dcc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d18d9c0-c783-4e8e-a8d7-449afa535ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a877b076-d0be-4a94-9554-fb741f33461d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5492908-203a-4f7a-a6c8-4e933963bd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4580d49e-e743-4ca6-9541-1ac11af5de24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc75f24a-90c3-4252-9c8b-8a2545cb1def",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7cacbd-25fd-494d-ba0b-b4b36342d399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61985a99-071b-4e66-89c0-dd67b772ff67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c6551-9a1a-4090-85da-c5744d8b78fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886c124c-af65-45ae-acaf-7d2664767e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c958bc-52e2-4b08-8b94-ad31878b9c9c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38576cb9-b5c1-4da9-bcf2-84658681ccc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21598413-c18f-4749-839c-8bd3b7450c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606d1538-64a9-4843-a1e9-5c6f640b2eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d7ae1f-cc2c-486d-a01d-55d81b49bee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefeeb9c-4b73-4c80-be62-17dd536c19b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efdf4e6-af96-491d-aa01-5a6439406f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495761fd-9eb1-4cc9-a672-80a1331ca455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d0234-3e8c-4a6c-8861-88fec9d46559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7812bd89-5d16-4e7c-9bf0-8d41d6004a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc28e11-dac3-46fe-ac16-70d8d7e1dc95",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea9adee-b5f2-45d2-8f75-26e1e6933ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11544611-b95f-4b26-bc4f-197a47970f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbf2948-9306-4d40-ac7c-373e241decfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b089ad-ae9a-4540-9c99-09b2b3f365e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2edd305-9d86-4cc1-9bf0-81ba144a09b1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4d6539-a4fa-4598-b87e-1c13b656360d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cca879d-f9e9-42b7-86db-39ca834b4775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4018ee92-aa4b-42e0-8dd9-3694127f2337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2930f181-b0c3-414f-b85e-ae04afe0ce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fcccbb-e981-49dd-a8da-c3d208715190",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c53fdae-1e13-42fa-b9bc-b011e7093dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fdd1b3-f6dd-4c5e-8422-d6bd77bbbbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b9899f-d7c8-49ea-ac3e-365fad4c94ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73341015-61fd-418b-9a78-5a7a0472a307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af85b11c-364a-4129-bed7-94dd8f54a3a3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75415445-0cd4-4b8e-8d6a-217bba426f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e444d389-48d6-4f60-b219-b310d1b538d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346a79ff-2e49-46f7-9eeb-a432914d267c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a1719a-36bf-4877-b8b3-312e3f7d5dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256becc9-2e66-4cf5-ae2c-4df540a97311",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4798d6c5-23b0-4319-8656-ee0ad872f168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e79f7bc-e88c-4959-81b3-1bce21fc8c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54355205-49b8-4402-822d-013e10d98ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5887d6a1-225a-4a03-8be6-d8a379f32ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374b3f4-669a-460f-81f4-96513c81a14b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4300be81-f4cd-4367-8422-aded4c2fc3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83beb34-d803-447f-86c6-c76f6806c86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cef008-9292-40ff-b4cd-ccf2d78a9639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d80199c-ac34-4820-975d-5db6c886c2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da99003-c5f4-4620-b3a8-d4b56839b6de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316f3ce9-81b7-4ad5-bcf6-9c228979fee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c1b0ac7-9c6b-4f3c-b733-8d81a0171cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ebe426-41c4-448e-9f1e-d6fec04bf8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b291a8e-d308-408c-bc40-3119a2959b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc693c6-a0cd-4eb9-b3cd-7150f6197296",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275222a1-4018-4080-83ee-f09652e4d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c47598-7c8e-4da7-9245-14a1246c2e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2386ca-de7a-49f0-b0a8-e57ed7170a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8492717b-7d6c-48b2-be42-8ff6cc454a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc717ac4-a1f0-4693-a71f-491d5a8c9fc6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8275ba94-6cc9-4c07-885e-0b41e2daefa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a80a04-3704-45c3-8756-e8f193a3141f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34096c68-6efd-48d0-8db8-40f56aa81997",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac7e436-c51d-4fb3-8454-1515b3085843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a360b0d-1e63-42c0-b67e-0d49aca3c9db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbfe5b4-bfad-4731-9353-c783c62883c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3120d3c-4de1-4fd7-b539-61b40960aa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb98859-8ce5-4fb2-9e60-1cd2f4712c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8b9bba-3676-4013-a8d4-6815012fcf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44571f4e-96ce-4be1-be59-c549ce6d80a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9172c9-bac1-4bb6-b4c0-7275ea694a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea88e61c-1be4-4641-92a2-d70d65b01fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2e1951-555c-4a86-b3fc-20f46f8f0410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b085e0-7225-4189-8686-eab4f7f7eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f722f43-f1cf-4b47-aac0-d345dfae5b24",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70996d2-d8cc-41d5-ae64-e9fe99c62d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaaceeba-bde8-4b43-8a16-afd50bd2c63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68c8e20-816a-4d95-87b5-c937193dd4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd29e3e4-984c-4212-867b-b9da57b72d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a43ec94-d8f9-4359-b378-306d74559e57",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952f5032-f586-4437-9725-1b1774117c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09fe9314-bd47-424f-a6c6-6e40de64df33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a69b1c-1f2a-4dc2-ab15-d1fe7a272076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a319d7-29c0-44a3-ab92-1534172c5148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ebed85-2084-4800-8a15-67e052b1edc3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32afe5db-6c10-44bb-807e-36338d6acdd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283ea42c-3deb-423b-8f1e-926c8e4b5559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c9c77-3dd2-46fc-a8ab-f89e71d4bfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887d1ed8-95da-4e88-8085-eeb93933bca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573afc71-8fd3-4028-b47f-93b7c7092fb6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8f085a-5f5e-414a-82ef-02caad2f0fdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d85dd012-be6b-4cdd-99ba-92599ff60ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea68a15-e980-4e7a-8cf4-1fe43fc30918",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c209d33-814e-435a-a9b3-b2932d32fc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b77dbd-c8d5-4d45-b4f3-223618aac140",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107609ca-e3d9-4180-bd49-7959fb10a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a75af47-23e9-4205-8ab4-0b87e933831b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a9d06f-372d-4592-a989-7baf547ec0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db37517d-b898-4479-bc1a-ea38d599c229"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f39498f-960d-4b4a-b7ba-b99264944304",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d11677a-b827-4ab1-b1d5-95160d7fd9c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4af8126-5941-4f89-97d8-b7b690bae46a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4871774-9351-4008-b313-72ba72925c6e"
                    }
                  }
                ]
              },
              {
                "id": "53f48381-cdd7-4d75-a7af-717e85ff888b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43ed228b-65cf-4ff4-bf07-dc0a88038332",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40402e2-746f-4021-b835-43e18b19be9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b6d251a9-8c25-48f7-bccf-24675be5c241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ec1e38-d97d-483a-a719-50bfce0f3bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23d41890-e620-4617-8268-653ab5a44390"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618164a2-2164-4448-8bec-b031d262356c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5bdfce5-707c-4d34-94ae-ec66342fa119"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce4afc34-4288-4533-9cfe-47f3c093d159",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "480b7d1f-52a8-411c-81c4-9ec36a9a92ce"
                    }
                  }
                ]
              },
              {
                "id": "47dd4c6a-2c19-42e0-84d2-fd20b33d6b20",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8b647c54-d733-4916-87a8-cfd167ac71ea",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344cb883-f4e3-46b0-bcdc-de0b463e0ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7ec33e58-0421-429f-ad0c-fd798c098680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e9699c-4f4a-4835-8e5f-11cf3f0557e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5621c4-ee55-4620-8fb7-a4f95268a8b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "185e63f0-c04c-4b7e-96b6-c897f3c2ffea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "352af698-c45d-447f-bbc4-c405463f7be6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddf9f50a-a876-4746-b769-180148413a5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0f2f84fe-7107-4ec9-9658-a15d6e99fc35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6ff19d9-7bf0-421f-896e-0da084cace56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "482a7e99-0843-44f1-9202-9c47364dd7d2"
                    }
                  }
                ]
              },
              {
                "id": "ba6c6648-c2c8-45ff-b960-f1706a7f3652",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d827bd71-467b-49bf-a5bf-4007ab3da96e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01903f30-da81-4e24-b52f-94ec3aa76d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8dba87e-63de-4717-838b-16ec5cfaa75a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6528dc24-828d-4171-9e9f-317635a555d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb053618-91d1-4080-bcdf-86f3101bcc65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9570a3d3-9fe3-45d7-91c1-4ebd5f11188e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce7fbef2-98a0-4787-ac5f-e81d7dc26d4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de04877b-9a75-46ca-af38-d61d17902ec7"
            }
          }
        ]
      },
      {
        "id": "886fd1e4-f515-4ced-8edc-b68ccf18bfbb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62fd0f81-7cca-402e-b1e8-a27d6e4e1410",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b66bf59-c485-4d56-b580-ca5386d27eb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b18aee5e-b3a9-4a99-b0ef-6c5df6df234b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4421d417-8cc9-4970-ba9a-a43701a2ff86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d43d0a18-03dd-470c-919b-b01762018ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54494d96-9dd2-4be3-91cf-c85ccebc2160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eefac5ea-f039-4884-8cba-c7539e44f959"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dca75863-d97b-4831-8b57-1c23adcaa777",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89a18220-b09e-4595-8174-e33d17b313e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b2bb143-1a70-451d-9a15-6701e371094e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19da51aa-bdfc-45f6-95d6-0d9206bd015c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ce6f7ed-f4e2-443a-87cb-9058fde6e38e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5240e0aa-465f-4be2-87f1-ba11390336bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f975d0ba-c74c-4355-bd2a-32d2d3dd0767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0df255e5-561a-44cd-9755-083891b1e5c0"
            }
          }
        ]
      },
      {
        "id": "1cc3b62f-4576-4aa1-a072-0362829ac0d5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "802ea1b2-cd66-47ed-8e18-90c3d3937874",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25bfb73c-1314-4a3f-848c-b84b52d99080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "241ea8f8-9edd-4fd6-ba5f-ff5ee9cc4243",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eda965-b13d-4e42-8be3-047ef2a7f027",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c2229e2-7f47-47ae-9747-625eb4c7de6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49f61cc-e0f9-4afd-98cc-00aae12d5963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1998e0c-30fc-4e31-8da5-c9be6a413407"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94da9401-d4b1-4ecc-b1fe-3aa2debb0b8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce75aca3-68fd-4c03-b433-e09f1c7ece56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a39686-eaa4-4768-b1fa-661c05563a3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69323332-9c5d-4c37-9693-94658c69b4e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f3643ad-2db8-4e63-af23-7aebaf67beb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07325224-8aa7-4b19-bcdb-45680b17f26f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef39478f-8b99-46ba-ad2d-6118bacd55e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f080c96-d2c3-4aa7-85f8-0f47fb7376ce"
            }
          }
        ]
      },
      {
        "id": "8878c962-5571-440c-902d-9a4dd8aefbf2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "af4d232f-648e-4aa8-be51-61ea4db14f88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a615662-fa1a-41bf-8c4d-9ff3ea7cac8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82a9b691-7f06-499b-a99d-7eee577691ff",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58949b74-bdae-4071-9d71-c7bef04e0112",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b317888e-f555-4f8c-b9c8-910e213d3f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9783d959-6cf4-4113-bd91-d118ed057bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438a6af9-d3e0-456d-bfd6-1c979b1a3c21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7fea087-2201-4590-a02f-652192da427b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e0605d7-c4c5-4900-8927-7d04bd063eb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6f70fb5-ea89-410d-bf57-4a5c9170034e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e265bf9-fc5b-4ce4-a038-8092110b453b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d31b18de-6f26-492d-8deb-766f6ff14870",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "070fca9d-dd24-4d23-969c-105ce06edafa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40e9ea06-3626-43ec-b6c7-b3909492c2c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e16cf02-8dd9-4fb4-9907-65d002cb94fc"
            }
          }
        ]
      },
      {
        "id": "d7b1e125-c918-4e4a-894d-c7526757b4d8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de88ffd3-3c22-4c81-9b22-a49ba8b6a660",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5597d07f-b9df-43a2-9ceb-e51c97143b8f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "49c0cc90-ff42-4f69-ba39-bf8fe3e270ad",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdd784bb-a0a6-43ab-9837-09717a493d26",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82db36e6-3e7c-46f1-be9e-a8d713db1ce6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 238.10211267605638,
      "responseMin": 6,
      "responseMax": 5358,
      "responseSd": 560.1708618828544,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695947607095,
      "completed": 1695947687886
    },
    "executions": [
      {
        "id": "4611e9b4-6422-4436-b220-ac243d48ecd9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ea132323-388d-4116-8c52-10d7507e7d32",
          "httpRequestId": "7ac0b8a4-c2c2-48cf-a521-8d50c03af656"
        },
        "item": {
          "id": "4611e9b4-6422-4436-b220-ac243d48ecd9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec8488bf-8403-4c1a-9192-e874f446f066",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "c4ab52e6-2e10-4557-8eeb-e1f2d4dff9ec",
        "cursor": {
          "ref": "89bb4dd0-38e5-444c-a306-fd4dcc0b35e0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "50d95232-edec-4848-8b16-052d299b7472"
        },
        "item": {
          "id": "c4ab52e6-2e10-4557-8eeb-e1f2d4dff9ec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20847661-a22f-498b-b26f-a7d8adf2b258",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "86439130-2fa6-4155-9a98-45fbfc5b79a4",
        "cursor": {
          "ref": "1c333f16-2de5-47d3-80db-e60f72369be0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "314028be-22e1-4bc6-80fa-8a3c687db63b"
        },
        "item": {
          "id": "86439130-2fa6-4155-9a98-45fbfc5b79a4",
          "name": "did_json"
        },
        "response": {
          "id": "ce830573-1fcf-42a6-b9fc-4fabcdf0008d",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477aad8c-2049-43d2-b4a4-858647a4bcc4",
        "cursor": {
          "ref": "7f9611b2-4293-4305-b14c-994840249ad4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acad2613-8a38-4ccd-804d-1bd21aee6e07"
        },
        "item": {
          "id": "477aad8c-2049-43d2-b4a4-858647a4bcc4",
          "name": "did:invalid"
        },
        "response": {
          "id": "a57f1660-b038-4e55-9db1-f010ae261f50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1926,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477aad8c-2049-43d2-b4a4-858647a4bcc4",
        "cursor": {
          "ref": "7f9611b2-4293-4305-b14c-994840249ad4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acad2613-8a38-4ccd-804d-1bd21aee6e07"
        },
        "item": {
          "id": "477aad8c-2049-43d2-b4a4-858647a4bcc4",
          "name": "did:invalid"
        },
        "response": {
          "id": "a57f1660-b038-4e55-9db1-f010ae261f50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1926,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4289147-9726-4f4b-a540-c9ff893edb7c",
        "cursor": {
          "ref": "79d770b1-4b38-488c-9074-066a06149b4e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1d7ae18d-9320-4797-be9f-94b3169fddfb"
        },
        "item": {
          "id": "c4289147-9726-4f4b-a540-c9ff893edb7c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "86a68203-2eb0-4544-a5b2-0761bba85a38",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1779,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8ea0a9-8d90-4ded-9896-0bec5944ce44",
        "cursor": {
          "ref": "ce50e8cf-ba6f-4e92-8103-f50eb5935437",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d389c5d9-6246-44d6-b115-b667373bd679"
        },
        "item": {
          "id": "6e8ea0a9-8d90-4ded-9896-0bec5944ce44",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de257163-5a78-42a0-bf5f-453661ba93f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3019,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c3eb87-f841-46a9-affc-4ef5e47d57f0",
        "cursor": {
          "ref": "2d05bd95-13b0-4ec1-810c-d347b93465a7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e3e0d695-0c00-4b9a-9dc0-12a2adadc660"
        },
        "item": {
          "id": "b7c3eb87-f841-46a9-affc-4ef5e47d57f0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9f09ecdf-bf0c-4cba-81d3-117f8ad65a2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 879,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9186f67-f1f8-452f-99f3-01dbae9ee867",
        "cursor": {
          "ref": "8d40cfa8-e3ed-4aa9-8b82-3a26433426ae",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "73a6a191-2ed8-467f-9886-328cccd23e3c"
        },
        "item": {
          "id": "d9186f67-f1f8-452f-99f3-01dbae9ee867",
          "name": "identifiers"
        },
        "response": {
          "id": "30b63048-8baa-4a2e-ad66-2431277e6d9a",
          "status": "OK",
          "code": 200,
          "responseTime": 1495,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd586e0-8b7c-4a61-a18f-bb3bb80a933d",
        "cursor": {
          "ref": "246e71b8-e4fb-4770-8a8c-8251e0d7330d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "eccc3531-9963-41bd-8f72-bd2cb2aefdd6"
        },
        "item": {
          "id": "1fd586e0-8b7c-4a61-a18f-bb3bb80a933d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "82d733a3-9319-45c4-a347-cbc5bef1aa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1444,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a99497-de6a-44a6-80e1-c69bd1594a2a",
        "cursor": {
          "ref": "42f40432-96ed-4a70-af3f-8e6b2468a6e5",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bbb8ee79-7f88-4af0-abc2-69693f4966a2"
        },
        "item": {
          "id": "07a99497-de6a-44a6-80e1-c69bd1594a2a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "07f694ba-8f2e-45f6-91c7-6ce54f6c5b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2459,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d7245-6dca-417a-ad18-bb9d2e4b93d9",
        "cursor": {
          "ref": "be5ba232-7005-450f-b119-6179af231e22",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "edf76bca-2b89-453a-a6d0-5cc9acd71a99"
        },
        "item": {
          "id": "b88d7245-6dca-417a-ad18-bb9d2e4b93d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "924dcef0-c224-425a-888d-083ee7a95919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1480,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bdb137-f141-49c2-8542-483e96f8abdf",
        "cursor": {
          "ref": "df7e8631-935a-4448-aad6-689eff097da1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0bb5b72d-c45c-425c-85d8-9d2ab48aad65"
        },
        "item": {
          "id": "43bdb137-f141-49c2-8542-483e96f8abdf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "40b0e45c-42bf-4d47-9d89-c1fe2befd6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2353,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b7e6a2-c76f-49d5-b72e-75797dd58a41",
        "cursor": {
          "ref": "cc4ab4ed-935c-48ca-965f-ab61d34bb96c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9e58a45a-969f-4954-92f7-6a9411ae1095"
        },
        "item": {
          "id": "57b7e6a2-c76f-49d5-b72e-75797dd58a41",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "98a20120-d8be-4322-878d-799de2bd09bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1163,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe7a839-7bdc-414b-902c-96e39c90ff96",
        "cursor": {
          "ref": "a8d7bc7c-1f5a-4d4b-a166-54e6b17180a6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "43445108-361f-430b-b821-190ef5a8c5ce"
        },
        "item": {
          "id": "efe7a839-7bdc-414b-902c-96e39c90ff96",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cc50fa35-3c47-4bf4-a063-7d1f0948cf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64353605-1acc-409a-b34d-3760f4511e77",
        "cursor": {
          "ref": "3acabdc9-8cb4-4d87-a655-03bfb62b6665",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3eb5935d-0018-4811-8988-bc3a377c7caa"
        },
        "item": {
          "id": "64353605-1acc-409a-b34d-3760f4511e77",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "99f02786-522c-4c8b-adbd-0576e684fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064277b3-2a48-4dbc-955e-86e7b8cc1dab",
        "cursor": {
          "ref": "0e979ef3-0cc3-49f0-ba17-67095e0973e4",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d773f2ae-4540-4e88-a007-0e5dd8bc3ce5"
        },
        "item": {
          "id": "064277b3-2a48-4dbc-955e-86e7b8cc1dab",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "abdbea28-476e-444d-a711-c0e2f38fb1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b30ec5e-14f2-4130-9a87-f35672b6a9c7",
        "cursor": {
          "ref": "89df9eae-aed4-4076-a58d-d8435bb56b21",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f3c16762-4387-4e09-8716-6dd538d3e319"
        },
        "item": {
          "id": "8b30ec5e-14f2-4130-9a87-f35672b6a9c7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a1f7c855-3c57-49ed-8299-cf3dd76eac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c2414-84af-4f2d-82b7-7c74b7a85408",
        "cursor": {
          "ref": "226d71aa-fe86-48e6-87f6-ed3bd361cb58",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "066365be-75f9-43d5-a5ac-bad7c7c5009b"
        },
        "item": {
          "id": "c72c2414-84af-4f2d-82b7-7c74b7a85408",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20fae42f-0bca-44a7-a896-e5116bf12db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e120ab36-bfca-4880-b3a2-8210cd2724c0",
        "cursor": {
          "ref": "1a084936-b17b-4438-bb5d-49507b128dce",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "309c0f59-b4fc-4524-98d1-f5f8eae39e87"
        },
        "item": {
          "id": "e120ab36-bfca-4880-b3a2-8210cd2724c0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "37417248-7134-4d77-bafb-1e3da7f0a529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3751ff9b-2260-4c48-9050-a345ef0ce829",
        "cursor": {
          "ref": "a647273f-fc8a-469e-ae35-1ed67b608ba8",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7c7445f5-28a1-45b9-8ca3-bdf1b5caeca3"
        },
        "item": {
          "id": "3751ff9b-2260-4c48-9050-a345ef0ce829",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6bfbce5d-17b7-4ec3-ada9-996fd160a291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5de3604-13ec-4e9f-9cb8-4635e381184f",
        "cursor": {
          "ref": "7a96b595-9da7-4a67-994c-8c78e5b00b97",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43cab8e0-6b90-435c-a003-e1acec5d778c"
        },
        "item": {
          "id": "f5de3604-13ec-4e9f-9cb8-4635e381184f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "49d47922-e55a-44da-8881-9c73348b9122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13d2c03-6868-474b-bf94-bd81b8f1b42e",
        "cursor": {
          "ref": "ce1cbe26-1f65-408f-ac4a-e20a3e42100f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bbfc4ab1-6dcf-4574-b52a-2d3900782dbf"
        },
        "item": {
          "id": "a13d2c03-6868-474b-bf94-bd81b8f1b42e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ceecd9e0-dacc-462e-8f76-0a9495e82da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c286194c-2f50-456c-9101-df6be9006c49",
        "cursor": {
          "ref": "84e01a21-0e83-4369-851f-14b36b0d199e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e011cd8a-35a6-4adf-8d85-0f8c2b3303c2"
        },
        "item": {
          "id": "c286194c-2f50-456c-9101-df6be9006c49",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9da943f0-093a-42a0-b2a9-b9092475fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9fb1b6-bd22-4b2e-b306-765cc6f79087",
        "cursor": {
          "ref": "f46f12d7-487d-45b8-ab3e-5829b71a51d1",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2f55188a-4a46-49a4-83bf-28fbfc688d00"
        },
        "item": {
          "id": "9f9fb1b6-bd22-4b2e-b306-765cc6f79087",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2ed15eb8-ec93-4e83-ac3a-110b6e327bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4276a6-249e-4c81-a3a3-b907b74765fa",
        "cursor": {
          "ref": "1ba5eae7-2603-41cb-a358-7715ed4289fe",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d58edf89-0419-4c92-9404-ff13ffec895e"
        },
        "item": {
          "id": "da4276a6-249e-4c81-a3a3-b907b74765fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8143d271-b488-4032-b8f5-4d8da14741ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696a5d34-612f-43c5-bb3b-58eaaec0765b",
        "cursor": {
          "ref": "3c4d0ef2-2003-47c3-991b-41e08449f0c3",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6e7c295d-1a24-4be3-bed1-50bf66cd2b12"
        },
        "item": {
          "id": "696a5d34-612f-43c5-bb3b-58eaaec0765b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "29d850b7-00e1-4a13-b9b2-6ad5af8b76aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278810e4-18d7-4732-a775-4295fa2924ee",
        "cursor": {
          "ref": "65842e5f-2cce-4ce3-8268-d9311459b9c2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6e395bef-e3bb-49c6-b2a1-eafeb156120b"
        },
        "item": {
          "id": "278810e4-18d7-4732-a775-4295fa2924ee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e4cdb525-1a8d-4943-87c1-7b6028fa4e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c902f06-19be-4bac-9783-f4cfa559c7c3",
        "cursor": {
          "ref": "063f1598-fa8d-40b0-8db4-12728a19b5e1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0af9a3b3-b74d-4f72-9318-e632c3a24cd1"
        },
        "item": {
          "id": "4c902f06-19be-4bac-9783-f4cfa559c7c3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "191d0935-4b54-4caa-97bd-0108abe01dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fa20ea-57d8-4f3f-8dab-c64a424490be",
        "cursor": {
          "ref": "742a6c26-8dde-4e70-b8f7-59a829b9c625",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "702d24a1-05ee-4fc3-8d5c-5640cf4dbc0d"
        },
        "item": {
          "id": "41fa20ea-57d8-4f3f-8dab-c64a424490be",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e9d44d05-ef64-4994-8ae9-a6af4766b8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30ef9bb-dbc4-4624-b14f-9072756b3c37",
        "cursor": {
          "ref": "8171aa7f-08fa-436d-85f6-7d26c69b0fda",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "808f3cfd-6267-40fc-9d85-ec1cc1cbebbb"
        },
        "item": {
          "id": "a30ef9bb-dbc4-4624-b14f-9072756b3c37",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8c3b01bb-bdde-43be-b992-60e8a2e35636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed5d8d6-6240-4eac-a3e2-abb8615af34a",
        "cursor": {
          "ref": "ac3adac3-6b50-4b11-9c37-56e62634b26e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9cd301e8-8ba1-429e-8591-72fd80f98ced"
        },
        "item": {
          "id": "8ed5d8d6-6240-4eac-a3e2-abb8615af34a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3470c2c1-374c-41d8-8d42-1a1f3b30f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f80e465-054f-43eb-af46-f3e5013206f6",
        "cursor": {
          "ref": "3c0f0aa0-6b5c-4796-95cb-567c1af2a845",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b977df81-f611-4574-8721-ef19e5ef108d"
        },
        "item": {
          "id": "1f80e465-054f-43eb-af46-f3e5013206f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "31b03180-d087-4b65-ba17-e51db7253493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7131db8d-5c0d-4f4f-8866-2e530cc6ae73",
        "cursor": {
          "ref": "426d443c-da44-4b93-bfae-61aed9a13f0f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bfddf13f-c406-4436-9c11-5bd8755ff8fd"
        },
        "item": {
          "id": "7131db8d-5c0d-4f4f-8866-2e530cc6ae73",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "76aad741-bb8f-47b6-80d6-cf5975d889ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895c2186-5a29-466c-aded-8ea568324247",
        "cursor": {
          "ref": "e16d80eb-af54-42c2-bcf3-16c917dcaf58",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08f6bf15-6ad5-46e7-99ba-7b472205a659"
        },
        "item": {
          "id": "895c2186-5a29-466c-aded-8ea568324247",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "488587c7-416b-4fd2-9256-36f3f6924bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac77020-8f23-44da-8916-63f684d3e7cb",
        "cursor": {
          "ref": "3eed9c6f-5541-479f-bd27-54483c460124",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ace9cff8-1ede-433a-8af7-e8ca47c70923"
        },
        "item": {
          "id": "aac77020-8f23-44da-8916-63f684d3e7cb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9aece444-55fc-493e-85fc-1e083da05d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4191abe4-3bb5-4952-9fd2-a44878941abe",
        "cursor": {
          "ref": "afe8f15a-e762-4a6b-bed8-5eba8b916d7f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7d958e14-8ee8-414e-8e12-e6e000d17db3"
        },
        "item": {
          "id": "4191abe4-3bb5-4952-9fd2-a44878941abe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8971d61a-1d8d-43d6-a170-04cd543bd408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b318d2-1601-4099-97fc-1b90843d95f2",
        "cursor": {
          "ref": "211600d6-1198-4681-8334-9861f8da7729",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bb666dbd-94b2-407f-9aa2-cf2a607f1f26"
        },
        "item": {
          "id": "f0b318d2-1601-4099-97fc-1b90843d95f2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e11b6cc7-a3f8-4bf8-a161-10b737b5a3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b7b66d-3dc4-44fe-8c87-27ed679db280",
        "cursor": {
          "ref": "4b3b081b-8881-4c0c-bbe3-b1cf242cadc8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "92504258-93f1-4014-bd18-83b90baded59"
        },
        "item": {
          "id": "47b7b66d-3dc4-44fe-8c87-27ed679db280",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b1f6ca53-dd30-4ef8-adda-dd8f94755c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5206636b-10a6-42fb-a3c3-c081ec08d97f",
        "cursor": {
          "ref": "e943cd70-b8a9-4818-8716-5fb28d70f1b2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "aeeaa387-70ad-4da5-908c-44ab30107ace"
        },
        "item": {
          "id": "5206636b-10a6-42fb-a3c3-c081ec08d97f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b472fdf8-0495-4935-ae7e-5b35691a4cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f240ab6-e682-4ed9-a937-1e4812f9b397",
        "cursor": {
          "ref": "af930b3c-d801-424f-b3ce-ac6bd83d6686",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a65adb57-ce71-4276-93f8-d57197dd4d64"
        },
        "item": {
          "id": "6f240ab6-e682-4ed9-a937-1e4812f9b397",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9b4c32d3-b62e-4991-a4d4-d3a402b79e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb396ba-46e9-48b8-b56a-cc7fbb221f8e",
        "cursor": {
          "ref": "299e0f8b-fd62-4f5a-9a89-32ce391885b7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8afd75a0-d517-433b-b06e-f13c2b460522"
        },
        "item": {
          "id": "0fb396ba-46e9-48b8-b56a-cc7fbb221f8e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "79815909-c3f4-44d0-bb23-7eabc06f809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb88e85-0414-4fe5-97bb-9fbe4c17e829",
        "cursor": {
          "ref": "7a555eb2-c268-4766-831a-3b5a005d09d2",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1424c87c-360e-45cd-a048-3ae2d16940d9"
        },
        "item": {
          "id": "7cb88e85-0414-4fe5-97bb-9fbe4c17e829",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "caf5cbd5-7397-4fb0-a949-be8357d1fb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924cbcc4-2888-445d-9e9d-368e8737c518",
        "cursor": {
          "ref": "4d55fcea-c1e0-4e4e-8a76-9db3048dac0c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb33b064-7fc3-452b-baba-c0147738ceda"
        },
        "item": {
          "id": "924cbcc4-2888-445d-9e9d-368e8737c518",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "08e3b12b-a034-4290-8d39-943197c768cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add2b426-3b24-4aff-8845-a3829ce6ac9d",
        "cursor": {
          "ref": "e44d960f-f1a4-43bd-9108-28052fa70e4a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c35d14e9-a121-402a-9322-417ef66cd00d"
        },
        "item": {
          "id": "add2b426-3b24-4aff-8845-a3829ce6ac9d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e0447ef9-76bc-42de-9283-89e5dce7f97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c257cf69-c164-4d92-a9bf-81b5da6a2ba2",
        "cursor": {
          "ref": "309cc38d-5530-4679-a259-60acf99dac99",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6882bdeb-a681-4bcd-99f2-8e183b2db194"
        },
        "item": {
          "id": "c257cf69-c164-4d92-a9bf-81b5da6a2ba2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "aee57c38-c69d-4600-9248-bad2eb2c1bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1344f-425a-42cc-9479-d9af6dd4913f",
        "cursor": {
          "ref": "4f8d8e16-19d5-468d-9d71-455c28f0e8c7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b87ecc40-5b7a-463c-86a3-5215d51d631d"
        },
        "item": {
          "id": "abd1344f-425a-42cc-9479-d9af6dd4913f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1ddc5b57-d9c1-4fab-9293-71eae352b935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b193d3bf-7ecc-41c0-ab3e-2e09fb8d5174",
        "cursor": {
          "ref": "faab073c-8da1-4060-9a78-9da5cc35119f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "228cb926-127c-4c3c-8d1c-72433d273d4b"
        },
        "item": {
          "id": "b193d3bf-7ecc-41c0-ab3e-2e09fb8d5174",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "631fa946-2283-44e8-a503-1477d21208a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0fdd32-bc0d-4f74-8756-d0ec68a7b669",
        "cursor": {
          "ref": "b77cb8db-7912-4dfe-889e-84d6e86dffad",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "894ac2e8-54ad-43fd-b7f0-06bc487f9e26"
        },
        "item": {
          "id": "7a0fdd32-bc0d-4f74-8756-d0ec68a7b669",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3f23aeed-bc31-4029-ab62-46a53df7c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75adc18-cb11-4e1a-9ab8-cb4745456b01",
        "cursor": {
          "ref": "a419a080-9456-489c-9bdd-90025fad565e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "de4d8a48-048e-4176-a963-7c40eddc1ec9"
        },
        "item": {
          "id": "a75adc18-cb11-4e1a-9ab8-cb4745456b01",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2724629f-3c06-4dbf-9c02-e16a55d60e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07919f9f-ba8a-48a6-87b4-b548ae455718",
        "cursor": {
          "ref": "05106cb9-76f8-4f5f-9703-1a7d6bbfd05f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d84c0804-1d3c-4a1a-babc-5661d2f31a3e"
        },
        "item": {
          "id": "07919f9f-ba8a-48a6-87b4-b548ae455718",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fe771221-c2d1-4786-8da8-593be7c8bc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f33bf9-36b7-46f4-9cdf-81522ec38b35",
        "cursor": {
          "ref": "e5413b1d-0f46-428d-b45c-3b55cb835064",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5286e822-ecf0-47d8-8b49-4e78375770b5"
        },
        "item": {
          "id": "46f33bf9-36b7-46f4-9cdf-81522ec38b35",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c9aeff3-d6dc-4a61-a22a-dc9430d2724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f499ce3-a094-4cae-8967-82ffceaed1e5",
        "cursor": {
          "ref": "79013229-da99-446a-b6ad-92d34473880d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "99306d96-b88a-4fd1-9134-f4688cb46802"
        },
        "item": {
          "id": "6f499ce3-a094-4cae-8967-82ffceaed1e5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5dbf1658-637a-4d6c-962c-9052a9a1db20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79e4ffa-d378-4175-a312-a2132c0bf7a4",
        "cursor": {
          "ref": "e5c71896-e56b-47ed-a833-e9b8140d66b4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d8768452-edfc-444d-9e36-2cfac6f13e9a"
        },
        "item": {
          "id": "c79e4ffa-d378-4175-a312-a2132c0bf7a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f00a3a5f-ba7c-4763-877b-4da0f88cf891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca13589-8345-4fb1-abeb-13393d5cf75b",
        "cursor": {
          "ref": "64100e92-e24c-420c-a991-9cc9e73a9248",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "627b9004-d169-4132-9696-6f798fef58f9"
        },
        "item": {
          "id": "7ca13589-8345-4fb1-abeb-13393d5cf75b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ca71dd93-081d-4741-b9e2-d6f4d720baae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00826cae-5870-4f21-810d-d8ba8311cf56",
        "cursor": {
          "ref": "b160145c-de92-47a3-98d9-48aa706508cc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "81d0e19b-8bc0-46ae-9ebb-c214c8b689c9"
        },
        "item": {
          "id": "00826cae-5870-4f21-810d-d8ba8311cf56",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c112e5b8-5804-43ed-b92e-29f12dbc63c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715ab42f-8443-4bdc-95b4-12eb754d9672",
        "cursor": {
          "ref": "a49f8b52-f7c5-45fe-bcee-578fe49b0d46",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5873dd5c-35bc-4dfe-8587-0f46b145b94a"
        },
        "item": {
          "id": "715ab42f-8443-4bdc-95b4-12eb754d9672",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3fb5b5b9-49af-45d2-8e70-e9294771c80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6716ef6-b9e7-41cc-b19f-2e0268f4d1db",
        "cursor": {
          "ref": "a7b2144d-5ab6-4287-a8d4-f44416467207",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8327b09f-8df0-4f90-80c6-6479c8af3c38"
        },
        "item": {
          "id": "c6716ef6-b9e7-41cc-b19f-2e0268f4d1db",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2076dc11-d740-45d8-bc86-8b969fbfb6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb9b620-ca2f-4c35-93bc-4bab14d8a226",
        "cursor": {
          "ref": "3008e5e0-322d-4a80-bc7a-febee02492ba",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ba582b9b-8fcd-4423-9f15-550d76f6a0f9"
        },
        "item": {
          "id": "4cb9b620-ca2f-4c35-93bc-4bab14d8a226",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d0b38b52-9d2e-46c3-aa0e-6f060ba6618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a29fe8-b5e1-480b-9cfc-7f074a6522d1",
        "cursor": {
          "ref": "7be55a72-c0de-4c5d-b38f-904ba8794163",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b8b44018-8b5c-44b2-b81a-8cd8c5f6ea7d"
        },
        "item": {
          "id": "27a29fe8-b5e1-480b-9cfc-7f074a6522d1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5daba87f-5f4a-47f2-8d68-9225ad123a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449ba98e-24ce-42d5-a4c2-2f38717ab8fc",
        "cursor": {
          "ref": "afef97a5-37e5-4910-8bc0-f343c3eb763f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "817b3aeb-3f34-4726-9d61-c553737933cd"
        },
        "item": {
          "id": "449ba98e-24ce-42d5-a4c2-2f38717ab8fc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9ea9f680-2d53-4d54-914b-3d1991ddef3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00806cf-7522-4207-8a0e-15bc133a6501",
        "cursor": {
          "ref": "37869c7a-9525-4d01-bb97-1c10ccbb66f5",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ac2f3750-bf53-4bb4-bc28-b5693152a65a"
        },
        "item": {
          "id": "f00806cf-7522-4207-8a0e-15bc133a6501",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a9b09942-4a90-4f8a-be62-6e29376f5d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ac95af-2d98-47a9-b8b3-fb3e1f8b8507",
        "cursor": {
          "ref": "93a28151-0740-4132-9e8a-fbbbe6292a7a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4aa5f55f-ce52-4d0b-8981-b863eee2ee0f"
        },
        "item": {
          "id": "e6ac95af-2d98-47a9-b8b3-fb3e1f8b8507",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fcf91b32-7fbe-4045-9318-20cf7a9b98f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c769d7-d31b-45c9-8e38-01637f5afab8",
        "cursor": {
          "ref": "97b34d09-dfbe-4c72-8687-8faae1f1f5cb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6bfa647-53d9-4106-824b-b7c4a0d143ce"
        },
        "item": {
          "id": "05c769d7-d31b-45c9-8e38-01637f5afab8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dfcea336-56a2-44a1-ab20-d326e7e2f858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d0f94e-6fa2-4bd8-9c08-1ab54d7c4925",
        "cursor": {
          "ref": "6d0ed53f-b2e8-4c1e-9491-afca34184513",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5ac57170-2fa9-4634-9238-c2d3b3d8f7c8"
        },
        "item": {
          "id": "72d0f94e-6fa2-4bd8-9c08-1ab54d7c4925",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9ca50fb7-7a21-4a09-8200-27edd746b811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1ea301-8bc1-4909-b666-ef57b479e1a8",
        "cursor": {
          "ref": "876e9c79-676d-4a79-9ea8-585ac2959259",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "547622da-7306-4330-aca5-de3337802f1e"
        },
        "item": {
          "id": "db1ea301-8bc1-4909-b666-ef57b479e1a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c8b5d80a-2c85-4012-99ef-c7fb7c72fa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1136ce89-8245-4f50-a8b3-15e0e6da0438",
        "cursor": {
          "ref": "1eb6c33d-5346-4422-a59e-bcbe90a1631e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "148ab297-5a6e-4d30-b6ae-f42c8479d3b4"
        },
        "item": {
          "id": "1136ce89-8245-4f50-a8b3-15e0e6da0438",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dba832e6-deab-4085-b024-7f82a75f330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc9f24b-5207-4213-a056-007805fad91f",
        "cursor": {
          "ref": "5827f8fc-b1e6-4acf-8c16-89f6b1c94eb9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6e7f5616-2ce3-47e8-80b4-d62ff7434850"
        },
        "item": {
          "id": "1cc9f24b-5207-4213-a056-007805fad91f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac6fb12c-77ed-4ec3-aa76-0c0dfcf94add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ec16b-654f-47a4-b6b9-15d6e6ed5d16",
        "cursor": {
          "ref": "e9957251-c565-464a-8b96-f86c49375146",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c197c5cc-9fdd-48ae-a1af-8e81b5375a77"
        },
        "item": {
          "id": "c64ec16b-654f-47a4-b6b9-15d6e6ed5d16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a7e336dc-0022-4fa7-bcaa-86578d0740f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d06f24f-7ebd-4559-83c7-f92ffd391741",
        "cursor": {
          "ref": "4c2f151a-313b-48a0-bf9f-51d8967f5288",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "46a6f6f4-85e3-409c-b35b-19ee645c4952"
        },
        "item": {
          "id": "5d06f24f-7ebd-4559-83c7-f92ffd391741",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d637134b-bf17-4196-9395-e7e6b7f87840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fd91da-e466-4129-9bcb-e76362d3521d",
        "cursor": {
          "ref": "ccdc91d0-291d-408f-b540-c49d9c800b0e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5eb1cad7-bba4-4bec-9a51-d8fe76d4da2e"
        },
        "item": {
          "id": "b9fd91da-e466-4129-9bcb-e76362d3521d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aaae543d-7412-4ca1-88bd-4d211ad1ba0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f247cf-7f35-401a-8860-8eeec17d050d",
        "cursor": {
          "ref": "4203bc58-2f3a-49ab-9b54-d36831e7e9bd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f126fa8-8bce-48ba-8f75-8b6908858a84"
        },
        "item": {
          "id": "18f247cf-7f35-401a-8860-8eeec17d050d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6ebabf9a-dc75-445d-88cc-1388d304fb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf20945-4195-47a8-80de-1ed199e35275",
        "cursor": {
          "ref": "da8031eb-28cf-4ebe-88b8-f1b92c43b5c1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5ad212ed-503e-4302-bec5-6536f7d52333"
        },
        "item": {
          "id": "faf20945-4195-47a8-80de-1ed199e35275",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2295203c-2d64-450f-ba5a-03897ab20225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa18ef25-2ebd-4cbd-8300-9cd52e17b10b",
        "cursor": {
          "ref": "0f50d21e-71cc-4162-9ee5-45516673e9a5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b0e3f39c-adce-4593-9981-1d5c9706f13b"
        },
        "item": {
          "id": "fa18ef25-2ebd-4cbd-8300-9cd52e17b10b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c8d4d822-bf0d-46eb-a656-2047e32c7b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985b63db-4ec9-44ab-9236-05d00c2e64d6",
        "cursor": {
          "ref": "cdd2dfc7-be21-4987-ab4e-e8020659dc7b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ddfbe362-7b4c-40f9-a1f7-211cc69d4441"
        },
        "item": {
          "id": "985b63db-4ec9-44ab-9236-05d00c2e64d6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b384eab-5855-4e06-91e6-1d0194126a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5566cd-843a-4907-87b5-5f9615c4c270",
        "cursor": {
          "ref": "2e6b3cab-cec0-4e2e-b999-cc4c1b951255",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "084c218a-5eac-421a-a37b-c3f2ee35d92b"
        },
        "item": {
          "id": "3f5566cd-843a-4907-87b5-5f9615c4c270",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68e3ca44-f2a1-43bc-b955-70525b41d87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e472088e-3ae7-49dd-9eef-79ac6ddb2814",
        "cursor": {
          "ref": "69192071-f0ca-4dde-9d2d-0957f5e0ceea",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0ab4b1b5-5670-4929-92a3-e822a425c577"
        },
        "item": {
          "id": "e472088e-3ae7-49dd-9eef-79ac6ddb2814",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dc05915e-6a02-486f-9836-dcfb52e9496a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570b5437-cbf3-4261-b007-a7046f1640f4",
        "cursor": {
          "ref": "3196c4e7-5af8-467d-8ac0-99d3f5aac545",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ad4b2d7d-33da-48fb-8761-1bf491f895aa"
        },
        "item": {
          "id": "570b5437-cbf3-4261-b007-a7046f1640f4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cdd0259f-318e-4038-8093-fca770426198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5431e17b-1397-47a0-9fa3-51bd30561742",
        "cursor": {
          "ref": "d50a6256-7b04-4762-931e-5f2deb2dd1a3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "de706dad-5a2d-4b82-9bc1-e10850d53861"
        },
        "item": {
          "id": "5431e17b-1397-47a0-9fa3-51bd30561742",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e3cd6af-ddf3-433e-913d-aa0640f011b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93db5e66-7f34-4769-9e7d-73fa29f9830e",
        "cursor": {
          "ref": "870db1ee-948c-418c-b43f-7ead0dde3f9b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e064ce0-471a-4cac-8701-f44a8ea3678a"
        },
        "item": {
          "id": "93db5e66-7f34-4769-9e7d-73fa29f9830e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "201d030d-4197-40a8-953d-30892b1d15d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbb8441-166d-4919-aaf7-3350d9bb65b2",
        "cursor": {
          "ref": "1e0e2bfb-3e62-44e1-9ca0-d5704c60e669",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "896ac95c-2532-44ac-b8d7-27b51bb5e2b7"
        },
        "item": {
          "id": "2cbb8441-166d-4919-aaf7-3350d9bb65b2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "56ddd394-a5b9-4e6a-b7ae-63140be9fe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dabc5d1-7c6f-44e4-b14a-774cb8cf095f",
        "cursor": {
          "ref": "88251183-30bb-4d2c-898c-a7cba8f60b77",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e459eb54-f3dd-4e08-879c-3dc36e6b1cfb"
        },
        "item": {
          "id": "9dabc5d1-7c6f-44e4-b14a-774cb8cf095f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "620be6e0-daf8-41fe-bd87-0574a284d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3492ea23-428f-4838-98c5-5a23da59e611",
        "cursor": {
          "ref": "1fb058fe-650d-464e-ab71-a6b37c6eadf4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a5ba28e9-4b9e-4145-948a-a0c54bbe8ed3"
        },
        "item": {
          "id": "3492ea23-428f-4838-98c5-5a23da59e611",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8f8346c9-522d-40e4-918e-cb09d1a78f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf1ee07-6ced-4ca0-b8d7-f939c8127569",
        "cursor": {
          "ref": "06a210f4-e6d4-4c08-9e74-b5a7c88b8c13",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3fc8533c-d9d3-4204-a0c4-38c87cdd593a"
        },
        "item": {
          "id": "7cf1ee07-6ced-4ca0-b8d7-f939c8127569",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "92eb1933-2bff-4b50-a063-8f89eb27c9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65cc371-7d7f-4950-9065-d2a0fea4e920",
        "cursor": {
          "ref": "c68efab6-1eac-4337-b2a9-8719d6174adf",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ee1d2d94-74d9-4500-863e-203ff887bb68"
        },
        "item": {
          "id": "d65cc371-7d7f-4950-9065-d2a0fea4e920",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ad7e1997-107c-4b5a-b51e-985c3909f809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3636578f-cd14-4596-abbb-6640be21eec1",
        "cursor": {
          "ref": "852a8a9e-2698-435b-be40-b74575ebaf5a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "beaab4bb-7281-4bdd-97e4-cbf81ed9c2d6"
        },
        "item": {
          "id": "3636578f-cd14-4596-abbb-6640be21eec1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2390c1fc-422b-4688-8d99-810dffc4ceeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2152a41-031c-41fb-8980-21624abad092",
        "cursor": {
          "ref": "03a96f96-6716-4a27-b61d-174102b84202",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8d6f3dfb-92b5-4f1f-b0f7-184e8b519315"
        },
        "item": {
          "id": "c2152a41-031c-41fb-8980-21624abad092",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1396f4ef-a6b1-4ba1-8360-ea117c8f356e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b783ab1-76f5-4b1a-ad54-47dd78a39f28",
        "cursor": {
          "ref": "9c8917a9-4a28-4d31-9ec6-70850b8fd831",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c12f5495-0ac9-4b51-9bb2-a693987e5acb"
        },
        "item": {
          "id": "2b783ab1-76f5-4b1a-ad54-47dd78a39f28",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "618ef314-9809-4105-ae94-ee6fe8d330b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaac5f0-ffe9-4324-82cb-151d10b9dbf9",
        "cursor": {
          "ref": "341d1858-e2ce-4da5-a8df-02804e2541bb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57f2e455-7652-4153-af68-1ecc2273605a"
        },
        "item": {
          "id": "eeaac5f0-ffe9-4324-82cb-151d10b9dbf9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "28f8f3a5-5fdf-447f-b522-21cb77a8fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c72e349-5944-44f6-be8a-42a0b7301403",
        "cursor": {
          "ref": "b3cdff7c-fc21-4493-8249-1ec79fa49485",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1d4bc204-2510-47a4-9b85-ac05e1418dee"
        },
        "item": {
          "id": "0c72e349-5944-44f6-be8a-42a0b7301403",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8b3ebdad-cc56-40cd-b17d-c6ac4ba7d763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbc8976-09c4-4acf-913b-dee4b5c485eb",
        "cursor": {
          "ref": "256bfdb2-513c-4d72-b666-e6726ad0d2b3",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "59ef812c-34b7-460a-90a9-327b4392d08b"
        },
        "item": {
          "id": "fbbc8976-09c4-4acf-913b-dee4b5c485eb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fb7a8e7a-4325-4191-bc1d-3e46530e529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f07c69-88e5-4cee-81c4-56f58a55a2c8",
        "cursor": {
          "ref": "0d1ca1c9-ba52-43e3-8a69-1c75b42da8e8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7302dbf3-4ad2-4bb2-a17a-86c0605ae4fa"
        },
        "item": {
          "id": "38f07c69-88e5-4cee-81c4-56f58a55a2c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3bd150b0-64a1-427b-b5e3-ebb3226122d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f227f515-fbc4-493a-a9c1-ee1e7e7f9359",
        "cursor": {
          "ref": "b194e841-f515-4a6f-983f-91a6ead668f8",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2ccfdd65-24a6-4eed-b36a-239cdba6a73c"
        },
        "item": {
          "id": "f227f515-fbc4-493a-a9c1-ee1e7e7f9359",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "121ba695-7324-442e-9a99-dd4c7a8d56ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec7da0-86cf-48fd-8582-39cd1ff99e1a",
        "cursor": {
          "ref": "99fbf8a8-ac90-4460-9702-d871e581dab3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2b9456c9-d843-4c49-b90f-95eb778c7f43"
        },
        "item": {
          "id": "17ec7da0-86cf-48fd-8582-39cd1ff99e1a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8c241129-c6f5-4c1b-97cd-3f44422096c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2387dd99-6912-4ff7-8883-50ead3d945fd",
        "cursor": {
          "ref": "4bfadf55-eb65-417c-b1ca-536beb033952",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e276fe32-3780-4cf0-8856-4171af5e1b19"
        },
        "item": {
          "id": "2387dd99-6912-4ff7-8883-50ead3d945fd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "209cd3ba-c775-4319-bd3f-47a7925acf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36570e8-659b-4455-976e-ec9985425bee",
        "cursor": {
          "ref": "c6f6c283-8b32-4c90-868f-06e913dfc72c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e7803c1c-b981-4f3a-97c9-64b16b0c092a"
        },
        "item": {
          "id": "b36570e8-659b-4455-976e-ec9985425bee",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e95becea-9301-4f9b-aa04-8be812304339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f2df95-595f-4298-9580-2c3b84292735",
        "cursor": {
          "ref": "7720ef4d-112d-4d45-a09e-13392654d56d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9a76b451-0c4d-4196-bb3a-1d31343b5ddb"
        },
        "item": {
          "id": "77f2df95-595f-4298-9580-2c3b84292735",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1f444d5d-6232-4e91-8637-0523d26bdb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95640a72-59d7-4032-a231-25f6d09a4c1d",
        "cursor": {
          "ref": "d77490c7-e88f-4a88-ad07-181e94d2dec2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "12c5625f-d355-4db0-b735-5410ac4676f5"
        },
        "item": {
          "id": "95640a72-59d7-4032-a231-25f6d09a4c1d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "26bbae21-e8f8-4ab5-b06b-6f0ec0bccf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ece08-4fd8-4e19-ac82-90e1d70bd891",
        "cursor": {
          "ref": "cd586af8-9831-46de-895b-c63053d84b73",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e0f2db92-7440-403a-beb0-0b00294ab1c7"
        },
        "item": {
          "id": "814ece08-4fd8-4e19-ac82-90e1d70bd891",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7b667c6f-5b9f-41d8-919a-45060e7624dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60667d9e-f7df-49e1-a96a-6636690f39ab",
        "cursor": {
          "ref": "95c6ec7a-0c44-4f7b-aa65-d644881063db",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "db971f90-29ac-4c3c-93f5-fde8a68a2971"
        },
        "item": {
          "id": "60667d9e-f7df-49e1-a96a-6636690f39ab",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9a97e9e3-5979-46b7-ab49-a105166c3805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b818de88-583c-4ef9-beec-95bfa9797047",
        "cursor": {
          "ref": "74e86727-9921-48a7-ae2a-4ebe5c46cb07",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ffad8295-3099-432d-972c-fbfa193b7ee9"
        },
        "item": {
          "id": "b818de88-583c-4ef9-beec-95bfa9797047",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b2cfb31c-409e-4329-a028-b8c3c8717290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c842241a-6d65-468e-a675-2fc213b3774a",
        "cursor": {
          "ref": "55f74044-2878-4851-b627-8b2819a05511",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "03a2f191-e3a3-41e2-8c02-7f3fcd093538"
        },
        "item": {
          "id": "c842241a-6d65-468e-a675-2fc213b3774a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7785ccc1-d790-4276-8751-3de94b89caed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d50643-fcad-417f-99c2-e2440b65ade0",
        "cursor": {
          "ref": "57c1dc8a-8a6c-42a1-b4bd-6df4b5e8acce",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1cf0eae4-bdce-4a53-b3c3-a0a3eac82a34"
        },
        "item": {
          "id": "39d50643-fcad-417f-99c2-e2440b65ade0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0824a361-f82c-4992-b58b-16a5630451ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "b04d6c71-76b7-4359-bc15-03ede82f552b",
        "cursor": {
          "ref": "ee197a74-02f7-4650-81ff-37141bd2daf6",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "85dba57d-52f6-4081-b5a1-eed7309fc52e"
        },
        "item": {
          "id": "b04d6c71-76b7-4359-bc15-03ede82f552b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "840026b7-fa3f-454b-a914-2250abb6ec0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "2d528f5b-9e7d-4009-ba52-e469119adc5e",
        "cursor": {
          "ref": "eae3bbd2-093c-4cfa-82c8-ff01bfd00874",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39c9c9c8-5fa8-4681-b020-aa0b204b30ea"
        },
        "item": {
          "id": "2d528f5b-9e7d-4009-ba52-e469119adc5e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1dc73df1-c5a6-4c61-8146-64515a76e46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3f085b74-d7d7-457f-a196-c03f1fefe0db",
        "cursor": {
          "ref": "cec49a1e-c787-415d-9f31-240823e6e319",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "51029d0f-eb5b-4bc8-a9e1-7147b0946eff"
        },
        "item": {
          "id": "3f085b74-d7d7-457f-a196-c03f1fefe0db",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b1a367ff-f2dd-4348-9e54-05d6ef099c66",
          "status": "Created",
          "code": 201,
          "responseTime": 5358,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf96300-b7bd-4fcf-bf77-5302ce93ed4b",
        "cursor": {
          "ref": "1cf5961f-99f1-4ea5-bb77-9aa48fdda18c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3dd8ae50-978a-48f9-b980-e28976a186d2"
        },
        "item": {
          "id": "1cf96300-b7bd-4fcf-bf77-5302ce93ed4b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0137995f-bf87-41b5-9be2-e1885b006105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f2d7ad59-c6f6-446b-893a-dbf7fa32e602",
        "cursor": {
          "ref": "e3df35ac-9f3b-48d2-956c-18d2a0ea18d2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f0c19afa-fd13-456b-b643-842894858926"
        },
        "item": {
          "id": "f2d7ad59-c6f6-446b-893a-dbf7fa32e602",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d4f6e09a-a255-4c10-ad58-3f13eeb4c86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6a6aa726-a064-442b-99a0-b5ebeda3402f",
        "cursor": {
          "ref": "b2ae77cf-343e-41fe-b4ae-2ef0431cfbdf",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b827f1c8-6431-40e0-aff8-6ab89595a3e6"
        },
        "item": {
          "id": "6a6aa726-a064-442b-99a0-b5ebeda3402f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b4f8c79c-3558-42d0-a21d-110d1d828d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd21bc67-6052-484c-9f25-75d8be45119f",
        "cursor": {
          "ref": "f357e43e-4a4d-4cf8-8b97-6c0779237d7a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "31aa2591-db0b-4600-a829-887b72ebc67f"
        },
        "item": {
          "id": "bd21bc67-6052-484c-9f25-75d8be45119f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dce9b03b-1ee9-449d-8b1e-fc8093630683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32e783c-f8fe-4165-8c69-4cd74405fc84",
        "cursor": {
          "ref": "28c12754-4476-45c3-b6d4-329dd98dc253",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0f929ffd-7226-4325-a562-3557461206e1"
        },
        "item": {
          "id": "c32e783c-f8fe-4165-8c69-4cd74405fc84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "df4e14ee-2f96-4aca-91c9-b156af724cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133b8237-e28d-4eaa-ae38-e55bfe139d53",
        "cursor": {
          "ref": "ac0421e7-abca-4236-8a4a-fcccdec8133d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac761c33-1087-44d8-a58d-d28b0b8a1816"
        },
        "item": {
          "id": "133b8237-e28d-4eaa-ae38-e55bfe139d53",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "beffb807-2029-44be-8362-e7d1db99133c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbfc77d-b1f3-4b4c-b05b-6b9127b7c719",
        "cursor": {
          "ref": "8e9a8112-3a3d-4fe4-ac90-e7adb828d5ca",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "27b9a181-c94b-4e96-a1d2-8bfa58042a81"
        },
        "item": {
          "id": "1fbfc77d-b1f3-4b4c-b05b-6b9127b7c719",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a45a0663-07af-4741-bb59-3cc6244e4fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef2c8a4-85f6-4146-b45b-2673185ce2b8",
        "cursor": {
          "ref": "045c98f9-e283-4515-b3ab-36d971978b50",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "feb7d20d-ef03-468f-9ab0-03f912fb039b"
        },
        "item": {
          "id": "2ef2c8a4-85f6-4146-b45b-2673185ce2b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "71335e25-07a9-4fc1-adee-afdedd7faae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09eea95-6c18-49af-8884-831166a436ff",
        "cursor": {
          "ref": "8151cd50-f452-4e3f-b2b9-a2d65d4d9227",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "512be286-5b17-4e36-b727-b3ada051665b"
        },
        "item": {
          "id": "c09eea95-6c18-49af-8884-831166a436ff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "82e0a64c-7ca7-43a0-9923-2c3ce07d16d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617ac40f-81c2-449d-b1ef-b7ba36bef221",
        "cursor": {
          "ref": "2b8db60a-bfa2-4c66-8ab2-13f2e7e7f3cc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "550ee006-2f69-47eb-a37e-2072ba9c9ea6"
        },
        "item": {
          "id": "617ac40f-81c2-449d-b1ef-b7ba36bef221",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16fad31d-3072-4af0-9dff-fcd045a49d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4360f056-ab19-46d1-9484-f597cc3c9d50",
        "cursor": {
          "ref": "2c1a5c7a-bc7f-47ad-964e-b4b65e293343",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2ca762ba-f8d0-4a61-858c-96f79e70da55"
        },
        "item": {
          "id": "4360f056-ab19-46d1-9484-f597cc3c9d50",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d1422c09-c1cd-44a0-9693-11e0d93c58ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed1acd-6fad-4df0-8017-6f2598dd9476",
        "cursor": {
          "ref": "e8a1402f-c842-4f13-a7fc-5593825582f6",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "667421aa-ad25-4301-ac25-7259d40f83b0"
        },
        "item": {
          "id": "cbed1acd-6fad-4df0-8017-6f2598dd9476",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ee29a092-316d-4aad-a041-ad7fd2664039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad47371-22a4-4ce8-a944-1c11e0a67eb9",
        "cursor": {
          "ref": "024ee16c-cee0-48bf-a099-1c579834c62f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f7c2fac1-1865-45c3-a292-067ef5d9a919"
        },
        "item": {
          "id": "5ad47371-22a4-4ce8-a944-1c11e0a67eb9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "70b436ce-3029-4ccc-ac3a-067fac30332a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c60dcda-d8e7-4477-b62d-8d3b2ab65431",
        "cursor": {
          "ref": "2019e591-a9a2-45e0-a209-d398dbfa130d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aa622da8-7124-40e0-b8b2-1a984e114058"
        },
        "item": {
          "id": "6c60dcda-d8e7-4477-b62d-8d3b2ab65431",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "016b16d6-39c8-4a3e-a5cd-a38736620c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cd12bc-2634-4abc-a6a3-95075b721bd9",
        "cursor": {
          "ref": "6bb2a194-aeb6-4a19-b18b-ba07d1f7368c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8ee2db9-f7e3-49c7-b7f6-73e90848525e"
        },
        "item": {
          "id": "f6cd12bc-2634-4abc-a6a3-95075b721bd9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "520eda57-748a-44c1-a02a-8c5dce74375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d83a43-c118-41ab-9332-f2ca8d49fba1",
        "cursor": {
          "ref": "6311737a-d522-4582-bb56-59b2636d2079",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b4c91e5f-abcb-4162-bcf9-9759a3b2d38e"
        },
        "item": {
          "id": "f2d83a43-c118-41ab-9332-f2ca8d49fba1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "22277154-18d3-43a9-9dee-9f1e2a5a1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a1022-3347-498c-95b2-dc0ed2c721dd",
        "cursor": {
          "ref": "92aa1209-f0f3-4161-a5d3-831613022ad8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cac6ba62-1bc3-4fe2-bf6f-2bea091645d7"
        },
        "item": {
          "id": "906a1022-3347-498c-95b2-dc0ed2c721dd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a284ea0b-f562-4146-8cc9-d0fc20bd8209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f63185-61e1-44cf-9027-848f0d92acd7",
        "cursor": {
          "ref": "098432cd-fd71-406a-886a-5cb69c8bf242",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "33c58a69-e596-47c9-86ce-631866f62430"
        },
        "item": {
          "id": "31f63185-61e1-44cf-9027-848f0d92acd7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f870acde-cef5-4d00-b928-c2cf811d55be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d962ff0c-0a70-46d1-b5fc-a38b3396d8ca",
        "cursor": {
          "ref": "a96530d6-d355-41ab-aef5-d114a55013b6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f4b0cbde-9a46-406b-8d12-d84516009002"
        },
        "item": {
          "id": "d962ff0c-0a70-46d1-b5fc-a38b3396d8ca",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b35b8403-9118-423e-8b76-ca358fe16414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4cc09f-3a2d-4a72-ac1e-b4a29625ff02",
        "cursor": {
          "ref": "9bc84b2c-0469-4dd6-ba39-59b88b0f8a10",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bb7a4538-5bcd-499c-8545-a47a25f57523"
        },
        "item": {
          "id": "fa4cc09f-3a2d-4a72-ac1e-b4a29625ff02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e13956db-e1e2-4be6-ad0d-c88a53000a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e4ea49-c799-4656-a501-684232bc3fc7",
        "cursor": {
          "ref": "fbb596cc-58e1-4fb8-a515-8c3da77cd57d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "27abf863-fd8f-42b8-85c6-a331aeb7f683"
        },
        "item": {
          "id": "11e4ea49-c799-4656-a501-684232bc3fc7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1da2b000-fcd3-4502-aac6-4070c29bc64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89cc9bf-cff9-47fe-b982-9fd209e7d462",
        "cursor": {
          "ref": "d19a2a48-43c7-449a-8369-49737e21650d",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "949f8fbf-9b97-4adc-b120-e6e44d7afb44"
        },
        "item": {
          "id": "d89cc9bf-cff9-47fe-b982-9fd209e7d462",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f5ef06f1-9275-42fe-9acc-b971ff94c862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012ec52a-a31b-4b7e-b8cc-f633f54ef29e",
        "cursor": {
          "ref": "053d9822-b88d-4443-af6b-292104724ff6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9dfaf9d1-5740-44a0-aa81-8b4ee46c7e43"
        },
        "item": {
          "id": "012ec52a-a31b-4b7e-b8cc-f633f54ef29e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "330ac95f-84b4-4ff4-b481-8deac7bccf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c1d462-a6a3-424d-9bed-70a263c3d23e",
        "cursor": {
          "ref": "5f23d5e9-1bb8-472a-a159-3c0bfa51b371",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "289a7b10-495f-44f5-887b-6693ed818b6d"
        },
        "item": {
          "id": "e2c1d462-a6a3-424d-9bed-70a263c3d23e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad222f42-9015-48e0-a2ab-f2af77181371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d350b77e-6df5-466d-b0cd-d0673b05e095",
        "cursor": {
          "ref": "4e37c0bd-10a4-488f-861e-1090203175ab",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a56dbb06-bab5-4cdc-b7de-4528f10a21d2"
        },
        "item": {
          "id": "d350b77e-6df5-466d-b0cd-d0673b05e095",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "403539be-d25d-4a4b-a204-0b258d4ce319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa37b87c-9238-4538-9c7e-ac945ff5f6b5",
        "cursor": {
          "ref": "476eec99-c661-4597-81ce-d4cd595d2c6b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c3b96d3e-f4dd-4da2-b7ce-ba13a33437c0"
        },
        "item": {
          "id": "aa37b87c-9238-4538-9c7e-ac945ff5f6b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e960c96e-3355-477c-9769-b3a8ca21168c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29394ac7-11a2-4672-b9da-9b0e9cea8643",
        "cursor": {
          "ref": "0658d54a-39c8-4507-b6db-637e675c4247",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d5cffae-725e-4531-9b89-c5a97f62e14d"
        },
        "item": {
          "id": "29394ac7-11a2-4672-b9da-9b0e9cea8643",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "43fc068f-9999-4158-9e32-ca6cbaf4c599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ebf7f3-ed77-428c-82d7-d87d6f1b0784",
        "cursor": {
          "ref": "25346acf-f2f9-4ec2-aa62-027a48c1d6ff",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b93cb6e9-fbac-4f92-b3ea-587cd5c1ea64"
        },
        "item": {
          "id": "63ebf7f3-ed77-428c-82d7-d87d6f1b0784",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab6daa65-2b2f-4a28-8c10-f71d0031ae23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fadc8a8-09d1-494e-b609-158f0e5ec5e5",
        "cursor": {
          "ref": "a0f71d00-bf55-4f8c-9a3c-7ccce544cebd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a9bc24a1-33c4-41fd-b266-9320f3bbb317"
        },
        "item": {
          "id": "3fadc8a8-09d1-494e-b609-158f0e5ec5e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f3225c81-78cb-4cbc-8e1e-3aa27e35b183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b15f0-f757-4a8c-98a2-9681d071504c",
        "cursor": {
          "ref": "be49f1cd-cc38-48d3-b194-0608725c6d4c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "af302316-be2b-4ab9-83c1-dee9abc323ca"
        },
        "item": {
          "id": "d33b15f0-f757-4a8c-98a2-9681d071504c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6b61da1f-d9aa-41b6-8fcd-e1179fb1a64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee8a9e1-1bc7-43ae-b697-3056c99e386a",
        "cursor": {
          "ref": "5a819751-3769-4545-b3f9-ecde8f594854",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "818b3d7f-e5c3-4ea2-8f82-4d514b21704c"
        },
        "item": {
          "id": "dee8a9e1-1bc7-43ae-b697-3056c99e386a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "60e7e9be-9d89-4f4e-8c1c-ffbd94c3001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac00045-dc87-45c4-8101-ff2db903df6c",
        "cursor": {
          "ref": "bbb5263f-874b-4e89-b2c4-d167e81fa3a3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dd045e2b-d4ed-484f-ac1d-c1f36ec7cf58"
        },
        "item": {
          "id": "cac00045-dc87-45c4-8101-ff2db903df6c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c66569a-9398-4120-9e9d-39761fa88f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9aabc6-bd22-4c5b-ab9a-a0aaf2cb100d",
        "cursor": {
          "ref": "e17a34c5-2d7f-411a-9816-25bb2f393158",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "39a5cbb5-c85e-4e9e-9e91-e7a5bdebf9bb"
        },
        "item": {
          "id": "7d9aabc6-bd22-4c5b-ab9a-a0aaf2cb100d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "abca0a8a-3c3b-4ac7-8f44-403c52a4a34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881ab722-e512-42e5-810e-2bb1003d8995",
        "cursor": {
          "ref": "877864dc-22bf-4eca-a1bc-227056e973dc",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f005245f-9a9b-44a9-a553-d2bb4b6fa39e"
        },
        "item": {
          "id": "881ab722-e512-42e5-810e-2bb1003d8995",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c137e928-69f4-4b2c-8976-f3ffc36b3c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d53773-b3da-447b-8873-6af240789e5d",
        "cursor": {
          "ref": "5a92dbc9-7775-4f20-bcf6-c1215e316281",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1342c1c5-7957-4388-b1d3-8cbb7504cbe8"
        },
        "item": {
          "id": "56d53773-b3da-447b-8873-6af240789e5d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8322caf2-a31c-4325-a472-59610e027fa3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 216,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df2b1cb-7cb1-49b6-b306-f5da1189ae3a",
        "cursor": {
          "ref": "a98150aa-67a0-4dac-a341-9779022895f2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9c53eadf-8a89-4655-8944-5d176e962e48"
        },
        "item": {
          "id": "6df2b1cb-7cb1-49b6-b306-f5da1189ae3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d55058d-be47-4f15-9e20-6629b5708c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b038398-0c58-4193-846d-f7a1f0faed33",
        "cursor": {
          "ref": "b9add9a6-b150-48ee-81ed-30aa6cd74cf6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "23806b2f-a929-4b70-a278-b22cd29de962"
        },
        "item": {
          "id": "7b038398-0c58-4193-846d-f7a1f0faed33",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5476a262-ad72-4215-95b6-2e69e02dada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa68624-89e9-485a-a234-eb518b036c66",
        "cursor": {
          "ref": "a944c670-1def-4654-8709-614d0e241d6f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cbc3720d-8802-4c1a-a9fd-0a720ca4ebd5"
        },
        "item": {
          "id": "afa68624-89e9-485a-a234-eb518b036c66",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5f83ccd3-aa5e-4e1e-b86b-174a7f8a80c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dde370a-9b1b-4d0f-bd9c-8c2958062cf7",
        "cursor": {
          "ref": "9b7f580a-3fd1-4413-8748-166047d7dac3",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "417ad908-7a28-4c84-911d-7b252f7c26f8"
        },
        "item": {
          "id": "1dde370a-9b1b-4d0f-bd9c-8c2958062cf7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c18bb630-d804-4726-b990-ff8eba0496d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b408fc9-9cb1-4151-b960-69051b175506",
        "cursor": {
          "ref": "ea3b6859-5b90-4479-8415-d9ba836aaff7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aad5ce49-4c2c-4664-95f6-49e64aea3a8c"
        },
        "item": {
          "id": "4b408fc9-9cb1-4151-b960-69051b175506",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c6aedae1-87d7-4171-81c2-53bf8e196b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d96bcc-d014-4b07-b591-ee0711456984",
        "cursor": {
          "ref": "02cd5532-2bc8-43b2-9a1a-e7a266293f60",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6614ff8a-1e72-45a4-8c35-b80950870ad0"
        },
        "item": {
          "id": "57d96bcc-d014-4b07-b591-ee0711456984",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ecc0834e-a507-4926-a0b5-e2065e898338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a81575-703b-45cb-ba0d-5240f534faa7",
        "cursor": {
          "ref": "cc20f4f7-fef6-479b-b1fe-3e6893b8a3c2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "471a47d2-234c-4768-904c-8295d238f518"
        },
        "item": {
          "id": "34a81575-703b-45cb-ba0d-5240f534faa7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bbbe3ff9-a7ef-4415-9e79-92a814ecf754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c8a7c-e343-482a-b8e0-a7faca5c366a",
        "cursor": {
          "ref": "be90aea6-58a8-4e4d-aeff-ec2ccad759f0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d4f340ca-a5d5-4a6a-b7ac-e1f30e856959"
        },
        "item": {
          "id": "b01c8a7c-e343-482a-b8e0-a7faca5c366a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c65f3993-d43a-4159-960c-ef1f43d7885d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4a7814-190b-4434-a20f-7e93a99e9d8a",
        "cursor": {
          "ref": "c9b1da7b-f0e8-446a-af90-c1e452a8143c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cf53211b-f140-43ba-8458-86eb650a5518"
        },
        "item": {
          "id": "ba4a7814-190b-4434-a20f-7e93a99e9d8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "74fc6d43-f397-4089-a021-612cf369d228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f302a5-49b6-4fea-80a9-ec2f6cd2a8b6",
        "cursor": {
          "ref": "7b411e98-0bef-4510-b75f-b19e48743a6b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "107a1a1f-d893-4b3a-8a0c-d162999dc338"
        },
        "item": {
          "id": "84f302a5-49b6-4fea-80a9-ec2f6cd2a8b6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6782436-81b1-440b-8c8a-fd00cbe16f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe57e1ef-aa8b-40fd-a1f7-883cf3c44616",
        "cursor": {
          "ref": "8245c436-c12a-46f7-86c8-ee26771a4479",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "695687cc-c88c-40a5-a8c0-7ac9d8df4483"
        },
        "item": {
          "id": "fe57e1ef-aa8b-40fd-a1f7-883cf3c44616",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4e669f04-fa1c-4821-bcbb-5961198cbb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d656c14-bd37-41b0-8650-92f756c8757b",
        "cursor": {
          "ref": "5bc158bc-92dc-4968-a9ce-0dafd723306b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c3bbdce5-b660-4b54-b7e1-4468553a2893"
        },
        "item": {
          "id": "4d656c14-bd37-41b0-8650-92f756c8757b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5ffd345-1e56-4fba-95c9-eb73f7d15047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c801a2-ce5e-46d1-96e5-8a4e82e6387e",
        "cursor": {
          "ref": "0d6602b6-a52d-4609-b42b-a94be94c731d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "70888cc4-7db0-4e35-8f95-c53d97a9303a"
        },
        "item": {
          "id": "c1c801a2-ce5e-46d1-96e5-8a4e82e6387e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a44bfcb6-5f50-470d-bc40-f863ba2983ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e34b81-c222-43de-a6f8-de131b597f9b",
        "cursor": {
          "ref": "5bb58124-d087-4bf0-a592-dba6b451abc3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5013b0ab-17e5-4297-8d6d-f63ceb22e94c"
        },
        "item": {
          "id": "90e34b81-c222-43de-a6f8-de131b597f9b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bb601cac-32be-4a60-bcfe-38c5cd21b83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8793babc-892f-4698-b4f8-87271c86bf87",
        "cursor": {
          "ref": "bc8948fb-d02b-4edf-858e-e852a461ac8f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8798efa9-ae7b-48ec-8416-378d03f26f36"
        },
        "item": {
          "id": "8793babc-892f-4698-b4f8-87271c86bf87",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d5ed3eb-ba10-4f7b-a2be-928b197a1e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf7b14-d79a-4dab-b3e1-a11c02c8cef0",
        "cursor": {
          "ref": "fee5f6f6-d0be-4f6d-a867-7df304810505",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c77ca2d-2ba0-4bc5-b673-788d82d9df7c"
        },
        "item": {
          "id": "cedf7b14-d79a-4dab-b3e1-a11c02c8cef0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b20a2ce2-5a7b-434c-881e-63d720baab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2e7b11-1ce0-4fc9-a5cb-c961a215970c",
        "cursor": {
          "ref": "c4118da3-adae-4a45-b50c-4b49cddfd9a2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b2b9c11-8e56-4575-a933-3e39c738ac1e"
        },
        "item": {
          "id": "6c2e7b11-1ce0-4fc9-a5cb-c961a215970c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f548f8ef-76b4-453f-8def-58f163d64504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accb68ff-e659-492a-af33-b1a219586f67",
        "cursor": {
          "ref": "a4576481-0996-4566-bba3-4cbd1184d087",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0753dccf-2ea3-4a81-9c00-ec990959a283"
        },
        "item": {
          "id": "accb68ff-e659-492a-af33-b1a219586f67",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e0b4a270-ea31-4f30-a812-ace18cb4e4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bdaae-f00e-45ad-86a0-46af12d049dc",
        "cursor": {
          "ref": "98bc1e14-0274-4282-af82-6af31863cc50",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0a38b2c-cd7c-40a4-83ae-28a39f76428c"
        },
        "item": {
          "id": "f45bdaae-f00e-45ad-86a0-46af12d049dc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dc07e598-0753-486e-ba85-7794319f06c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707cd985-72ff-48e3-9fe3-fe2320852804",
        "cursor": {
          "ref": "05fb2375-9509-40c6-b22b-b2fb2b3fb460",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e5858547-600f-4576-92eb-855df9037ddf"
        },
        "item": {
          "id": "707cd985-72ff-48e3-9fe3-fe2320852804",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "111623fe-2060-42bf-a0e3-53d4a8dda55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04116599-7d8b-4a08-81df-e8149352bff3",
        "cursor": {
          "ref": "f4254280-9150-4afc-a6d3-6cff6566fff6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bb1bd2d9-d818-48eb-9c70-462361485ab9"
        },
        "item": {
          "id": "04116599-7d8b-4a08-81df-e8149352bff3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ee440412-834c-461e-a3d2-807558f8eecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6c06d-603d-4a65-b19e-da09edf011c5",
        "cursor": {
          "ref": "3e9c6c2d-f924-4995-b3d0-f890a0420084",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ee6cbe0c-135a-4ffa-a1aa-93b6a70e2617"
        },
        "item": {
          "id": "a4b6c06d-603d-4a65-b19e-da09edf011c5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "762921d3-315c-412c-8ebc-30dcd70af471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68856024-49bf-432e-81c6-ada2be304dc4",
        "cursor": {
          "ref": "55eb6f57-5d13-487e-b4dd-d7b273f0369c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99b6e1af-1f7f-4b89-af21-7bd2c86cdfae"
        },
        "item": {
          "id": "68856024-49bf-432e-81c6-ada2be304dc4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c97e8044-5261-4ae4-8472-c6b393d4d0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc5cfb1-849d-4c4f-8091-f1571635ecb0",
        "cursor": {
          "ref": "f7c14c17-a4b9-4333-9b57-e041e55ce9e7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2394b7e7-15c4-49fa-af99-da386e2e7b94"
        },
        "item": {
          "id": "fdc5cfb1-849d-4c4f-8091-f1571635ecb0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d1fbe80e-2412-4a24-8b97-a649cf5a3e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff10c5-a6d2-4c59-b261-dda6e3a9b771",
        "cursor": {
          "ref": "85d469f4-4db4-4238-ac2c-30965308a851",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a89d0a58-5d95-48c7-9445-cc0a6318a460"
        },
        "item": {
          "id": "13ff10c5-a6d2-4c59-b261-dda6e3a9b771",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "20eebc8b-446e-4772-be3c-dfcb70e9dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4f4f85-524a-461d-9334-c8866b13bf0c",
        "cursor": {
          "ref": "a8bea625-ce2c-4525-b2e4-c17071bb4ee9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "36c0d8e2-b74c-4485-8f3b-e50db01c1aff"
        },
        "item": {
          "id": "4e4f4f85-524a-461d-9334-c8866b13bf0c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "24070dcf-bc48-44d8-8487-b6f5abcaab3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa774b1-adf6-4637-81a1-5ef2173446c5",
        "cursor": {
          "ref": "2701f57e-b0f9-4e70-977e-39e0be57d539",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "99008189-986b-4455-b068-1d4888ead39c"
        },
        "item": {
          "id": "7aa774b1-adf6-4637-81a1-5ef2173446c5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c65eab8-7686-4fd5-9005-f517b1237ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913c6659-67ae-4569-a8f6-867ca6decc7a",
        "cursor": {
          "ref": "014e3305-314d-48b1-9c34-2cca51fd0eca",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "78ffc5c0-6504-4787-ae06-2042bf46c7f8"
        },
        "item": {
          "id": "913c6659-67ae-4569-a8f6-867ca6decc7a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4232d849-51e6-4716-9d32-f3d7041e7172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf1d1b-fa3c-4d2b-8706-7a6655ab198a",
        "cursor": {
          "ref": "2a6bf1f9-2eac-47c8-81d1-b1852fe70e36",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "84132c05-a3d9-422d-885c-33427482349a"
        },
        "item": {
          "id": "36bf1d1b-fa3c-4d2b-8706-7a6655ab198a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86f52317-ffbd-4c8d-9363-19f2ab49d5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e107147e-0b9e-4566-8217-4bc025a2cda8",
        "cursor": {
          "ref": "6d028e8f-5693-4124-a823-61ed9ffc2ba3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2100bded-ad26-41d5-b804-4b4cfa2020f6"
        },
        "item": {
          "id": "e107147e-0b9e-4566-8217-4bc025a2cda8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "06d8b778-1fbf-4726-b926-4944af31f92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451014f4-7068-4e42-a621-f16152e44aa6",
        "cursor": {
          "ref": "3332536e-03bd-440c-9d1a-560d2049a0f4",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ddc4294a-837e-4ed9-91b7-65512f4be980"
        },
        "item": {
          "id": "451014f4-7068-4e42-a621-f16152e44aa6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80e42e63-7e6a-4b05-a729-1a7227e6e1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a9074e-85a5-4a39-86de-12754b2462e6",
        "cursor": {
          "ref": "1adac07c-519a-4788-8e37-eeb10162450a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a91fe422-6255-4408-8dd6-da5ab0df5be4"
        },
        "item": {
          "id": "d3a9074e-85a5-4a39-86de-12754b2462e6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9040f8ef-bb13-4f93-bffa-c9cccf549b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d3a0db-fa6f-481e-9014-586a9cc475fd",
        "cursor": {
          "ref": "ea854c4a-e293-41b1-ae52-8c24eeac5688",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0e4c63ea-e6ca-4ed0-8b8b-ed513985463e"
        },
        "item": {
          "id": "28d3a0db-fa6f-481e-9014-586a9cc475fd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "02766cb5-d392-4125-9366-b10674949b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee864e7-0206-488c-a225-a34704586948",
        "cursor": {
          "ref": "92d41a64-e0af-4083-8322-260bf2583e55",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bf55fb3d-474c-4b32-bfa1-7b01c2c1fec0"
        },
        "item": {
          "id": "3ee864e7-0206-488c-a225-a34704586948",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9615bf62-6863-491e-b319-9d65c572ee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a846e37-534e-48b9-b33f-82e17a555387",
        "cursor": {
          "ref": "e2642017-7871-40c4-8ad1-98c48f2ffc18",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "277f1021-37dc-44a7-bd67-1c8f36c7f19e"
        },
        "item": {
          "id": "7a846e37-534e-48b9-b33f-82e17a555387",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "19200d2e-daa6-4364-9ae2-7a5db20514a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2737394-12d7-4850-8415-689c96b7a487",
        "cursor": {
          "ref": "fc313f67-64b9-40a7-939c-a62f3d781348",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6ee9361b-e9bf-41e3-9127-75e73ca86cc4"
        },
        "item": {
          "id": "d2737394-12d7-4850-8415-689c96b7a487",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d84c745f-6fce-42db-90f2-e6fe84ac6630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3cd26e-91fb-4832-aa70-e56e0be7d206",
        "cursor": {
          "ref": "e6fa9bcf-b083-4b13-b421-b7e65b0a6452",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d91ab667-bf11-487c-b010-099af1ac8686"
        },
        "item": {
          "id": "ee3cd26e-91fb-4832-aa70-e56e0be7d206",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7c889e85-f937-4ff2-97c6-ac81ea077ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5e24e2-159a-41c3-ab56-28e7eb4d74d2",
        "cursor": {
          "ref": "719f6f83-b2ea-4b27-a490-f5adf91177da",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1a30f1a-cc6a-4151-ab67-438fd34b63be"
        },
        "item": {
          "id": "dc5e24e2-159a-41c3-ab56-28e7eb4d74d2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "087f3c9d-b86b-4368-9908-b8c564173959",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db335b57-f15c-41e6-ba1a-7abc3dc350b1",
        "cursor": {
          "ref": "fef9b9b5-fa19-47be-8402-698a7c9cf199",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "62b3e416-0513-4dab-8c43-4a78c9ed8792"
        },
        "item": {
          "id": "db335b57-f15c-41e6-ba1a-7abc3dc350b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "95230532-767a-4cfb-b0d8-70c440d37661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33326c3f-a265-4a41-aaa0-1cae4b33fb4a",
        "cursor": {
          "ref": "84da5ba2-c4b0-459d-b9d8-59016fbb33ca",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1cd649c6-e3e2-4646-818c-1d8c490074c6"
        },
        "item": {
          "id": "33326c3f-a265-4a41-aaa0-1cae4b33fb4a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f37b7963-50d7-42da-9149-f98005e82b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe06a74-d57d-46c3-bbfc-190490b877ad",
        "cursor": {
          "ref": "6b29722e-6417-4dc7-829c-0dcde28fe04d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "02eb187a-1a59-4947-92d5-06fa1b7506f1"
        },
        "item": {
          "id": "2fe06a74-d57d-46c3-bbfc-190490b877ad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a435c3cb-b9e2-4693-9ab1-24f5df92de6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ff2df8-8012-42d7-afd7-d824015026d5",
        "cursor": {
          "ref": "9d8319ce-82be-4670-98a9-d822157b1c36",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6718fd1f-ded6-4472-b2c9-5cef206a9203"
        },
        "item": {
          "id": "e9ff2df8-8012-42d7-afd7-d824015026d5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0b56caba-b576-4258-9aec-1093ec910b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490694bb-a4d8-41ae-a06b-668c4176a446",
        "cursor": {
          "ref": "d7a9da6c-54b3-4dc4-9e06-293f7d64292f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bbf259c2-34da-4138-a837-c9cafdda8f7e"
        },
        "item": {
          "id": "490694bb-a4d8-41ae-a06b-668c4176a446",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1c8175d2-d943-4c52-bed8-33e3edddb25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183400aa-8b82-424e-a8da-0694fd55292d",
        "cursor": {
          "ref": "064bfe32-4035-44b8-98d7-27bb3d20759e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dbba66b9-d93b-44d0-899e-93e09c1a9c4c"
        },
        "item": {
          "id": "183400aa-8b82-424e-a8da-0694fd55292d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bf36c4c0-602f-4f43-bd2e-edfbd93d7ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53e612a-8ec8-4c48-b489-8022c0ff4286",
        "cursor": {
          "ref": "ba7a5322-77ab-4b76-9607-daa6f4e8211d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a4223be9-dc80-4df2-bfe8-23725dcc63aa"
        },
        "item": {
          "id": "f53e612a-8ec8-4c48-b489-8022c0ff4286",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c072d0d5-7fb8-43c8-baf6-0cd2bf5f0f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8e518-2102-40f4-b872-00b10636de9d",
        "cursor": {
          "ref": "e7140a3b-0e82-4975-a7f7-17b521feac01",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4927b7a5-9e42-4b14-8e36-4f055177845b"
        },
        "item": {
          "id": "a7e8e518-2102-40f4-b872-00b10636de9d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3548d733-5cc4-42ca-8d63-f8bfff813f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73c31a6-8f08-45ae-bec8-cce0af6ee161",
        "cursor": {
          "ref": "89ee5b6e-d212-4234-8e5f-7b39b7235cf7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7262bd64-31da-4a91-9f67-730f35a3d88c"
        },
        "item": {
          "id": "e73c31a6-8f08-45ae-bec8-cce0af6ee161",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c77a5761-b0d9-45f1-964d-9e6b8340927e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623dd33-0d8d-41f5-927f-e3b92d777ced",
        "cursor": {
          "ref": "9b8f0851-e985-4cf4-81ad-0f4557fef320",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a86c4e9e-6772-494d-a4f4-92d5d5159ed4"
        },
        "item": {
          "id": "3623dd33-0d8d-41f5-927f-e3b92d777ced",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8b02b0c9-f157-4686-943e-61b375f55532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318cdc53-b481-4893-8ffa-741c1d965fbc",
        "cursor": {
          "ref": "cfd6dcdd-be47-4a77-b2d2-99289d032623",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f85e0620-8a68-474b-8d2c-3bb7b58295a3"
        },
        "item": {
          "id": "318cdc53-b481-4893-8ffa-741c1d965fbc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9daa72a4-749e-49c9-8b76-a46b2de358f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321e464-8789-4b4e-804d-7f1ac0878a7e",
        "cursor": {
          "ref": "d74b0a86-def4-42ab-839b-ae587b6a4a08",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "24d7f7ac-0439-4677-82b9-523303732a08"
        },
        "item": {
          "id": "a321e464-8789-4b4e-804d-7f1ac0878a7e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "073916e7-47f3-41d3-b5c0-128bcb20e774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d049b4e0-247d-4dcf-9130-085bcdd4f68d",
        "cursor": {
          "ref": "545b5004-2c13-4a99-9858-61938c01dbdf",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ed8dc191-6c25-46af-8d26-ff971b17de03"
        },
        "item": {
          "id": "d049b4e0-247d-4dcf-9130-085bcdd4f68d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1c767017-81f4-4c18-a7d4-154af7aefee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b785df2-ea6e-4ac3-9b1e-e0b54ae02434",
        "cursor": {
          "ref": "14049c2d-dba4-41fb-8df9-68400ba76d35",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "820b20cd-280e-4c90-b929-2680dfe75430"
        },
        "item": {
          "id": "9b785df2-ea6e-4ac3-9b1e-e0b54ae02434",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "631ba528-63d6-4e74-9da8-aaf485ba8e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bd6eb8-5e9d-4fbc-ba52-c0256c91f5e6",
        "cursor": {
          "ref": "4c973e67-a76d-4bac-8ef5-75233e8e3127",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4d001e97-7710-43cd-96ca-3dbc6b21c796"
        },
        "item": {
          "id": "20bd6eb8-5e9d-4fbc-ba52-c0256c91f5e6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9049de73-9005-4a02-b7ab-9c658f83f5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a008ac-435e-4e30-8a3d-36c8acb8b7ea",
        "cursor": {
          "ref": "3c4926aa-acb2-4213-909c-bb334f0cd354",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e4ab37b3-0d3b-4d1d-811f-bbf5ee5dcd5a"
        },
        "item": {
          "id": "57a008ac-435e-4e30-8a3d-36c8acb8b7ea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b4f89259-117a-4df2-852c-8d37d7a959e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f0bc8-522f-4909-a1d0-aee8c5407abc",
        "cursor": {
          "ref": "b41ad109-d759-4c98-b511-acf5553f1130",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4a8661f1-357c-4ddb-abce-78297832dda7"
        },
        "item": {
          "id": "845f0bc8-522f-4909-a1d0-aee8c5407abc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "102e1710-636f-4457-a1d0-2725ac552db8",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "3e7f24b7-810e-498a-a0ea-f489065e12fc",
        "cursor": {
          "ref": "e1c6986d-14d7-4538-9593-55c97da9a72c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "771d6373-5a9e-4e39-83a0-2265c54f41a0"
        },
        "item": {
          "id": "3e7f24b7-810e-498a-a0ea-f489065e12fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0dc0da1b-9de7-411a-916f-95a1d0dd7de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4982e26c-0ac2-407e-bfdf-13e8724cd625",
        "cursor": {
          "ref": "ae033b96-0f48-429b-aa88-c7301dc8d450",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f2c5b615-2c98-4073-8000-2acb11db9e88"
        },
        "item": {
          "id": "4982e26c-0ac2-407e-bfdf-13e8724cd625",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ecfb623-b3ee-4eec-9b49-2a338844a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a88cdb3-9fd3-4d1d-a55e-97cfc9a0243f",
        "cursor": {
          "ref": "8301a8af-9fe8-4898-b4d0-2d15d46ab1ab",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "423e7dd7-f492-4c77-a5e7-116ccb137a36"
        },
        "item": {
          "id": "8a88cdb3-9fd3-4d1d-a55e-97cfc9a0243f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "20fd1ff4-b5c4-470f-8f43-9f236d971aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094ea2f3-9361-4238-a306-c443ce8290d1",
        "cursor": {
          "ref": "ac882ab8-6cb3-494f-bc37-2e990f64dac0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "daaf9919-d546-43a7-8a17-fe0951d2b9e0"
        },
        "item": {
          "id": "094ea2f3-9361-4238-a306-c443ce8290d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4e6da246-7c6a-45b5-9b6e-86f40dcc6339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec55b17-eba7-4934-aac3-1ff8ac9d7d3a",
        "cursor": {
          "ref": "d345951f-d5db-43f4-a771-aee57873b66d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "af3ab447-8347-47ca-96fd-734548d62427"
        },
        "item": {
          "id": "3ec55b17-eba7-4934-aac3-1ff8ac9d7d3a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6c181618-ac3f-416f-a604-691c686788f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a940913-f4bb-4086-8fdc-8d778c1d6cd0",
        "cursor": {
          "ref": "d2a95819-537e-4327-b6ca-724b3ecf8178",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d77b8d58-5c80-4bb9-afce-424b1379f470"
        },
        "item": {
          "id": "6a940913-f4bb-4086-8fdc-8d778c1d6cd0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "37e2192c-9d0c-400a-8408-662252e635d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4ae0a6-215a-45bc-948b-cd43bdb2b08c",
        "cursor": {
          "ref": "d68204ab-0f2c-4008-9976-b2fa50512f7e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "820ad5b8-89a1-4543-84fa-5ea06c20a03d"
        },
        "item": {
          "id": "0b4ae0a6-215a-45bc-948b-cd43bdb2b08c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eeead7d5-4a6a-48a3-9717-0a3b3b1dd527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1038,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192efa25-e0f0-4843-a230-1b98e4cd59c2",
        "cursor": {
          "ref": "5a894cfc-f4c7-4fb0-8120-2cf18e5950f9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "adc8221a-47bd-4472-9003-184e423128d5"
        },
        "item": {
          "id": "192efa25-e0f0-4843-a230-1b98e4cd59c2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "899b774a-ebe7-4b44-9df3-9d5d6c577c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13e92ba-fbf7-4fd4-a471-2a3a6875a473",
        "cursor": {
          "ref": "f753780d-6264-4f10-b9bc-227d6464e667",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1afcd317-4468-4127-85a9-049e6e83259d"
        },
        "item": {
          "id": "a13e92ba-fbf7-4fd4-a471-2a3a6875a473",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4924b710-4a42-42cc-b76e-955f5f786d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9517928e-bd3a-48cb-b7b1-74ca355bfb5d",
        "cursor": {
          "ref": "df84eb94-29f7-4320-9402-7648da77c4a6",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6340d45b-8525-465f-93b3-08c9533494ba"
        },
        "item": {
          "id": "9517928e-bd3a-48cb-b7b1-74ca355bfb5d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e096586e-7261-4132-9e5c-b94b817a5926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113f91f3-3da4-49e1-8a88-f5c590c933b4",
        "cursor": {
          "ref": "458a97fc-99e8-463f-a5b0-839ae598ee5c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "05b4d4ea-d9bd-470c-91b8-062ef0159b25"
        },
        "item": {
          "id": "113f91f3-3da4-49e1-8a88-f5c590c933b4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98688b62-b329-4034-97b1-49cf311c7c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0191c6-0248-4f7e-acdf-10dd37a941b8",
        "cursor": {
          "ref": "c7badb78-2df8-4d78-a173-eecaf016abfd",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b320e7b-042e-40ea-8e2f-a449a4db5129"
        },
        "item": {
          "id": "2d0191c6-0248-4f7e-acdf-10dd37a941b8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fb66963d-bdfe-46cd-9912-9ffa0214abce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd82266-675e-48a0-8e53-c44c8e2485c0",
        "cursor": {
          "ref": "329bb2de-a39d-4b2f-8cfd-2ec8f55e32d0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "140bf131-8d3f-465a-bdab-b43fd0c7ae3f"
        },
        "item": {
          "id": "bbd82266-675e-48a0-8e53-c44c8e2485c0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2fb9515e-0127-456d-8306-3942dee59d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e9afe-e11a-458c-b146-016421b89043",
        "cursor": {
          "ref": "b9040fe2-60bb-4563-8968-f6c86c85b6ae",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "abafc87a-4b64-4b50-96da-237c51271828"
        },
        "item": {
          "id": "193e9afe-e11a-458c-b146-016421b89043",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3319c3b9-7a3b-41f3-af76-c05c4e17c367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fdb5c6-9daa-4d5b-a15f-8407395c150a",
        "cursor": {
          "ref": "4bd023d6-2a30-4778-9234-0ad0f5c99aff",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ef95edb4-649e-4bce-b4ab-f67dbc5e0501"
        },
        "item": {
          "id": "c1fdb5c6-9daa-4d5b-a15f-8407395c150a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7ecd570a-dcb1-48d2-b894-962cdf868eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3030c93e-4989-4e57-9401-397e7277fc5c",
        "cursor": {
          "ref": "7cdc207d-12d9-43f7-bb0c-9f1894086d1a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3b4af551-736f-421c-aa68-7b36c8c67422"
        },
        "item": {
          "id": "3030c93e-4989-4e57-9401-397e7277fc5c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e354ed39-19b2-4d38-90f9-e5ea41087708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a354184-0118-4835-92ce-17d817cae7e7",
        "cursor": {
          "ref": "cf26c38a-5f1e-4bc1-9dd8-39ed862a9e32",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9a134353-c8ef-4590-91cc-b76ea428c51d"
        },
        "item": {
          "id": "8a354184-0118-4835-92ce-17d817cae7e7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "050d6df1-64ef-4b7a-83a6-d5823579be1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba810fc-270b-4df6-8e9c-5801aa4545d6",
        "cursor": {
          "ref": "626a3c0d-0908-4a21-8d4b-94c0e78f6302",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9800f4f4-9f31-4954-a0cf-11452c75654a"
        },
        "item": {
          "id": "fba810fc-270b-4df6-8e9c-5801aa4545d6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "623e5b4c-4990-4cec-b47b-5026d07d2a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9b6bf4-9ced-44a0-8127-3b551bc010b5",
        "cursor": {
          "ref": "eefdfc96-826f-4876-836d-5d18f7a444b1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ad76589c-88b3-432f-9582-f9577e81a6f2"
        },
        "item": {
          "id": "8a9b6bf4-9ced-44a0-8127-3b551bc010b5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "261a0336-7062-459e-aaec-168017d19a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02e5a50-1b41-4335-a5c0-d481a9c1ed27",
        "cursor": {
          "ref": "3ebb4e9e-2f9f-4957-abc1-020c9624dea0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7f2b771-79a6-40b7-aa4c-a4a31a3dc428"
        },
        "item": {
          "id": "a02e5a50-1b41-4335-a5c0-d481a9c1ed27",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6cee1237-1531-4343-87f5-a5c9936dd4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8751793f-d45d-4449-bd07-e1e1e3739244",
        "cursor": {
          "ref": "ac69c936-e7d6-4c19-b94b-3ef8301f0747",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0d0719e2-0271-4ef4-8bea-0cc50675c9dc"
        },
        "item": {
          "id": "8751793f-d45d-4449-bd07-e1e1e3739244",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5606cd74-02dd-466c-8de4-5ebaf23530c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e192086e-5617-4c95-aa2b-83f3670ca355",
        "cursor": {
          "ref": "a879e667-95b0-42aa-9c3c-aa5ae1751f65",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "31e037ee-7d37-4a3f-a9d7-ff3ad9f2fc03"
        },
        "item": {
          "id": "e192086e-5617-4c95-aa2b-83f3670ca355",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e89b22f8-cec0-40ba-8923-2d8d0cdd464a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a179549-7b4a-4315-ae54-a544308485b4",
        "cursor": {
          "ref": "32e4e2f7-2b39-436d-9228-db97b4b41d2d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d58beada-d36a-4917-bf8c-65a4dc060960"
        },
        "item": {
          "id": "6a179549-7b4a-4315-ae54-a544308485b4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b43d2023-f129-4920-a77b-21e6a5daa219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ca27e9-77c8-41e4-8ab6-9d8f02996b44",
        "cursor": {
          "ref": "4c54c87e-a385-4e02-b711-a3a15c772cb9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "86935f0c-14f3-44c0-83ce-dc0237fcba13"
        },
        "item": {
          "id": "f7ca27e9-77c8-41e4-8ab6-9d8f02996b44",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7b752a2e-8a31-4fa1-aa4e-ef0111e62de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0749625-a6b5-4953-9ec9-fba3b0b7a468",
        "cursor": {
          "ref": "46fdcb72-06f9-42bb-b856-75d11fca8a24",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ea2d3c10-26ed-4631-a742-74f8ca1eb8e6"
        },
        "item": {
          "id": "a0749625-a6b5-4953-9ec9-fba3b0b7a468",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "226f9a47-fa08-4387-9f5f-9329e4f30237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65542ffd-c4d3-42d4-9321-d0b191c435b6",
        "cursor": {
          "ref": "4e0ae8df-68d8-42c3-af31-4a252c315b14",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4d631b52-30a2-4ac7-a9fd-b130d1527027"
        },
        "item": {
          "id": "65542ffd-c4d3-42d4-9321-d0b191c435b6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "71b74297-2556-4548-826f-bfffe9a19c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e051df94-231d-4b2f-9259-3350f206d785",
        "cursor": {
          "ref": "c26329cc-1496-486c-8572-4f009a330deb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "14dc1f8d-c6e1-4f7e-9782-8d4c55b06058"
        },
        "item": {
          "id": "e051df94-231d-4b2f-9259-3350f206d785",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a6fbef3b-3e05-4330-ad8e-eb94592d1263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a766f1-97d6-4f0f-97d1-a7055d083cdf",
        "cursor": {
          "ref": "bbe24339-33b3-46d1-b6f5-8be4c1ee548a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "49430471-1e4a-4fed-95a8-b5394a11a36a"
        },
        "item": {
          "id": "c7a766f1-97d6-4f0f-97d1-a7055d083cdf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e7eb1ad5-a616-402b-b48f-72d7a8776f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d540cf-51df-404e-889d-ed912cd8acdc",
        "cursor": {
          "ref": "d13ccf91-94b3-46d3-9df3-4be3be9b7f5c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c2e3ad81-85dd-4a25-84df-3cdda5d964d8"
        },
        "item": {
          "id": "86d540cf-51df-404e-889d-ed912cd8acdc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e5743de5-d2e2-48e9-80cf-11126c9395e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba456061-e89e-4bcf-b739-703ac69ff0c0",
        "cursor": {
          "ref": "0f4d4366-87e3-4049-9ab5-3e1571cbfc97",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1a9c85ba-e378-4aff-b6a5-9ccadf25e818"
        },
        "item": {
          "id": "ba456061-e89e-4bcf-b739-703ac69ff0c0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "731b4619-9b41-41d6-a4e8-a08f0f1139b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd72795-5ebd-44d9-90c2-c77395ad6780",
        "cursor": {
          "ref": "3dd09fab-b65c-4319-b631-66a91a132543",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "23fd6151-de2b-4696-888b-b9083e434cb5"
        },
        "item": {
          "id": "6dd72795-5ebd-44d9-90c2-c77395ad6780",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "07745031-2a10-4d19-bbaa-eb8523bb02e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cada96c6-a77f-4c4a-87db-d2bd30c65f83",
        "cursor": {
          "ref": "f563e45e-cdd5-41b5-97fb-8974b4bcca45",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "587e022f-a9ed-45b4-a0b9-9628416f2cbd"
        },
        "item": {
          "id": "cada96c6-a77f-4c4a-87db-d2bd30c65f83",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "95b0210c-7fb1-41a2-a66e-8de6bb00e410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b64c37-4b5c-465d-a280-a09f824067ed",
        "cursor": {
          "ref": "ac4b90bc-b8fe-4bbc-a58e-954ea0b7c0b0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "100c4d77-4aa7-44c0-9e8c-b188f583dac8"
        },
        "item": {
          "id": "36b64c37-4b5c-465d-a280-a09f824067ed",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "505203b1-6de6-4352-819c-9ae68e4b165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962def4c-f037-44ed-8951-31541fe762d2",
        "cursor": {
          "ref": "8fc07506-58cf-4d9c-9bae-c134a0b2f3e0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5389c6d9-0de4-425a-bfdf-bbf8e9c05928"
        },
        "item": {
          "id": "962def4c-f037-44ed-8951-31541fe762d2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54e7b64e-1253-4d6b-86fa-56b089a63517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39842ad0-e201-4ed4-ae8a-c5425d48216f",
        "cursor": {
          "ref": "1c922515-d7aa-4fa8-ab46-2d14bef6a228",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "54dbba2c-955e-4394-a6b0-f04056aeb56a"
        },
        "item": {
          "id": "39842ad0-e201-4ed4-ae8a-c5425d48216f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4434b19c-c21a-4305-9d30-1466c5aa3554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e34c816-2112-45f0-83ad-95782c787330",
        "cursor": {
          "ref": "6d0a4381-91af-4389-9bf6-48c760dc0eed",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a6bbc6d7-9e67-4877-aa6a-382617777422"
        },
        "item": {
          "id": "5e34c816-2112-45f0-83ad-95782c787330",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c9b7847a-d388-4b57-89b3-e900da62e36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ba9096-758f-4b59-a416-5b1cc1639ff5",
        "cursor": {
          "ref": "9813220e-a932-4882-a04f-d128e8e5a4e8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c2095e4f-7e19-4c1a-b161-d0d1f9586431"
        },
        "item": {
          "id": "44ba9096-758f-4b59-a416-5b1cc1639ff5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e72ca6aa-6f77-43ca-bd9c-56fe64ca89a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196bf956-8ea2-431e-a1cc-7fd89544d8a8",
        "cursor": {
          "ref": "6c629d9b-1b4d-412c-8280-2297dc52e002",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ba8997e3-3584-4e71-b00a-eaee3179d406"
        },
        "item": {
          "id": "196bf956-8ea2-431e-a1cc-7fd89544d8a8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "06e7e8c9-c747-48a8-a959-24c1af4a163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4e214f-b257-49ed-a901-91e148ebae74",
        "cursor": {
          "ref": "f8795ca4-8737-4ad9-948c-9befaec5fece",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "30d30954-307f-4ebb-ae93-633904b0cf9b"
        },
        "item": {
          "id": "9a4e214f-b257-49ed-a901-91e148ebae74",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "da8adcd8-9256-4d0f-be61-487e8f0e26e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a067a11b-2e68-4203-9ebf-bba2eda8d55b",
        "cursor": {
          "ref": "37162f24-b05b-4394-be9c-fcfce39206a9",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "14b2a22d-bd07-4de3-83b8-c023e6b8d97f"
        },
        "item": {
          "id": "a067a11b-2e68-4203-9ebf-bba2eda8d55b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "29c122ce-389b-4837-a17f-caf7f75c12f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d03df5d-df62-4ee5-979d-cfe9366114c9",
        "cursor": {
          "ref": "105ccd22-6a19-42f1-9c27-3c3afcde8d20",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b72de786-27b5-40bb-8e1e-2b98987375c9"
        },
        "item": {
          "id": "7d03df5d-df62-4ee5-979d-cfe9366114c9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "161fdfc2-3dd6-43a7-8d99-379db80145d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c303a190-b4d6-457a-b9c1-db51d861040a",
        "cursor": {
          "ref": "86e3b68c-0ee5-4a4b-bdaa-a6fa863a51ff",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1e97954b-331b-4c64-b4de-ac1f08f5b2a9"
        },
        "item": {
          "id": "c303a190-b4d6-457a-b9c1-db51d861040a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6a73ce44-9e70-4cc4-8ea2-6cef90a1a3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9feca5-4146-419a-be71-752c89408cc0",
        "cursor": {
          "ref": "b58ad4e0-7688-47b7-b917-f1db841caae5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9d194051-4526-4ac4-92d0-e9ef66a4b798"
        },
        "item": {
          "id": "4b9feca5-4146-419a-be71-752c89408cc0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8fdbc5b1-6371-47cd-81cc-99ecf348af05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8efba0-18de-436e-927f-65806c34290d",
        "cursor": {
          "ref": "2a97293a-fd94-4afc-bb7a-119b774a7c31",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f8c5e7b6-e811-42d0-a238-322c53054105"
        },
        "item": {
          "id": "2d8efba0-18de-436e-927f-65806c34290d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4e97102-2304-475e-8310-9c6b319947c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b4b416-f019-4f92-a1c2-da18f42db509",
        "cursor": {
          "ref": "ce9fb041-4c4d-404a-be07-5b60967de40a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "714378dd-362e-4cfa-8fb7-2ee9c8947069"
        },
        "item": {
          "id": "47b4b416-f019-4f92-a1c2-da18f42db509",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "78609674-219a-4782-8f6c-ed985f03902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b962f610-fb43-4d21-8ade-ca84da7725ca",
        "cursor": {
          "ref": "53064c73-96af-4f83-a18a-5a4afa773ec4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5b9266d-eb01-4db0-a594-e55b38633508"
        },
        "item": {
          "id": "b962f610-fb43-4d21-8ade-ca84da7725ca",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f593824c-6681-4629-aabc-e35f1c8b0d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65ed7ea-790d-466c-8b8f-dbe064552f9a",
        "cursor": {
          "ref": "61dab783-bd9b-42e5-8e2f-9b4366117bd9",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "873036ef-0e9c-4cbc-92ed-f1739592e5b8"
        },
        "item": {
          "id": "a65ed7ea-790d-466c-8b8f-dbe064552f9a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f55648b5-203e-4cdd-a7d7-5967acd13ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627943f5-24bb-4af1-afb5-74c19cce9434",
        "cursor": {
          "ref": "a2afda49-e868-4b4d-8a21-fdd135653431",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6fbe330c-2698-466e-abc1-a7da09604e75"
        },
        "item": {
          "id": "627943f5-24bb-4af1-afb5-74c19cce9434",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eadbfc6d-2e6d-4ae9-ab50-8e3df855f77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c17a8ff-3609-4617-9e8f-ca124cd1a7db",
        "cursor": {
          "ref": "25303c2a-e1a7-4909-b773-7f87d34a9a59",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5e9c51cd-f21b-411a-b892-990c1433e0b7"
        },
        "item": {
          "id": "5c17a8ff-3609-4617-9e8f-ca124cd1a7db",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d47701c-8ae3-49bf-863c-32c6f23ab4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b966d648-8c0f-4231-b96e-a7ab7de1c9e8",
        "cursor": {
          "ref": "3a6b0186-d106-44eb-a393-f6544472a846",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3f0375fd-3f39-4bb9-a777-55e140fb6ebf"
        },
        "item": {
          "id": "b966d648-8c0f-4231-b96e-a7ab7de1c9e8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6d7a5e52-3481-4dab-aab1-3b7f9ae03f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6304e1ea-2a6e-4a22-91cc-776289838ed8",
        "cursor": {
          "ref": "8756e9fc-264a-42e7-b13e-ccce4a10f35d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f94a5052-9b84-40ac-b5de-a3902fbf401d"
        },
        "item": {
          "id": "6304e1ea-2a6e-4a22-91cc-776289838ed8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "29ab99c9-2d8d-455b-a155-f9087cd44286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdce49d-c1b2-4879-9c95-72f0dd4ac69a",
        "cursor": {
          "ref": "199a6455-7cfe-49dc-a5e1-edaf0741ade6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d184626c-fe62-4080-b012-ed6ceb7e42e2"
        },
        "item": {
          "id": "3fdce49d-c1b2-4879-9c95-72f0dd4ac69a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7e825c7c-8453-4060-aa1b-8edac2767938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6249576b-b888-4d6e-828e-0cd76316c1ca",
        "cursor": {
          "ref": "79fa280c-674c-41e0-8295-6ac15ab01d36",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "397e2b6d-0a7c-4d7b-88ec-2dd02df3bd4c"
        },
        "item": {
          "id": "6249576b-b888-4d6e-828e-0cd76316c1ca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1c7f705a-0e1b-4607-ac14-5d5f372b9376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bf4fcd-27a0-4e29-b3ce-6695fc9bae47",
        "cursor": {
          "ref": "58025343-3355-4b59-b6ec-8c654846d869",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a17a2ad7-5279-4081-8e28-1cf59454f273"
        },
        "item": {
          "id": "95bf4fcd-27a0-4e29-b3ce-6695fc9bae47",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e47f7280-36cc-4bef-a43c-7db6198eabd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dee39d-e101-4c08-b3cd-ca9a45f03004",
        "cursor": {
          "ref": "f04b618b-305a-44a5-a88a-d0f42b927618",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49507453-51fc-4bea-afd9-d1015db2ea77"
        },
        "item": {
          "id": "a0dee39d-e101-4c08-b3cd-ca9a45f03004",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "05e9446d-a001-4c89-a94a-f4206e5af542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60ea665-aa0d-44e8-b46b-639aebcdcdb2",
        "cursor": {
          "ref": "244dfc48-463d-4cab-be96-3d1c7ab99814",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0eea7784-5ac0-46cf-a7d5-5a79f455ce67"
        },
        "item": {
          "id": "f60ea665-aa0d-44e8-b46b-639aebcdcdb2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c41c10c2-b000-425c-adb0-f0705d52d1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3611552-0047-4652-90f1-222ad75ce6d3",
        "cursor": {
          "ref": "28802202-bab5-4861-a7db-a228d58994eb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "53d6f22b-c44a-499d-b13b-6924845c4486"
        },
        "item": {
          "id": "b3611552-0047-4652-90f1-222ad75ce6d3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8f0579c6-1e24-493f-9ac3-6c2314cf1646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e472e5-eca2-4eb1-b57f-078b963ab130",
        "cursor": {
          "ref": "a8fb74ae-5309-4984-ba17-db3a2033aaa1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "51c41da0-a817-49f3-bf28-64dfef306f1b"
        },
        "item": {
          "id": "21e472e5-eca2-4eb1-b57f-078b963ab130",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "58c9ced0-b19b-45c6-abac-50e18a5cb78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50e78b6-9970-4249-bd1c-d5176d5f657a",
        "cursor": {
          "ref": "649f67d4-e350-495a-b3a3-e25467817778",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f1cc4cf7-4e2f-49a6-aeb0-b9d1b6c2c3ce"
        },
        "item": {
          "id": "d50e78b6-9970-4249-bd1c-d5176d5f657a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bdbd57a9-d172-4ff0-9437-8ffc53950199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee0ccc0-5e15-478f-aa0c-6bb7208eb87d",
        "cursor": {
          "ref": "04099532-55ce-4386-9b14-bf0107b6cc18",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7e1f8db0-bf52-409f-bb3c-6c8ad4076e7a"
        },
        "item": {
          "id": "6ee0ccc0-5e15-478f-aa0c-6bb7208eb87d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "95ab55a6-adf3-4753-aaa2-578e7d39b6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806eb97d-31ba-4c58-be73-5d02d3128dcc",
        "cursor": {
          "ref": "f7cc4142-3cb3-4bcc-a7d0-057a6a6f5272",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "75615845-e8bc-4bf3-a9c1-87e59f5f06fe"
        },
        "item": {
          "id": "806eb97d-31ba-4c58-be73-5d02d3128dcc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a3298f07-1782-4b8e-935f-c962967797d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc75f24a-90c3-4252-9c8b-8a2545cb1def",
        "cursor": {
          "ref": "d037e572-31dd-4cb2-83ce-791c2cc23fb0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bb7f9fba-bf90-4fa3-b6b3-d569cb91134c"
        },
        "item": {
          "id": "fc75f24a-90c3-4252-9c8b-8a2545cb1def",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2128e286-ce5c-4a42-bec1-0d87c2b5a826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c958bc-52e2-4b08-8b94-ad31878b9c9c",
        "cursor": {
          "ref": "2e4b55be-d0e9-4d1f-8520-9f250187cc3e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fca981cc-4ae6-4e44-a272-8d69335a03c1"
        },
        "item": {
          "id": "b6c958bc-52e2-4b08-8b94-ad31878b9c9c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d277b023-b0fd-490e-b5de-ff6fd50c5f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefeeb9c-4b73-4c80-be62-17dd536c19b4",
        "cursor": {
          "ref": "e013edf8-b6ab-4e07-9c79-dbfb94280c33",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "05a9028e-1947-4fb4-abb6-92b4067a58ad"
        },
        "item": {
          "id": "fefeeb9c-4b73-4c80-be62-17dd536c19b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a7fe20ef-bc49-48fc-927e-0f7270692784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc28e11-dac3-46fe-ac16-70d8d7e1dc95",
        "cursor": {
          "ref": "e956da5f-54aa-4c7f-bf6e-eb6715b91b92",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "374d5313-3d72-4b8b-9e0c-a7584bb84f49"
        },
        "item": {
          "id": "acc28e11-dac3-46fe-ac16-70d8d7e1dc95",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8ee86e12-9b04-442f-8046-9794cb6721a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2edd305-9d86-4cc1-9bf0-81ba144a09b1",
        "cursor": {
          "ref": "f650f1ca-54ed-4610-910c-308d1807c3dd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3b3a379d-f612-47ab-abc1-97eb7160c5e1"
        },
        "item": {
          "id": "f2edd305-9d86-4cc1-9bf0-81ba144a09b1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "20c8bea7-8be0-4795-a824-3365b990b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fcccbb-e981-49dd-a8da-c3d208715190",
        "cursor": {
          "ref": "7be7cb0c-15df-486f-b010-97d0a7f9c43c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c834d6d-dde0-43da-81b8-40190141e03c"
        },
        "item": {
          "id": "90fcccbb-e981-49dd-a8da-c3d208715190",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "51fd35f1-28c5-4fe4-9803-735cef7caac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af85b11c-364a-4129-bed7-94dd8f54a3a3",
        "cursor": {
          "ref": "97a852a2-71e2-4d38-abec-b30762adca48",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "98709326-3dec-4335-a1c3-cf9729fda696"
        },
        "item": {
          "id": "af85b11c-364a-4129-bed7-94dd8f54a3a3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2f26b689-1566-4f97-93c5-fde4a7395871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256becc9-2e66-4cf5-ae2c-4df540a97311",
        "cursor": {
          "ref": "d855b225-318b-4ce1-bc2c-6361bd0a9cca",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5cf0a0d6-be83-4715-aac3-9de837752fe1"
        },
        "item": {
          "id": "256becc9-2e66-4cf5-ae2c-4df540a97311",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9b7a673e-3b95-429f-93f5-cd2a6c2db5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374b3f4-669a-460f-81f4-96513c81a14b",
        "cursor": {
          "ref": "465dc702-3482-4bf7-9b86-ac6931043484",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "74e45b1c-9a52-4212-87f8-9ce42cfc4cb6"
        },
        "item": {
          "id": "9374b3f4-669a-460f-81f4-96513c81a14b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2ff6f4f6-6666-41dd-a4bc-956010a6b0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da99003-c5f4-4620-b3a8-d4b56839b6de",
        "cursor": {
          "ref": "b603020a-769e-4134-941e-8c349fbedc2a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b01f344e-d41e-4032-9ae1-4be9ebc53ce2"
        },
        "item": {
          "id": "3da99003-c5f4-4620-b3a8-d4b56839b6de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1fd05e09-55bc-4ab7-8f29-10df602bf302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc693c6-a0cd-4eb9-b3cd-7150f6197296",
        "cursor": {
          "ref": "55b5eb6a-96ed-475c-be65-1a97bb8d7052",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6ddb9c80-04cf-4a87-860c-3c3b110a4bf8"
        },
        "item": {
          "id": "0bc693c6-a0cd-4eb9-b3cd-7150f6197296",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32281c85-d434-4928-9975-a7f7f5178349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc717ac4-a1f0-4693-a71f-491d5a8c9fc6",
        "cursor": {
          "ref": "4f5ebe09-773d-41ba-b6c7-e4947ad29f73",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b92484cc-57eb-4690-83fd-a020b796b1e6"
        },
        "item": {
          "id": "bc717ac4-a1f0-4693-a71f-491d5a8c9fc6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1cb718ac-5122-4b89-a124-1f82d1d781a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a360b0d-1e63-42c0-b67e-0d49aca3c9db",
        "cursor": {
          "ref": "a1847939-40f6-463a-a927-3e473f63017f",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b2ecdd0d-3c2a-4423-95b7-9bd5818c478f"
        },
        "item": {
          "id": "3a360b0d-1e63-42c0-b67e-0d49aca3c9db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a9b151c2-8e60-4c54-abf7-84c32f2d3b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44571f4e-96ce-4be1-be59-c549ce6d80a3",
        "cursor": {
          "ref": "7b0b33cf-8401-44dc-9780-c978cedf27b2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "32815e71-90be-4a06-bab0-a3dd341e91e2"
        },
        "item": {
          "id": "44571f4e-96ce-4be1-be59-c549ce6d80a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bc12a867-7daa-4bd2-a659-10c4185630e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f722f43-f1cf-4b47-aac0-d345dfae5b24",
        "cursor": {
          "ref": "50c666dc-ac80-43e1-9e88-ce379cae567f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3b6cbd5c-3e2d-47a7-9762-614b5f41a657"
        },
        "item": {
          "id": "6f722f43-f1cf-4b47-aac0-d345dfae5b24",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c7c249fb-ecef-422c-a4f8-95833a9055e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a43ec94-d8f9-4359-b378-306d74559e57",
        "cursor": {
          "ref": "c51a60cf-32f9-4e94-8b09-90387e081a3e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "795264c7-fccf-48d2-b45a-72cd7914a87d"
        },
        "item": {
          "id": "1a43ec94-d8f9-4359-b378-306d74559e57",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15d6f73b-dd85-4893-af03-0d121bde5917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ebed85-2084-4800-8a15-67e052b1edc3",
        "cursor": {
          "ref": "6d7d5eb0-98b9-45fe-9f18-ae2730783bdf",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "26739b29-0c3f-4dcb-9107-fa0deb2b7e46"
        },
        "item": {
          "id": "64ebed85-2084-4800-8a15-67e052b1edc3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "297b3ce8-b5a5-490b-a68a-4d1eaa94470e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573afc71-8fd3-4028-b47f-93b7c7092fb6",
        "cursor": {
          "ref": "305f3fee-0d0e-4adf-b084-b333c2f7f254",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5b057f20-449e-488c-9696-d42754c1a812"
        },
        "item": {
          "id": "573afc71-8fd3-4028-b47f-93b7c7092fb6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c6c857d-08b5-466b-ba2f-0920e003741e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b77dbd-c8d5-4d45-b4f3-223618aac140",
        "cursor": {
          "ref": "214bed4c-0fe7-41c5-97d3-410dcc3ad4d4",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "53b2e08f-a784-4687-b098-3ba1fe92244f"
        },
        "item": {
          "id": "86b77dbd-c8d5-4d45-b4f3-223618aac140",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "192a7c89-3119-422a-8806-0aaba7d9a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed228b-65cf-4ff4-bf07-dc0a88038332",
        "cursor": {
          "ref": "000ca16c-9225-492f-ad07-6c92df018efc",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3e49f0be-c071-4512-9e74-78c87ca19665"
        },
        "item": {
          "id": "43ed228b-65cf-4ff4-bf07-dc0a88038332",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "88adeaab-c24b-4493-a108-adefed84c2ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 115,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b647c54-d733-4916-87a8-cfd167ac71ea",
        "cursor": {
          "ref": "dc33de76-2d46-4952-9097-2d053f18f678",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "75978182-1e06-4394-b73e-82a81a1bc08c"
        },
        "item": {
          "id": "8b647c54-d733-4916-87a8-cfd167ac71ea",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3dd687c5-e57d-4913-87a8-60ca6f6f27c4",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "352af698-c45d-447f-bbc4-c405463f7be6",
        "cursor": {
          "ref": "0a01383f-be11-4722-ad1c-f8634b7562c6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d51aec19-bbe6-401a-bd03-01af4317e3f4"
        },
        "item": {
          "id": "352af698-c45d-447f-bbc4-c405463f7be6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d650316d-2566-4583-8828-9574f2ae8d08",
          "status": "OK",
          "code": 200,
          "responseTime": 3104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6c6648-c2c8-45ff-b960-f1706a7f3652",
        "cursor": {
          "ref": "ace3be67-eef9-43d2-ad24-82356c65ab2d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ff167810-d402-4211-a995-05aeb824dd86"
        },
        "item": {
          "id": "ba6c6648-c2c8-45ff-b960-f1706a7f3652",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "65996380-cbf4-4db4-a7a9-c16e51b40ae2",
          "status": "OK",
          "code": 200,
          "responseTime": 3118,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18aee5e-b3a9-4a99-b0ef-6c5df6df234b",
        "cursor": {
          "ref": "18dda475-6c73-421c-a913-10ec885ad5ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "93955fc4-1c14-4967-8aea-7d83663a8773"
        },
        "item": {
          "id": "b18aee5e-b3a9-4a99-b0ef-6c5df6df234b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "908e7bf6-f2c7-43c1-b4be-b7b947ee0d98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18aee5e-b3a9-4a99-b0ef-6c5df6df234b",
        "cursor": {
          "ref": "18dda475-6c73-421c-a913-10ec885ad5ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "93955fc4-1c14-4967-8aea-7d83663a8773"
        },
        "item": {
          "id": "b18aee5e-b3a9-4a99-b0ef-6c5df6df234b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "908e7bf6-f2c7-43c1-b4be-b7b947ee0d98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241ea8f8-9edd-4fd6-ba5f-ff5ee9cc4243",
        "cursor": {
          "ref": "7ea04898-1772-4478-a3e5-68adb766b7e8",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e260171e-eb26-4bb9-8ba7-1af3559e8408"
        },
        "item": {
          "id": "241ea8f8-9edd-4fd6-ba5f-ff5ee9cc4243",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8a28727e-9390-4931-8ba2-65558cdf9128",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 199,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a9b691-7f06-499b-a99d-7eee577691ff",
        "cursor": {
          "ref": "19f8b144-fecb-48c5-a0b0-aa1f7101b3b7",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c4ac8efd-dca0-4ad0-9265-6140774bdf4b"
        },
        "item": {
          "id": "82a9b691-7f06-499b-a99d-7eee577691ff",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "88935e13-2494-453a-9e70-fe8fa309c1fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 344,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}