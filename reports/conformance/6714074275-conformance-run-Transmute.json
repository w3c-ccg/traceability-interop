{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e6ab8cc5-503a-4cf0-ac8d-f168778651e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "deab4936-bb10-47f6-a236-ae7cffbfd67c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2864187b-bcc3-4b3a-8872-6e384ef71bca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "08df7f78-02b9-43db-9ddc-c5a7d23f013a"
                }
              }
            ]
          },
          {
            "id": "3b47a01a-7bf9-4798-9881-0cd8814e9cbd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9b85b17-10a6-45e0-aad9-922756235925",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f83ec06b-c0e6-4168-9aba-9d3319325cd1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98e745a2-8b21-4978-b791-a06dc79e280d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fc4fdeee-2331-4a67-8182-0578be0f78fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77c4b259-ef54-4ada-8a5c-42f1a212fb49",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db9977c-7cd4-489f-9498-b964d192057d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b88dd71-bc24-4e1b-bfff-925fb3dd7255"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41aaeb44-17b9-4655-828b-240be597be64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10af59cd-04a1-4e97-9671-ae2bd065fc5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50540644-746e-4f7f-9f26-35a7e6d6dbdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8093d18e-79b6-45e5-8a2e-456e4e80d777"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96c7d45b-2ce6-4cad-b2ca-e6ed8965a695",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c3d5d1a7-18a2-4a52-add9-deb8353c7900"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02b3ecd3-4bdd-408d-a4bd-1bfb135e924d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74468972-013a-4bf4-b702-697a02562a27"
            }
          }
        ]
      },
      {
        "id": "bee4d3e9-fe14-4e7e-a538-78f15cd57c89",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "20479b4c-5ac2-4ed7-b910-b2fc9d6f5b7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e018610-5621-41da-83ce-576f451aff36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abeee163-f717-4175-8472-0e5928ef6b7f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f922e353-2003-483d-89d4-0a384f144182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69479204-dec1-4bc7-8385-3058ec5043e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deca8159-7fe6-41f1-8c93-23264ead3e52",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90124d05-8d4b-4e5e-a0b4-49705f1ad144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8865b1d1-c6f1-43f0-a9e6-3dba32b7eb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a20daa-a3e1-4318-a71a-e8466dcff462",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2656d3f3-31e5-460e-ae52-bea32470c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47ab1204-be42-4dad-868e-5e3923bdd2f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37bf6256-4db8-4ca9-9f3c-7a9fdd48a160",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d441e90-a51b-476f-9895-4db27e8e26ef",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b2a59c-88f9-4109-a62b-eae4e8590404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88aa888f-1852-4de2-8504-be70e23b8ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18566004-6522-43e2-a3cc-ed70b262a337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636597b9-f167-4f54-b1c9-011c2eedfea4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84667b1c-393c-4ff9-aebe-4bada5328354",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f301f671-2fa8-4ad1-98a7-902c046d305b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2424288c-5c5c-4cc6-a1af-052636914c77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "075fe5c0-5e44-43d5-a3a7-92aed19864fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1a8a127-58f6-452b-92c4-9cb15b782271",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b342fdb2-ae46-491e-a954-2f710cae5779"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34ecb161-e350-476f-b7d9-d474bb3e97c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3a19b51-4134-4cc6-95ad-7c56e36a4e20"
            }
          }
        ]
      },
      {
        "id": "1382e2d2-6ee8-4cc5-94f6-cb7c9f0134e5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "63d29544-61ac-45be-a811-426bcb1c0382",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5fbe843-364a-4e6e-b4cc-06cafccccc6c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0aae29c8-f4e3-4d21-8aee-ddc316f0885f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01fa309-b169-4c9e-ae92-9056fec30012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6d9052-b7dd-4a6a-85e1-0fcf32d95fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6902623d-f153-4c2f-8ae2-6821c12b4606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bd4b908-b95f-4266-b61b-ace8d380e084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04811af8-1ca3-4dfb-9e0d-ce3d8cb479c0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3f6b3b-a3fe-4368-8d0f-8ec45b68b023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df038cc-9114-4787-8ac8-9c2e93bcb130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3c856d-0d3b-4cac-b872-0d5a159b9501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c69ebe8-ceb9-4c65-b2fc-8d0192ac87bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac56d7d5-0008-47f9-8508-7897ee95a2d0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d336859b-4c4f-4fef-8ff6-78fc26c4c099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f93c3d4-6d8f-43d7-b8ea-8c40f0b514da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718d4497-5208-4bf8-9b89-6a9c83d5f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91f94e68-8ecb-4a6f-9b23-e07932eabd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c875ef-df3d-4dd0-97a8-f515f5ee45a1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c5b9f3-c70b-4c0f-ac6d-15583f9c1dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd85281-e68e-4edd-8641-915124d9b122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e273101b-a993-4fb3-b78c-63b19e0bfc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ec05e7b-26c2-47a3-b4cc-b1111316c797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8716bd-defb-4468-8aee-2e9894edfd21",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ca0b2f-3517-4224-8c9f-80e1f3ba4a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e234d0-8ad8-4cc1-ab4d-dcaa66fc516d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d365f880-0bcc-4bf7-b98e-e00b8990fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "784a5124-01c9-416d-ab5f-abe48a30df7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7314da2d-2d61-419d-a766-dcfc2c1b98d4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc6bd0a-e4b8-406e-83f6-8eba82e06f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddcabda-1952-40d9-9ab5-9e9ec40e6535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f818d9-2532-4afa-b176-a1483fd32462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770814fe-a2d5-46ea-8e30-c3017961e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cc6dca-3005-46cf-a4d1-3810021a8be8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94d6b5a-8938-42ee-a9d9-8928df911b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7393cd-07b1-4a2e-944b-0d4ad3ebf9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7855ddc7-879b-4429-95b2-5297fcafabb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16da238f-77d2-45fc-b1ea-2b9272ff612c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2875a6c1-a542-4ad1-b966-c603dc246ea6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1760881f-edd9-45ad-be52-5249727f05e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41819801-73ad-43ec-9169-be703860ed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b41de0-f525-4112-bb43-4860793e945d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f4fce76-0827-4995-9812-050ba62a511d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db9d8c-2909-43c1-8050-5460866e2a77",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54190194-14d4-4cc3-aed9-dd2fcc3b348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6d677f-8622-4544-973f-403591f89ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3261c109-c85e-4e21-91cb-e84756bed4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837ff855-4492-4d8f-9dbd-0bd8a032f3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b46af52-4cd3-4a57-b2a5-c79d9da30c98",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e096dff-7cea-49f7-a354-80db5575d03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a110bf-3760-44df-ab27-149c57762dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49f6823-1c5b-4b84-a300-a272b1fd35fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1842d361-83a4-4de4-8e6e-90e540b1687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cced5e11-6bda-484c-95b8-70c7cf93a410",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c41986-8a2e-4b1b-a72c-50990eef4aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058a318b-d33e-4269-8408-c4ffc894e4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0deae4c-65e6-46df-9987-a8fe02facfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb3c3168-eb56-455d-9f83-d5d71b4c659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61393ff-a43c-4df4-a971-b07892fc7bd9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47e2abc-347c-442a-b7db-8effce42bbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77284321-1fdb-41ce-953a-ad1c86c4037f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30378c3c-2b76-4a6b-bce6-ab3bbf88ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a735b7-61f9-48ad-9926-83ea1eab2cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2fc1be-fdbc-4b23-a203-619d64987fd0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5615b6b6-f119-48af-8953-3514eb22ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf18e2-e5b3-4c1d-b168-b08cc292a749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079f546a-283f-472b-9969-d6ae35b105f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20abfd00-e46f-4e18-ba30-7056e814b6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06af62c0-abc1-434a-ad90-6d4cf30af20b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f97691c-177c-42cc-be73-dec2f26ba988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fc49a3-d369-4d7a-973d-ffe06b0de430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f42f28-9ceb-4305-81f6-06c603ed50b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ca547d-9fa6-479d-b595-5028de3d2737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c814f1-3e87-4d54-a5ac-d9f4bbf2535a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983be5bc-893f-434b-b0d3-cb36aa83aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99be400-426c-421b-9bba-5b46b891392f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075e650c-b955-4023-9ebe-8cb29bf77d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42cf4812-40b7-413a-ac4b-72f8cf5c31fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c17482-3289-43cc-8c09-a969fb81ad05",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d47b73c-bcfa-49cc-afc0-4bcf29280fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34ba4d5-b2b3-486e-80a2-53a5173c3360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a08734e-612f-46ee-b3cf-ca81cb95f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42724ae5-b9ec-47c3-b9a5-62561d05992f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef3f86c-6df4-4ae7-915f-e28a7046d5f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5078206-57a7-4cd8-9309-dcf6f914f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dee4baa-e64b-445d-8254-eadca18ab3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9353017c-d199-4be1-a2dc-719d8fc8b70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0b9448a-f124-4214-b32b-cfb0a97fcea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f44769c-6146-460e-8862-2693ee05b9ce",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c43d88-94d3-4188-bd0d-8b7c8a8bc55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ebdc03-14fd-48eb-936e-1883980a8fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c8e2ba-2076-466c-b8ab-2693db57a045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "682db4c6-492b-4ea9-a0ea-d63ccd1b2acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7c92d4-4cf9-4b5c-b7ae-4e7ca1d2b631",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74722270-72e2-4f21-a5a1-7f872454a324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11a37b3-a70b-4d1e-8dad-6b224523a8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26826f5a-0ed1-4ccb-b1ee-e6e039149e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59dae869-9ea2-4661-90b3-2671cd84f164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bae3d2-a253-45ef-a75e-511c7a6831c2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef58f2c-451b-49a5-b80b-b9cf02b30ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7b4813-c470-4f3a-8673-175a14232e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5c43c5-6a08-49bc-8da7-57c08411f615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f7709f-4e67-41e7-b887-776aceb55d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcfd882-e5d7-4588-8e9a-1d288fe367ab",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36effea8-5d36-44c1-b067-83eccfed73a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1449df7c-839f-466a-b94a-901adca517c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447ae550-8685-49e3-8c22-e78a2e4541bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "add77c91-437f-4979-a76f-48e3e5dadc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933cf9a1-7073-4cac-b2af-f965f57efb66",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a84903b-74f3-41a7-b77a-d9161d39cd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab36a2-50e1-4802-bb4c-c80776b1f4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9aa3b6-ef91-450b-af7c-bae060d3536c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7343c58-1bfa-43c9-83f1-c5255d5fdd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3caae66-83b6-4dc7-995f-a9fd6dff2491",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb44f7b-5df2-4374-b44e-62c3cdb0e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde619e3-d7a2-4505-9cb3-f345e3f5f5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430a4d3f-d948-4350-9115-47cc8200ea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c994d0-546d-4328-9bc6-1c5fc73957c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8026b8f-1aed-41e4-9d75-537625bc609f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c569309-9581-475d-bb18-25894fbcdaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c66f32-823d-4ee2-8490-73ab5d7fa0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c48f7f4-166c-42d5-bad1-6497f964b253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "128f3bbb-4107-4c97-8d10-174435ef83de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc935669-18f7-4071-bf97-b2ba4dc2f98b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20a15fb-78da-46b7-9e54-d00625d665af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e3b891-f318-48d6-bd08-505401b81658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f81c3b0-8f94-4b4b-bf37-005611b236df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1f69d3-2bbb-4981-be82-f126007de578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7156ea2-93ed-45cb-a3d6-23684a021a42",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede1aac9-b985-40b2-912e-be029c157e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e810434-4884-40ee-a123-1662f404bdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2bc318-0acc-40c7-9353-6498bc874dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c742965-0060-4c14-8f3e-6acbe66ecc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb145a4-23b7-41f7-859f-63eb4f39ec64",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ee9c23-64eb-4304-a893-8c29e03d3888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae30e1d-b4bc-45e9-90ae-ec1ff61d66db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a89380-c292-4168-95a4-64ebc4082a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "980dbbd1-702d-455e-95f0-b0848b2e984d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26173272-a3c7-4c39-b7a7-38eecb7951a9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7469774e-f039-47d6-a964-a4083ff10d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1cc88a-753a-46da-85f8-567013e6c7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c188ef-a3e0-4087-941b-02dea681b77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8eddc3-2ac5-40c4-b6fc-65a67c40912b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58de4f6e-6f83-43bf-884a-1e1d3859d17d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddb47a7-a30d-4424-baf5-a53421128c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c809a5d1-7f15-4282-92ce-2127610d9a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79795a43-8e25-4571-9371-126bc179fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9707dcfd-5e23-441e-a618-785985045048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b190f325-ef45-4a96-a853-f4e197f85e7d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d5b683-d360-4135-ab6e-b9a7025c8cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c882b2e5-95d8-4ed2-a8d0-2644aeb77bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe2c514-5e70-4fa6-9b4b-79eba2e5ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5de577-2199-491a-be2c-8582bfb7511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6ea8c7-a08a-4ec1-9a78-456bc7979512",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e758a820-378b-4291-bb89-b31b10e2e48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d312ea-cf7a-4fb6-9826-eb0fcf6cc601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09989f42-b7f1-40a6-a161-1e21110081c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aab9d84-f942-428f-81df-d40c40e20dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9172aa16-e926-4972-b406-fe7475394d14",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74663459-62c2-443e-9cec-f910f8fca0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64bf3d3-4228-415f-88fd-78224b56beaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fe3ea3-1cf8-44fd-914e-cd0015edf123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "126c4c7f-8c30-4547-99d4-ce218410422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f4fa1a-da1f-4de5-aa7f-d6d255963b7f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b042ca00-c4b1-4313-b6ed-14dfcd34b5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab903116-1b5f-422a-a6c2-3b69b3d3410d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5cace-2760-4d7c-b844-7bbc63104668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "153803e9-82fd-4b61-aeeb-ad6f8455045e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b6f5c7-b86c-4152-a642-5d1be88cfafe",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09bbdbc-c0ff-4adb-86d0-0e3f069d1e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a70e05-1d8f-44d4-bdd1-7989e051c84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf4cce9-a402-4534-a07e-8204fb882db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "956562a1-f4ed-49b7-8277-a3bcbb59621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b6c3cc-c505-4872-86f2-0603678f91a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14ee077-442d-4fee-b0d1-9333d14cae48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14321407-5b9e-4cb1-9a44-aab1b980e83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f366f87e-2525-4e1b-b2f1-c4b629254f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca13abf-2948-4203-aa60-770c57d94a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434f0cfa-44f0-4229-b108-cab24ce0be84",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c010cefd-5884-453b-ab9c-7304315123f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "001544d4-f81f-46b6-88f5-55988935f0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7eca06-b179-4b43-855b-c6dd68f0d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "782b1a71-f8a3-41d8-908f-42bc7c2bc7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bca37b9-5234-447e-80e2-3911a3fc546c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0348de06-2c9f-4615-af77-20194a475820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce3072c-c1c0-43d2-8633-5fd671abadc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37524eda-3a1b-4027-887e-bba11dee41a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b00c82-371b-4631-ac30-9fde3cc8f9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a0822d-e72e-419c-beaf-b7f43d0a661e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542f852f-0452-45b4-b818-b183cf6527be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f081684-e546-45e4-aeb2-c3bafc09277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744216a8-0fb7-4187-aebd-f93e7fca8578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab62c2c5-f9e1-4edd-90f3-7373e9c2e121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb47291d-2df8-47dd-8de4-32c4b3548afa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd91dbc-558e-485e-af51-2d2347a40d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c955df-a29c-4fc7-8d88-b2b8656ee843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb8133c-bad7-45d1-9186-1bc0b396d127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b640f0-818a-4d17-a167-6a26e1e851b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddc0fdb-2004-433d-965b-5014dcff3f9b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c755ec-7c87-4d5d-bd09-49da206d6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331eeda0-f660-4b6a-b39b-e26686474a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c62473-6afb-4146-9949-526ff0d2044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbda2a6-6eb8-49ff-82b4-90c3791254c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269b4e75-c080-447a-8170-239d7adb43ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4480597-6628-4100-899c-d28bfa09bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41b5f77-be6d-4d8d-90e3-05d4bccbe55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b89e79-4950-4b39-8f7d-b2ceb40cbe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb012d51-1264-47eb-a847-18967b911679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49893e21-984d-418a-abcf-e24249675a90",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f19066-7f7f-4840-8c24-468e18fb16c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ba69a8-f745-4557-b555-2a44b18e2b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8a7c00-f10d-4854-8f49-4c997303b0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e6add7-a326-45a2-ab37-d839451c2e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13253aa-f532-4c65-9b96-1d3cb29e8bba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cdd6f0-ac18-4c13-9792-582477e38c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e853649e-9264-418c-9e51-70c743a5d163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f287d-dca2-4c01-b245-7694145b25e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebf2241-0dd8-4691-b588-ac037239650d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f11d5-4415-48d0-9ab3-c759d53efe27",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b146a73-b3b2-4662-a90b-9ff95bf761f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43028f3-4e99-4fd8-a655-44296e7847b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e653bd12-1340-477d-8d2a-b8f6c3f4c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8e66dd-2223-48f1-aa1f-4e11e34cecd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b1bb7-d8e4-4682-a304-3d4f74235003",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2251f7fe-6ab6-41c2-800d-03fd1f8ab413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce946a42-4ee5-4d90-8835-b5e2f2114484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c891a279-e063-4488-8a67-91c73364a421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0718d32-08cd-4f51-9c89-d2118a3e820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa7070f-940c-4594-be1b-15528737efb0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a163a76-7fc4-43cf-bd7f-332625ba1938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c8960a-6135-461f-8634-d9b62971e93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf71261-57e6-4cfa-9004-65a85bf12eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e42b0deb-a693-44ac-b627-d920eb6fb2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b331bc-5597-4344-9882-547b2c7189d4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f0b3ed-c92d-4574-98e9-c3fad822f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc86a59c-f918-4fd0-8694-4fb830088de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f45c92-ca11-49e4-af58-70ebb3688ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abadde28-4052-417b-84dc-9376b3a567c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c7765b-ca95-4c71-97bd-d8b1571d3a14",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c79bf00-7f87-475d-bed3-fdf775d5e844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b75f92-b462-4374-939d-468733dc4fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e4f78e-4821-4ad9-a836-5f83f4f0405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9887c5fb-9967-4139-9aa2-0c9149032f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67849fc9-0d2d-47f1-abfb-cd2db9e0d289",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ccca8e-b9ad-47d0-929a-e97f9b62c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4734f4a4-9f3c-49c5-ba43-2e16d26987bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccce380-65f2-4dba-9ec1-5b7bcc27cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0241451-a255-4e69-bbb3-bc2bedea816f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc525c1-4194-480c-99c9-ff892085b5e6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9439e836-be6a-4fa2-91ce-29d75d512e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0230af5-55e0-41bb-857a-47e291bc15c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84583e0b-9420-46bc-b311-f6a4612932a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71e68e08-a331-4918-b71c-306ccb00c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ac188-285e-453e-83ca-805769d25acf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9f282-058e-47a8-a4ed-2c20358b0e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2f1643-d9f9-4843-8bdc-bbc2b73b063c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944831ae-288f-46d7-b97d-438899891de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c0e65c-75fa-4ed9-a765-f1fd87f17227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a8122-2e5b-4768-8609-efb1aaa74f69",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f21df20-8e4f-4e30-a350-2fce6eff2416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baebced8-1b0d-48be-9d77-d84d54b0ffde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1523e0-1c8b-4f81-a12c-039aa6b009ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1d9e9b-3c5a-4637-bc26-a574e6ac0683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043517ff-14d5-4635-a7f8-54163ee97a11",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688fad91-5c71-4613-83f1-cd778b8e8710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd92f692-ec84-498b-8dcb-ef644757c353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc7f7e0-8d9a-4afd-a179-f5615e767b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b03267-9daf-4535-94d6-c96b3d61d336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3810bfd-b27c-4ff1-a0f4-f3968b7f8f7e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10130db-05d5-4da7-adac-dd9401041d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c092d3-d2e6-491d-a142-12e68df52dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc79aa58-106b-4a33-bdc9-f067c2668cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa15b61e-458e-4ab5-800e-1e7520694699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46985e3e-1da1-42bb-94a9-72ae3410d938",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01aee9f0-97c1-43e3-9ebe-92015b0c67ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4813178-79ad-4bbe-b885-635da468dfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b32397-a97d-4e44-912e-13f3709df6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60701d95-981b-490b-bd16-ad234b38ee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6904a7d4-6a01-487a-a05c-e239f14a18da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4825dd-4c18-4827-97d9-ebf009ecda7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c017a3-5567-4fdf-8adf-a0bc9b43a99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba9dfd-eb8d-4c30-9d8c-62edd5b93624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "df30a433-6dba-4a3c-ab51-302e60099ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e154ba-34ba-419e-be55-81a8bdd330c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934d893-5df0-4d4b-92d4-282a74897f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebac0ef-e211-4551-9983-9beb0a868021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee501846-99e4-4531-84ac-d991baa44a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b43cccb-383c-4f98-8607-027a62238f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf3a8dc-a106-43c4-bce1-39dd7cbc0241",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888ccf2a-f7b2-4a1d-9f46-1a29669c5e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18949901-9814-4229-913b-154a3ddaf09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ef9d97-fd5b-4bbd-a102-1fc97a6cc186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2af529-143f-45b9-8a85-eeea24fbf5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670631a7-65a1-4819-8592-1d91ee035432",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d1f1f7-d8e0-40d3-81ec-edf0b11524ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8b19f5-a246-46c3-a1e3-9262f388c246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ee3da4-96dc-49f7-aec5-7d91783a908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd83314-634a-4f64-a0d0-385e1d21177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f400a2a3-86f3-4066-a44a-42344e2bd717",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a914bd-d601-4afb-86be-80680fae8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb2e17e-e9a9-4de7-8312-d83f49d61ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6e6249-e559-4b6d-96bd-18271aaf10d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "831aa0d0-f5aa-4131-844c-e81163a27cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5a8a93-9a59-4906-9921-c36226427f16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c019bb-fe56-4485-9467-f774c9230a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7ecdab-cc3f-429b-8614-79d37b4547cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a3f65b-f0b5-4993-b5c2-29ff760c1a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8156a025-eadc-40bd-9a20-e12fc2f7038f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bacfb76-03d4-40cd-89cf-9b69af0e6280",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ca96ab-e065-4ace-a77b-6644dc136b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf3e168-3806-4b13-a43f-429ce1dad19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342d7863-4098-4a62-b247-997d509ca79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1216a147-07ba-4e86-83d2-c1c24c793fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e438b84-0e63-4d46-88ef-df9b0bfebceb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2865943f-b166-480f-98b4-85edab6f9d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345704a5-4d76-43d2-8351-d2620660e4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622b77d4-6737-42ee-9888-71953dbfc725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fc949b-d3ee-4575-ab91-88e1e6f5bf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a95d452-9e41-48eb-a13d-88404f15e441",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64718435-179c-499d-a1fe-237fb7bc5cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4629aef-3383-45bb-a1c4-1ce7bf154d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4e2a72-bd74-464c-bccf-0159fe464332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f60a1c5d-c91e-4aa2-93ae-f04ed791d968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae61f37-f63f-4930-b06c-98f12cc4f949",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f41602-7e5c-4d95-adb0-1ff462c37675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa71896a-18be-4330-bd01-769277aec413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badabcca-0105-4d10-aaa0-567312da7ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1f2767-b4b5-4562-b09f-5773f6e7b0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a64de1-0265-4107-b791-630c4e6db3ab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073d6233-f49d-4d3a-989f-aa31cf36df31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b9ef26-c567-43b1-abc3-869692540573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513ed288-ef22-40c9-9c59-66819fc12de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6920c45d-dd92-4f94-9bb4-c71e713b5a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb452ba6-0980-421a-a6b1-6c184513be11",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f7038-48c7-441c-b3a2-410cce49d98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d15f8ed-e206-4e01-aee5-7cc16f90c340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14f6408-a166-463d-b8eb-1e070f39451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b55396a4-a96e-46a3-9ad2-0a6abd1d7586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d61408e-f158-445b-b823-595532f72e5b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2742f42-ab13-4e0e-b984-42586ee75d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469ca31d-da59-4756-8a92-a4825482eae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3251fa6f-51be-4e23-83be-f45e0aa47865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6490fb67-c340-471f-b270-9cf3e834eca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f219b0-fb86-4c89-8559-4c26bc5f602a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ddd2c8-04a2-4d6d-b5bd-17796815a4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbf6351-e89f-4d1a-a5c1-f39fd318dcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c5c6b1-5d0f-457d-819c-97d5bc3d01e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7fdbd1-8a97-4bcc-9d74-f89a175041df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef542396-8b2a-4a80-ba68-a21a5d9dcfdb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f38416-cb9a-450c-aaad-75120b7d3736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b38cb9-f319-492e-908e-f7e39841ac44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47887ac-1bee-479d-a4b4-0349cc8f6eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3866467d-9de3-4d6a-93e9-f828b37ade0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aa0566-3713-43bb-8ac1-aecb0dceae62",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57671604-a88c-4a08-ace3-70de9a75601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67f7c90-30b4-4046-8c16-2abfd18fb6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe7e17-5b7f-4ae6-a66a-017ff026ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b84bf787-01af-488e-9968-3c03295fa1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c2fba6-1cde-477d-8d3d-c1c00717db63",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9db4bd7-05ba-42c2-826b-0cf1b3c039ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddda7bd-9710-4433-95a8-8f6fe9df8f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb5faa6-72fd-4a6e-af17-7761981a5ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d208e58-ff63-4504-8269-e20b76e05238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed787c2-a2d8-4d72-bd95-4c1dcb0bb360",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53ce060-c24a-488a-8f5e-8bc1dc360a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b82333f-ca50-46ec-9749-93d41c48a934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c2aa0-5084-427d-9c2f-0b41fdedbd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f8a297-b8c5-42a7-8b95-41b167c896c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e3aefd-b4a2-4f56-afbb-2378b5f92da5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ebe3e3-8da4-4233-8ca3-10bccef4f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825f1a27-f3a3-460b-a44c-1a701901dafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab3e752-37df-4252-8bb3-fcf7ad1722ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8454cb33-a44f-4a2d-9d16-54f11e9592a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a83ed46-147a-495a-87b7-c5a85f10bf43",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80ff503-3459-4a9b-b919-9ea544374b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d81bd43-edfa-4de9-b2d9-bcc54f03c63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e122152b-f0f8-4402-8586-271571ba95bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7855e5a6-21e8-4ef4-9039-37b0b0576ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f1634d-cc8a-4d3e-996a-2e71c48cec9e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a013c8a-3311-4907-a967-7ec65ef0873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36fe154-78ad-4d2b-acd2-156d600ac617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728b2642-f41f-44de-98d8-bd9d63f6cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "083cbbe7-a6ff-4afd-beb1-12d4c12bf3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a388fd2-ce38-4bdc-bcb5-9a73cce5a5ed",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2484f3-731d-4e7e-b9d9-08ebe90826c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bceac2-76e3-46dc-b38f-450c7047e532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb11a0a-4939-4621-a40f-cd599e795eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "258c8299-a56e-4127-96a3-e9f49267a091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe38e5cd-ac13-4cac-b546-5998bf62a26d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6f568e-8fe6-4e9e-afb4-1b2129f099f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae130b0e-385b-4c88-a1ba-d5f0e6f61257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9cb296-c074-4a9f-809b-904bdf58bb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c262ad7-e373-4834-8605-545af68c3fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf657459-4e77-4af1-865f-014012e1b036",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b267adc-aaa9-4679-86ff-c1f58fd9c54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cee628-219a-40c0-82fd-7fa7a4640bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d66e2d-b48c-42c6-94f2-26ad00b99f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1494e5-4ed0-4c3a-935a-d816f5d8b883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8e604d-a485-4b24-8f5c-05be6d4dcb98",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a281157b-6a82-46d1-be0a-be9d91b9069a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaf17a0-4578-497d-a83f-a7ae5caddb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7512c7-99b4-4232-a860-882450fcef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8bc860-5760-4dd0-8951-e1fd73013d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d353df6e-5af2-491d-a1ae-223e2b4d2850",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc70baf-bc37-459d-b07c-1fcccb03a376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e401f41-d2db-4142-a19d-1bc0a1efc42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f12518d-d0d8-4bfb-8e2e-b8824b367600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f94f06-c0be-4aa1-b6ec-e0674c6cf8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c63886d-2167-4795-a3e8-888e20672bde",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e5b364-bf4a-419e-9ac4-a008fcaf733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8191d8b1-821d-4167-a5e7-c406e2f05205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13ddbcb-165f-4ed6-a8a0-439eb72c68ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b244e5f8-ca01-4669-9ca8-ac48490895a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27589c5-4e5a-4443-b763-d62d8e9ed458",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1c6df5-ea6c-437b-bf45-c464f6a6a779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5417f9c0-dc07-4558-a27d-a24b7eb4c6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2fabb0-c963-420b-a7c0-b9822f4b41df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "960112d6-b52c-466c-a25a-790e05e844e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5a5f03-d294-4fd8-9b02-555a4ea2e770",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a052376-3efb-4e4b-9ea2-b75debeae111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5c30e2-74c2-453e-a2cd-278be9ca44b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6822b75-4008-4851-8a1a-b73a70de92e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94457ca-a7c0-4c65-a0da-39eb25d06002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b37cfa0-bac4-4465-9e93-3af05e51807f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75f8fa7-3da7-4c5a-b1b5-b11b28628484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b388016d-2662-490f-bbc6-1dce22fd0434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bedfdf-729e-4df0-b529-045894f7ee57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca298298-f499-4c64-8330-b0a0a09a709f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc94acc-ecae-42fa-8a5e-e059c4c08c96",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7c7d01-12ec-45fe-88e9-814f42e78d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c37d99-bf8b-4b45-a118-fa922dac531c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970e4bd9-c848-49af-8325-3bb9b7e5ae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "632429f8-9d7d-4908-ada6-085c60f31584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6e8629-62d9-4afe-99b6-92fd9c80d508",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebd9248-3f71-4809-b113-ebf94fea5bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4356d438-5b87-4d67-aef6-9e9c0f219ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2145564c-01dc-42e5-a33b-618a0794c3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7e3a20-13c0-4a5d-8436-2a8d50dd3233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b34a2e5-5da1-4423-a072-190dbdebbfd6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3012ab03-03c3-4c9a-959e-302700f7e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a966842-66b5-4a18-8d78-3df21fa03a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730411a0-9c75-4eea-be04-93b2f375f6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "606175d4-738c-460d-bea1-4cae2b476538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af486ec-9748-417f-a0d4-50888e1f8439",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cd49e7-2ffd-4f79-9a11-c3b71d87f8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba88118-f28f-4c2e-af5e-e916a276184a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b630ab0c-d3c8-433c-91fd-21b6e40d5fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac5ee92-5b02-4e8a-97e3-9a7142cb7478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f64f2d-7b49-4ad7-a7c5-159a50f27959",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be7f61d-b785-4547-a1c5-5541097aed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46f92f6-d80f-4d8f-893d-4e8fc3b17a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d666f02-4bb7-4c66-a226-c69a15c5ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34d980c9-29f9-4e57-9e07-407e029bc905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b631dc3c-ab9a-44f8-922c-89b577a5a48c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba76bbe5-e23a-4e81-aa1e-08c5afd49c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7900107a-bbd8-4a51-809a-9263e5c20038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e6b9d2-a3a3-43b5-86cb-ab519b9f7f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d20cbba0-47f2-4936-b941-38a890dff705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f353cf8-da38-4770-8b33-8824f73e37b5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5f23cf-31a8-4747-97a5-18667c055da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1fdce22a-d1d4-429a-89af-a29874291d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822393d6-0f53-484b-a40a-705769e25817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ab55b2-b00e-4ad6-97cb-d7ceb24be856"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94683a84-4186-4c1c-b10f-dba4f8683cb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4548d55a-404c-4711-a183-81932404c7bf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89221d4-4d16-4307-82c2-45982e51da49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afe2f113-7d8b-44c3-8063-db4c6fbad317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d000d87-0c76-403b-a5a8-4c5645919d08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dab5dfb-2e4d-46c6-827b-ea1723cd3bf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e8c042a-b3c2-4980-825d-6e1af7d33bfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b3a8438-8919-44f2-aa94-92abc9409f61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b58e4312-e7d4-4f06-9a80-9505bf1d4475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae09eea4-9ce0-4505-9e62-f9204dbddeae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83bc76d4-60f7-4b79-b102-3cd0b686b11b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1e61c38-266d-4e39-a7e9-c28081e6a60a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3130e292-e1c3-4659-86da-575d4c7f245e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "155b0afc-1533-400b-930c-b4ea6b2c2844"
                }
              }
            ]
          },
          {
            "id": "8a531f3a-1907-4254-9148-8a6e2128dd3a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19d96280-d729-4622-ab09-df26ae26c30b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "29efe3f9-809e-4b41-94d3-47d6c1c23725",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ffe1d1-304c-41ba-8592-51502ab34c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9ad53ad3-8575-45fd-80f6-2ce4ead84a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a15153-36cf-4ce3-bfa0-ba9c21da01e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e825215-1d2a-4e4f-971a-7d7531aad270"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cefb9d55-23bc-4675-9b81-b616f7b45d14",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1269de4a-edb1-4a10-8de4-fd81e6cb8536",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7df5ebee-93c8-4ea6-a901-62b9a38fe03c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7539a52b-a8fd-4627-bcdf-bce5a21a5eb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9aa41a22-a11d-4eb5-8936-98b47768c7f6"
                    }
                  }
                ]
              },
              {
                "id": "c108b674-eea1-4533-a9dc-207ab31502fc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0bd1c2c-6943-42fd-b9fc-c9ea1b3848e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f07187f-5d86-498b-a84e-c4ce53dfa642"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "502136c1-961f-4126-8358-3ca652ef0465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a742d01-419c-46a6-82aa-f332067eb4a0"
                    }
                  }
                ]
              },
              {
                "id": "aeab514a-f470-4d43-86e5-ba57fe723064",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09e730dd-2654-4806-a1fd-94c2584129a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5d6b5b4-4824-46d2-ad8a-51bca70ffd4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0de5de20-8532-4fcb-9fe7-1db96e02d006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db5809c5-402e-4f32-9546-13719053517d"
                    }
                  }
                ]
              },
              {
                "id": "ad610249-7bec-4707-9778-0551d35c078c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56d37ab4-6ca2-4be1-a0f4-98042b978483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbc6c98d-e617-4ce5-a9ed-48c7343bff6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa36680b-a573-476a-8c8b-850fe2aae0f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e760de3-44aa-4ee7-a605-36d98478a877"
                    }
                  }
                ]
              },
              {
                "id": "c6d48ac0-f580-4ee9-9871-bc34ae2be046",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43e159a9-6337-4cef-8657-7aec0b74b621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a962114-da57-42b9-a54b-be94309f8e59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2148e0f4-b64b-4ea3-adf2-4c499435ae93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66dd86c5-352f-43e6-82bf-ba8f29ecf29a"
                    }
                  }
                ]
              },
              {
                "id": "1e242bef-3c7d-4c61-979d-858cba0ba817",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "586a22e7-8e13-4bfc-87f0-1e74ac28dd72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "286859b5-a8e1-453d-8a99-1dfe9ed85a19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f23fc724-f81f-4076-8ee4-5148222fa92d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9e95d9d-34ff-4397-86bc-09be5d5e13bf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73fbb1cd-3b5d-4c0c-bb2d-4c7f300a3475",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a13a701-8fc6-4e9e-a4ca-143f1c4f65f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "efd87661-dc07-49b7-a268-6893ec27cd35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42d795e6-c456-4dd9-96ec-49bd7b660657"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5f9678b-8d3c-4f9e-8641-e2f29b6d0040",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "28416b75-d957-4431-8136-059b445664e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f44bcd0-2a13-4b5f-817d-1e3c372e761f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3ad8a8f-9de0-4a01-9eb6-a5e51c551d3f"
            }
          }
        ]
      },
      {
        "id": "94200b3b-5f27-4825-ad8f-cd0dda3e46d9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5f64becc-a44f-4443-838c-8df96caf16a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51b88dea-4483-42d2-b352-6cd0be56e259",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6d59aa6-53c5-4764-a685-bb288f83ffcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad421cf-06ff-48c5-ba0b-2b1303b38acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fc5690-556f-4081-bd8c-78a7eda27a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68dae29-6be1-41bc-b46b-9d9ee7cbb224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "88481ec9-8e77-441c-8243-44398275fb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b4746f-2d7d-40fc-a5e6-11940d445a3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ef5792-8b2d-4ddb-ada9-dfb63a16281a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5d2e30-4cb9-4adc-bf64-c26f187f0102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5539fc75-1143-4461-aa9a-7d80e3025001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c43e4d8-7b49-49d5-a67b-3fe911adb234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1164aa-88b9-4e58-ab4b-227c238802d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fba11b7-b8a0-495f-b185-70054c4c3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e87126b-2538-48b6-bd4a-476767197071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8602829-73fe-49ba-a9fc-64f644ee2321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e18779-0fa9-43da-93a3-9af27c2cd485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea30c62-dae1-4df9-a065-e31ef0bcd702",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9792cc9c-2c41-456c-b292-94573ff1e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb48f423-82c8-482f-9587-b6fd219d9a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d430ff5-57a9-4fde-be55-6166342b8a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42a9207-4eea-47ad-ac43-9eddc6177075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bddf04-1cde-4808-81b7-762907779c4e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d48474b-2d2b-4746-8188-78a17c1f7981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86330ffe-6e51-4e57-bdec-38779ead096f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1ea581-02cf-495b-9816-e4fa04e41050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0596875c-f2e8-4dc2-9c84-43e5e8261927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80077733-13db-4148-8420-3a19c715bfdd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ae9a1e-0fd5-46db-9008-1b80ff9f0dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd9877b-28d8-4d5c-b693-1881cf9d6b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2fffdd-a071-4f45-9930-7048cf60988b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88755804-2d3e-4e86-a721-eaa27f7b72b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0914f2-c664-4358-b762-ee6af4e262bc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d7afdd-8a1d-4d9f-a740-0941b3940025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd26493-2416-4b31-b259-83b0b3a65d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07d3129-e050-4f20-aba7-41976928e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3289e4b9-cb64-406c-92ae-a8d95129aaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc39dae-52ab-4d3f-ad2d-5a74a68906cc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d8a438-7f42-4a9a-b924-213623be5c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0a6ba5-e697-4e5f-be76-e09a36b89965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a001c10-2169-434d-be6b-1053d55b45a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44d1cd1-4dde-47b2-9197-74bd5e9abc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d5c92-70bd-4ed2-877a-672b11bf59c2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed177f-9b2b-41fd-8800-6fb0c9945d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fab21e-3b94-420f-b6dc-6be3ad6a0289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba7c673-bbb6-4762-a3ec-1b6bbf8e2a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13297ca2-39c7-4d48-ba98-cf82cdc29610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d5c5a3-328d-4177-9470-5e70aeb80918",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9173b88-9c01-4517-8757-934a5dbf8e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600c5d99-a7b8-4823-87d1-d32f422952b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b87ee8-9c7e-4b50-ad52-bc39e184c9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ab9b29-3598-4a5f-9ac8-4cb1d1efcacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44765ec-1034-4a49-886b-0ed5e825202a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c8c53e-eca2-4670-bfab-c5e5e0ea7f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f661f6d5-2a65-473b-b8f2-3a0df7c83237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9f128e-d159-410c-ba69-0dce2f9f612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0470d08d-7f43-4886-9c8b-dbe751dd5001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e13ef3-7e97-466f-b109-a01407b0220d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be0710d-364a-4e8f-97e3-4d8951518fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb3a667-0221-4ca7-9e86-c7f34ec869db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9863f3cc-6ed4-49ee-bc47-b6bf30e79883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64d89186-0b70-484f-a214-ba997ca80f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396b1bd2-6f60-41a0-9851-878bcd990074",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3369413-c5d7-4e2b-a01b-aadc8152dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ac8ddd-e9e3-44e7-996a-ac162d50167b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b41869d-6ba6-4002-9a01-177af321c0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2948ac06-b6ea-482c-bbed-eead3eeb8019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4001d9-b401-4e01-b5f3-06f2b0c8f9d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48d5b66-899f-4ff5-9f43-12d74d2b0643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832e8ab1-c34f-4748-a12b-68b25995201f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8781eb97-1a06-45d8-9786-c5433cba27b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9270599f-5c95-4c30-88b8-d51e8a17d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e609a94-5186-4323-a882-d0043ddeffc8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c499ae0-e49f-4851-9896-99d6742050b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c819ee-4e81-47e7-993d-7ae7bae527ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52beca40-dc7b-49f9-889c-088559e062c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca27164-5395-479d-bd04-88c31f793d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec385fc-bb50-4cce-b28f-9299a61331d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d605f-7c40-4111-824f-d0fa1bac89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93900fe7-59b4-4558-a662-bee71b4e13a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7743382-2eaa-48a7-9083-8a2d6ce74386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7879804-0f98-4a70-bb4d-ec173b8cfaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c30a82b-e466-4cf4-8ad1-0e07ee2034b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee1574-475b-49c7-9332-ad45eb1b1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b913bb4-eba3-4343-9b24-aaa39662a91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78c15f3-7f6e-4d69-a66b-36b02dbb878b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7daf708-b507-42d2-9d52-0a2280ef7988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864a244c-c14d-4f25-ac16-bd9a0db04902",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47310ac9-6340-4bfb-ab35-196ca3b7680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61874a4-d136-4154-9478-89c87cfbc97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0786ddd0-be08-44a6-bdb2-be273c55d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe990f4-53a5-405e-99e7-7fd7a4cf0b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952214f5-21a6-4c23-8b25-af4e403eae8a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7b0ad-0502-4d9b-b757-a3264d0fc18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b9a7d4-d967-4d43-bae2-534af78304ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c68d0a-9117-40e7-ab80-f3f38629a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4b88fc-29a9-409b-b9c6-8a2d556b71ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64023d90-bc40-48ec-b3fb-99c7b62b6ff6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da1aab5-9fd3-415b-9554-ba9cd3cb98d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663ac9a4-13b6-46d2-9aba-340c1a5708f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644920ed-baff-4e25-80e3-371d36db5877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826bb57e-b0d9-4999-aef9-eac3a23e3eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1f0818-2aed-4f6e-93e5-ce09539b3981",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb40c21-7b4b-4e90-b2f0-453aeb5077c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83692d58-d6f9-4fe0-b2e7-5f340a0e4a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae31e5ec-b154-4035-8aef-75b42d384a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "488cfc48-35a7-45d7-a241-1f15177bb9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342c89e2-8957-4172-9fba-f42fe944af42",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba1ec61-a932-45e9-be69-4a08466480e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8ca42d-d802-4174-9c78-4ee15bd400d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba6247f-53fa-4464-b01f-79c2a68d3e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e1d0ed-90e4-4183-906e-0c57b1d6a9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a2b836-66c1-42cc-9c95-bd1dc419caaa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f172bd-a822-43f0-bcfa-e8b1e6deca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa14218-a781-48b9-88ac-4d15f9368b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399ca01f-98fd-4953-927c-bf31946872c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a21b375-c00f-4d95-8c14-ab1d31e2d5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a26b06-3f64-4ac2-b6e5-5cd0bc27c99d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1824f0ba-05d0-4f38-8cc3-b5342bd75a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85546f35-0803-4424-8775-4c0c4d40c76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e3dd0f-faf4-4ff2-9347-d55ae481786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef22681-2dab-4300-af0f-f96c05258457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2766c079-dfa9-4aea-b9d1-64ba49cf6581",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee10bc9-3030-418c-89b9-5eb050504273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7652dd2c-6a90-4779-966c-5f6f818eb583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a944d7f2-9a4a-4f1c-b535-718e0bbf3523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca45cdb-37cd-4a24-bdac-01e47786493b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b542e1-561c-4ad4-bf34-7c1900dc9960",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8183e529-f4e0-4800-8b5e-d9d7676fdf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c6cc83-84ea-4843-8ca0-48bbe9cfa4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10384740-6a30-4885-be5e-7bafa7486566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120dcc6e-15f9-4b4c-a1aa-9f8bafe14f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24423005-17f6-40bd-9593-efba37782cd9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c3b40-2225-4799-b6c8-746b59f5c1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46af2f2-c0bb-4eac-89f2-65c89cae3687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17621079-5a03-4c08-bdfa-3c916cef1f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b10476-3f37-495f-bd2c-61bcf4810402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cd7c18-59e9-4429-955a-de526e17a575",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825bc4a2-705d-4813-955d-6cd9c76792a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0817889d-d545-409b-b730-bddc2dbd94e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca684cec-db33-43d7-848b-446afebea11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af1b108-a202-4a0f-ae82-69bdcfd12350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b324e1-ca8c-40e8-b7ee-6f2628484b6f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139efa3d-f5e4-4a8a-9442-371b7d111890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40418eab-50e8-4745-859f-a96bac4c33cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e23aac-038a-49ee-af76-95e47ac5a50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1118ec96-eed2-481c-8a0b-d857afb718e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d2f3f7-136e-4dc1-8190-f6a1ddeb437f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936150f1-e2ab-41be-ab2b-65563fcc7734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bac63cc-ae4e-4cc5-9757-8c3c51c8c57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea0b69f-bd7f-4c0f-bd79-9d55b51f477e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf853507-f104-41ed-bf28-c35b2df7343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a1de9b-e975-4dc3-a940-069ace8fcba5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d0fa8c-481c-4724-95e6-2d1461da5a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67056acd-840e-4b76-9eff-ec4a4de4d37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0097f24-4a2c-45d3-b79b-a0ba76dcbf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c567a7-9987-4c63-a889-f449d1254bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7dff8b-4079-4871-bca2-a8b22dee4305",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8471a62-ff27-4929-abd2-02a3a3cef434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785f015a-05ac-4468-af40-9c937b29b656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f01732-fa11-4565-98fc-26bb64b5eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9cc71d-2a47-4630-aee2-981b9800e5ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "937a2045-5299-41ec-889e-e08b9166ef32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98e223f6-c014-4cb4-a805-aa86d0d71837",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b43bf4f-54c7-4bf4-a33f-6eb3a6e2b6ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4b58e2a5-43a4-463b-8028-1dfe61bb7eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1813937f-e39f-4f69-843e-ff1bbdd0f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "151b2a7a-beb3-4e94-a4a0-43f84877c608"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fa948b9-212a-4db0-997b-5cc31a5c4c6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc4d6a0-0698-482c-9b43-b97dd929fbaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b67ff48-b61a-4c26-804d-92dd288bec76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c43e077-341a-4999-a617-61d789101749"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ab7edf2-4190-4522-a403-7b23c184fd67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7be7fcc-9582-4cb9-9378-4f5daccd2fc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca384574-5973-40fb-bb87-f32db9bc77d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "361f3c0d-31b3-43d9-b56e-d0801a5991c6"
            }
          }
        ]
      },
      {
        "id": "24dc3fa5-883b-4fe7-a345-1eac3eabc9a6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8ba5610e-4c95-4109-90fe-4f5efa2ec3bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98cdb5f5-12c3-4d56-892a-806c6c44a6d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6e22f95-3921-4f6a-ae11-adfee465819d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e28f27-29ab-4f88-9be9-d509157235ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b87596e-7243-4731-b24b-528032e52581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde852b3-d3b7-4295-9e12-3fb008d2c25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f4f05f-cb90-4765-8923-2f2d61833322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da3d7d3-8b54-472e-8f3e-a909fa4d2913",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b023922a-f2b2-4109-8c73-53cef005481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1feb8b-6d42-4772-afed-999ce21cf4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9363994-f868-4600-b9de-d608fab2b3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5292b1-ce01-47b8-bc2a-656540df9a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e664aa-2a80-4fe7-bc87-d1227354fb6e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04779c27-41ae-43bb-ad02-55edfcf9a8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140b0958-2ab7-4815-b02c-57e4e8d9e91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ad1ffa-9bd1-4943-a0cb-1c69cb1ee875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78533c3f-27b8-4044-a180-1ee9d61ceefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f090041e-e1ba-404c-b186-95ec4c50037f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25df72c-1b19-43cb-9f41-fb2d4abf8000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34c60f2-8d8f-4592-aaae-8c9194319fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16285b5-059b-4133-b0b7-18dd8d02a462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76397db-afdb-4279-aab8-c429517f2f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b759584-606f-4e9d-8b50-47f441967efe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb28b5b-1547-4c86-91ce-aeaf1bc2d07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f20939-1b71-49c3-b9d7-021b56b4bf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24475cd5-85c5-4f61-bf08-bbf104bf4934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9d906a-6acb-4cdb-9632-8b8ef87b52ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2855b93-557a-4211-88da-47303a75a10b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2006b66f-446c-4b19-b3a5-d773af8af8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543a8fd9-fac0-438b-b08d-b4646b23a1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13ac29e-1195-43f9-a391-d8c8354769ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62917dfb-7a29-42aa-873b-f5426c0e6d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9498aea1-8d40-4e64-8f23-cf8bc374a569",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0e821c-72b4-4534-9d94-79b0e469a02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1391c9-b476-4634-9bba-7c87daef75ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abc4910-8dbe-4eb5-bfca-104ef27479e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd0f292-dcbe-406c-8fd7-c54aae7f7cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127e9dde-fc42-4137-9213-3cb7f1f80954",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b340b274-c833-41ed-bd49-2cdc779eb629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c922ecf4-86f7-4933-8282-e90633034b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dc152f-a868-4e2b-b787-189be032d680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "267e0285-1984-4d8b-9ea7-3703c4beaca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25717aef-f1e0-4149-bc1a-c278b7d4a661",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89858406-420e-4322-9904-d2b92c3cbb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6b774a-08df-4f99-9f2f-ece2dcb2d700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb60063a-72f2-4b74-ae78-b25d04a2fc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b12e5b93-1ce9-49f0-adfe-2c0a2ccfb7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa35638-af12-4ec9-bd46-3efa1efde044",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7713891-d4b1-4472-be59-cf1aa1b28c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137f67d8-57de-412d-b5d4-2be743532d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c497a97f-19fa-48b3-bda4-3264c390d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2cb38c-bb4c-4cce-9be5-444d1b257abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abfcf57-7bcf-428d-a4b0-8a73a8d96b6f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f252450-38df-4c33-8ee1-4cf2816ba958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8086c4a2-ef7f-44a8-8599-2369774bff63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024e0d2c-720e-4bc4-96c4-93a8a3f0e2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "68cbb424-100b-4be8-ac88-ec111f87bcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e0e093-d89c-4fc1-acc5-de86d34d4824",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40fea37-7a22-4b14-9aef-c06a737497b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81d485a-db2b-4823-826f-0698bbf680ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f891976e-70af-482e-ae84-2ab9f81b97d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b401874b-1e17-4a89-936f-05094e3da5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d75a4f7-2756-4737-82ff-b45155118d00",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ae8948-f4fe-40e8-a193-9d111d0fec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53060bb-4377-4d24-9061-5bf69f192919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bb456c-747e-47d1-ba03-258a8e65936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f752ef-c2a5-417b-a538-61da68658053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fed2da-e38e-4fb2-8974-892e5056ed27",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec59e95b-577a-477a-8415-b34772d7abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3175bc1f-99bb-4b13-8b8f-d1f7aba8589f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749ac3da-4591-4942-92db-1689c0091973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20e3cc2-b2ba-405a-9c57-9624cb49c8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1486b1d8-696f-460b-8688-106e4fad0999",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca06124-8b9b-4bbc-b5ed-34d7b1aac91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8f3daa-ac8e-4788-b868-f365ff07af43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc49055f-6554-416f-aa3d-3e00117c2757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "407db11e-aab4-4187-92db-008f9333d868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de724dc-261f-42f7-a0b2-d7e92bea01f4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5517e069-2893-4594-9a8b-a5f37567353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc74243-cc06-49ef-8141-30cbcad2b8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfc9b9c-3e34-45e1-9a4e-2c7b1d633154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd7ea8a-acd2-4a59-abe7-88ef0212ad84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38633fa8-9366-4019-a3c0-0a1b21f3e410",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6642d-f597-4a8f-8119-8f32882941b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b043467-32e9-482b-b359-2e7e12c913ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739aeaed-359d-4592-8b57-8b70545d71dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82da84c-8fbc-498e-9014-44c05bbe2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375b816e-0095-447f-b628-6b4d11fbe310",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a903d5-8d63-4fc7-af8e-d3cd9922d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62aeba0-2505-4883-b922-e228cba5a0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7032e839-ed11-4802-9c50-1654a10cf0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec8b5d3-c65c-4dd4-961f-e64cbdb3e406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccad932-c818-4ef0-bba8-65db3465212e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86907ad-86f4-4e61-948d-6d69c4969aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbede97e-1e07-4734-b27e-49a6ce64d4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a29e4c-9359-420a-aa22-d03ede853dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdc8e58-acca-4831-bebc-d2cefafafff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da5e1d1-62b1-47f3-a9eb-fc2c045b77a0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaad493-e190-4f6d-986a-8b295c321c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b6361f-c0f8-4d36-b02b-fe9a5c6ff800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f9fe0-f38a-4424-aff3-df1812dc9d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6900a6c-6f6c-4298-802e-736aa8ede732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a2764a-fd1d-48bd-8a54-215c51fb3974",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfb1a5f-5b44-4b11-8852-70e211fa623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bf00a0-01e0-4dc1-8adc-84a003ce15df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014fa4dc-dfa7-4ce2-81b2-ac5de629795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5145df0-31f5-4ebe-aa45-c3127bc8064e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4ca032-397d-4b10-a006-42b7a4858633",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e811250-a520-4bce-94ad-c12b9a04e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703646a8-d721-4d46-a332-ab95582297fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5399db9c-e9f2-4e47-a281-5e0fe92045b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85e4fd1-35a1-4363-b990-fcc93bf82570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b84f4f-c067-4236-a633-16d12f8d488a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8944aace-5cc3-41ca-ba73-acf87642e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9729cb2-2163-4697-a0ad-c755d321bf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da35701-aff4-4d8f-ba12-c5767e37177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "999af9e7-c0f7-4628-8e35-bfa466a64921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be50fc96-6788-4000-944b-5adbd9049a02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0dc7e2-ffcd-4969-873c-f4ee1fd21f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2799fc3-c176-4243-8ee4-f8e23dd41ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e86b64-0db7-4c8c-b9e7-709b50a885b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "425c67a7-f253-4f9f-86f3-39b4d7334b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6299ad-63f6-434c-83e2-6667e7dc3c44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e839209e-374b-41f5-af3b-d32002fa791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0309dd15-e347-48e3-b10c-2e5cd97b5656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b898deef-760b-45bf-9e67-7d47fad46971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8f2592-737b-4516-9ee6-7f35f27a7807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5edb10-aaa1-4ba6-ab3d-9f71e15ee488",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e1c99a-0490-4d5d-8610-8e19c59d3ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc385c5-367b-442e-a268-2a7a85d3bdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908d8fb6-5fd8-4c1f-9100-cc30fb86daed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "828313c5-15ee-4bca-8e94-9a619373ded9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570092bf-8473-4d7b-9242-71ce43df5f5b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b7cdc5-21c0-48b4-b52f-a37cf5501964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7909b002-4499-4a55-b8ce-a13d6bc9c4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb21588-e592-447b-b110-4a065669379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bb300f-99d6-4389-a8ba-d734e4ac8b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f97fccb-d808-486b-a3e1-4ec150bb96ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1903ef-66da-40a3-bdcc-a26c470b6ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2dccc2-a797-474e-a3d8-dc0b49ff3323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f79277-1b00-4120-b8c1-ce27eb8518ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22eda1b-ef4c-4233-be26-0a530bee3511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fd69c1-4a4f-4f45-9247-ec385606ad04",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ba7d79-bfec-4df4-969a-3b8cd97c1e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e1069a-9412-4692-9708-067f1be2aa28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d29b7f-e764-4185-9590-5a1944d91a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63ff3b8-32df-489b-8b63-8155ef7a4d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cd68c5-fed5-4133-9f23-ca492802f9a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4588e9-f86b-4b2b-961a-b22609ea0885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3349f1ea-edbd-4673-b467-230bc0b021be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f28825-fb42-46d3-9000-8d9230bc74fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "603519ad-b4a3-49df-9c68-5935c47cbd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda1d187-b85e-4ecd-9cb9-32f8c185beb1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc9e945-54b9-41f6-b5aa-381fd5571217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448b66e5-d153-4e5e-8ab6-140ee1626ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c9e4a-d99a-4214-9b40-2e36ae6a1829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ebfd4a-7797-486a-832f-f65d5fd0e34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7929a17-103b-466d-876b-5be3d05144c1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef96eb58-28f2-4ea5-ad7f-56f9b000b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303a06c5-b465-42dd-89cd-db1ea7522a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f13e12-e1be-4e8b-9bea-9770f333cfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "766a414d-2393-4919-8e5b-917f5443dc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889342a1-46de-4920-af1e-396dec947b69",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7588b-5026-4f0d-9fec-e1612b20e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0051ff4a-7c47-4e3b-b2c4-ceb2ba9b7ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85ff4e5-29d9-4632-ba21-c30fa48737b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73d2b6e-8e84-481e-803d-5ef09ee9faec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad652117-e96f-4804-bc44-ac10d610a975",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b650dc-ea86-4692-8d57-22fcd07f8020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d59d1b-e2de-4e19-a7ba-db0698718d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1c22a-5157-4705-a6e1-3f8ee784cbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6d858d-1dd9-4f6a-89b0-8f7c8132f4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094f6141-65c9-4d95-aec1-f5ca91136380",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3730a3a9-2f10-44f6-baeb-83c54c942229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19793ad0-08d2-47fb-bbb2-ee92a382ac11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9fb110-40cc-4eef-8cfc-ff21e0f27d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a99fb32-e628-4d4c-8023-71a879fac4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c02ed18-b3db-4a75-ac20-323f6665e2a4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef6da6f-cb98-4588-916c-b831001a6223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a234a4b-8a65-46d6-b371-c82e9838f481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8a803c-47c0-475f-ac64-2c82de230015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9a42fa-7593-4df0-b008-525cea73fb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd0ff94-8176-428a-ad19-1d740a7d0955",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c0c116-062f-428e-8854-f78736759fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df888be-dc3a-4a23-90a4-ca9ea492986e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8ac1de-b075-4c1b-9b41-cc5fe0897010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9b6e8a-4aea-44a2-a8d6-fda508dc1f9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0aa34155-62ba-4fa7-908d-c870f53e3230",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3049bdf0-79ff-45e8-bc55-6a4f757ee1a1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6933977-e87e-4035-adf5-6d858b896345",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "05dad317-20c2-46b7-bf1f-3d83256f6b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c63111-0282-4b0d-9d92-bd90ca5afb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbef375a-746d-4323-9350-3180d79b1c74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b30c2ff8-7bd0-422b-8345-635515cb9021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ada5fc35-402d-488e-b877-22d85a9580bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bf47e79-ca52-4bc6-b0ec-af94f7dc99be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8be91adc-bd92-4eb9-bc35-699956b6ed94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86fa1072-006e-40b7-99f5-91ee263cdbb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6c997c4-e96c-41f3-b36c-db578f07463d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25bb127d-f64f-4860-8897-140fdccfa6da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de1816fe-36c1-48e6-9172-476428d37bc4"
            }
          }
        ]
      },
      {
        "id": "7ce123cc-9bc8-4082-a5a6-a3e984f5d6e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b74e5a37-5fb6-4f99-911e-167b64af8426",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e8f530b-a36c-45ad-8c95-9272e2bfc286",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "459842e8-3a88-4977-8001-bb7461d4beeb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ecd80e-76e0-495c-ac1e-f17218e3f310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15bfa69-d79d-4e3e-a690-2776e194f5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24325130-75a9-4ba9-8fdd-82230b3a5ad8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22708ae0-34c4-4be8-9657-9ad54c794530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fb38f7-88cb-4b03-8537-c7c0c48d0ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc87797-c965-435d-a71b-154e1bd51ce8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8853b28-2def-489a-8539-f3893b5b4167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4280cc8-6c05-4fbd-9493-ad9b11af9996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57510950-ac22-4a3b-a2f7-4519d664b333",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01600575-1dc6-487c-8882-1281dec4c89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25a869e-2312-41f9-8551-ff4431592379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d26fc8d-6b50-47b4-866a-cc75cf2ca234",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68273217-9016-4655-a9d1-a33e8eec929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfb132d-eb6c-4a0e-9453-602f52f57cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828d079a-8dd7-4f43-84ec-2bf70b825583",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07db355b-c0ba-4ec6-9b80-6c2f2e75de48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afcb161-574c-4246-803c-d7433694f411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a11a2c-25c2-4cec-b0de-9a2092c0c0ac",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd72ff1d-ae4c-4bcb-9c56-9bcc6fcf9e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c8abfc-90e5-44b3-b378-09328adbd037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd8a7a7-faac-4a1b-bff2-74d824f6b4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b104ba2-7484-4477-a09a-2d5e52b68895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94cc344-743f-43c1-a6db-429e0e57120d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81169f-fe1a-45ba-ae43-ee2afc4cec44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8957ac6c-9248-4abd-a713-d751cf05a1fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46822ed6-ff23-4363-80c1-bba9a7df55fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7e4a35-4aaa-4b3b-bdaa-498797930121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5292a3-aaf1-4671-8258-2ee882d090aa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd34830c-4ad9-4f4b-a20b-3ca227507b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71c3414-af57-418b-ad72-74596fa2bce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e7bf3a-f0ea-4887-bbbd-69afde141eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37c0c42-487f-4127-8864-0f7ced32ecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f1fddf-9655-49d6-9367-209bafa82147",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23b74d6-38fa-4c49-a12a-fed7c5558607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc518ce-3e12-4de6-a1bf-9d18046736e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1924d39-58ab-405b-b318-128f4b78d313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd0713e-0542-4539-b49b-d2310bcdd2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aa5d78-e1da-4331-888d-f663d53593b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a714fca2-75fa-46ea-9fa9-2e40be8d3850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbbf586-315a-4345-9c63-b12608309440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e782f77d-58cf-4d8e-a10d-202c7075e67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386988f0-b39b-49a6-b48a-df1e8d1e393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099c0d18-4ace-43bb-b225-335066e73510",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc826b89-9bf9-4050-af61-62bd1d56f1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4278ac99-d1e2-4571-af8d-8de36d94b510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d88101-f8ab-4515-a98e-8f73f04983df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255c6f18-761b-4330-813c-80e9187c8d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5672fd-0288-4c25-b4f8-b7da81e4807a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe612f6-0ecf-4512-a725-130d8e13ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ecdd7d-fa90-4aef-af52-2995842b41c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaa8479-a177-4d0a-9aa2-407acf07974f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84640106-4b34-4e27-98f9-88069038b1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a0a229-fc8d-4e63-8fb3-a5edf62d22e7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5679bdf5-53c4-49de-8f77-4e69e925ad66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6220332d-9399-4ad8-8888-851f5100a60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e0130d-0e1e-44c6-9506-54d40bcdc8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b905d4e5-5ca8-4147-a8c7-85744ca019a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9936bee9-ddc1-4d32-8f6d-98281d4f084b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0e21d5-ca21-44d0-a26e-1738feecdaf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b855cdd8-4ee1-43b4-aa17-1a108864269c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366cc836-a5ee-4438-a7ec-2b9c2388d7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11c56fe-56ff-4eb8-b245-81938dc278af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d674ca83-43e7-481c-8da6-fcba008f07e1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1c7a1b-cbc8-430d-b9b3-b982cd8c3562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c381fbe3-e778-4d69-8044-7c7035e972d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02886ef-e86e-46b2-b0d7-d1ab518c6a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67b0997-52e5-47b2-8415-2b225ac8326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efbdd4d-2b88-48a7-9906-d6d91dc20b2e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99168166-622e-40fb-b966-5f38dec4ca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7926c08f-20ee-4435-a327-50cefeaecae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc4ac1a-cefc-4a01-b27e-9dd62ce32596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53f4376-e1e4-4cc7-93ea-0a8d4e37d459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caef409f-6321-4099-a196-c5d79e22ba45",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd0cf52-a26c-4a73-bf27-649db914f30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e4b3a2-beb9-46bc-a47c-a9db0c5ac038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e30b87-0627-4382-9f4f-ed67c193864f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ff73b0-3f58-4e21-bf50-efbd408e313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75858854-9f1c-441e-918b-74c602564949",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9b5c34-5b9f-441a-8e0c-f90cadcc6d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b544a6-d5f6-497b-ab29-df234cbbe544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e26b0b1-b5a5-469e-9bb4-24e2c1433123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191a9761-5c71-4ed7-a916-0b1f40bb6497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6557d0-6375-48c5-857b-6552ea92fc07",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad687338-00a4-4e6b-bc70-8bec97047bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571b6ab0-9530-4475-8c23-2443b8834e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10628bf-bec0-4dd5-8042-db05a5c37287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e83676-3ff4-43ed-a54f-766a6e7cdedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69048cf7-f386-4237-ba27-fda248a2b0df",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cc1420-f975-4e73-954a-c66ce2f39873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c99e0f-8e9a-49f8-b740-0c71433ff577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1c86bf-aced-48ad-9a62-970e12eeeb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5ec267-56df-49a3-98d8-7df2e1b360b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1be058e-3a8f-4317-8f94-951a773241a7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2faca21-ebec-4820-b163-fae034d0152d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d668eb7-2b34-4ac4-88ab-729dc07b94bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069cfc4c-8ee6-40ad-9a17-8f3d109c8d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd4d5e4-f0c5-425f-8c2b-6eb083137ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6920c04f-d11c-4730-971d-db2bf6009f6d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e068d0-a5fc-4fbe-961f-58f90130021b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c91a4f-9566-4b1c-adbd-f4c160ccfe52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225d140c-7bf1-496f-89b9-84f3007d180b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52a3d28-33ea-4a43-8ede-52734a5cf4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcafbef7-a199-462f-a724-c25aa96a78b8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18816b4d-cb23-4793-97be-ae4571bae6a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832d6d25-78eb-4e50-9f38-321eb3f09044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b36c4-5e4b-4f88-9bdc-da6c87b2a8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dd1ed1-ca7b-4c23-b937-be449d91f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b991ed9-89eb-4a4e-9d85-65d87a127eb3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af76f44-7544-44b9-88c0-24a5fd82d182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9386d6d3-b020-4133-bec8-9499f5fcbe74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1155fca0-edad-4c0a-b8df-cc59af976614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2693397f-ed10-435d-9128-606de8a85e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446e24fc-3100-472e-8d13-52de5cf10c2d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ff5763-788d-4f6e-9698-83ec027454d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66317310-a193-4aa5-8501-6a4700a8b1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33327e23-b8c3-44be-8fac-1f662d2e41e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c543f5a8-8903-494a-9dd1-6377357f0424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf5d962-4559-4780-ba54-83ccf333dfe3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad6f372-8758-417e-ad8a-f85c0aefd823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a2d865-05d7-421b-9839-2f73b6cadc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d520591-4379-4ddc-878a-d6186255cb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653c675a-36a3-461f-9659-f8d33bd42681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee677b8-0631-49e2-ae42-a284b5f0f0d5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c042a65-9467-4923-b5d7-5eb2ab0c3311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8dc05c-8a32-4ea7-837e-e9b4a131bb31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da846bae-9c25-43cd-8812-a877abc84f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4b9e3b-e6c2-48f1-ac17-56697f246ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a176f113-1cf5-4fa7-bbfa-836eaa179716",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1a44f0-8de4-4781-98b4-a2402d5e36ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66971255-da02-42fe-90dd-0b0689712e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc20bc95-b3bb-4dce-8a2c-5ea2fcd9fee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81425838-c740-46c0-8cd2-db29ae7d6282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86108478-a797-4651-9fb5-cc0df0d4a638",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62585625-86df-498b-b955-0cb0ad988283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04fa4f8c-1577-4cf4-825a-224b0b1aee0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7824ecdb-b543-477d-8839-427d0ad38279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715b84d9-cc5b-4892-8cee-9eb878706661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3728ecda-dc3f-424e-b551-08b51f1c141c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbc48d0-6a9f-4883-b4e4-0e1947155180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca6f672-7ace-4b31-84d7-7d9651b4f016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcde30de-6c3c-4c40-b02a-9bcd23ed30cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b43934-fab6-475a-9010-a52db6ba33ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0c80e5-fb37-4128-bca0-1268a7bdb4f8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e31cc0-5c30-4c70-b603-dbbb5db02e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74944a00-b02c-44ef-b0a4-e2060b1c76a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4681d8c8-1a3a-4120-b05d-e4f8fad36ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb53042-9337-40b6-821c-e2bf1128eaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430e2f8b-f0fd-4874-b8dc-bce2cb38768c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44408d86-582c-41f9-a6fe-fedc65ab521e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09262f0e-05d4-431b-91cc-d44a1fffb2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b281e49e-f263-4c21-8afb-b356e44e59b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a84c31-ca27-438e-a0ac-e9213a3c5dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c5b28-c96f-4767-8647-f267ebeb7b49",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff2441c-20b3-4f26-959e-1058f1950af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e2aea76-2fb1-4b71-9f2b-7ff5f62a3b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e9fe7-963e-4faf-84b4-39b40ab89b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3686576a-b69e-41a1-9cee-a4a3d560f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b84dd07-b05b-4229-902f-f2619193ef05",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab44720-ac6b-432d-a3f1-d842f9c0d442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb225d4-3999-41f7-a7bc-dec45622d88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5368d-4ab2-4f50-b0b6-648fbe0ecf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03c2a44-1194-4595-95c1-7cd019f70f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c777cf89-2809-457a-b483-97d9e3a30e06",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc05b1e6-537d-4bd3-866d-c6719b816717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8e3fba-740b-4724-80b3-5d1aaf07d1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b565a52-b58a-4064-b9f8-760f318fc500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c165fc3f-a4b0-4c5a-a43f-2958587e3659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a23e8d-c04a-426b-bf45-6ba3f96602b7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42c497d-0642-409d-8232-5adc6c3291a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29f0878-8b43-4dc1-b2d6-84136e33d20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6a9fb7-f522-4790-9393-3cbfcfe67664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d850e0-c447-48bd-b6a6-e5480d84f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc72a4-cb54-4a4d-a4de-e5b68581291a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328c7c74-786f-47b6-9005-883aa54feb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc46a1a-756a-4412-bb97-4207bab98ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a174320-ad1e-4325-bf73-dbec491714b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e058d4-c3d0-43a6-a11c-51afabe96ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6752367-9a91-4783-86bf-362c59d42670",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af6ba5a-ea70-424e-8009-6c5ce0221e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0dfca1-7962-4dcd-a03d-da5518c4ebbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2741f23-161f-4519-bd79-052456baf36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef0d2db-3ad7-4254-9e3c-f424197f329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8108be-a163-4be5-99c7-2d3629767a36",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c4f646-db99-4221-9f1a-6d68e7def97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9d8617-ae76-46e2-95e4-7c111b258282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c701da76-9678-4c20-bed7-e6e860176896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cdd7cc-3772-4e5a-aba5-01ba24529694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d5eb05-60a1-42d8-8f98-bf960c76dae1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426205bb-247d-47d7-9df7-120d4227d787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872ceb5f-d39f-4d71-9c14-15eae34902c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a092a111-e844-4164-b446-38de8968b9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff384e2-1743-4fe1-b7c6-08526f065a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1368cd-319d-4e4a-8c3d-90c29a4b75ee",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa09caa-9a74-4949-8b91-c2fdb3b353c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fa7bc2-e60e-4019-a91a-629132bdb3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881cc96a-c4ad-426d-afa3-b2d24e701244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4564e30c-f1ae-4761-a9b4-378c03228d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48607c18-7675-4ac5-8ecc-474c159c039c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d844c2-1079-4cb9-b776-13077645b0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde409e4-5eda-484f-a16e-114cd61355a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427bcad1-54f1-43b7-9841-ef197159a6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5505af-3c50-4426-b3c5-6dad233544bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ea3e88-af2c-47fc-8ae6-bf2b1834efb3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e41190e-67ba-49f1-989e-1800aaf4d9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7010153c-25a8-4486-96a6-a6511014553b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff09d4f-5ee9-4535-a6e7-fb861a06b255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4b546c-d1d5-403e-84ac-dd7efeeb5098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e8fa10-9ede-4f79-bcda-16be8083325c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feca8805-2d8a-4303-8e35-2252c5c8b5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613edb8c-3591-43f9-9259-885996cdabec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13c8554-5a5b-4116-8a21-13c2abf2b8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd99552-d4aa-47e1-b13a-dad77cf9d1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9536768d-1f6a-4ec8-a51b-167f346a6e55",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96a77a8-1a05-4946-80ef-ad3972c3293a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b925400c-680a-4357-841a-0558122e42dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba48c99-5e9c-4103-b5f4-25c96b39ea2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6361f3c1-ed26-469b-916d-51437f1bd583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ef6cfa-b7d2-497c-ae7d-c73e6c8bd068",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fb24b3-0f06-4833-a6ef-f61fb6e02053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f6fac8-16db-4523-bf68-b0f1b5a60b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f7290f-cda8-4cf6-8d95-3d9331c8f13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facfdaf5-dedb-422c-987b-05072516160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd06ee-da23-44a7-b4f5-5c3cb17d0ab9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4710f350-b2fe-4a8a-b2f2-dbe04d03e971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26db3457-bea9-4efd-a07d-1b0753f73688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560191d6-df77-4c6b-9c78-aaea5fd2c320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b980767-4b94-40ad-b3a3-e7cbc2c16b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be8b88-aa12-4761-9be3-2b77006bf851",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cce7283-dfdc-47a9-874c-c67a91662ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae95968-cd00-4ed0-88df-b458382a8b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af915b3-83f5-452f-8efb-81abb96352b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48ad08c-af70-41b1-b5b4-8261234af4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdb6df6-64dd-4956-869f-c784dc056cda",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351f237c-85f5-4bbd-9331-ccab805ad4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7c219b-3fc7-4336-872a-75b24fc6b1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71bb564-3175-4f2a-a5af-264190706173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e74e96f-60ab-4acf-89dc-36a5d2970e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cf31f3-f089-49ea-b2b6-80a6f849a706",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81b6ee9-e1fb-4213-9fb2-d71ce1d3c83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cac5e22-9450-4707-9512-68938d5fac9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379f49f3-bc93-4173-a71d-62f3057077f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924a9d9f-5e89-41c1-898c-19c5bd317f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1203f152-42b2-4bb8-8059-53c67c268b94",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed04b48-9073-4e7f-a8f2-e25a6d07bb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a466ca16-a498-4ec4-b157-3aa7df4165e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d94a4ae-812a-498a-be14-4a6585260e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524e27ad-0746-4d12-aa3d-f8aedd0e7c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc1ae80-7f57-41c4-939f-b601ebef1d01",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1011a1-b922-4b6a-a92e-69a646b13e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dcb512-db4f-4ff2-a22f-09877a03257e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a35089e-a62e-45ec-97d3-4513464ee7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1ba292-6290-4eec-94a6-6ff4e9612fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f332074f-6e93-44dc-ac3b-4c79d10b37a5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e59b7ef-dfa4-4881-a3c0-ce3d8f856373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ad09f4-8a0b-4269-98aa-c5a80839da36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863db964-5687-4886-af3f-98c336b1cd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b25e634-0468-41ac-b24b-bc59ba4627eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc59d3b4-2f4a-4982-917d-3ba456c13ce7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f26a98f-03ca-4856-b132-25e1680bec1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed80a9e-4d28-4862-a35e-547721e8bcf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a555d4f6-102e-43e9-87e7-f40fb3ec7df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37de4b8f-f33a-44a7-9bcf-05de89f91a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e53227-3662-44e9-80a0-0a6c348841b4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ca65b2-b59e-4f8b-ab11-e6a9c37b4321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef65488-f63d-4762-897c-19ba74b7b583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f594faaa-9bbb-4b49-bc4c-5c942c8af823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a8a53e-b7d0-46c6-abec-2ea17adec189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58791e9b-7a6b-4f39-b5be-0c090adc6d5a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573ed677-c901-4a48-9456-b7de5fba26cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c4f239-ea06-418b-87d3-8816d65ac19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e2dd37-ce50-452f-9d0c-8a4fbb5aa16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c9db9d-5304-4692-a785-4d702877235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc56fa-6ee8-4001-87e9-740f5deb7d93",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1759ff-5ef3-4b36-acc7-8cf49d4c67b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7881ff48-037b-475d-a9a6-627ecf3f9018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91981a45-591d-44b1-9000-c87af9a2cc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8f9fa2-f43b-4f29-84fc-0d9f02411d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43448a00-81d1-4324-91af-57595c107196",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498b3e6e-6a69-4acd-8004-78fa06292540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7404d29e-ef16-45d0-83cf-608dfa9c28c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8903b632-a529-493f-bcb3-01e9afe85331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585bf7f0-cfeb-4279-94bb-9c742afe46c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d0e18f-6494-40aa-9fdc-3c32ad4d970b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f47eb8a-cdf9-405e-8c26-3889e4437c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20133584-2dd8-4b81-b947-44053b570b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441c309f-468c-4215-a984-309d646e0693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9247ac8-1236-4559-89fe-93bc030c0299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e506a62d-b57f-4385-babe-0c025513aa7a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213fa11e-dabc-463d-bce2-83544a8bf57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b40c39b-3b16-4db8-b4ab-8c4eae51e484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb4aee3-ec38-439e-b5d2-1c4305cecb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed563c29-5202-4be1-a0ea-90069e3a3e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8124acf2-59a4-42a7-bac1-4285c0f7fae3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a1b6a7-770e-4342-9b09-a9e331856f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cff883-e7b5-4067-8487-9d1e055e93a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de82962-30eb-4980-9785-bfad827f86b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f8d96c-ead0-40b5-b57b-9175fbced1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d2b7bc-2fed-4d10-b494-9c0464d7206e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0d0ed0-13c1-410d-abaf-ce47211be8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70eb0826-c8f8-4717-b898-2a9631f80dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125e5162-7d83-4f78-a998-96f71fc61ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31473c2-2db8-49a7-9de8-2aad610262d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46abd48d-ecea-45a5-b54e-1dc991377ac3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c8ba23-b132-4086-a3fb-6de9a7440ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ceba23-7e87-4ecf-b8f8-a7dbc048190b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4784e26b-0f3b-438f-9cb2-52fb8e38fb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81ba459-c222-49d3-b396-7d644a454af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a5c190-5956-4d63-b883-4209e36418cf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289153db-efe3-4892-a35f-22772b52a865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752b0a7f-1aa2-4390-a0b4-3a105a499020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a65eb-1a4c-4f3e-a888-3cad3e820310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3e8407-0859-4a57-b890-b0c394060f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2f37d9-09f1-48a2-b1e7-ea607597083d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f4fe08-3333-49ab-8b90-fc635c52fa8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989d6a91-a629-4683-831b-dd450931526d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908bb09c-e45e-4a08-b3d6-748e8db30e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f6ba91-8b9f-4920-8891-605f4b1e625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30163980-7dba-46e6-ad51-617f959e3d1b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b575649-d702-4fbc-8963-ad73183a80fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40fa4d52-aa34-450c-b0ea-0fe070868c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5f28cf-35c1-4434-b549-21248c4e3324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e3750a-e608-463d-af1a-c68b82b64213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f7afe5-caeb-4616-988a-cdc9f24dab63",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee7589e-d9ed-46d7-84c5-d13ca702db29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7e05bb-a67a-45b3-8d2a-1ab2de617cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d1962e-38f6-4adb-8dbd-93777aa89516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a786db-a791-426d-9316-35a9f3d59c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdff595-1d81-4918-a014-36636b3c40fa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70652b7d-e7a3-421d-af61-ec8b405dbb74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc851c35-28af-4fc6-acca-f7211d8a2d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d10a9-ceca-446e-ac8f-6ddd4c7bcc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54575037-a2ac-4923-b604-32cbf3ea638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44db7885-4f05-4b2d-bcd6-57b42c4ff325",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbd2ea0-ad92-4df2-9d5f-ea21ee1a91ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b9d979-71b7-46f6-b710-de8cd72dd729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d1aab3-79b0-4247-9d80-5add1f3d6108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b931c1a-e29b-4f42-adaa-9f9ad7f95243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f48e8e-a7c4-4255-a1a5-41afaea81152",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f8b631-4e50-43a6-b41f-4d68f55e7e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a456c5a8-d19d-4f7f-95c7-0b7678bebfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eec5da5-2dbe-4c0b-818a-7e01fedf80c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cc0eac-8bc5-487a-9f92-c5ca08cde8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad037f6-4300-4241-9337-d24654a7dac5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76665ab8-fa2e-4752-9a92-88b29a15471f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab796e7-8dd8-4fb2-a89d-fd821824feff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0209f361-a7dc-4dfa-adfb-d1599290902d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b57661-79c5-44d6-ae2c-87b88a02a828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb341808-e83c-43c8-9cca-3d4dcc285c3b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb213f-df28-40b6-8e5c-26be22991c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a53dd2-3418-430f-b4f9-9541c0ac873c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2920c6-4276-457c-a4df-1cd1a8d09ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93112089-2993-40a3-b1ed-1ac9ad02145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe7e1cd-2594-41f7-92f5-9246eb835863",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c836ba-b611-4a35-8f47-881e63bb1c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810fd52f-5d59-4358-a069-5269384b9082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b937806d-788d-483c-bf77-7816e883854a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29730f1-6574-4d7d-a3ff-06d76f0fc42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a861f75-e34e-457f-88bd-bf6101f47d4b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227e5c97-3cbc-4c87-bf11-57a4038324a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9008b7f-1fbe-46a5-a12f-fe7923f7af84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf03e378-8d5b-4399-9c26-0a55b8d7d00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36d15e7-01e0-4a2a-acef-fee2dc313011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb087269-60b9-4fe9-a395-b8ee692989f3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658c7427-64a1-4033-b866-3697b4f4882d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a86fc7-77a9-4ba0-a40c-a4df62db4804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1bc35f-3f81-4421-9030-46195a22fe13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b59f6bc-cf53-4bff-8c9b-a598323a83c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e14918-dddc-489a-b300-0efe59c19d69",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f5e7b8-c715-47d5-8d74-7a1c9719cb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe262883-3172-4405-b5f9-7b6a4dcd6680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6243a33e-9b72-4fc3-84d1-ea113599fe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd6434c-6525-4e59-84b6-981056df0ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df0cd7a-bdac-4d2b-8165-94b39dcb42b6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3468cfdc-89ac-457b-901a-a88769a8bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c16874-5420-4a7f-a9c5-1f1a1e3b5b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8e9a2d-31f0-42c7-b6b9-18a45c987a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b326475-c4a2-4199-af6a-fd08edc2d2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39df590e-a40a-4632-8773-ac628f3923f4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fb7ce0-7da9-4b9d-a916-7ecc1aa8d03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e96285d-8d56-4bfa-ac8d-51158c474269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c00cc14-88a8-4f79-8f28-69f6992cda5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769acb2b-71e7-483f-8d1c-6a6f237b9ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f217b507-ea70-4eb5-a6bd-6c7b243894fb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088792d5-1ea2-4f61-be56-3d389c0aaa1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d78037-9e36-453c-ad1c-53f1b88827d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6826ba-1159-4e62-a17c-29fca00e8621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1124715a-29e7-4bd4-96f2-ce69b6c137db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a472ec94-b19d-4895-9dac-ee862187a475",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740a8e57-2133-4c3b-b4c2-dc72b46ce4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34fef606-f293-408a-8af1-1d9131c783fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd2c41e-afcd-4217-a749-4ad7043ebdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe86595-9b10-4a9c-a475-83aedded7575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f38457-211c-4445-ba1d-52b85eddfd99",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb723b9-a700-49b6-9b8d-e16264a4f90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fea8271-7bf6-4b95-8668-d56ba174be3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d40f00a-3983-4f13-ad55-563e7e9a5c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfccd5f-a857-4cd0-8d3c-df3f1dde2b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2533f29-4ccb-45da-8d6f-2b0be9af7107",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6488b78d-d1bf-4875-beb4-ebb1bfec26b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151a2f2b-1ea7-4603-9a47-48000447be5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90014c02-7e9a-4b64-bc98-0150154b9c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b91fb0-ae5d-4bdc-a2f0-88ab036440dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b0ce7f-41ca-407a-8ca2-1f0f6fe83d40",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e326292d-1d8c-42a9-9598-a1804c56976e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a92c35-7b61-4ee0-8687-ecd0fd44e6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda43bbb-ba38-4c7f-986e-339eea0f4199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3972a5-9f37-4d8d-9081-fc28427cd3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9531dc1-87d5-4268-a63b-d68fb7586f50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afac218-ad76-4dc3-a0cf-262f72e6542e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e993d86-7c3c-4da6-8548-781ae2e280c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86e4a56-a867-4391-81ab-f613ae51c7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b62e00-236f-4c22-9c80-1a71eeea1d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773b1dc0-544a-4783-9111-27716352bcb0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d2874f-4aab-46bd-81eb-5d34ed728f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e87c55-e554-4130-9d15-8bdd7e23df24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cde2184-6934-41d9-ac41-40c7426f587a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c480ffc-3a1b-4f06-a820-07b3061ef348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194e8111-a886-4a30-ad03-5f75722a5638",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b967ede-0ed0-4570-b837-cb50167040ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81bbb0ea-3070-423f-b127-9aa79d643064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802a0c84-b6db-49c6-b573-886e93781c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a0b417-56fe-46b0-a9b6-c17500d5027d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f82a5-306e-434b-a5dd-ced37baf1011",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469444c8-1bc7-495a-9d08-49d448763bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050965fa-a370-43d6-80c0-560047e87fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf6c8b4-61cc-4d72-8d11-0572c8b78d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd513a-b2ae-4e40-80a6-44379fcc033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa83f86-d8c7-4587-90fd-ff3d36f05000",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27310e96-9769-4043-93bd-79e56d262c7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe2a39e-fa7c-4739-932a-d45604f02b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fce57e9-36ae-4dfb-bec7-5f728fc81cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb49bc7a-2e91-42a4-a2bb-dce67c25a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8634517c-fcb1-4af9-9f74-27521c912c0f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a04e1e7-a0a9-40fd-b2d5-69c2224a4f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec3fa2e2-c262-4f1a-ae3d-6d05783ddb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0f3edc-350f-4377-984d-1ac78ab1e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9681372a-509f-4863-b371-283ef402385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc890bd4-932e-4fc1-911d-8b97450b7132",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd6fa18-d1f7-4122-8a04-585dd5db771a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540bb66e-aedc-4479-8440-0c54c2b628b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6bfa89-eeab-47a2-b20a-5b4e6e6d0357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f118bd11-ca94-4391-a408-67165311f04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1607e41-bbc5-41df-8c4b-b01faeed844f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae5e97-8251-4e76-9bd7-7c83950306a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cb2552-2805-4dc6-b675-190312242547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f51b89-de1d-48cc-aec4-db4bc9463718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68266c80-7f99-4432-834c-aaac5214924d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d692eae-e435-4103-b233-d4cf9983f547",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a50a9f-2fbe-4775-bd01-a2efdd2c50d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c4f037-c74b-4fac-b50b-07d09b1efa44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7329d1-a949-4eae-839d-18bc5ec49f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f6fe66-dafd-4ab4-b850-e8547ba0adcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d8e8be-db7f-45fe-b446-00f5c7fc906c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9b8228-a725-4952-adb7-38cbf08392ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a773bd91-71c9-4d10-a00a-373c2792fe0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9d58c8-bb43-4465-9a25-7e24cce856dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522fa653-8956-499c-994b-252b205f7c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae576fbb-db09-4c6b-bc38-d78b56dc28c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c927d9-861c-47e2-ad39-65a34c4c467b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebec37c6-290f-4d97-ad0e-018153355097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b082e6-1bbc-4116-9db7-2d8173b389ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2214d4f2-8790-4fdf-98ad-973686a085d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07d4ed3-f858-4a81-a85b-5d77b9ae0ea7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8d1cb2-df35-4785-a3fb-8b5b7c20ae95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef4d873-6997-4919-9f05-05fb793397ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911def56-2f1b-415d-8a0a-86a72fe46935",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184e7984-7eab-4864-ab38-23a0d9e26a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03c51e0-afce-4db8-89c3-1e565823723d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e6732e-64e9-4360-a486-a26f10a07b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f17814-ed43-471d-ad88-6fe3b595bb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294302a4-66d2-48ec-9f78-28de082ebb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cb1a03-d8ab-4bea-8022-cff54480c35a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fdb5a27-49f0-46ba-951a-4864108b8d02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b9b32df-5804-43c0-94e3-7af641cf7efd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1dcb90-898d-474d-9701-fc60bbf17788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdb60a8b-8630-4ef8-a035-8169dee9bc4b"
                    }
                  }
                ]
              },
              {
                "id": "5f951679-a9e3-4b31-a3a1-de70c7f4fcde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "190d902d-5df2-4dc0-9452-135f3458f152",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78303d3c-4560-43cb-af70-8be20d2efbc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6f4879ac-6863-4b57-aaf1-36bff3b31efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e718803-654b-4c6f-91ae-271cfa329636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a360d154-7f1f-4abf-97f3-0a4039f8e7a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6565c6b2-7d4f-46bf-988b-0c1b1a26586c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32f04cbe-766d-492c-bc05-6a2ba7436762"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "235ee250-a5eb-48f3-99dd-6e7368fb9d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea3cb8d-fcc7-4630-b55f-09ebe0bdc478"
                    }
                  }
                ]
              },
              {
                "id": "ecc3f299-19d2-41dd-bb0b-061efd965929",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "52367e2a-0eea-45b5-8c58-4461f2f918f7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4ce4ce-2e2d-4222-98c8-96b0b317bb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e6298d09-81d8-4450-9d39-083c2da5f0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fece94-d9f5-4ccb-9b38-3fb4d4e32756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8d952b-7a8e-48eb-90fb-70a08e7d120b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99e4a4f4-c177-4dbb-80f4-09c33ea810ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d226f97-5cd2-4c6b-9d61-c64d34322521",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04f1b3c-0ec5-4f83-a7f1-de45474dd157",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fe919f03-52ac-469d-9d73-859e87e9a3f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1611be7-5545-4cbf-ad86-881044d95020",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02e39eea-2cda-4481-8c67-794f6fef9e85"
                    }
                  }
                ]
              },
              {
                "id": "bf02ac97-eee4-4f22-aae5-27b9ad3acba2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e625948-b792-4ebc-a0ef-482f82aa4bc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "992c2bad-9cd1-4f04-b059-186f5ffdf215"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6de45d48-def9-4dd2-a3a1-47a2fee70c61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ee059a4-8277-4385-af15-a036be3d729f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "353d988e-fd41-43b9-9129-c69c8c30dfac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "005d0809-328f-442d-b7b0-9dc0dbeed700"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f16adca7-1c54-4988-86ee-6b212fb24c53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce951496-05da-4403-a7e8-75988c7c96a2"
            }
          }
        ]
      },
      {
        "id": "e3657033-03bd-4dbe-8c1a-8d42149b9890",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cf4caf64-c4eb-4db1-9376-4bc6868c5490",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82c036bf-b63f-4d16-b0e4-857068546d78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "284ab0a8-afb5-4a15-9609-3c7832b61c36",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb98ccb-9b09-4173-bb19-c344135138fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae1de186-3f01-4238-b7d0-09b174814e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815de693-551c-4745-8676-9bfc724be088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e672706a-8f67-40ef-bf12-120485886e03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ed06bda-67ac-4868-8854-2d7852504c48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e3643d1-fadc-4e17-ae9a-ca7c23b33d79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb19b5d-89d6-4489-a4c6-a692b75d92ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf118d03-402c-44c6-8756-2c92e5d8c08e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "477d78b7-bdf9-48de-a490-fcc359535860",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1b096955-d133-473e-b628-d03477e17067"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53da6f77-774c-4032-ad9e-7c4aa2de2e69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02df638c-988f-4590-b3bf-1eb839a10a54"
            }
          }
        ]
      },
      {
        "id": "96a6e014-b85b-454b-a3de-0a8fe2376d81",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "45993eb3-8119-4c60-adaa-3950321e0d8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa3b4228-16ce-4c10-9b5f-8ed359f5cfcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da09fbf4-2b43-4e6f-8ebb-9b7a6842d827",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05599f7d-e0ed-4f5a-815a-2f68af4bf400",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d18bb88-559a-4286-af07-0a440b33a245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7faae0-e213-4f8d-9b3b-70b7771801aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b2bb07d-9c2f-410c-b560-3268db355ce7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31c3f814-fb76-4b2a-9f65-703ac3fa7443",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e7dcc8-3bc3-46af-9e32-6b1bb4354b32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27f788c3-291c-4d9c-9e5f-aab1c1187b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f74f990-ab99-4789-8ab7-d60702d8a288"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e76c02d-68c9-466b-9487-de1af4f33a5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9468f22-6b94-4e6a-8bb0-13c76530320e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01a51c1e-e299-44b9-8fb6-390225f84565",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95844cb0-b96c-422b-b915-fb6b08fc76e1"
            }
          }
        ]
      },
      {
        "id": "1620ee61-ff35-46f9-871c-37087f9e8849",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9c5c2841-e0cf-470f-8ea4-5855ea74ca25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4dd016d-335d-4455-9fd6-9422090e47bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5040007-1d6d-4cef-baf7-2684bd1dcecc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2827f7-54e6-4f2a-aa4a-0d24a15013fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "200d1887-fd10-485f-bed2-8fcd15db50d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08a2369-c10c-4e92-b9c0-a08d05e69f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b43aedce-089a-4f8e-96d6-9b16851a0f0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "249fc3e9-9cc2-484d-8c2d-1b346b0846cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "065f0e1b-939c-42f4-84c2-53e3fe4db23a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6204fe2d-0bc8-4d22-9c43-685abc9d064e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "321fdeb3-af59-4ea6-a0ac-88e7c14d92c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "759c755b-c77b-402c-adb2-7f98c35dde96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3259182-f1f2-490d-91f4-f49e3f062ec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4c47b87-a100-4818-b0e6-09ed705cf725",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0a6ba51-fc8f-4235-b0c6-0b82224058a2"
            }
          }
        ]
      },
      {
        "id": "71b0bffc-6448-4cb2-a3b6-82498a41a97d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6cbdcf8-0009-4e91-9b00-0cbea26374eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "236dd7ff-8a1a-4266-8801-4a590a49011b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "53197a8d-df59-41c7-8ecb-2f4aa68b15e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee256547-22aa-4fbb-8b8b-cd9347eabc22",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42176eac-68e6-4a76-b0e0-2d40679965ff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 237.3298245614037,
      "responseMin": 16,
      "responseMax": 8293,
      "responseSd": 1049.5058101800712,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698798977163,
      "completed": 1698799059587
    },
    "executions": [
      {
        "id": "deab4936-bb10-47f6-a236-ae7cffbfd67c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c8413bc-92a9-4350-921c-4ff356f07459",
          "httpRequestId": "50138900-7688-4c52-b7ae-48a0f984264c"
        },
        "item": {
          "id": "deab4936-bb10-47f6-a236-ae7cffbfd67c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f314c64a-77ec-4983-9c1c-23f9c79837b3",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "3b47a01a-7bf9-4798-9881-0cd8814e9cbd",
        "cursor": {
          "ref": "e81a4d81-6f80-4c5d-aa24-49d05ece3812",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "56957eb1-fa7e-4c40-b4b8-4bf0215658d1"
        },
        "item": {
          "id": "3b47a01a-7bf9-4798-9881-0cd8814e9cbd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b04a32b6-7476-484e-84ff-f6e67817fb71",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "77c4b259-ef54-4ada-8a5c-42f1a212fb49",
        "cursor": {
          "ref": "af3adda6-ec45-4d8f-b50d-46df205fe792",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d76f8003-0391-4a87-83cf-fc12dced25fe"
        },
        "item": {
          "id": "77c4b259-ef54-4ada-8a5c-42f1a212fb49",
          "name": "did_json"
        },
        "response": {
          "id": "9b0e40c9-fe81-48e8-9912-e6057fb9d10f",
          "status": "OK",
          "code": 200,
          "responseTime": 1583,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeee163-f717-4175-8472-0e5928ef6b7f",
        "cursor": {
          "ref": "ef1b295e-25f2-4346-81eb-f6264ecf16aa",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "32e3c4c8-ee8b-4f37-9733-7fedb6753ee6"
        },
        "item": {
          "id": "abeee163-f717-4175-8472-0e5928ef6b7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "9be6a42e-3986-40b9-b3a6-faee591d4449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1065,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeee163-f717-4175-8472-0e5928ef6b7f",
        "cursor": {
          "ref": "ef1b295e-25f2-4346-81eb-f6264ecf16aa",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "32e3c4c8-ee8b-4f37-9733-7fedb6753ee6"
        },
        "item": {
          "id": "abeee163-f717-4175-8472-0e5928ef6b7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "9be6a42e-3986-40b9-b3a6-faee591d4449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1065,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deca8159-7fe6-41f1-8c93-23264ead3e52",
        "cursor": {
          "ref": "773999a1-e039-4f0a-ad06-a6f666de6a09",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1a3c9e2f-0231-46c6-a43c-8e6f89bf1640"
        },
        "item": {
          "id": "deca8159-7fe6-41f1-8c93-23264ead3e52",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dd593ba6-5884-4a01-8950-74c65e17fc9d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 161,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a20daa-a3e1-4318-a71a-e8466dcff462",
        "cursor": {
          "ref": "9a7dff48-be09-4e7d-a969-16bb102d18b2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99327ff7-b603-4ef6-902b-46f8e672ea24"
        },
        "item": {
          "id": "43a20daa-a3e1-4318-a71a-e8466dcff462",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d7c1bebe-b0fe-40db-bdb7-dfbbfad5e9f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 841,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d441e90-a51b-476f-9895-4db27e8e26ef",
        "cursor": {
          "ref": "41ce49fe-6c33-4888-ab68-39e312884461",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "16978bde-1531-4674-ab20-2ce969154bb5"
        },
        "item": {
          "id": "5d441e90-a51b-476f-9895-4db27e8e26ef",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ee50755d-0ac8-4145-9525-acb565d901f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f301f671-2fa8-4ad1-98a7-902c046d305b",
        "cursor": {
          "ref": "e789f67e-afdb-4996-91e1-9d3dddb9e038",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f119acfe-6653-484d-b53f-7d1e6784f832"
        },
        "item": {
          "id": "f301f671-2fa8-4ad1-98a7-902c046d305b",
          "name": "identifiers"
        },
        "response": {
          "id": "ce69b192-c611-489d-b51a-67b98961ba58",
          "status": "OK",
          "code": 200,
          "responseTime": 1193,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aae29c8-f4e3-4d21-8aee-ddc316f0885f",
        "cursor": {
          "ref": "b5decd80-e87d-4ecf-a05a-47174bb08a6b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "55eb7083-3326-46af-a2a9-9595cc480e7c"
        },
        "item": {
          "id": "0aae29c8-f4e3-4d21-8aee-ddc316f0885f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1140fee0-2495-4917-b077-1c44e51a5c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04811af8-1ca3-4dfb-9e0d-ce3d8cb479c0",
        "cursor": {
          "ref": "95b974bc-3c84-40fc-9bd0-3b00d3b8c658",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d9a9f895-f6bd-48ac-b52b-277c02e047c8"
        },
        "item": {
          "id": "04811af8-1ca3-4dfb-9e0d-ce3d8cb479c0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c2498212-65c5-4e1d-b357-409d7d4ddc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac56d7d5-0008-47f9-8508-7897ee95a2d0",
        "cursor": {
          "ref": "db8f004f-4af9-49f6-a3e0-1d712a02be02",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f658e450-30ff-4758-8569-7f83d3a7a889"
        },
        "item": {
          "id": "ac56d7d5-0008-47f9-8508-7897ee95a2d0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5cd2086b-5e18-4adb-bf48-202c191a7154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c875ef-df3d-4dd0-97a8-f515f5ee45a1",
        "cursor": {
          "ref": "a92ca886-29cb-463e-a09e-e21ab23a6595",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3cd550aa-9ed6-4bc2-8a5c-272802803e28"
        },
        "item": {
          "id": "60c875ef-df3d-4dd0-97a8-f515f5ee45a1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a0904da2-0c7d-41d1-a914-ba0836e508c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8716bd-defb-4468-8aee-2e9894edfd21",
        "cursor": {
          "ref": "6586e6c4-6203-44d1-9e39-b53ac6ab0d38",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8125bb9e-ff70-4b38-bbf1-9caa70cf3ec0"
        },
        "item": {
          "id": "bf8716bd-defb-4468-8aee-2e9894edfd21",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "47fcdd0f-113f-4ae4-b287-7f07bd918e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7314da2d-2d61-419d-a766-dcfc2c1b98d4",
        "cursor": {
          "ref": "6b7f39a9-684c-4aea-a987-803af30a1baf",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b0737e77-7d09-4862-a87b-6921039530ff"
        },
        "item": {
          "id": "7314da2d-2d61-419d-a766-dcfc2c1b98d4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f0aa974c-85d9-406a-a912-e43faf24b45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cc6dca-3005-46cf-a4d1-3810021a8be8",
        "cursor": {
          "ref": "4f57b7f5-de1d-449e-869d-f160b0854bd2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "206c0989-0852-4039-8d9b-23b225fa4054"
        },
        "item": {
          "id": "09cc6dca-3005-46cf-a4d1-3810021a8be8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f1d083bf-c0eb-47fe-9a61-847a6ca1904f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2875a6c1-a542-4ad1-b966-c603dc246ea6",
        "cursor": {
          "ref": "d85ace9c-2b4e-4855-9d27-8197731a1f41",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c1921835-ad7d-4dbf-8073-746d24728d7e"
        },
        "item": {
          "id": "2875a6c1-a542-4ad1-b966-c603dc246ea6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "908a7e84-22ef-4811-b482-d0a24adc8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db9d8c-2909-43c1-8050-5460866e2a77",
        "cursor": {
          "ref": "f87eca93-2be6-4058-8c24-e29db38ddee1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83dd7651-2531-44d1-a9a3-9a94e8616b42"
        },
        "item": {
          "id": "c1db9d8c-2909-43c1-8050-5460866e2a77",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4a00cc18-354e-49c2-b722-e0de7d3f59cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b46af52-4cd3-4a57-b2a5-c79d9da30c98",
        "cursor": {
          "ref": "d57ced59-ac0e-4920-b30e-08c1997c0392",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8d13cc12-3b68-4906-8dbe-c8daa983629e"
        },
        "item": {
          "id": "2b46af52-4cd3-4a57-b2a5-c79d9da30c98",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5866aa96-26b2-4476-9c40-49df2d14148e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cced5e11-6bda-484c-95b8-70c7cf93a410",
        "cursor": {
          "ref": "eb761711-a14c-4516-af33-3af1eb6b1ed9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e3688478-c566-431e-8561-2a73a740cf07"
        },
        "item": {
          "id": "cced5e11-6bda-484c-95b8-70c7cf93a410",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6977de56-66c3-4722-b154-604984ea343d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61393ff-a43c-4df4-a971-b07892fc7bd9",
        "cursor": {
          "ref": "d926799f-c7b7-44ce-a5f6-b74ff6498c17",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "efb308d3-5645-42db-a3dd-806531a0336b"
        },
        "item": {
          "id": "e61393ff-a43c-4df4-a971-b07892fc7bd9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b733d602-73be-4b6d-864f-8b7fb0ef0391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2fc1be-fdbc-4b23-a203-619d64987fd0",
        "cursor": {
          "ref": "f92c6f79-8a0d-4e19-97be-365185b08e32",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2c3456c9-b8b9-4a89-a7a5-8991a8db7b64"
        },
        "item": {
          "id": "6f2fc1be-fdbc-4b23-a203-619d64987fd0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "df1627dd-429a-482c-900b-c84128346d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06af62c0-abc1-434a-ad90-6d4cf30af20b",
        "cursor": {
          "ref": "efabcd9b-49f8-4e4b-8500-63002f256b21",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "861a8fd3-9253-470e-ad34-64f4772e72fe"
        },
        "item": {
          "id": "06af62c0-abc1-434a-ad90-6d4cf30af20b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "74ac97d9-3809-43b2-98d9-cdeb7e80a5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c814f1-3e87-4d54-a5ac-d9f4bbf2535a",
        "cursor": {
          "ref": "db0a6441-7d7d-40de-8f29-eb2ecdf36381",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7db4446e-23f2-4178-86de-880aafe8980e"
        },
        "item": {
          "id": "a6c814f1-3e87-4d54-a5ac-d9f4bbf2535a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f32e4936-2553-411a-a223-87d0a738cd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c17482-3289-43cc-8c09-a969fb81ad05",
        "cursor": {
          "ref": "02db77a5-204b-484a-a0ee-6f6a713c9dde",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4a87deff-70f2-4ada-b9be-edd20650535a"
        },
        "item": {
          "id": "25c17482-3289-43cc-8c09-a969fb81ad05",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8120c4e9-3b53-4c16-baa7-d9ef645d9221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef3f86c-6df4-4ae7-915f-e28a7046d5f2",
        "cursor": {
          "ref": "a571f73f-cc49-4916-b0c1-c16aef26d481",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "591580c4-a2ba-4ead-af16-376a302ec671"
        },
        "item": {
          "id": "4ef3f86c-6df4-4ae7-915f-e28a7046d5f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "64ffa8ca-60b0-4148-be58-6221c624f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f44769c-6146-460e-8862-2693ee05b9ce",
        "cursor": {
          "ref": "acca405a-0c94-4beb-b263-7b45562ed48a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b77fb153-0973-4cdd-9b4b-95e5a3a25e0c"
        },
        "item": {
          "id": "1f44769c-6146-460e-8862-2693ee05b9ce",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8bd14775-757c-4b5e-871b-c21270511ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7c92d4-4cf9-4b5c-b7ae-4e7ca1d2b631",
        "cursor": {
          "ref": "0770b205-fb86-487c-890b-bf6798eddd47",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ca724d3b-5a08-4737-8df9-69b4111a6b5a"
        },
        "item": {
          "id": "eb7c92d4-4cf9-4b5c-b7ae-4e7ca1d2b631",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "93884527-8be2-4b2d-95e5-80902ae2d5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bae3d2-a253-45ef-a75e-511c7a6831c2",
        "cursor": {
          "ref": "1a3b016d-cd1a-4611-a22c-d70184bddb6a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "caeb821b-88f3-4bfd-8c1c-941604cde6ec"
        },
        "item": {
          "id": "74bae3d2-a253-45ef-a75e-511c7a6831c2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "829e650c-49bf-4450-b143-623de7a85604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcfd882-e5d7-4588-8e9a-1d288fe367ab",
        "cursor": {
          "ref": "3be36250-b9bc-4d6d-a49a-8bbae68376fb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "32ab308e-d6e8-461d-bb28-afa33493978b"
        },
        "item": {
          "id": "9fcfd882-e5d7-4588-8e9a-1d288fe367ab",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cfca3cc9-baef-4ae5-a880-28dc70749a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933cf9a1-7073-4cac-b2af-f965f57efb66",
        "cursor": {
          "ref": "e18cccd7-2c44-4d9c-9741-d9a15215e084",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "aac1eb56-359c-4da3-a3a7-a701ee0acd49"
        },
        "item": {
          "id": "933cf9a1-7073-4cac-b2af-f965f57efb66",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db549316-e87f-436d-a1ba-0d6ee0fbbaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3caae66-83b6-4dc7-995f-a9fd6dff2491",
        "cursor": {
          "ref": "f87d4d20-5fc0-4ff8-93a5-27e4541c9e42",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "60d490e3-a1df-40ce-b88a-230857933619"
        },
        "item": {
          "id": "a3caae66-83b6-4dc7-995f-a9fd6dff2491",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d7a84e9-d4e1-40c4-8a39-b4a0bc3361ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8026b8f-1aed-41e4-9d75-537625bc609f",
        "cursor": {
          "ref": "9636dcb6-bd4f-4b7c-9fb6-f08e9a64d4cf",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a60ffec0-5920-408c-badf-8fec9708ce0b"
        },
        "item": {
          "id": "c8026b8f-1aed-41e4-9d75-537625bc609f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4760ba54-075b-41ed-9310-935a0f1fa59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc935669-18f7-4071-bf97-b2ba4dc2f98b",
        "cursor": {
          "ref": "5eed76b6-c392-458d-baf6-97638e4c18f3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0dca7fbf-b23c-4d5d-aae5-87d5bf35061b"
        },
        "item": {
          "id": "fc935669-18f7-4071-bf97-b2ba4dc2f98b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "506da5c3-395e-45e9-bb1f-0815d116e6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7156ea2-93ed-45cb-a3d6-23684a021a42",
        "cursor": {
          "ref": "94295679-92b6-4643-8491-b720e4d616d8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ad645ff-b684-406f-a76f-ceabc0d38f08"
        },
        "item": {
          "id": "e7156ea2-93ed-45cb-a3d6-23684a021a42",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9a1794d6-0044-4eda-9849-e0a85d72c544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb145a4-23b7-41f7-859f-63eb4f39ec64",
        "cursor": {
          "ref": "665de08f-3104-4808-8fcc-a2740168ef2b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1e0ca183-b126-4baf-b8ac-3b992f2ce691"
        },
        "item": {
          "id": "5fb145a4-23b7-41f7-859f-63eb4f39ec64",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2ad2a4ac-638f-48d9-b97e-901c2d94a773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26173272-a3c7-4c39-b7a7-38eecb7951a9",
        "cursor": {
          "ref": "cb399b2a-98d2-4bf6-b0fa-5388da17180e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "339a35b6-2919-4481-9723-f7ac2107dab2"
        },
        "item": {
          "id": "26173272-a3c7-4c39-b7a7-38eecb7951a9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b67f494d-c038-41d6-b11c-ae4e7b535c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58de4f6e-6f83-43bf-884a-1e1d3859d17d",
        "cursor": {
          "ref": "3aa4b9a5-ad25-45b5-9de2-2c8fc935b5d9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "656743e1-06e9-45ba-a059-bd0845de91b0"
        },
        "item": {
          "id": "58de4f6e-6f83-43bf-884a-1e1d3859d17d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "82bf0a70-95f8-4338-b920-f46e439eaef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b190f325-ef45-4a96-a853-f4e197f85e7d",
        "cursor": {
          "ref": "3bc2c7b7-2750-4934-a2fd-cbed2ff6a9d8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c2c274c3-fe94-4fb2-8750-b4a4880007d1"
        },
        "item": {
          "id": "b190f325-ef45-4a96-a853-f4e197f85e7d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "faa1c518-997d-4ae9-be73-19b2f70c0c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6ea8c7-a08a-4ec1-9a78-456bc7979512",
        "cursor": {
          "ref": "774e99f4-f07a-4670-905d-b869a7be337c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e144b971-313b-4b30-bc69-628b13b862ad"
        },
        "item": {
          "id": "4d6ea8c7-a08a-4ec1-9a78-456bc7979512",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "003a344d-fcf0-41eb-92d0-b6c5f8cf7d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9172aa16-e926-4972-b406-fe7475394d14",
        "cursor": {
          "ref": "23d432fc-48ba-4b97-a023-f182bda93ed7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9808b2d5-4584-400a-b405-4ce7495e67b5"
        },
        "item": {
          "id": "9172aa16-e926-4972-b406-fe7475394d14",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5d8715ab-1d9d-46bf-a0f5-bad5b91ad78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f4fa1a-da1f-4de5-aa7f-d6d255963b7f",
        "cursor": {
          "ref": "eab5b182-6b18-4256-943d-a4010b899f25",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "721ed8f2-46a1-4eb9-af66-cba69ad4fe1d"
        },
        "item": {
          "id": "76f4fa1a-da1f-4de5-aa7f-d6d255963b7f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b798a4e5-bace-4471-b5b5-00e38c9281d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b6f5c7-b86c-4152-a642-5d1be88cfafe",
        "cursor": {
          "ref": "0bd69267-d4ca-4905-8d97-fa3bd57fba9e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e82e1b57-bc51-4e5a-9360-1b19886ca4be"
        },
        "item": {
          "id": "17b6f5c7-b86c-4152-a642-5d1be88cfafe",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b393fca5-f5ff-4d2a-bb8f-5c611f829cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b6c3cc-c505-4872-86f2-0603678f91a2",
        "cursor": {
          "ref": "e080796d-cf96-49ac-834d-a9bd2215f7d6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5f946cfd-bd6b-4910-9040-ea2ba414d091"
        },
        "item": {
          "id": "55b6c3cc-c505-4872-86f2-0603678f91a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7b4e8469-7aa0-40ee-87ab-c99356997319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434f0cfa-44f0-4229-b108-cab24ce0be84",
        "cursor": {
          "ref": "da952bb3-624a-4afd-8575-fc94c7ed3730",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "623131b5-6009-4bb8-8146-d2d66771efea"
        },
        "item": {
          "id": "434f0cfa-44f0-4229-b108-cab24ce0be84",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "300299d2-5ab7-4f1b-b8fd-50fa83fad365",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1402,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bca37b9-5234-447e-80e2-3911a3fc546c",
        "cursor": {
          "ref": "a11ce8f1-7f97-4161-8881-2c1a04d0d1e8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "80724b57-de1c-4d64-8363-cf89c673218f"
        },
        "item": {
          "id": "9bca37b9-5234-447e-80e2-3911a3fc546c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f02baa09-7b6f-4e35-b681-d9af56a13626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a0822d-e72e-419c-beaf-b7f43d0a661e",
        "cursor": {
          "ref": "dc5c2372-a761-4371-a824-cb72b847ad96",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b6cca804-4836-4fd3-9ba9-4306ec0a9022"
        },
        "item": {
          "id": "f2a0822d-e72e-419c-beaf-b7f43d0a661e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c72b1f04-7238-4003-b185-1d0d9a60c990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb47291d-2df8-47dd-8de4-32c4b3548afa",
        "cursor": {
          "ref": "1c51e84b-ea6f-418b-8267-429639b82242",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dd40cdad-21a8-446f-a2b3-7c9c41151501"
        },
        "item": {
          "id": "fb47291d-2df8-47dd-8de4-32c4b3548afa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2801a996-41ec-4b23-bb89-5c1f0359b092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddc0fdb-2004-433d-965b-5014dcff3f9b",
        "cursor": {
          "ref": "07c1b399-9f9b-4b22-b3cc-71c69236df01",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "88e6941b-efd1-4ff5-8b98-8c0717224760"
        },
        "item": {
          "id": "1ddc0fdb-2004-433d-965b-5014dcff3f9b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ce5d9787-3695-4858-bdbd-b40905a64666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269b4e75-c080-447a-8170-239d7adb43ee",
        "cursor": {
          "ref": "0499cd91-24fe-4c9d-98b2-8f715ff5e8c3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7c95435e-9f3a-4da7-aa74-e834b70c4683"
        },
        "item": {
          "id": "269b4e75-c080-447a-8170-239d7adb43ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1f6034ec-ce4b-49cd-b5d3-38d30109f7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49893e21-984d-418a-abcf-e24249675a90",
        "cursor": {
          "ref": "c165a82b-2075-45a5-9347-a5cd85a8b72e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "00374a44-49e5-46c4-9802-8ef611d4a105"
        },
        "item": {
          "id": "49893e21-984d-418a-abcf-e24249675a90",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bb1ef11d-021e-4a94-b832-a60f677dc478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13253aa-f532-4c65-9b96-1d3cb29e8bba",
        "cursor": {
          "ref": "14fc0fb5-479d-4a71-bc93-c988678756c2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3b512871-e8a8-4fe7-8f68-9f17fceb165c"
        },
        "item": {
          "id": "b13253aa-f532-4c65-9b96-1d3cb29e8bba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "54379b64-1761-4424-a703-74fd39716f1c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1377,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f11d5-4415-48d0-9ab3-c759d53efe27",
        "cursor": {
          "ref": "4bbda709-a7e4-496d-9b0a-9f022753ba15",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0091fb87-370c-409c-99b8-14a0cfbc7dea"
        },
        "item": {
          "id": "7b5f11d5-4415-48d0-9ab3-c759d53efe27",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "10acda1a-4358-47a9-95cb-95263235034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b1bb7-d8e4-4682-a304-3d4f74235003",
        "cursor": {
          "ref": "4929c8b7-47ae-45b0-ac0e-ca237fd074b7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5a28b2d6-9bdb-4954-88c5-24c4f46f1f41"
        },
        "item": {
          "id": "6a9b1bb7-d8e4-4682-a304-3d4f74235003",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2b3c61a2-66c1-4bae-ba50-e6df2eb22a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa7070f-940c-4594-be1b-15528737efb0",
        "cursor": {
          "ref": "9cc86ca6-090c-4445-b35c-67536040a8c7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c1934f4b-5f1d-4cc2-ba6a-45ac1dfbbafc"
        },
        "item": {
          "id": "9fa7070f-940c-4594-be1b-15528737efb0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "26167eec-e069-4216-b7df-5c848f60199b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b331bc-5597-4344-9882-547b2c7189d4",
        "cursor": {
          "ref": "d7a587c7-4d4b-477f-88d9-50bfda4e3599",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8faf8459-9f25-41b9-a801-4cd0c0f1071e"
        },
        "item": {
          "id": "e0b331bc-5597-4344-9882-547b2c7189d4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "817eb1f4-d9c3-4efe-862e-88576e895eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c7765b-ca95-4c71-97bd-d8b1571d3a14",
        "cursor": {
          "ref": "2ef828bd-87ea-463a-91f2-621f55efc875",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a1ca8825-25f4-42a8-9f20-7ed2e3aa419a"
        },
        "item": {
          "id": "15c7765b-ca95-4c71-97bd-d8b1571d3a14",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8439799d-37e0-4ef4-a2fc-8690aece6b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67849fc9-0d2d-47f1-abfb-cd2db9e0d289",
        "cursor": {
          "ref": "28f2dbbd-90ab-42b0-90aa-196b72786f55",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "50202e15-4a2c-45c2-939e-832b0e29ebfd"
        },
        "item": {
          "id": "67849fc9-0d2d-47f1-abfb-cd2db9e0d289",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8a777f03-22f2-4711-9911-929f0a82553a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc525c1-4194-480c-99c9-ff892085b5e6",
        "cursor": {
          "ref": "917e4ba3-c348-4178-8bc4-8d996e8b2d42",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "903581ec-2b1c-4c23-9a21-4503ba6708d8"
        },
        "item": {
          "id": "0bc525c1-4194-480c-99c9-ff892085b5e6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "75c0bd5b-9ee1-48cc-b4db-8b8e0a56f050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ac188-285e-453e-83ca-805769d25acf",
        "cursor": {
          "ref": "85a31bcc-7529-44e8-80de-612efb578e8c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1c737f6b-d4e2-4396-b569-09ddc9111256"
        },
        "item": {
          "id": "572ac188-285e-453e-83ca-805769d25acf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "eff94699-27df-4857-b82a-f6598f0cf11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a8122-2e5b-4768-8609-efb1aaa74f69",
        "cursor": {
          "ref": "6d93941c-d96b-4cd9-8cb3-ac8fb48d4954",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "184d19b3-f936-4e22-82ea-68f7324d7966"
        },
        "item": {
          "id": "c84a8122-2e5b-4768-8609-efb1aaa74f69",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "38fba831-2fa8-4456-a552-0d464bf185ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043517ff-14d5-4635-a7f8-54163ee97a11",
        "cursor": {
          "ref": "512624f2-4123-44fd-9e8e-24c4f21bf5df",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9617517e-a565-4b14-aa0a-d1f4e450d54e"
        },
        "item": {
          "id": "043517ff-14d5-4635-a7f8-54163ee97a11",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "28ad1ab7-ce21-4e18-82ae-1349889001c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3810bfd-b27c-4ff1-a0f4-f3968b7f8f7e",
        "cursor": {
          "ref": "8bd08a89-2224-49d9-a5f4-5bfe5c2c01bf",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "384f1aa3-8aba-44b5-82f4-97338d4bf3e6"
        },
        "item": {
          "id": "b3810bfd-b27c-4ff1-a0f4-f3968b7f8f7e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "642c14f9-9cd3-40d8-94b7-53f662ef01a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46985e3e-1da1-42bb-94a9-72ae3410d938",
        "cursor": {
          "ref": "3a3f2d8c-52b3-479c-9f38-635c4ccc2247",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "27ba676e-2731-47ef-bf31-350ce601d975"
        },
        "item": {
          "id": "46985e3e-1da1-42bb-94a9-72ae3410d938",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a31c263a-680f-48bb-922d-80b7ae6e6e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6904a7d4-6a01-487a-a05c-e239f14a18da",
        "cursor": {
          "ref": "fa102fad-61cb-407a-a276-53ade8a96266",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a0694389-e321-4821-b439-f10583356553"
        },
        "item": {
          "id": "6904a7d4-6a01-487a-a05c-e239f14a18da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "52deacc7-458f-4fa8-b1e0-11ccde6cbcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e154ba-34ba-419e-be55-81a8bdd330c1",
        "cursor": {
          "ref": "c0aa8364-8ede-4f59-8de8-bfab94f45359",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1a0031a4-a834-40bd-a0e7-5196dd65874d"
        },
        "item": {
          "id": "e5e154ba-34ba-419e-be55-81a8bdd330c1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bcc4eb3c-584c-4f24-932c-2f951fc8acee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf3a8dc-a106-43c4-bce1-39dd7cbc0241",
        "cursor": {
          "ref": "a252d1b2-15d4-4c01-a12e-792acb9e5711",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cb8791dc-da3a-4a2c-9f3a-a0dd6d9fbe8d"
        },
        "item": {
          "id": "8cf3a8dc-a106-43c4-bce1-39dd7cbc0241",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a9a593cf-298d-46eb-a7c6-f844c34df914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670631a7-65a1-4819-8592-1d91ee035432",
        "cursor": {
          "ref": "b5bad5ec-4d90-41fb-9aa8-45fd81f6a189",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "633d981a-3d10-41e4-bf70-eb797f8d12eb"
        },
        "item": {
          "id": "670631a7-65a1-4819-8592-1d91ee035432",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9e944998-390f-4f35-8f34-6e1da62448a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f400a2a3-86f3-4066-a44a-42344e2bd717",
        "cursor": {
          "ref": "866bfef9-2261-4bab-923a-d8d5996b4060",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "081a2d0b-fc38-4252-ad2e-8eef9cf36fe9"
        },
        "item": {
          "id": "f400a2a3-86f3-4066-a44a-42344e2bd717",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4af0cf5f-f3a1-4a4c-9bc7-6a82495ac796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5a8a93-9a59-4906-9921-c36226427f16",
        "cursor": {
          "ref": "1623cb6e-9462-4457-8978-bb22babac0f8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "afbc54bc-5158-4865-bca6-aa2b916be442"
        },
        "item": {
          "id": "ab5a8a93-9a59-4906-9921-c36226427f16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6639b28e-7841-4006-9f2e-8aa76a720178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bacfb76-03d4-40cd-89cf-9b69af0e6280",
        "cursor": {
          "ref": "762acb9f-c6ff-44e4-8c0f-eb4fa6d2db07",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cc4df34a-089e-46e9-b81f-c4bb8f307765"
        },
        "item": {
          "id": "7bacfb76-03d4-40cd-89cf-9b69af0e6280",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d6c9c1a9-7a0d-4ca5-982f-5a466b4e221a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e438b84-0e63-4d46-88ef-df9b0bfebceb",
        "cursor": {
          "ref": "d2573714-afd7-43c3-a00c-a972ebd0df44",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b1df356-e87e-4cbb-a661-84b62f6dd2c9"
        },
        "item": {
          "id": "2e438b84-0e63-4d46-88ef-df9b0bfebceb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0af58a59-1dfc-45a4-9835-44636aa3506b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a95d452-9e41-48eb-a13d-88404f15e441",
        "cursor": {
          "ref": "2ae8f164-3a86-47b8-baf6-a5043fcd8541",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "065db8cf-a0b3-4836-aa7e-67160ac0b29a"
        },
        "item": {
          "id": "2a95d452-9e41-48eb-a13d-88404f15e441",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "322f42c3-9ab5-44b2-a0c6-b61154b43a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae61f37-f63f-4930-b06c-98f12cc4f949",
        "cursor": {
          "ref": "7700107a-c89f-45c1-af4e-48e44119a1dc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "837dd027-bd27-434d-a333-34e23fe5a504"
        },
        "item": {
          "id": "dae61f37-f63f-4930-b06c-98f12cc4f949",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5baa0235-ea80-4af4-bae0-6e690a70b2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a64de1-0265-4107-b791-630c4e6db3ab",
        "cursor": {
          "ref": "100aca13-c9d6-43bc-a593-2fa16fc0a098",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d2927eb1-7540-4c06-b520-c11ffa097807"
        },
        "item": {
          "id": "69a64de1-0265-4107-b791-630c4e6db3ab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "da572519-5153-4e49-96eb-be045173fd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb452ba6-0980-421a-a6b1-6c184513be11",
        "cursor": {
          "ref": "68f75259-cd53-4e47-8c5c-e4eaa0097f2b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee761d0f-61cf-458a-83a6-1173a0260050"
        },
        "item": {
          "id": "cb452ba6-0980-421a-a6b1-6c184513be11",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "616cc990-4825-4036-b00b-3b29c1ab42d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d61408e-f158-445b-b823-595532f72e5b",
        "cursor": {
          "ref": "13ce7ba3-725c-4cc0-b87a-5b9bea4325dc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "985be792-a135-41fe-a7eb-3ec6951a9014"
        },
        "item": {
          "id": "8d61408e-f158-445b-b823-595532f72e5b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "391c4dc5-15ac-45e6-a7e0-327c4e9fefbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f219b0-fb86-4c89-8559-4c26bc5f602a",
        "cursor": {
          "ref": "332b22f8-019a-4600-b8db-dcba0b9b0649",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abf59097-ccdd-4d5f-a9c0-825ec7032bd4"
        },
        "item": {
          "id": "22f219b0-fb86-4c89-8559-4c26bc5f602a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "859e63f5-bb34-452e-b6cc-ab2145070390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef542396-8b2a-4a80-ba68-a21a5d9dcfdb",
        "cursor": {
          "ref": "a4ae39cf-51c0-4949-bd45-a80bcee2473f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e60344b3-a050-48d8-a311-77492646d622"
        },
        "item": {
          "id": "ef542396-8b2a-4a80-ba68-a21a5d9dcfdb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "323c6713-5696-4874-a627-8d854b007ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aa0566-3713-43bb-8ac1-aecb0dceae62",
        "cursor": {
          "ref": "7687d01e-9385-4bc4-a6cd-b4a30c5b10a4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a7d3c891-81c2-4c4c-a404-fed3ab2eae30"
        },
        "item": {
          "id": "e8aa0566-3713-43bb-8ac1-aecb0dceae62",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bcf7fca7-b90d-41fd-b3aa-42b67c254f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c2fba6-1cde-477d-8d3d-c1c00717db63",
        "cursor": {
          "ref": "ad3eaa5c-2516-45aa-a034-23e05f29f2e2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a21dcfc-c7a1-4f0d-9caa-0e106465dc7d"
        },
        "item": {
          "id": "c2c2fba6-1cde-477d-8d3d-c1c00717db63",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f55202ea-9020-478a-8803-b876bbfc50d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed787c2-a2d8-4d72-bd95-4c1dcb0bb360",
        "cursor": {
          "ref": "6dd18125-08a2-4e43-9bd7-f3f90a7b7b4c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "507cea33-e4a0-469d-b7e5-f3ba9ab346fb"
        },
        "item": {
          "id": "2ed787c2-a2d8-4d72-bd95-4c1dcb0bb360",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5fa9153d-adf3-4ea8-b76d-e84732a34e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e3aefd-b4a2-4f56-afbb-2378b5f92da5",
        "cursor": {
          "ref": "4edc5604-fbe7-478c-a935-a862e574c884",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b6d90c7-74f8-4a04-971f-dbb6f264d21e"
        },
        "item": {
          "id": "87e3aefd-b4a2-4f56-afbb-2378b5f92da5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fa9f63b6-bf66-45b7-87e3-b8a2224bcba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a83ed46-147a-495a-87b7-c5a85f10bf43",
        "cursor": {
          "ref": "d06532bc-b28b-4ab8-8066-522b2a89e5e4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dddb851b-1df0-4c9d-a447-755a548859a3"
        },
        "item": {
          "id": "2a83ed46-147a-495a-87b7-c5a85f10bf43",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "af048051-a9a3-4af3-bddb-84d0a6ab6b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f1634d-cc8a-4d3e-996a-2e71c48cec9e",
        "cursor": {
          "ref": "553b450b-e455-4432-b80e-26a2ae7a0d93",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bfd33fd7-13c5-47ec-b8db-90e2038b8658"
        },
        "item": {
          "id": "f5f1634d-cc8a-4d3e-996a-2e71c48cec9e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08b48504-1088-4762-9f43-c90e1bd2887e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a388fd2-ce38-4bdc-bcb5-9a73cce5a5ed",
        "cursor": {
          "ref": "8597cfc0-0781-4b8a-b863-32fb4209a381",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1129dbbc-95af-4b7a-a715-90a5a97246af"
        },
        "item": {
          "id": "1a388fd2-ce38-4bdc-bcb5-9a73cce5a5ed",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1130f186-e65c-4e31-95c1-2c9ba9360886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe38e5cd-ac13-4cac-b546-5998bf62a26d",
        "cursor": {
          "ref": "764a5573-ee1d-4789-9353-89be008c2029",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "73fad27b-36e8-4d1f-a6b8-cadafa95d067"
        },
        "item": {
          "id": "fe38e5cd-ac13-4cac-b546-5998bf62a26d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "96ed573f-2398-4f71-be17-163e3cefd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf657459-4e77-4af1-865f-014012e1b036",
        "cursor": {
          "ref": "b94a1bbe-ed50-4393-91e3-95c0e7b50ab9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8692ee16-dd6c-4688-9450-c617351222e7"
        },
        "item": {
          "id": "cf657459-4e77-4af1-865f-014012e1b036",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7a937348-76ae-430e-a4cd-44ee88288839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8e604d-a485-4b24-8f5c-05be6d4dcb98",
        "cursor": {
          "ref": "e4de8063-13ce-40f7-b4dc-baceee19ac17",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64fd7a79-5b3c-4420-a239-1c224ceda1a9"
        },
        "item": {
          "id": "9f8e604d-a485-4b24-8f5c-05be6d4dcb98",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "aaa24896-de08-4808-9925-04261fbdbaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d353df6e-5af2-491d-a1ae-223e2b4d2850",
        "cursor": {
          "ref": "e1921f33-70f2-4fe1-aec6-b38625dc3693",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86c3beae-6054-48ae-a6eb-b7e0478f109f"
        },
        "item": {
          "id": "d353df6e-5af2-491d-a1ae-223e2b4d2850",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bc8eb050-dc8a-4746-b7d3-d987907b2739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c63886d-2167-4795-a3e8-888e20672bde",
        "cursor": {
          "ref": "36e70a6d-cd88-4070-ab5f-0e3a680fe5ae",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d3017c7d-204d-4762-b769-7f1599756a6b"
        },
        "item": {
          "id": "6c63886d-2167-4795-a3e8-888e20672bde",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c25d2b6d-a003-4228-9186-cf55f0496acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27589c5-4e5a-4443-b763-d62d8e9ed458",
        "cursor": {
          "ref": "b0de317d-7ed4-4b3a-a913-2cc22d8d9935",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1d41881d-f699-4dda-85a4-65800adebbe6"
        },
        "item": {
          "id": "b27589c5-4e5a-4443-b763-d62d8e9ed458",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b00e1c87-d250-46ef-aabe-5047d9807b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5a5f03-d294-4fd8-9b02-555a4ea2e770",
        "cursor": {
          "ref": "4d388eec-81c0-458d-a25a-09c6b3b73c54",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b8337086-38ce-47ea-ba11-9826af3596fa"
        },
        "item": {
          "id": "4c5a5f03-d294-4fd8-9b02-555a4ea2e770",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "55c240b2-7327-4907-b4ee-1d6a5b2cb26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b37cfa0-bac4-4465-9e93-3af05e51807f",
        "cursor": {
          "ref": "8c50f41b-be08-4799-9594-8df5fbd7fbcf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "94d739e3-a9c5-4df7-896f-d5405fee60fd"
        },
        "item": {
          "id": "9b37cfa0-bac4-4465-9e93-3af05e51807f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b6b79d7e-0e84-49bc-9364-b222eb2dd3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc94acc-ecae-42fa-8a5e-e059c4c08c96",
        "cursor": {
          "ref": "4417a908-2912-43a0-b6be-7503c270e06f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "98284d74-3d54-4d81-9377-517208fc6646"
        },
        "item": {
          "id": "ffc94acc-ecae-42fa-8a5e-e059c4c08c96",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ca686ace-fbfb-41b3-a0e0-b4d325e5cfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6e8629-62d9-4afe-99b6-92fd9c80d508",
        "cursor": {
          "ref": "2e34e53f-5567-4c0e-872f-f6df264804ad",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "081c3188-918c-4068-9f3c-40f73e96a76d"
        },
        "item": {
          "id": "dc6e8629-62d9-4afe-99b6-92fd9c80d508",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5597f11b-3f44-42a2-8262-a1042828a62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b34a2e5-5da1-4423-a072-190dbdebbfd6",
        "cursor": {
          "ref": "6052a9bb-afe7-4b4e-bfb8-d228246db409",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1c981046-9d1f-4e4e-99d8-c3208e159cda"
        },
        "item": {
          "id": "7b34a2e5-5da1-4423-a072-190dbdebbfd6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cd55e09e-cdc3-4ada-bab1-43ba0e34efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af486ec-9748-417f-a0d4-50888e1f8439",
        "cursor": {
          "ref": "a7fa5a75-2d71-4741-8142-a3969bb7dfc2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "90657711-d1bc-4d49-8667-02cb5e26f424"
        },
        "item": {
          "id": "5af486ec-9748-417f-a0d4-50888e1f8439",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "688c1120-a716-4b31-ac09-194962621332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f64f2d-7b49-4ad7-a7c5-159a50f27959",
        "cursor": {
          "ref": "999ef1d8-806e-4e51-bb0d-9bdeb5349b2a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "116860d1-76fe-4f9d-991f-3a88c027f8b5"
        },
        "item": {
          "id": "04f64f2d-7b49-4ad7-a7c5-159a50f27959",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1332f515-008f-43a0-888a-f27b6d6b0ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b631dc3c-ab9a-44f8-922c-89b577a5a48c",
        "cursor": {
          "ref": "92a9a65b-1b7e-4343-b91b-95b9a880d340",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ebad6dc3-ebb1-4d5c-af7e-ea6a8667b43a"
        },
        "item": {
          "id": "b631dc3c-ab9a-44f8-922c-89b577a5a48c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2d6e9751-1151-4080-9d21-c62bc57efbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f353cf8-da38-4770-8b33-8824f73e37b5",
        "cursor": {
          "ref": "bf510f64-ccae-4c11-8af2-5a6821992d4d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6f3fc7cc-27d4-4957-ac69-6ca07ec463cd"
        },
        "item": {
          "id": "2f353cf8-da38-4770-8b33-8824f73e37b5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08d67c41-d18e-417e-a2b5-a0a66b294e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4548d55a-404c-4711-a183-81932404c7bf",
        "cursor": {
          "ref": "da14e7e4-8bd6-4a6b-a27c-04d596a84aa1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c9a7756e-85d8-406c-b760-355e31da5188"
        },
        "item": {
          "id": "4548d55a-404c-4711-a183-81932404c7bf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd94de4f-dbcd-4dd3-b5eb-6cdc3d706d8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29efe3f9-809e-4b41-94d3-47d6c1c23725",
        "cursor": {
          "ref": "e457a70f-2318-4d46-aab0-23f58d1afd23",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "77f7a9e8-ec58-44c5-8511-646df28aade9"
        },
        "item": {
          "id": "29efe3f9-809e-4b41-94d3-47d6c1c23725",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "095ebd90-8fe4-42bb-83ee-f04f469d0fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cefb9d55-23bc-4675-9b81-b616f7b45d14",
        "cursor": {
          "ref": "2a8b958d-3e9a-4180-8be5-4c7c784c7769",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "be58c1bd-b8cc-4301-8532-041174b5ff1d"
        },
        "item": {
          "id": "cefb9d55-23bc-4675-9b81-b616f7b45d14",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a39bd3e4-f8dc-48fe-9685-fdd08b578172",
          "status": "Created",
          "code": 201,
          "responseTime": 8293,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c108b674-eea1-4533-a9dc-207ab31502fc",
        "cursor": {
          "ref": "2514a904-8744-426e-b12f-1b70729772cb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "918496d7-0bbc-484c-8dec-349c68900208"
        },
        "item": {
          "id": "c108b674-eea1-4533-a9dc-207ab31502fc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a9e4a50e-d903-4af4-b6f8-eccd30889e04",
          "status": "Created",
          "code": 201,
          "responseTime": 7680,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeab514a-f470-4d43-86e5-ba57fe723064",
        "cursor": {
          "ref": "59b31f56-253c-4233-a00a-3e4ef98b1f58",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d44b9451-8e81-4a95-ac8d-20292a9072a0"
        },
        "item": {
          "id": "aeab514a-f470-4d43-86e5-ba57fe723064",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bd6edc5d-12f6-4643-8261-46d4ab1f1819",
          "status": "Created",
          "code": 201,
          "responseTime": 7897,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad610249-7bec-4707-9778-0551d35c078c",
        "cursor": {
          "ref": "aede6f88-c7ee-40de-b820-8d78c1cf69e2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e59e664b-4deb-4c46-9d1a-364a3e58d6dc"
        },
        "item": {
          "id": "ad610249-7bec-4707-9778-0551d35c078c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "81dc11d2-2018-4999-b9b4-eb23cd684e70",
          "status": "Created",
          "code": 201,
          "responseTime": 8113,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d48ac0-f580-4ee9-9871-bc34ae2be046",
        "cursor": {
          "ref": "e054c2dd-a6ee-449e-8f7a-0ec7d7f42d09",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a3831278-4cac-4ac6-b299-aecc701359ff"
        },
        "item": {
          "id": "c6d48ac0-f580-4ee9-9871-bc34ae2be046",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1d56d1b4-9b7f-41cb-a9c7-6cefd27fbf3f",
          "status": "Created",
          "code": 201,
          "responseTime": 7538,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e242bef-3c7d-4c61-979d-858cba0ba817",
        "cursor": {
          "ref": "b6ba65d2-77a8-4f07-a919-7f9dc8f9d0e8",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c9e42b06-34b3-417d-9efc-bed137a08089"
        },
        "item": {
          "id": "1e242bef-3c7d-4c61-979d-858cba0ba817",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7f902d27-2f95-48da-b686-6ce8aa6e8e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b6d59aa6-53c5-4764-a685-bb288f83ffcb",
        "cursor": {
          "ref": "66388e70-b563-44a0-8340-ebe8fb1facec",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d1518f00-49df-4e95-b30e-9affb112aadb"
        },
        "item": {
          "id": "b6d59aa6-53c5-4764-a685-bb288f83ffcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f0beaf43-2006-40f7-9341-b7b0cdbd3473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b4746f-2d7d-40fc-a5e6-11940d445a3d",
        "cursor": {
          "ref": "a0f35e66-74c0-430c-8e05-7ba35527933d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3216966c-348d-46dd-807d-07acdf451872"
        },
        "item": {
          "id": "39b4746f-2d7d-40fc-a5e6-11940d445a3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9815091-be78-4bba-b3cd-3f1064b05087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1164aa-88b9-4e58-ab4b-227c238802d6",
        "cursor": {
          "ref": "87b10613-4eba-4541-8b5b-365c8201e2a9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4cf690b5-d4da-4709-b7ea-c1058584f41e"
        },
        "item": {
          "id": "8e1164aa-88b9-4e58-ab4b-227c238802d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d79a7f3-7c02-4b9b-ab6d-38930ac5d4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea30c62-dae1-4df9-a065-e31ef0bcd702",
        "cursor": {
          "ref": "6db9232d-fcb2-46eb-acb5-ee94b6cee336",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "61bc6a96-1f0d-4628-a83e-fe754a228097"
        },
        "item": {
          "id": "2ea30c62-dae1-4df9-a065-e31ef0bcd702",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "63b33671-f18d-4ea6-95b0-5579c821d8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bddf04-1cde-4808-81b7-762907779c4e",
        "cursor": {
          "ref": "863d56b5-709a-4cfc-a92f-ef3d575f69aa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5f070a04-e493-498e-9ad1-b866957c570f"
        },
        "item": {
          "id": "93bddf04-1cde-4808-81b7-762907779c4e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8c81d9e4-02ec-4e9d-b902-835c96e53e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80077733-13db-4148-8420-3a19c715bfdd",
        "cursor": {
          "ref": "00d9480e-b605-4db3-b75a-07c187e65104",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "075afd6e-d7f4-4df6-9aba-2cb4bbc96c72"
        },
        "item": {
          "id": "80077733-13db-4148-8420-3a19c715bfdd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a95cc844-749c-4442-89e9-8afe9e26ec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0914f2-c664-4358-b762-ee6af4e262bc",
        "cursor": {
          "ref": "21f1fc23-6f1e-4210-aa45-ebc3c4dcb8fa",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2aca6e8c-b397-48ae-8fb1-e17790291cf6"
        },
        "item": {
          "id": "6f0914f2-c664-4358-b762-ee6af4e262bc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d3ac04d-2e85-4779-a1b5-318d4a6b2d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc39dae-52ab-4d3f-ad2d-5a74a68906cc",
        "cursor": {
          "ref": "a58a10a9-e33b-4235-9bed-dd13cca333f5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "20c652f4-27ed-41fd-99c3-683eb0712a38"
        },
        "item": {
          "id": "2cc39dae-52ab-4d3f-ad2d-5a74a68906cc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "223323de-e467-44cc-a0ac-2e9f48bc347b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d5c92-70bd-4ed2-877a-672b11bf59c2",
        "cursor": {
          "ref": "f5279ec7-0a9f-45a6-966d-67fb8f81bc32",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8da7d10c-9ac0-4f72-af17-5851758f6243"
        },
        "item": {
          "id": "3b4d5c92-70bd-4ed2-877a-672b11bf59c2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69581042-4cb3-4774-bb8f-b27014e38be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d5c5a3-328d-4177-9470-5e70aeb80918",
        "cursor": {
          "ref": "65583b0a-6f16-4a81-bb68-d8e817029bbe",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4e98e0b9-8e3a-445c-9978-4ef0a5dbfa58"
        },
        "item": {
          "id": "84d5c5a3-328d-4177-9470-5e70aeb80918",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "42ee47b7-b99d-4d6e-b7fa-ee10b7e5f983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44765ec-1034-4a49-886b-0ed5e825202a",
        "cursor": {
          "ref": "34ec16cb-5954-4566-aa59-d3f47ed6eb95",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "454b7135-2bec-4180-b15d-ceac96be2f3e"
        },
        "item": {
          "id": "e44765ec-1034-4a49-886b-0ed5e825202a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4dcda612-dc46-43f4-8ec9-c058ff62a133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e13ef3-7e97-466f-b109-a01407b0220d",
        "cursor": {
          "ref": "189e834f-53a5-43a1-aefe-4ba832a0b502",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "62589514-766f-46c8-a6e6-96ef2aa430a3"
        },
        "item": {
          "id": "27e13ef3-7e97-466f-b109-a01407b0220d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cfcba130-d9f5-4fd0-b607-8dd27b36284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396b1bd2-6f60-41a0-9851-878bcd990074",
        "cursor": {
          "ref": "b0caf89d-f751-470b-a2b9-4757b91b4362",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d75e0a52-ae42-4b54-984f-5361aa42b155"
        },
        "item": {
          "id": "396b1bd2-6f60-41a0-9851-878bcd990074",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6f646198-b5ac-41c5-98e2-b8f75d6cc86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4001d9-b401-4e01-b5f3-06f2b0c8f9d9",
        "cursor": {
          "ref": "74ed3ad1-8b4b-4446-a130-560e707dbebd",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f9387f07-059d-4843-91fa-b1589edfd464"
        },
        "item": {
          "id": "ce4001d9-b401-4e01-b5f3-06f2b0c8f9d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6c3ca49d-80a7-4441-82ba-2dc64e57c897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e609a94-5186-4323-a882-d0043ddeffc8",
        "cursor": {
          "ref": "077393c8-f745-479e-98f6-24e8fb1e2fb9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1517775f-2413-4221-979b-30828bf9df9c"
        },
        "item": {
          "id": "0e609a94-5186-4323-a882-d0043ddeffc8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b1ed0d5-252b-4d6b-be50-083febe2e66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec385fc-bb50-4cce-b28f-9299a61331d3",
        "cursor": {
          "ref": "a255c065-fd64-48fb-a526-7b76c30ff831",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a64f8e8c-e4a9-48bd-b054-2ceb2c1d47b0"
        },
        "item": {
          "id": "1ec385fc-bb50-4cce-b28f-9299a61331d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ba57e6c4-c262-48fb-a18c-fbfbe1b01ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c30a82b-e466-4cf4-8ad1-0e07ee2034b2",
        "cursor": {
          "ref": "8306ad93-e1ea-42a9-ab48-dd11ea3efd9c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "04220abd-09cd-4d0b-b865-6e0470360921"
        },
        "item": {
          "id": "9c30a82b-e466-4cf4-8ad1-0e07ee2034b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9ea858e-0e8b-4d8d-8bb4-5a14897385db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864a244c-c14d-4f25-ac16-bd9a0db04902",
        "cursor": {
          "ref": "14899008-b178-4896-a3ae-c379425f6c9e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0749b9a8-17d3-4492-89ad-3b65ff07821c"
        },
        "item": {
          "id": "864a244c-c14d-4f25-ac16-bd9a0db04902",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e2eaccc4-f85d-451b-9ac0-577642e530b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952214f5-21a6-4c23-8b25-af4e403eae8a",
        "cursor": {
          "ref": "c39ffc34-9870-4233-9c12-8cd6d5fafa27",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0db7c056-e916-4989-b286-c5969a4c6bec"
        },
        "item": {
          "id": "952214f5-21a6-4c23-8b25-af4e403eae8a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "91d6c297-2d92-4217-890c-fa851591f3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64023d90-bc40-48ec-b3fb-99c7b62b6ff6",
        "cursor": {
          "ref": "375d9684-8a18-4c4b-b7d8-a2de132991ab",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "55275e0d-40e7-4094-9f92-38d19b029420"
        },
        "item": {
          "id": "64023d90-bc40-48ec-b3fb-99c7b62b6ff6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "23322dee-3f2b-4f72-9190-d393c60daf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1f0818-2aed-4f6e-93e5-ce09539b3981",
        "cursor": {
          "ref": "87f0776e-743b-42dc-85a3-117c872cb676",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9be5618e-a573-46ac-9c68-c45c1e7b287d"
        },
        "item": {
          "id": "6e1f0818-2aed-4f6e-93e5-ce09539b3981",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "98ac391a-2d9b-489b-976f-831e04947f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342c89e2-8957-4172-9fba-f42fe944af42",
        "cursor": {
          "ref": "1e8e5423-ef65-4216-95aa-345f8a71c8c6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4cd21283-8c32-4cd8-8eb0-24f12ee2adf7"
        },
        "item": {
          "id": "342c89e2-8957-4172-9fba-f42fe944af42",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f10a0d0b-bbb4-465a-9a23-4e254e305558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a2b836-66c1-42cc-9c95-bd1dc419caaa",
        "cursor": {
          "ref": "2dcfa537-f4ad-4ede-b451-618dc5b5e2a6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "38e177e9-5864-44b0-b67c-119a1bb423bd"
        },
        "item": {
          "id": "88a2b836-66c1-42cc-9c95-bd1dc419caaa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b21a7a2-818d-43cd-959e-841734a16902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a26b06-3f64-4ac2-b6e5-5cd0bc27c99d",
        "cursor": {
          "ref": "ce4fa8d5-6619-4b67-866e-655f3da2c890",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5e7b16cb-1a1a-4659-a9f7-e8df636b7af4"
        },
        "item": {
          "id": "13a26b06-3f64-4ac2-b6e5-5cd0bc27c99d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7ba1bd1-7b73-46f0-a0ee-a7107a8e9531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2766c079-dfa9-4aea-b9d1-64ba49cf6581",
        "cursor": {
          "ref": "1db5710e-7eab-49c6-a250-aab60c01fc8c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1e893f94-f2bb-4f47-8429-d1e3d79d21b8"
        },
        "item": {
          "id": "2766c079-dfa9-4aea-b9d1-64ba49cf6581",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b6d1d344-d185-401b-b5c5-5593c6f8edbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b542e1-561c-4ad4-bf34-7c1900dc9960",
        "cursor": {
          "ref": "0e1a8749-257a-4149-bd0c-80245c1f2abf",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1a161589-0f5c-46b5-91fb-d0c23677b849"
        },
        "item": {
          "id": "73b542e1-561c-4ad4-bf34-7c1900dc9960",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b8741f8-9e16-4c1e-8c27-2c8531532137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24423005-17f6-40bd-9593-efba37782cd9",
        "cursor": {
          "ref": "1430a88f-ca0a-4ea6-920e-c8ca234ae8ff",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d365c1e9-f283-41a4-b68a-6aa0ef58d49e"
        },
        "item": {
          "id": "24423005-17f6-40bd-9593-efba37782cd9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "afc2b4f3-2fe3-437e-933c-0007c2052601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd7c18-59e9-4429-955a-de526e17a575",
        "cursor": {
          "ref": "913f90fa-aff9-4392-bf01-278a34643623",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "88fabc94-9963-437a-90a2-70bdfb65536a"
        },
        "item": {
          "id": "a8cd7c18-59e9-4429-955a-de526e17a575",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "90cbbadd-5adb-45b7-a475-8f6e2b0d1e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b324e1-ca8c-40e8-b7ee-6f2628484b6f",
        "cursor": {
          "ref": "9e9517fa-9f47-4067-a85c-2858a83708a6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7eac8f94-9074-4ba8-b02e-de9433f1cfde"
        },
        "item": {
          "id": "f1b324e1-ca8c-40e8-b7ee-6f2628484b6f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "054eade6-df75-4249-b8fa-80de629a0418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d2f3f7-136e-4dc1-8190-f6a1ddeb437f",
        "cursor": {
          "ref": "e00f2b9c-e1f9-4343-9af1-51bc2c69bbac",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c2db136b-5afa-4096-93af-db170146101c"
        },
        "item": {
          "id": "36d2f3f7-136e-4dc1-8190-f6a1ddeb437f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ff88f8d6-99b9-4d1c-b0a9-1af514aa469e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a1de9b-e975-4dc3-a940-069ace8fcba5",
        "cursor": {
          "ref": "f0c2f0df-8c24-4897-b796-ebbe3ae0f3d0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "acfac395-ce78-4799-8e08-d4d189bec81c"
        },
        "item": {
          "id": "22a1de9b-e975-4dc3-a940-069ace8fcba5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d7dc23ce-b215-424b-865c-e9f837279805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7dff8b-4079-4871-bca2-a8b22dee4305",
        "cursor": {
          "ref": "560537fb-6527-4b10-8c02-3bb7abde2df3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "046286fb-4c8e-4296-b068-038d61648659"
        },
        "item": {
          "id": "fd7dff8b-4079-4871-bca2-a8b22dee4305",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8300f096-6e64-4762-946c-505f0f72616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e223f6-c014-4cb4-a805-aa86d0d71837",
        "cursor": {
          "ref": "21ce34ed-41f7-483c-851f-ee86c0ef6458",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82f3d1ee-f7bb-491a-94ed-cbeb53891e65"
        },
        "item": {
          "id": "98e223f6-c014-4cb4-a805-aa86d0d71837",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c90ae681-2fb1-471b-8504-d2f85d7d09d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e22f95-3921-4f6a-ae11-adfee465819d",
        "cursor": {
          "ref": "7a4518f2-4083-4e2a-83d2-51b53cc427ca",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a3ab7b7e-7d89-4cbf-b8dc-0ac8ce0e34e7"
        },
        "item": {
          "id": "b6e22f95-3921-4f6a-ae11-adfee465819d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bfb077d6-edbd-4df7-98f5-abef66a2aaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da3d7d3-8b54-472e-8f3e-a909fa4d2913",
        "cursor": {
          "ref": "2878ba3a-b03f-40d2-8cb3-60960b0c467b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3dfacfdc-9832-44e5-afa5-cd49d0225972"
        },
        "item": {
          "id": "8da3d7d3-8b54-472e-8f3e-a909fa4d2913",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72af29eb-ae58-4322-a28f-ff7a88e20209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e664aa-2a80-4fe7-bc87-d1227354fb6e",
        "cursor": {
          "ref": "4eeb2345-3e8b-474e-90ee-4f897835c6e6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b8429db5-626a-41fa-8ad2-f5002f583eeb"
        },
        "item": {
          "id": "83e664aa-2a80-4fe7-bc87-d1227354fb6e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "221f3f9e-a211-45c1-8031-6794cd7ce4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f090041e-e1ba-404c-b186-95ec4c50037f",
        "cursor": {
          "ref": "b86bb7f7-d224-45bb-9667-612b1bc1f262",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98c79d73-cb0a-4277-af07-992df34ee568"
        },
        "item": {
          "id": "f090041e-e1ba-404c-b186-95ec4c50037f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f133ed89-93b5-446d-a20d-f6efb262cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b759584-606f-4e9d-8b50-47f441967efe",
        "cursor": {
          "ref": "b8784c0c-09ca-4f65-8978-07020257acf6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "246e510a-166d-4157-9489-10827f08688d"
        },
        "item": {
          "id": "1b759584-606f-4e9d-8b50-47f441967efe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f63a197-8e41-45f9-bbdb-d9bb7575dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2855b93-557a-4211-88da-47303a75a10b",
        "cursor": {
          "ref": "26d3e3fe-84cb-488c-b939-8cf0f14379a2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90372c81-7e4d-4b51-9166-28d85abdd10c"
        },
        "item": {
          "id": "a2855b93-557a-4211-88da-47303a75a10b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d7ef916a-d1c1-4474-889b-a5d6eafde459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9498aea1-8d40-4e64-8f23-cf8bc374a569",
        "cursor": {
          "ref": "7560ca38-89ca-4cd3-860b-da5d3fd3ce39",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "08f9c495-30c0-4cec-96e4-8f89758ef686"
        },
        "item": {
          "id": "9498aea1-8d40-4e64-8f23-cf8bc374a569",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dd090138-6e7f-443c-b11a-f5345f29112a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127e9dde-fc42-4137-9213-3cb7f1f80954",
        "cursor": {
          "ref": "df89361f-7133-4ef6-b6c5-e86993499af9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4b8f941-ea1e-45f8-89f8-d97776c2d953"
        },
        "item": {
          "id": "127e9dde-fc42-4137-9213-3cb7f1f80954",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a0cf065-5ba3-4d5a-87de-748b8a2b639d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25717aef-f1e0-4149-bc1a-c278b7d4a661",
        "cursor": {
          "ref": "6c6cf7ae-50b9-4682-b12c-e1c9832f41ee",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "529ce9e7-2434-479b-b5c6-06788db35f02"
        },
        "item": {
          "id": "25717aef-f1e0-4149-bc1a-c278b7d4a661",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4a78d04f-8a68-4234-b70c-8940bf43d464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa35638-af12-4ec9-bd46-3efa1efde044",
        "cursor": {
          "ref": "ee4a5c15-d514-4978-a4a9-d360738ce7d5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "36127ca2-55ee-4510-874e-45798f18cb2d"
        },
        "item": {
          "id": "1fa35638-af12-4ec9-bd46-3efa1efde044",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa714b2c-9572-4f12-a614-5081ae2229af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abfcf57-7bcf-428d-a4b0-8a73a8d96b6f",
        "cursor": {
          "ref": "14f73290-53c8-4e37-90f0-d17fde53bff7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e071bc33-a87e-4fe9-8aa4-eb0abe24c518"
        },
        "item": {
          "id": "5abfcf57-7bcf-428d-a4b0-8a73a8d96b6f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e1047ce6-8daa-47ea-82ce-d4f0bc0888f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e0e093-d89c-4fc1-acc5-de86d34d4824",
        "cursor": {
          "ref": "2bb5fa3e-5a3d-48c1-8a29-2ee480762df6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bb407164-d596-457f-bb8d-a7ccb0b39a44"
        },
        "item": {
          "id": "44e0e093-d89c-4fc1-acc5-de86d34d4824",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fc4570e6-0d47-4dc4-bbbf-80670d0e4e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d75a4f7-2756-4737-82ff-b45155118d00",
        "cursor": {
          "ref": "8358e2dd-bdb2-4c8f-8b7e-4def8e77e24f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dba9c129-b090-40b6-a84e-089093b0d262"
        },
        "item": {
          "id": "6d75a4f7-2756-4737-82ff-b45155118d00",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f617eb3f-c0bd-47b6-84ed-02469a37e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fed2da-e38e-4fb2-8974-892e5056ed27",
        "cursor": {
          "ref": "ca31cb10-4321-4be1-b100-0b1027835908",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "61c5315a-2896-412a-8e9c-479f3777be36"
        },
        "item": {
          "id": "e6fed2da-e38e-4fb2-8974-892e5056ed27",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b3723f55-059d-4867-b3b3-456b6aa165ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1486b1d8-696f-460b-8688-106e4fad0999",
        "cursor": {
          "ref": "a413a3c0-fcc2-4c1c-b845-1a3ca8919b20",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2cd3466e-9f62-4414-b8b9-9b51b0932302"
        },
        "item": {
          "id": "1486b1d8-696f-460b-8688-106e4fad0999",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7630030e-99ff-4476-9f6d-b8e86bc02bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de724dc-261f-42f7-a0b2-d7e92bea01f4",
        "cursor": {
          "ref": "c1c7b4cd-f111-4510-9769-b77eb5780b6d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "19dcf6ee-3142-4fc9-b6bb-49a73d83883d"
        },
        "item": {
          "id": "7de724dc-261f-42f7-a0b2-d7e92bea01f4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b744b9d-9faf-4915-8993-d0b00dad0c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38633fa8-9366-4019-a3c0-0a1b21f3e410",
        "cursor": {
          "ref": "32e3e225-f248-43c5-89a2-d754bb92a286",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "00ebecc6-a24d-4890-a739-7da4330e8cdb"
        },
        "item": {
          "id": "38633fa8-9366-4019-a3c0-0a1b21f3e410",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d10a1342-2c09-48be-acbe-8f69442f7c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375b816e-0095-447f-b628-6b4d11fbe310",
        "cursor": {
          "ref": "a085b2b5-ffb1-4b75-93a3-570f9ca54833",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "087e5d8b-0574-40af-8306-4c4998e20966"
        },
        "item": {
          "id": "375b816e-0095-447f-b628-6b4d11fbe310",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a25579e9-d699-4050-a45a-03aa948b40f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccad932-c818-4ef0-bba8-65db3465212e",
        "cursor": {
          "ref": "fc9744e9-6cb5-4fce-8e21-6a87b4ca3396",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c9ca6e1-0f23-4662-8099-8dff4c8fbbcd"
        },
        "item": {
          "id": "6ccad932-c818-4ef0-bba8-65db3465212e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a93d4d39-809f-4738-b8f6-02a234723bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da5e1d1-62b1-47f3-a9eb-fc2c045b77a0",
        "cursor": {
          "ref": "63cdac4b-5d64-4a89-9523-0031cc390f73",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "15f57739-4f52-468b-828f-47cc35e681ce"
        },
        "item": {
          "id": "9da5e1d1-62b1-47f3-a9eb-fc2c045b77a0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a7861e69-3e48-44b1-b1a3-0df4fad20ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a2764a-fd1d-48bd-8a54-215c51fb3974",
        "cursor": {
          "ref": "53765363-34ed-4d61-9f42-e3bf40a93942",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8a5de80-f10d-4b65-b6ce-666e53db0538"
        },
        "item": {
          "id": "95a2764a-fd1d-48bd-8a54-215c51fb3974",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0a447213-1123-4751-8cd0-bdb854978cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ca032-397d-4b10-a006-42b7a4858633",
        "cursor": {
          "ref": "98343a29-fab4-463b-9743-df960b35c8ff",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a29c75d1-5521-45ba-8e10-bc944d537374"
        },
        "item": {
          "id": "7c4ca032-397d-4b10-a006-42b7a4858633",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf15ee64-9379-49ae-ac88-26c76576e4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b84f4f-c067-4236-a633-16d12f8d488a",
        "cursor": {
          "ref": "dcd17fdf-b963-41d2-a457-957c57fe3be3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fae05308-bc42-4812-8f99-bea75337068f"
        },
        "item": {
          "id": "87b84f4f-c067-4236-a633-16d12f8d488a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f7ce89fc-69ac-410b-b44f-7b6feff4f192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be50fc96-6788-4000-944b-5adbd9049a02",
        "cursor": {
          "ref": "b2f01c27-ea70-4088-b1b3-5e2dc247f9f0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b0ced0c0-2080-457f-a769-6b7aade46467"
        },
        "item": {
          "id": "be50fc96-6788-4000-944b-5adbd9049a02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "522a53f9-9fd7-426a-9149-d526ad7dfa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6299ad-63f6-434c-83e2-6667e7dc3c44",
        "cursor": {
          "ref": "6fb97517-a854-4056-9e86-40f603924b5e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e654aa5c-dd43-4bb2-8c48-1d0217a594cf"
        },
        "item": {
          "id": "ae6299ad-63f6-434c-83e2-6667e7dc3c44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2599e07-de7f-4636-837d-2441313f0743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5edb10-aaa1-4ba6-ab3d-9f71e15ee488",
        "cursor": {
          "ref": "6d54bbbe-4da0-4514-ae0e-767ada60585c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a2cdaa96-8467-4c88-b754-216b7848d6ec"
        },
        "item": {
          "id": "7c5edb10-aaa1-4ba6-ab3d-9f71e15ee488",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3e5eb69-fad6-4d75-8e52-7505c7d9c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570092bf-8473-4d7b-9242-71ce43df5f5b",
        "cursor": {
          "ref": "969d524f-0fb4-441e-83a1-2d716b5e66b6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a4b2385c-87b6-4149-8c07-0cfbfe56fce8"
        },
        "item": {
          "id": "570092bf-8473-4d7b-9242-71ce43df5f5b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "89c60ad8-35af-4e89-a8d4-69012d51561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f97fccb-d808-486b-a3e1-4ec150bb96ef",
        "cursor": {
          "ref": "f8fe0a48-7773-4e6d-adba-42e9958c1d0c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "baddc868-2cff-493f-a54f-16d013aac595"
        },
        "item": {
          "id": "3f97fccb-d808-486b-a3e1-4ec150bb96ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c204768a-00ea-4594-b22d-b3120d925aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fd69c1-4a4f-4f45-9247-ec385606ad04",
        "cursor": {
          "ref": "72a7b329-f7be-453a-ac3e-18e018268a17",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1dc88937-47a3-4f83-88ea-d75d72f6e17c"
        },
        "item": {
          "id": "35fd69c1-4a4f-4f45-9247-ec385606ad04",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29fb6031-9499-4655-bfee-e9f3b91a6961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cd68c5-fed5-4133-9f23-ca492802f9a2",
        "cursor": {
          "ref": "c8f475aa-6dc9-420e-b34c-46a08219208c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "52dc5b9c-17d3-4618-9db7-e720948eea21"
        },
        "item": {
          "id": "42cd68c5-fed5-4133-9f23-ca492802f9a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d803a46a-d8aa-4bb7-94e8-3cf56da9fa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda1d187-b85e-4ecd-9cb9-32f8c185beb1",
        "cursor": {
          "ref": "7d13c8a8-d72a-48da-80e5-444583855dad",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9c675010-1fb6-43c4-80ab-3accfb81afa0"
        },
        "item": {
          "id": "dda1d187-b85e-4ecd-9cb9-32f8c185beb1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b18cd657-a7aa-4b9d-87fd-4fc2ed73ab77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7929a17-103b-466d-876b-5be3d05144c1",
        "cursor": {
          "ref": "100b2fdf-947e-41e6-af70-9efc6d65b6a0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0c5a7709-77d5-47ef-8e8e-c6738af763e0"
        },
        "item": {
          "id": "f7929a17-103b-466d-876b-5be3d05144c1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8dabf18a-7b38-41c7-aadf-89f18f9441c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889342a1-46de-4920-af1e-396dec947b69",
        "cursor": {
          "ref": "85d6c754-8d06-4c57-b3e8-cd22606a8a6a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b198b9ad-baa7-4b25-b1aa-9f54fe9a7f7f"
        },
        "item": {
          "id": "889342a1-46de-4920-af1e-396dec947b69",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "20efa0a2-2f6a-494c-befc-2942cd55f174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad652117-e96f-4804-bc44-ac10d610a975",
        "cursor": {
          "ref": "50da31b6-1750-4cfc-8ed0-3b69975d30f3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "00417d44-9126-4e84-8e25-5492f57c0f11"
        },
        "item": {
          "id": "ad652117-e96f-4804-bc44-ac10d610a975",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2bedd244-4b6c-42bc-a4db-b47f4ae34fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094f6141-65c9-4d95-aec1-f5ca91136380",
        "cursor": {
          "ref": "653c55c7-75f2-496e-96f5-67468f333bf0",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07ae07e2-6955-4dbc-874f-01b26e9c4159"
        },
        "item": {
          "id": "094f6141-65c9-4d95-aec1-f5ca91136380",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ef291f1e-272a-44f3-a346-a83e4b0b9eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c02ed18-b3db-4a75-ac20-323f6665e2a4",
        "cursor": {
          "ref": "28c2b131-b90e-401d-bb1d-3be586dfb049",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a488a2a1-650d-4b7e-ad6f-b4120efa88ce"
        },
        "item": {
          "id": "7c02ed18-b3db-4a75-ac20-323f6665e2a4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1e13cdc3-fa48-4fca-af60-2b69044e46e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd0ff94-8176-428a-ad19-1d740a7d0955",
        "cursor": {
          "ref": "46d58676-83c2-4878-8994-011565039d2e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c72a51c-3350-431d-9d84-c17620022140"
        },
        "item": {
          "id": "1dd0ff94-8176-428a-ad19-1d740a7d0955",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "579e77ab-b160-4a3f-9456-278b929b9d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3049bdf0-79ff-45e8-bc55-6a4f757ee1a1",
        "cursor": {
          "ref": "a3ad37e9-aa53-4905-b880-62b046bf9c75",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99a6b03d-269c-4109-bcc8-686bb114e1a4"
        },
        "item": {
          "id": "3049bdf0-79ff-45e8-bc55-6a4f757ee1a1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "81fde403-4310-4a29-aa1b-d5d936d00d2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459842e8-3a88-4977-8001-bb7461d4beeb",
        "cursor": {
          "ref": "47263fce-c6c9-48ba-9104-37e5b92faa75",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc5331c6-1991-42ef-a315-a71b720de802"
        },
        "item": {
          "id": "459842e8-3a88-4977-8001-bb7461d4beeb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc84557b-2074-4c1f-ab08-027b180ecab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24325130-75a9-4ba9-8fdd-82230b3a5ad8",
        "cursor": {
          "ref": "4e4c3444-20d3-4f6c-ba12-c625461618bb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "853358d4-f6d6-49b4-915b-633431a5107c"
        },
        "item": {
          "id": "24325130-75a9-4ba9-8fdd-82230b3a5ad8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "63ea63a3-b54c-47c6-9c0d-42b9e19dd668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc87797-c965-435d-a71b-154e1bd51ce8",
        "cursor": {
          "ref": "965fb6eb-a3d7-4d1a-a02e-18333e84ee81",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a722bb42-7869-479d-9fd3-8d69151d358a"
        },
        "item": {
          "id": "fcc87797-c965-435d-a71b-154e1bd51ce8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fe8115c3-b845-4874-a882-417d2ea6028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57510950-ac22-4a3b-a2f7-4519d664b333",
        "cursor": {
          "ref": "61bfefb0-6acd-480d-93f8-082c85225e58",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d8385370-d28b-491c-89f3-57b104b02fbd"
        },
        "item": {
          "id": "57510950-ac22-4a3b-a2f7-4519d664b333",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a92cea31-b437-4480-be74-6afb58ccab1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d26fc8d-6b50-47b4-866a-cc75cf2ca234",
        "cursor": {
          "ref": "f1783567-dfc4-4475-b772-73d0fc74ac19",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "874d4bd2-92cd-4240-b742-1d9a949be204"
        },
        "item": {
          "id": "8d26fc8d-6b50-47b4-866a-cc75cf2ca234",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e4e23c67-be73-4304-87e5-90197ae0350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828d079a-8dd7-4f43-84ec-2bf70b825583",
        "cursor": {
          "ref": "e33a1068-8660-422a-abc5-254c3e0043cb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9909452a-7dce-42a3-8e45-72b09c2fdda6"
        },
        "item": {
          "id": "828d079a-8dd7-4f43-84ec-2bf70b825583",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8607f48d-fc6d-4717-8671-f6bfc69fb671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a11a2c-25c2-4cec-b0de-9a2092c0c0ac",
        "cursor": {
          "ref": "b59b072b-4005-4026-959e-19f24d6837ea",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "af871acb-5573-4018-b90c-b8c789b81974"
        },
        "item": {
          "id": "18a11a2c-25c2-4cec-b0de-9a2092c0c0ac",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5f5a071e-0f63-48f2-846c-43fba172c65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94cc344-743f-43c1-a6db-429e0e57120d",
        "cursor": {
          "ref": "4a7672ee-3157-4b5a-a964-3e0e348cb397",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "00d57702-0ce3-4c26-8162-a2b6ab36f041"
        },
        "item": {
          "id": "a94cc344-743f-43c1-a6db-429e0e57120d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e74b20e7-26e9-4eb3-a747-7f6f89311f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5292a3-aaf1-4671-8258-2ee882d090aa",
        "cursor": {
          "ref": "46790041-c38d-410b-afe4-2512476fd7d4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1aee7a6a-c9a0-4d7d-bbe0-8cb17d1fee82"
        },
        "item": {
          "id": "bd5292a3-aaf1-4671-8258-2ee882d090aa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "37c0ed44-4b70-433b-9395-d3eaa41d9eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f1fddf-9655-49d6-9367-209bafa82147",
        "cursor": {
          "ref": "20badeb9-3a53-4240-a39d-5ef680cb2dc3",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e2987bcf-7d18-4b89-acb8-591b3d7ec5ba"
        },
        "item": {
          "id": "76f1fddf-9655-49d6-9367-209bafa82147",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "be061eff-0967-49ad-839e-7b85c19dada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aa5d78-e1da-4331-888d-f663d53593b6",
        "cursor": {
          "ref": "e2c0fb48-f34d-4dfe-8c07-0ba9d902f5e5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e7ee472-8d7f-45e5-9036-b80389be1be6"
        },
        "item": {
          "id": "26aa5d78-e1da-4331-888d-f663d53593b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e76de0a7-8ce5-4ff1-8f94-f590c3c210d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099c0d18-4ace-43bb-b225-335066e73510",
        "cursor": {
          "ref": "55d56975-894f-4221-be4a-ea3b1f722c28",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "adffa7a5-c03a-42e3-84f9-ac2e8351f7d7"
        },
        "item": {
          "id": "099c0d18-4ace-43bb-b225-335066e73510",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e1c8e95a-ed80-4322-8a75-5788517e9787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5672fd-0288-4c25-b4f8-b7da81e4807a",
        "cursor": {
          "ref": "d295ef3e-4fbe-4174-ab0d-a96b5df697ac",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eb0fd1ee-0296-49e6-be32-30a769452740"
        },
        "item": {
          "id": "9d5672fd-0288-4c25-b4f8-b7da81e4807a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6a1bc532-85b5-4903-a757-1230ee739f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a0a229-fc8d-4e63-8fb3-a5edf62d22e7",
        "cursor": {
          "ref": "4e8e7a95-48a3-486a-9c92-af7d027160dc",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d906783e-ccff-47f7-bcc9-23c968dae40a"
        },
        "item": {
          "id": "e9a0a229-fc8d-4e63-8fb3-a5edf62d22e7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d415a384-c3d3-48cc-9471-064153b97bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9936bee9-ddc1-4d32-8f6d-98281d4f084b",
        "cursor": {
          "ref": "e60c248e-d0f0-4fff-8f44-57c988939047",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a3edeec6-73c3-48f8-9de4-106fa2e3404d"
        },
        "item": {
          "id": "9936bee9-ddc1-4d32-8f6d-98281d4f084b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "efa0fbb6-8615-49fb-90d1-a3afaf30c04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d674ca83-43e7-481c-8da6-fcba008f07e1",
        "cursor": {
          "ref": "0962d61a-e06e-492d-9147-777ada2cfec1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ab44d008-015f-4630-8a67-73e0fb7bd439"
        },
        "item": {
          "id": "d674ca83-43e7-481c-8da6-fcba008f07e1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0e813ffb-c13c-45da-a878-d9fc5eb424e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efbdd4d-2b88-48a7-9906-d6d91dc20b2e",
        "cursor": {
          "ref": "786b30f2-3ce2-4d2f-afb5-1a8884c9b902",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5bb21541-2983-4ad8-b2ed-fb249b234ab8"
        },
        "item": {
          "id": "0efbdd4d-2b88-48a7-9906-d6d91dc20b2e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "07841ae2-68b6-4a4c-ba0b-266d53d3baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caef409f-6321-4099-a196-c5d79e22ba45",
        "cursor": {
          "ref": "4ac498e6-b150-4f50-bb24-2926368c7b3b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a7886671-f97e-4b0f-97d4-c101ef229a10"
        },
        "item": {
          "id": "caef409f-6321-4099-a196-c5d79e22ba45",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7a4cb93c-073e-418e-8fe8-9ef4b23ac429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75858854-9f1c-441e-918b-74c602564949",
        "cursor": {
          "ref": "1562246f-a3f4-4727-9d73-a22d260d7b66",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aa8a0b4a-377c-4e73-a92d-d7c4bbf3d500"
        },
        "item": {
          "id": "75858854-9f1c-441e-918b-74c602564949",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "02010a7e-90b8-42a3-8cb9-c04517e949f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6557d0-6375-48c5-857b-6552ea92fc07",
        "cursor": {
          "ref": "5b7555fa-35a7-4c85-82c8-49c1bbc0f914",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9f00e9a0-a7e5-444a-8755-239ed1bce4dc"
        },
        "item": {
          "id": "7d6557d0-6375-48c5-857b-6552ea92fc07",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2f169ad7-462b-4f4b-b4d0-1314101c9028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69048cf7-f386-4237-ba27-fda248a2b0df",
        "cursor": {
          "ref": "63ee6129-a095-411f-91f9-2619d505325a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "41eaf175-87c0-4133-86a7-b711c02e1008"
        },
        "item": {
          "id": "69048cf7-f386-4237-ba27-fda248a2b0df",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4cc99f95-713a-4bd4-9a4d-60d8241f0d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1be058e-3a8f-4317-8f94-951a773241a7",
        "cursor": {
          "ref": "4ca4aec2-04c6-47ee-af0e-91d33a3d7cf2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "38345334-9627-41f0-a77d-78c7279a4981"
        },
        "item": {
          "id": "c1be058e-3a8f-4317-8f94-951a773241a7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ae43dd5b-0ea1-4005-a949-2f12e374b94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6920c04f-d11c-4730-971d-db2bf6009f6d",
        "cursor": {
          "ref": "11b96315-71ee-4e32-ad88-e31c74a3d042",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cc4c4625-ab5a-4a2c-9d1e-4d22699d628f"
        },
        "item": {
          "id": "6920c04f-d11c-4730-971d-db2bf6009f6d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "931daea6-e5f0-4e9f-979b-4c1bf99d1be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcafbef7-a199-462f-a724-c25aa96a78b8",
        "cursor": {
          "ref": "3343cd4e-2784-4913-a087-edaecde1dd73",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0f788a82-eb11-4daf-a63c-64265cff9ca3"
        },
        "item": {
          "id": "dcafbef7-a199-462f-a724-c25aa96a78b8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "16ac5112-0d75-440e-9995-653b22cf093a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b991ed9-89eb-4a4e-9d85-65d87a127eb3",
        "cursor": {
          "ref": "0d18d570-bce1-4d07-9474-839c7d33e881",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ac784e9b-04d8-4e18-9a69-9062db5807d2"
        },
        "item": {
          "id": "4b991ed9-89eb-4a4e-9d85-65d87a127eb3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "86f3b4ec-b654-4e07-bdc2-312c5e6fd74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446e24fc-3100-472e-8d13-52de5cf10c2d",
        "cursor": {
          "ref": "ccb7f68a-ed7c-4268-a841-1f9be0e434c4",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ded91995-e2fb-4664-b76c-1fc9e85621d3"
        },
        "item": {
          "id": "446e24fc-3100-472e-8d13-52de5cf10c2d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cfdffd41-a9bb-410d-8477-35a90c21be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf5d962-4559-4780-ba54-83ccf333dfe3",
        "cursor": {
          "ref": "ccf094e4-9184-45fb-8bf3-9993cbead9c1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "630da4dd-7af3-43e3-a07f-1e78f775b155"
        },
        "item": {
          "id": "2cf5d962-4559-4780-ba54-83ccf333dfe3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fd270fbf-063b-43b4-8914-6112eb66c7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee677b8-0631-49e2-ae42-a284b5f0f0d5",
        "cursor": {
          "ref": "7292a6c8-80d4-4d23-8378-9bea6c705630",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b9ca16a-d24e-4b26-9cc4-d19b08a8b0e5"
        },
        "item": {
          "id": "8ee677b8-0631-49e2-ae42-a284b5f0f0d5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9e751869-6bde-4992-9c60-2ba2a83ccbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176f113-1cf5-4fa7-bbfa-836eaa179716",
        "cursor": {
          "ref": "9270879e-1b41-4884-8e30-7ab92e1d310f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d0684f99-8e5b-46d7-8c4d-6ca20d3247be"
        },
        "item": {
          "id": "a176f113-1cf5-4fa7-bbfa-836eaa179716",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a543cd7d-047d-4c9b-9ad2-064a6201fff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86108478-a797-4651-9fb5-cc0df0d4a638",
        "cursor": {
          "ref": "86f00d3a-3ae1-4756-a0a8-551a8a735b0b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4fd29326-6ee9-4b62-a494-4e1a9186aa2a"
        },
        "item": {
          "id": "86108478-a797-4651-9fb5-cc0df0d4a638",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "276da49f-dd5e-4e0e-b2e7-88c3f6bae218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3728ecda-dc3f-424e-b551-08b51f1c141c",
        "cursor": {
          "ref": "ef682709-ea7f-4040-8d7b-926d9d10d34f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "11bd31c6-35e8-48c4-b376-841baa27ecf6"
        },
        "item": {
          "id": "3728ecda-dc3f-424e-b551-08b51f1c141c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b2b060d4-780c-4beb-b8c0-f60adcc56f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0c80e5-fb37-4128-bca0-1268a7bdb4f8",
        "cursor": {
          "ref": "5106606f-6ad9-4730-8eb2-6f2a8ca88c85",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eac85a6a-99be-4504-80fb-22fe9e08cf5b"
        },
        "item": {
          "id": "2d0c80e5-fb37-4128-bca0-1268a7bdb4f8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fce83621-af41-4f0d-ac54-04d8cdadb9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430e2f8b-f0fd-4874-b8dc-bce2cb38768c",
        "cursor": {
          "ref": "b47505fe-6847-405d-9bce-3d2b4c7a56b7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a3174d70-b90a-4775-bbe1-4d6d464936f0"
        },
        "item": {
          "id": "430e2f8b-f0fd-4874-b8dc-bce2cb38768c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b7d63456-f26d-4678-9b85-9266524984c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c5b28-c96f-4767-8647-f267ebeb7b49",
        "cursor": {
          "ref": "a6159255-2997-45d1-a680-662901abf7ef",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6ecad810-f1ef-41dd-b2fa-aa85bef13c39"
        },
        "item": {
          "id": "e09c5b28-c96f-4767-8647-f267ebeb7b49",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3c814852-6816-414f-987e-d04888f8db3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b84dd07-b05b-4229-902f-f2619193ef05",
        "cursor": {
          "ref": "837ce587-daed-42f4-a57c-549c69d310c8",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d2a524b8-585f-4af6-aa6b-89c270b8d12e"
        },
        "item": {
          "id": "2b84dd07-b05b-4229-902f-f2619193ef05",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "550264e7-25a0-4296-8874-85828c5c81ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c777cf89-2809-457a-b483-97d9e3a30e06",
        "cursor": {
          "ref": "95a74e9e-52ec-4c73-a1be-d766c8788d37",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "64208229-88eb-4df1-b40c-0a72e5cbd07b"
        },
        "item": {
          "id": "c777cf89-2809-457a-b483-97d9e3a30e06",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1ac898ab-74b6-4e87-90c6-2cdc1e6bd6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a23e8d-c04a-426b-bf45-6ba3f96602b7",
        "cursor": {
          "ref": "2ab5ad54-d11b-4ba4-8cd5-1d9c2d07a12d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c50a5833-e07f-4432-946f-09a6605fbe30"
        },
        "item": {
          "id": "00a23e8d-c04a-426b-bf45-6ba3f96602b7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d5fb62d9-f255-406e-9e76-ed65e6f57383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc72a4-cb54-4a4d-a4de-e5b68581291a",
        "cursor": {
          "ref": "3404a4d7-9572-4672-9181-8c3f62937854",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "df5fead4-5ef4-433c-9ea4-8152b6b65fe3"
        },
        "item": {
          "id": "e1bc72a4-cb54-4a4d-a4de-e5b68581291a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4d32ddab-5677-4f56-a5d9-90e3cc923fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6752367-9a91-4783-86bf-362c59d42670",
        "cursor": {
          "ref": "b0dddf9c-50de-4278-a6d7-ccd8d6a3f153",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ba5aa6e0-9d02-42ba-8714-a5b786103cc6"
        },
        "item": {
          "id": "a6752367-9a91-4783-86bf-362c59d42670",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5dae6304-a5b8-4c0e-86fa-21caaa6b5fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8108be-a163-4be5-99c7-2d3629767a36",
        "cursor": {
          "ref": "18ce3edb-d95b-48a7-9acf-c7617a3a080d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "21b8a731-9bdb-49d3-96f6-2230a03a1510"
        },
        "item": {
          "id": "7e8108be-a163-4be5-99c7-2d3629767a36",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7c6f28cd-55f1-4ef7-88d8-ed9cbac1bb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d5eb05-60a1-42d8-8f98-bf960c76dae1",
        "cursor": {
          "ref": "ef13af15-d1a6-456a-a682-226e06ba43e2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c66ca08c-c274-4b89-a49c-89d5876de63a"
        },
        "item": {
          "id": "17d5eb05-60a1-42d8-8f98-bf960c76dae1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "843fcc63-e386-493f-93b5-d7d7b4b10fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1368cd-319d-4e4a-8c3d-90c29a4b75ee",
        "cursor": {
          "ref": "0d058b35-cebb-43df-b999-b1cb12c03b6f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "40537517-369f-4136-9856-85c038d890f9"
        },
        "item": {
          "id": "cb1368cd-319d-4e4a-8c3d-90c29a4b75ee",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1ba6f34c-9edb-423c-844e-69dcfeeff119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48607c18-7675-4ac5-8ecc-474c159c039c",
        "cursor": {
          "ref": "5946c55d-c5e1-4032-bb37-d8d6d564d7a4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0f7a5561-39ca-40d1-bf87-a06c9f90fc26"
        },
        "item": {
          "id": "48607c18-7675-4ac5-8ecc-474c159c039c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "47e3ca81-c78d-454e-b2da-fc30a512934d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ea3e88-af2c-47fc-8ae6-bf2b1834efb3",
        "cursor": {
          "ref": "5a51f71f-bf91-4971-b731-f3af9cbe4e56",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "81b1d77f-2eea-4793-b0de-3483e41a0f43"
        },
        "item": {
          "id": "09ea3e88-af2c-47fc-8ae6-bf2b1834efb3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "48e220eb-6420-4955-9c68-013f4405b97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e8fa10-9ede-4f79-bcda-16be8083325c",
        "cursor": {
          "ref": "353b328e-dfb9-44fe-aefb-f2c0bd26da67",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3df7b02f-152e-4a53-bea4-2ee141c4da66"
        },
        "item": {
          "id": "37e8fa10-9ede-4f79-bcda-16be8083325c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "877dfd6c-085f-4441-af1d-8f155cb8722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9536768d-1f6a-4ec8-a51b-167f346a6e55",
        "cursor": {
          "ref": "971fc443-bf5a-4b5c-abdd-0f929b1f174c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa635aca-d75d-4aaa-a2fc-510d2d71504a"
        },
        "item": {
          "id": "9536768d-1f6a-4ec8-a51b-167f346a6e55",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aa873499-1aa6-4869-b1c4-d32aa735433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ef6cfa-b7d2-497c-ae7d-c73e6c8bd068",
        "cursor": {
          "ref": "0201cf3c-3f85-4980-9b08-52738c13735c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fd775f76-cc67-4474-8106-00881396aaac"
        },
        "item": {
          "id": "b2ef6cfa-b7d2-497c-ae7d-c73e6c8bd068",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "06def388-bf04-43d2-bcbc-fa3efb271571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd06ee-da23-44a7-b4f5-5c3cb17d0ab9",
        "cursor": {
          "ref": "329820f2-cb9f-4dea-be3f-b67b7a48dca1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "590d2894-7d10-4368-85ba-dfad736cc1e4"
        },
        "item": {
          "id": "44cd06ee-da23-44a7-b4f5-5c3cb17d0ab9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4723fbfe-4bbc-44fd-9a3f-efde3ccb4d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be8b88-aa12-4761-9be3-2b77006bf851",
        "cursor": {
          "ref": "76b96ddf-4298-400b-98da-f7318201e267",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5dd250c8-4387-41cb-9e0f-602a26e43de1"
        },
        "item": {
          "id": "67be8b88-aa12-4761-9be3-2b77006bf851",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bb50807b-2d00-4d4f-adef-ba0e1b3db2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdb6df6-64dd-4956-869f-c784dc056cda",
        "cursor": {
          "ref": "c5af93df-45e9-4f06-bfb4-dec63ddf96a4",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c49bec8c-ef8f-4084-ae0f-af000cd91bdb"
        },
        "item": {
          "id": "3bdb6df6-64dd-4956-869f-c784dc056cda",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4c6bc9b6-b7a1-4205-aebb-225de71ce35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf31f3-f089-49ea-b2b6-80a6f849a706",
        "cursor": {
          "ref": "1c866105-ed1f-4eda-b7ad-34f97cda801a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f3036003-590b-4159-ab32-a84b30c26031"
        },
        "item": {
          "id": "f4cf31f3-f089-49ea-b2b6-80a6f849a706",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "949230d4-d59c-45f5-8898-ba7ee53a8890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1203f152-42b2-4bb8-8059-53c67c268b94",
        "cursor": {
          "ref": "cba69fb3-9d36-43be-86b8-bf44136831bc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3bb72b82-6faa-4b96-ac47-10fb29fc474f"
        },
        "item": {
          "id": "1203f152-42b2-4bb8-8059-53c67c268b94",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b25779fe-80a4-4f3c-a106-169d09d14677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc1ae80-7f57-41c4-939f-b601ebef1d01",
        "cursor": {
          "ref": "cfbac7ce-9789-4f57-a2d2-1b48c94e7126",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8a147be9-b6f5-428f-b944-2374f0917d23"
        },
        "item": {
          "id": "fbc1ae80-7f57-41c4-939f-b601ebef1d01",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4298129-944e-4204-b372-66870dc55330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f332074f-6e93-44dc-ac3b-4c79d10b37a5",
        "cursor": {
          "ref": "c25b527b-c5b3-4ce2-9dc3-4e0c499d5437",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3ef9a817-ecbc-4472-8a5a-56c4dd005c37"
        },
        "item": {
          "id": "f332074f-6e93-44dc-ac3b-4c79d10b37a5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "be982a2e-3e82-4ff6-9571-3e729570117c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc59d3b4-2f4a-4982-917d-3ba456c13ce7",
        "cursor": {
          "ref": "ff869e2e-25a9-41db-b08c-3b43fa1e135c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "937f0db9-eb48-4aca-b590-0721cb29b1a6"
        },
        "item": {
          "id": "fc59d3b4-2f4a-4982-917d-3ba456c13ce7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6d2a47ad-c401-425e-a0d4-01cca1ecca39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e53227-3662-44e9-80a0-0a6c348841b4",
        "cursor": {
          "ref": "e022fbfe-33d2-46b3-b2aa-e010c7152137",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7e7bdb03-4170-496e-a573-33b4ad1e28b6"
        },
        "item": {
          "id": "38e53227-3662-44e9-80a0-0a6c348841b4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "582d9167-b33a-408a-91fb-a16ab98e1d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58791e9b-7a6b-4f39-b5be-0c090adc6d5a",
        "cursor": {
          "ref": "4b03fdf3-ac8e-45d6-adc1-4c2226cae6c5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a9d8f70e-1c73-4706-953f-0d1b3b7afdfb"
        },
        "item": {
          "id": "58791e9b-7a6b-4f39-b5be-0c090adc6d5a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d294f5b-2990-4f45-9943-562969e33d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc56fa-6ee8-4001-87e9-740f5deb7d93",
        "cursor": {
          "ref": "d44138ea-0922-4d23-8c38-bb464ffd8a22",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dc9a723f-78e3-4151-a5b2-655659b4b7a5"
        },
        "item": {
          "id": "6dcc56fa-6ee8-4001-87e9-740f5deb7d93",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "33929c6c-b0e3-4083-8508-c7aa008cd677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43448a00-81d1-4324-91af-57595c107196",
        "cursor": {
          "ref": "15fa1cc2-c1f1-4bd2-9020-1e9584309331",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2c9725bd-be33-4e24-a331-e970101628f6"
        },
        "item": {
          "id": "43448a00-81d1-4324-91af-57595c107196",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aae786a1-e55d-4ff8-a55a-da2c9ba9da58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d0e18f-6494-40aa-9fdc-3c32ad4d970b",
        "cursor": {
          "ref": "28548422-b0ce-443d-951f-7dc433233c3c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "48f0182c-0988-49df-9d66-38291670d427"
        },
        "item": {
          "id": "f9d0e18f-6494-40aa-9fdc-3c32ad4d970b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dec17a71-8fec-4171-bdd2-2cd7f72095f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e506a62d-b57f-4385-babe-0c025513aa7a",
        "cursor": {
          "ref": "97d6b886-5f3a-4a19-b966-9e98caa95b21",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "33778c4a-4b6d-4437-a8bc-9266d1c41854"
        },
        "item": {
          "id": "e506a62d-b57f-4385-babe-0c025513aa7a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b4f515c9-d548-4d97-8572-5d2839ddcaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8124acf2-59a4-42a7-bac1-4285c0f7fae3",
        "cursor": {
          "ref": "decb9bc1-0c1b-43a5-bf69-26383f2dfde2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9592ddbd-0663-427a-bf01-474e162d1870"
        },
        "item": {
          "id": "8124acf2-59a4-42a7-bac1-4285c0f7fae3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6828caf1-4f91-40d8-801c-a2c5849a8c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d2b7bc-2fed-4d10-b494-9c0464d7206e",
        "cursor": {
          "ref": "35b19260-1360-43a3-b540-25ed22eaa984",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ba9c9cd4-b588-46c3-bb27-1a6d04ccc75d"
        },
        "item": {
          "id": "10d2b7bc-2fed-4d10-b494-9c0464d7206e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f9dfb816-373e-4a83-9d56-5a8c7823da4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46abd48d-ecea-45a5-b54e-1dc991377ac3",
        "cursor": {
          "ref": "c79081ec-bb9b-4dce-8766-9857917cec60",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f4499258-e92f-472f-bc1c-b0fe22f472d4"
        },
        "item": {
          "id": "46abd48d-ecea-45a5-b54e-1dc991377ac3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "66f394b2-246f-4bc7-b84c-fcc40090a6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a5c190-5956-4d63-b883-4209e36418cf",
        "cursor": {
          "ref": "573a95b7-9781-49e0-aefb-f365be52f883",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8c755096-fe7e-4a47-ac53-017e057abbd3"
        },
        "item": {
          "id": "83a5c190-5956-4d63-b883-4209e36418cf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bc38af54-e926-4d79-9cf7-0420d60d2c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2f37d9-09f1-48a2-b1e7-ea607597083d",
        "cursor": {
          "ref": "f26445d8-0e1a-4ec9-bc60-bcc5a7f38ab8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8a1defea-bf85-4c82-8535-cc358f55f82c"
        },
        "item": {
          "id": "bc2f37d9-09f1-48a2-b1e7-ea607597083d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1f7a593-0c7f-4ab7-b126-782b39157610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30163980-7dba-46e6-ad51-617f959e3d1b",
        "cursor": {
          "ref": "d429b1ef-1693-4fa9-9b94-3b0906017214",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c5e2ea9b-2074-4c4b-a84b-04b27a0cc9b0"
        },
        "item": {
          "id": "30163980-7dba-46e6-ad51-617f959e3d1b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cd067b0d-1413-4ee2-9f12-a5033cb5e058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f7afe5-caeb-4616-988a-cdc9f24dab63",
        "cursor": {
          "ref": "0899edd0-796d-492d-b81f-897220e180ca",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "369f1c34-d67b-404a-b324-6d654fa424e1"
        },
        "item": {
          "id": "79f7afe5-caeb-4616-988a-cdc9f24dab63",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c660a48e-a355-4a03-96ab-08de9b58f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdff595-1d81-4918-a014-36636b3c40fa",
        "cursor": {
          "ref": "d13d89e6-cb65-4778-8df6-311e057baf7b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7b0c3889-321c-4ae5-91d2-7f18ee199d66"
        },
        "item": {
          "id": "8cdff595-1d81-4918-a014-36636b3c40fa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2a8856a0-0223-414c-a1f6-532301adf173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44db7885-4f05-4b2d-bcd6-57b42c4ff325",
        "cursor": {
          "ref": "b6e3749f-359c-4513-a3ea-2cefad23fd4d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8388f131-8ec4-4f14-b98e-a85db94073bd"
        },
        "item": {
          "id": "44db7885-4f05-4b2d-bcd6-57b42c4ff325",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6c628e16-fffa-484d-8746-5bf36358525e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f48e8e-a7c4-4255-a1a5-41afaea81152",
        "cursor": {
          "ref": "315d4974-89f2-4bf4-a4bb-260495626bc2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7041ec06-6739-4b1b-acbe-41697571c1e5"
        },
        "item": {
          "id": "d7f48e8e-a7c4-4255-a1a5-41afaea81152",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5ea4b7db-f906-4cb0-beda-f356efc79151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad037f6-4300-4241-9337-d24654a7dac5",
        "cursor": {
          "ref": "ba1a6dcb-d748-4f89-ae8f-a2cc048700af",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "97f75a41-d37f-40e0-aa5f-9010f184f622"
        },
        "item": {
          "id": "9ad037f6-4300-4241-9337-d24654a7dac5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5caa5442-f4ae-417d-9143-31b26519484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb341808-e83c-43c8-9cca-3d4dcc285c3b",
        "cursor": {
          "ref": "334de208-b6f2-4578-b555-175c9d00b05b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "92967485-6a31-43dd-a8ef-d482c2336dfb"
        },
        "item": {
          "id": "cb341808-e83c-43c8-9cca-3d4dcc285c3b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "22647903-0490-468f-a119-744c7148e242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe7e1cd-2594-41f7-92f5-9246eb835863",
        "cursor": {
          "ref": "0b860dee-a4b2-4a2e-87b2-6bff2d61f271",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "29b95365-1ba6-4beb-8195-c2f83ac2a7cd"
        },
        "item": {
          "id": "bfe7e1cd-2594-41f7-92f5-9246eb835863",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "089fc22c-ad1d-49ad-98b0-4930d58268d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a861f75-e34e-457f-88bd-bf6101f47d4b",
        "cursor": {
          "ref": "4226f098-0954-4599-a11b-3df46383553a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0b694dd4-6fe2-49e5-bf4f-6e2893a4574c"
        },
        "item": {
          "id": "4a861f75-e34e-457f-88bd-bf6101f47d4b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "31106faa-ee74-406f-835b-02ac79b7a1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb087269-60b9-4fe9-a395-b8ee692989f3",
        "cursor": {
          "ref": "1a9c53bf-5d13-414c-8e2b-035db2fce788",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "957349a0-6c28-475f-9a03-bba0f9b3cbcd"
        },
        "item": {
          "id": "eb087269-60b9-4fe9-a395-b8ee692989f3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0f365aab-b261-4a1c-a2fa-b9ab2b7d3f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e14918-dddc-489a-b300-0efe59c19d69",
        "cursor": {
          "ref": "5086a0a0-a3e9-4e34-9492-6009dff9b280",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "784d614c-270a-469a-9ece-63b9e4f02a03"
        },
        "item": {
          "id": "a0e14918-dddc-489a-b300-0efe59c19d69",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c9ea4119-bb3d-48a2-8165-46fadd622144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df0cd7a-bdac-4d2b-8165-94b39dcb42b6",
        "cursor": {
          "ref": "9527d18e-3def-43d3-8c16-b9d718400e9e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6297265a-23c6-4447-b394-a771a9ec9b8d"
        },
        "item": {
          "id": "5df0cd7a-bdac-4d2b-8165-94b39dcb42b6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fecff56c-c983-426d-b90e-0ca5100ce64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39df590e-a40a-4632-8773-ac628f3923f4",
        "cursor": {
          "ref": "49aa8700-2482-46c4-825a-4c34697ac607",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "13f6245c-7c1d-4382-9bd5-645e9bdc0f31"
        },
        "item": {
          "id": "39df590e-a40a-4632-8773-ac628f3923f4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9fca6d2f-d334-44f7-bf33-5240aa177ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f217b507-ea70-4eb5-a6bd-6c7b243894fb",
        "cursor": {
          "ref": "11a3904e-6dbd-4137-b622-d39efaaeb192",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "860ae2ac-7d29-4a43-93bb-55f3b06c2516"
        },
        "item": {
          "id": "f217b507-ea70-4eb5-a6bd-6c7b243894fb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "68acfc6a-4fae-48c7-8a97-bba839db7d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a472ec94-b19d-4895-9dac-ee862187a475",
        "cursor": {
          "ref": "7d5f6fb4-1dd0-482c-9083-f04bcf163b5d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ef6f855e-4a21-4548-8b1a-8a0615114704"
        },
        "item": {
          "id": "a472ec94-b19d-4895-9dac-ee862187a475",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e4a964a3-7d0b-4fb9-8d9b-b2ea7863702c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f38457-211c-4445-ba1d-52b85eddfd99",
        "cursor": {
          "ref": "c90a7d23-d6d6-4ede-8cd6-582cab0e7977",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5aea4f72-5d4b-43fb-94af-295145c40c88"
        },
        "item": {
          "id": "e5f38457-211c-4445-ba1d-52b85eddfd99",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cddb623e-4972-4ab8-b05f-5f05bf977e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2533f29-4ccb-45da-8d6f-2b0be9af7107",
        "cursor": {
          "ref": "3a0e26b3-e96d-4c5e-9b3b-a0d99733b1a8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4c421009-8573-4f52-b54e-26696706374a"
        },
        "item": {
          "id": "a2533f29-4ccb-45da-8d6f-2b0be9af7107",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "12efa738-bc20-483c-8f2c-ad755663033c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0ce7f-41ca-407a-8ca2-1f0f6fe83d40",
        "cursor": {
          "ref": "24e7a15b-c5a4-4ad5-8a0f-b300339f6c77",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6cee2fc9-ffa5-4fe9-a928-16589506af2a"
        },
        "item": {
          "id": "a4b0ce7f-41ca-407a-8ca2-1f0f6fe83d40",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "434819e7-5c01-4df3-ab07-59f77b2488ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9531dc1-87d5-4268-a63b-d68fb7586f50",
        "cursor": {
          "ref": "43a00216-6cf7-45be-a53c-f23a98dbe094",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a86effb5-7753-491d-80f9-d88538c95c09"
        },
        "item": {
          "id": "e9531dc1-87d5-4268-a63b-d68fb7586f50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe14269c-6329-485f-bacf-5cfdf7dbfc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773b1dc0-544a-4783-9111-27716352bcb0",
        "cursor": {
          "ref": "e6afced3-729f-4d1b-927d-b83c5e456cb2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8104d9bd-7806-44d3-9d97-3a06b5653fce"
        },
        "item": {
          "id": "773b1dc0-544a-4783-9111-27716352bcb0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d52962ea-1db2-4c34-a286-8a7848599b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194e8111-a886-4a30-ad03-5f75722a5638",
        "cursor": {
          "ref": "cca7b4cb-9ed4-4f7f-807d-524be96a2c93",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d22d9b95-4d89-4a82-811e-46e18d03b19d"
        },
        "item": {
          "id": "194e8111-a886-4a30-ad03-5f75722a5638",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8f4f99fe-df2d-47b7-bc46-459bb93693e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f82a5-306e-434b-a5dd-ced37baf1011",
        "cursor": {
          "ref": "f6cd5ec1-8344-4387-8d6d-1dc1d30ca622",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e76f18af-e25d-4ae6-802f-db17c3760f0d"
        },
        "item": {
          "id": "376f82a5-306e-434b-a5dd-ced37baf1011",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b383caca-6f7a-4bc2-9664-c06cdd44ea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa83f86-d8c7-4587-90fd-ff3d36f05000",
        "cursor": {
          "ref": "df7a7a8a-999a-486d-9b5a-1272d61d0cf0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ebe419b8-e2a8-4dde-b759-230847d566be"
        },
        "item": {
          "id": "eaa83f86-d8c7-4587-90fd-ff3d36f05000",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "da03ee81-28a8-4401-9899-f21b95c8a4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8634517c-fcb1-4af9-9f74-27521c912c0f",
        "cursor": {
          "ref": "8a22e0c2-98ad-41a5-9dd3-13cad390582b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "377a5f14-56c5-484c-9c7b-6ea32f3e9df0"
        },
        "item": {
          "id": "8634517c-fcb1-4af9-9f74-27521c912c0f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "54e062f8-1909-4387-bcf9-e4ee5c63b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc890bd4-932e-4fc1-911d-8b97450b7132",
        "cursor": {
          "ref": "99f24045-c4b7-481c-8a0c-2b58398b3c3e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "409d4f0b-235e-43e6-9cbe-36100e09530c"
        },
        "item": {
          "id": "dc890bd4-932e-4fc1-911d-8b97450b7132",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cc01627b-223d-40ed-9aba-bc63cbfc3ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1607e41-bbc5-41df-8c4b-b01faeed844f",
        "cursor": {
          "ref": "0c403b74-169a-432c-8f72-5a535b704fbf",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "db8c2076-ac18-4540-a0b9-ddc5d672b824"
        },
        "item": {
          "id": "f1607e41-bbc5-41df-8c4b-b01faeed844f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "71537da2-1775-4f07-9c96-62da1a4c0c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d692eae-e435-4103-b233-d4cf9983f547",
        "cursor": {
          "ref": "cd6ff73e-2709-490a-95bb-83336d9175a2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "441b6a00-2da4-415f-bc76-8adb2bb05518"
        },
        "item": {
          "id": "0d692eae-e435-4103-b233-d4cf9983f547",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "041e86fa-0c4b-43fc-87bd-8bb31e6f6215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d8e8be-db7f-45fe-b446-00f5c7fc906c",
        "cursor": {
          "ref": "0b8a4701-def9-4cc1-9590-bd06331e929c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "77765af0-c976-4793-a2ac-ebf0ae20463f"
        },
        "item": {
          "id": "b2d8e8be-db7f-45fe-b446-00f5c7fc906c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ce4c11ef-cd95-439d-8762-eff845c27aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae576fbb-db09-4c6b-bc38-d78b56dc28c5",
        "cursor": {
          "ref": "84b0af04-87d6-41e5-87a6-f4304f26c593",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b6725bd0-f657-4038-a9d9-57ecca9d57c0"
        },
        "item": {
          "id": "ae576fbb-db09-4c6b-bc38-d78b56dc28c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "af33d008-b50c-454a-a9c5-e8986449fcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d4ed3-f858-4a81-a85b-5d77b9ae0ea7",
        "cursor": {
          "ref": "155e81e3-3901-46f0-b319-c10a7d9695bf",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f1a687e0-97e8-416e-80d0-fbb4ee82c32a"
        },
        "item": {
          "id": "c07d4ed3-f858-4a81-a85b-5d77b9ae0ea7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3d2f254f-6fa9-4da8-aa76-1c9f599a4148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03c51e0-afce-4db8-89c3-1e565823723d",
        "cursor": {
          "ref": "bdfbb3d2-2eb5-4558-aa7f-cea1064146d4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c2bce90f-866f-40dc-852d-92a669a4d465"
        },
        "item": {
          "id": "d03c51e0-afce-4db8-89c3-1e565823723d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8f8dd1fb-28b3-40c5-8445-4c7688fe151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190d902d-5df2-4dc0-9452-135f3458f152",
        "cursor": {
          "ref": "a5119652-9362-47d3-9d3a-1c14ca5592f9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fc864b61-0cc2-423c-9e23-bb8307c8f702"
        },
        "item": {
          "id": "190d902d-5df2-4dc0-9452-135f3458f152",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "25c865e7-38ce-465f-8ae5-6aa77528ee64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52367e2a-0eea-45b5-8c58-4461f2f918f7",
        "cursor": {
          "ref": "b0ad10df-1cdc-49da-b5fc-a8dc391c5680",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c48f860b-481a-4ba9-abe3-37d3e8af3846"
        },
        "item": {
          "id": "52367e2a-0eea-45b5-8c58-4461f2f918f7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c62545d9-6d11-4397-ac56-bbb218f34601",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d226f97-5cd2-4c6b-9d61-c64d34322521",
        "cursor": {
          "ref": "7c3506fa-510f-4d20-be79-4d3f28f43a1a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "104e26c0-dcdd-4cf3-9ce2-c8ca10307fe3"
        },
        "item": {
          "id": "6d226f97-5cd2-4c6b-9d61-c64d34322521",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cda9aec5-1591-4fcc-b307-ef973c761f47",
          "status": "OK",
          "code": 200,
          "responseTime": 1376,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf02ac97-eee4-4f22-aae5-27b9ad3acba2",
        "cursor": {
          "ref": "6b26f45d-1805-42a0-a526-a2999ff15061",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "118dc389-f8fe-494d-b467-19c050750f66"
        },
        "item": {
          "id": "bf02ac97-eee4-4f22-aae5-27b9ad3acba2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93ea5a25-f407-4ee9-82a3-87bc1eaed3b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1770,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "284ab0a8-afb5-4a15-9609-3c7832b61c36",
        "cursor": {
          "ref": "cb27d87e-de59-44ea-a3c9-bc459dec9b67",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b1ce6f1f-8592-48c0-8535-9ddcf6f73fab"
        },
        "item": {
          "id": "284ab0a8-afb5-4a15-9609-3c7832b61c36",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f0ffbf5-d1c2-4610-bb5c-a3fce9e6d391",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284ab0a8-afb5-4a15-9609-3c7832b61c36",
        "cursor": {
          "ref": "cb27d87e-de59-44ea-a3c9-bc459dec9b67",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b1ce6f1f-8592-48c0-8535-9ddcf6f73fab"
        },
        "item": {
          "id": "284ab0a8-afb5-4a15-9609-3c7832b61c36",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f0ffbf5-d1c2-4610-bb5c-a3fce9e6d391",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09fbf4-2b43-4e6f-8ebb-9b7a6842d827",
        "cursor": {
          "ref": "48dfddb1-4a95-4366-b888-5f2b1283e5d7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "32e3a868-7e54-4086-aa58-a51bc2c93f7e"
        },
        "item": {
          "id": "da09fbf4-2b43-4e6f-8ebb-9b7a6842d827",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "56e0ea68-6949-406e-a77f-46de315252ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5040007-1d6d-4cef-baf7-2684bd1dcecc",
        "cursor": {
          "ref": "2c7dc8da-d7b3-489b-a8d5-b827e4f410f2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b480d1a9-49fe-413d-bec1-337cdc85999e"
        },
        "item": {
          "id": "a5040007-1d6d-4cef-baf7-2684bd1dcecc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4fa655e3-1294-4da9-b71b-d4270338ef94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}