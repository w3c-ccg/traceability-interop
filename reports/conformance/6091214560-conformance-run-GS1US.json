{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0a59d4f8-333b-4db0-af65-72c95d629c8f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fe854704-9aa8-4727-8fe1-74e5e2910c0b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d7add27-a180-4940-b5c8-05276d60560c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e69fe5b-9c97-49e7-a365-e0dabb7ac00f"
                }
              }
            ]
          },
          {
            "id": "5492723e-9420-416e-aab8-b212cecfc1f1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86911cce-525d-452f-8fae-91f01d1d5679",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b07a5b47-7d4b-46eb-9122-a7c6b256218b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d991d528-d6ce-4110-8686-07bb4bcc8f11",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39d39e25-35bd-4697-a952-f98c03df39d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ae779df-0613-400c-ad0a-9f17f27975b9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b541dc99-2a89-496e-917a-b32cb9970d7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d57c99f4-6e16-4858-acef-ae3be6929797"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af831240-9966-45b7-9581-17e308842a1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80a4f129-3c7f-4861-92d6-9c72fca192af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf185011-a4e1-485d-87f1-2804eed5c556",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0edf7aa8-013f-4d9d-aa5b-bd979ec793c3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67365be3-6f93-4916-aa99-40204c1283be",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8c59c5f6-be2a-4ce6-8380-485e2b1de566"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7364e0b3-4a12-47ea-9e18-ec7d454d8351",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9618cfd6-a3d9-4b00-aecb-5b64caf58b59"
            }
          }
        ]
      },
      {
        "id": "9444d55b-702b-4f57-8169-99e5c8202ae0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "52e08ae5-7486-44d8-87e6-3a3015e3d896",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bc7f1d3-ff8c-4cd2-abbb-5fbec2b87c33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09f23a78-1dae-4e96-b8a6-03bc2e2cffdc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11df78e-b36a-49b7-9d91-1173cc2d4123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74e14a02-871f-4a3c-b99b-6118c76a0235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd0a710-c2dd-4d9f-bbfe-56b669fefc9d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304a758a-c710-4f1c-98c8-fc7d50cd058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76d8ba20-d723-4297-af36-2a87866de934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd6838a-5f21-4b90-964d-5b7b1a04f739",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b170ba-eb06-445b-ac50-131f8676e5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03cba77c-499b-492c-90a1-a6d9734b6adc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a53dbf6-6a56-42f1-917d-8bf51538cdbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dee4f14-1df9-4306-bc48-aadda9196cd6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f2dea-ee16-4c31-8f30-1e365f22aa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a51a963e-a774-4762-9841-ff902b7396b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847f97db-6d67-465d-a4a2-f99c128652a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1755f4dc-a025-48c5-8c6c-704b1ecff08f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e83f6ae2-72c5-497f-a370-e0eefc59e4c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb311854-4d7e-41a2-927e-7216e9a6a7fb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "966cdbda-345f-450d-88d7-b88d0ddde6fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fb72ca04-512d-41f1-bb2c-6a02aba2d19a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90fe34ef-4cbe-4e8f-9755-b311fc39123c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3d34ccda-acbc-414c-b15b-1a71f5d15efa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7625dce2-7a49-41ac-bf1e-18e84fac5c24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fad6f368-3d4d-4f7f-a969-544384152d85"
            }
          }
        ]
      },
      {
        "id": "54a8b57b-0d2e-484f-9f5b-bfa441b87c17",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "03d0dee6-cef0-468b-8892-3c0d90a317fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc1277e3-d3f3-4dcb-a69e-28f33f849d1a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "48748f50-19d0-4971-ad39-ef6c359935ad",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d6b6e-36fc-410e-9797-1d89400d4f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5a4959-b1bc-43fc-a71f-14b5688ca295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc46bdaf-a8e6-4daa-84be-bcc7622cb0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fddb753d-6812-4cae-bd15-ddac4a89263f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d33271-afbf-47c9-b950-6f921bcc4658",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea81563-79a1-480a-949e-9c7823bce735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c28111-b69a-4eba-bb81-a37f9534a280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab27b36-a86d-4869-b105-ae7141bbfcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc128816-cde1-4cc0-96b8-cae115b4f33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2d9a5-fc27-4319-a8f5-77f80143e5bf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c55d6c7-6c85-478e-a3e0-691090ecf2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cbd748-708c-47c7-94eb-a55fda21f858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fd3d07-a8b6-4b68-9b34-22f0331aeadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cade8bc1-1773-4dc8-99ea-574bb658995f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a936d7e5-b0c1-43bd-91d8-f951889933f7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcbda7d-2555-49ea-b73c-7b99c3638172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cfb397-1a90-41ac-939f-cbd9f24ae1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4300f3fd-9a5e-4fef-b514-8768ba1fdc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a430eaeb-4427-4532-8935-a03222f5922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3026cef-49c1-42b3-8ce4-50385b5ddff6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc1b4bf-9d12-450c-a7a1-55686a0526ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f30e796-bfe4-4834-bd3e-d5e7627453bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eed66f-6d2f-4418-a9d5-e30b8889c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ba98d8-f310-4100-934b-3acd4d1c4583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f050006-222f-45b0-999b-98c17b186d32",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011383cd-419f-4c84-a0dd-0f714ecd24c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439d7d6c-22aa-4d1a-991a-8a9f125446ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174b0396-5bce-4954-9a16-0b59217e1d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c091ac-5b2b-4376-bd31-064786502599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d3e043-420a-418a-876e-c71e68e9598f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cb29ac-ff31-46e4-9ae2-e405b2448409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1c89c6-cd75-45f7-9bdc-15c894f52f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55b701a-1021-4e84-9701-31fca1de5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae100af6-72cf-4edc-b490-30e08b61f81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcedd39-bb5d-4638-b84b-3827bbe69834",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a896d213-2336-425a-834f-37c2234d871c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0c0018-8cec-4fdd-86a3-42089d554ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8227e08-979d-436b-971e-e1b3bb1c9339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fac0e9a2-5048-4f6c-a936-290377bab718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb46894b-d1c4-41fb-b681-d7e0c3962868",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1149d970-d68f-4335-9fb3-829635569483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18b95af-d597-4e1c-bae1-d9c83e900670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4361ac58-a1cf-48cd-8efb-5c9d25e98140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44460ce5-bcdf-4c19-a6da-9ae0e975c176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d66c95c-939a-48a9-933d-f3809becc23d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec471be1-3296-452d-b5d6-2deeaec105c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7b281f-1c81-4a0b-9f51-024287070159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d2cb82-1229-4970-b38e-2d44ccd9b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ee0e59d-a76a-4cb2-b601-9dc07f322607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5b801a-7e86-48f1-b7e0-6bd75c93924d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e484f5-c453-4a0e-b737-ec02d23a9a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b76018b-1610-4825-9fd0-cfd9f31c16b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a476a30-cf43-4a82-ad84-87ee6edfdfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e14eca5-7da4-472d-af51-e0f62d023ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c745a18-47c7-47e6-b39d-7f2bb9fa27b2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2040a5-2cf3-4bed-8ec0-2b7ff57e379c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc399766-06db-4264-bff0-155dee11fde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b16968-3e3a-45d2-ad50-f983bff6ca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e424e41-0e48-45d0-842a-18296183a488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b16169d-3b93-4923-af78-a7d46cd32e42",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a938002-6c07-4989-9e95-99bccee2f1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01e8219-47db-4f7f-b1b8-15c3dc7ac066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5570c217-86b7-44eb-ba4e-962fc32c38fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3b2ae07-e72c-44bf-a523-8aff6e735e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba52562-4c8e-454f-a882-5a577c84b5a3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f782a-8e29-4339-b5cd-717c7a5f81ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9aa05de-ca65-4f0c-aa29-6512390f8cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e804d039-c689-42a9-b1d0-203e433c5129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7dca8a9-77b0-43e9-aa70-11f1be255f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabbf047-da6d-41b0-a616-58493533ca79",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e4b8f5-077a-4b77-8483-031fbf8514b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb1d2ed-d8d8-4b0b-a31d-ee2b933bb6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74bd01a-fa78-494b-bb81-66e4f406e519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "242ae8c9-d362-4ef8-a07f-6c9768cf4641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a1e6de-c98d-4af1-8362-d89e22333bd0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9473609-f41a-4bf4-a83b-95e0031a9462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6ad3a6-3513-419b-803c-7b554e0ac489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852953f0-6f07-4e4b-baaf-ae83a5c8d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c8b3644-6524-46b7-abb0-8f37580dde55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d5f7be-2450-4b0a-8070-a075ce2c286f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510a00a7-1a41-4439-9024-c91a95e58e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b562845a-46b7-4919-b56b-bc40af6d2beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bced5111-da98-4f36-aad3-6e708004147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ca3e4f7-0f66-49d1-82bb-d987c2c963bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad86123a-5465-440f-bcaf-081c9ce4588a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79197a0f-cfb2-4402-b3d1-97c826057939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfe1262-1296-4968-8fa5-f10a201df52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08087ee5-7b69-4df2-9364-d6a66f92505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c16fb81-57bc-4a0d-8150-ba97133b4cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162819f5-9827-4d94-adbd-ee8007dbf0fc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8a7dc2-d3e7-42ab-824e-d2ad96f61c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695038dd-0659-4cd1-98b0-dd9c197c1e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59be6a2a-921f-475a-a3b0-94ec216f8de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "038cca96-300e-4000-91f4-67a4a361bbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f46abdc-0903-409a-b8d0-64e92845ce58",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cedcd83-ad2d-4fd9-8dcf-66daaaa5d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec6580d-a3ef-4c91-bed2-2b884817ff38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dc9eee-3acb-467d-a861-e7558e01e243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ef4efb-5922-4b45-8527-7e0b0d801e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d671e24-76fd-47f6-b57b-a3f01eb96af1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53b79f6-9a66-4169-a579-7e561c39f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec254337-dbb5-4a4f-8c19-13bb6c199bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cf39fa-c6bc-496c-9446-1abe4e3a0e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c6ff8c-6432-4a02-98c8-87b6440e50c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe27dcc5-ed23-4343-a7a6-bce4fd0a9995",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c939b959-a1ae-4a6f-90bf-26d2731a04b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23ecdf4-8883-4f40-8c95-144aae352cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8b90ff-6ba6-48d7-bb62-54ce5ad2a7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fed3701a-aa1d-4537-8940-eb3c313c6982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff887583-b83d-4396-8f6b-13bf7e118aee",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d49d5aa-1f2a-49a8-8ed0-10b647d95da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0391d4c9-e1ee-4199-b214-c7faddca985c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f7875b-3aa6-4b60-b29c-0e170af82bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f883aa9-876a-4d6d-a15c-d372c6d843c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b8187f-5e7e-40df-895a-21e9527ab166",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844635fe-0d27-4ef1-9706-5f36c77c68bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf31909-c22f-4449-8840-69458880bfbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d87152-1cfc-4bfc-9398-c9815b3a3252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "752fc980-0553-4921-8709-dabf85ddb673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5e0e4c-a0e9-402f-a14b-9d1cd81daf51",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f694e391-6bb0-45f4-a99b-3051352476f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ef701d-3cc1-4fcd-bdd9-5cf6f92f503e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97525da-84c8-470b-a6c0-adcba9c1b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "021e17da-6a57-4cc8-9bc7-ec81d156c5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fc3f7b-6079-4d82-9ab5-10560fe8215b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed8b071-ab44-4e8b-bc5c-e3c13873006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f2a36c-140d-48cc-b696-571b80dbea30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4b0ac-fb23-4d03-ad00-584469247572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a41d2e9-36e3-4434-8def-44289637fb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7447456f-5081-469d-831f-778279e2e6f0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f8fae2-6820-4aca-b0e4-f41dd5194303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a38978-56e2-48ed-935c-ec6be740fd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb19b81-3d09-43f9-9750-4a3be9295c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde3786a-75da-4010-80f3-4c2d511f7c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38881e14-aca0-4e62-a52a-f0869072c20e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a19f281-68b7-4f30-8188-aad6ff82b662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df86b7c5-7001-478a-b405-eb247f7efd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73e24c1-0813-4442-bb56-164e8fa17e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48a1558-5655-4bb4-a3af-ed5ffc858746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11b2004-eb34-4097-9273-25c648f957e0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89985e65-2366-4b80-b74e-66ad7d2e8789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e220259-1852-47a4-891f-f61febd17d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c28b16c-8ccb-438b-ac66-3ca18e3a6d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2f6f15-c681-4bf3-974b-72f538ca7a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf80bd7-95ec-4416-b954-c99ea86512fc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4192fe-8c35-401a-bd01-1fd572aa1aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8722dc2-d9bd-4ebc-9181-cf1056a041e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00908465-fd45-47f6-ad9a-f820aee80bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f51b0dfb-d2fe-41c2-941b-0c64fbba7bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4f8bd0-1763-4361-bafc-34a17978aa93",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579fd7e3-e54c-40bc-8171-157ee0699ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7874356c-568b-4eba-8292-ee1ea53050ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cb25b9-7d0a-42b6-a087-e9b0434c3732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c541481-502a-4e85-b24b-09677b44c6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad1db0-9a12-456e-afe2-910a4f884f64",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f713e08f-66b6-4202-9fcb-8b7643813b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8416532e-bcaf-476c-a83f-9363b6a41d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e971ea0-3a75-4dab-ab32-c4b25c752982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4702694-6fe5-4c2c-acb7-d49fcf8a6a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d282d976-0afc-467c-955e-e3d4442aabf5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64564a53-7ea8-4344-a796-10bb76a88138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17983dfc-bd8a-43c3-b8f5-b94fdc7bdeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe344c1-a5c6-46cc-8900-49949fb419dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19f1c4f-e0bc-4f8a-be9e-6bb3460509c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3520092e-2bad-47f1-b599-4dd4de277f12",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e06659-7f49-40de-a487-8fe418103183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac6e28-5c29-41d1-924d-f00da39fb4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ae9b44-cacf-47fb-bda1-c907e18f4438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5be28a2-4cfa-4ee4-ba04-620659d5849f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dc28d5-033c-483b-af94-24c575c15f51",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37811b7b-98f8-4a78-9eba-2627bda4ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26080b01-b5d7-4601-a58f-f80892d8ddd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ca5f61-6192-42ec-8d1d-ad84211c63b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8073a6ae-3311-4708-a4f8-9a1adecdd30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c8500d-43ba-4e6f-b3fa-be230031c4b1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a857ad11-59f0-4833-813f-05524b65b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea2eda6d-d463-40d9-87f3-5fd0cefc6e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69274585-c93f-472d-9148-a7eaa546a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46c851db-12b6-4f3b-aaf1-a9f0c6cd918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647174e7-05b9-4b24-874c-9ed9e2343b92",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c087549d-510f-4ac3-af2d-1710994d57b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f33b82d-ca21-4fc3-9d5d-97f2db7e82d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3413defb-f896-4a94-9181-d545873b7751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae5267b-fce4-4afe-af62-86f4a266d4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81df32a-62d4-427a-9776-760ab633743c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d05c108-7031-4c41-baa5-9326294b5da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ad569b-6b51-4fce-a1d0-28b043b532f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd1a495-6eb8-4d02-b747-2200d9131a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8789ce-b9ba-4343-a6a2-4a1a8e9e8ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86738cf7-2ad8-4764-b57d-7ee866177f41",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bb7f34-fd29-4966-b31a-cc03e256ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b805701-7df3-42b7-a9f1-205d23c7ef0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7647b5ae-4cca-4afa-b5dd-d62e7d2a021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92142119-6e8c-438f-b6ab-afc3b8bbf8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2191d123-27c6-4420-9942-c256fb1b1372",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e8351-abe4-46ca-954b-706f9609bb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3106c9a-4403-4b88-a475-7fe0a760fdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4583a98-2eda-4c89-87be-03268f44dc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f4b86c-ab76-4ff9-90d5-b05324f6eb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168728fa-a593-441f-8bbf-ba2d77facd6d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40a0cc2-3b43-4543-894f-7e7a04cb43eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6185dbf0-79a1-4243-bafc-a930aae80393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177e170c-7d21-468f-8bcd-118e88a47f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "898509c6-fda1-4b0b-bab3-879b0e44af22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2485d61-fa0f-4b78-95e6-cb43d4ade607",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f772ff-1f30-4b28-bd04-41d0b9fdb582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab2d5e1-5fb4-49d1-bc8a-5ffdce164591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9bc712-f7c1-4360-b924-e33daddb097b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f81ce1-3195-4865-9aa3-3dc5c3f57df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b300934-0a22-405c-aa1e-d3a89fcd96cc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692d94c9-bcd7-4836-8b04-f652281146e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06b1821-6171-452a-a0a8-ea48d029437d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3387a5-4467-4979-8d95-4e864a054698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbe6e87-9594-4f73-9841-1d2b4ebe4d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718cc6fc-fec7-4ace-92c3-49c425ff88cb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b0107d-e6da-4bef-9354-2238a2dd82dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545f4cf8-ee0b-4557-a1a2-9b4dd10cf571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fd612c-3725-4f32-976a-a90122b2949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a04fb98-9a32-4d18-8282-6f7a86eb1c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3428b400-cd86-4776-a805-c4903a5b2663",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d801df3-e249-4988-8acf-9bbf4bc04605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b4739c-0975-4b2e-852b-548fc56593f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ec2078-6097-4703-afcf-45fb77f88389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b664b8f3-043d-482b-8340-56f830dc346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4e6d64-7ac1-4936-8f7f-91314e0761d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbeda8c-5889-4a14-91d7-7836067f815a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69692b2-5a6a-45a6-8a9e-c468c95dafa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d088d4f9-3475-4de0-be82-eef244b2b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "981ae2d0-8bd5-4e7e-8b29-82e5a4fa936f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c565d8ec-b9e0-4a34-aec3-bfc12567bdd3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e4faed-9d80-44eb-b495-4303449c34d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cd0c58-20ec-4d54-82b6-8739dd973f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d717621b-7b8a-4f87-a349-7e1d93e10fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25211940-8bf5-4a5b-a729-e8d167188921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5755052-a50e-418c-ae5d-a1ac27aecc76",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f5b274-db5d-4e47-be7d-4756af1eddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9be1cb-3e68-478f-9299-186150e06ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758420df-e5dc-4406-b7b5-96419268f96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb352872-84d1-4ea7-b666-fbb8d52ddc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01691dc2-3314-417f-83c5-5cdf461fca0f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e50161-7645-43ef-b5c4-71187bd753dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f122382-4c20-4bee-88c8-d5021a71f4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82323c10-80e4-42f5-aa5c-b94b9d2860b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad93aa84-0bbb-4277-8f3e-d798e12d7d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0ce90a-7697-45e2-928e-f1ab6a87035e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e722148-0977-4296-a382-df4555f35f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4124e575-20c4-47d1-99fc-3dba6de30026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54124ff1-d179-4886-87f1-c1a4833c6a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a32652e1-0b24-4f7c-a70d-610c331d5e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01380c8e-f903-4064-8582-b2f60575279d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20357358-3ca1-4141-87aa-d65b6ea99ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0021d2b-5c6e-46ba-86bb-50ba477295f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5a9d43-40c4-4e6d-a95a-8b1d2ebe57eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01870ed-8122-4dc0-90f3-a6af3e398e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6348308d-f7cc-4ee5-958c-cf38bb14a5e3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2c0920-46de-4ca2-8f41-5e2b756c1fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f97e1d-c4f6-4d17-ae24-e5649ee86143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6154190e-2b59-405a-9000-b955d6dd32e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8265f97-2aff-47d8-855d-6b5e1b0e9f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a8133f-c344-4654-be74-a3c7ed1be348",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c58a0d-9fea-4c1c-b7a4-3e69ea75dc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11749afa-8735-4d32-a0c6-f793bd032dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b40a684-8cac-4216-a080-d0f14d6eb8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5127b5-8ad0-48e5-ad19-01c3a7c71c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2ea57-1275-4316-819a-28a000f7171f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbe07a6-d631-42e0-908b-23366c39a31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88750dc-52d2-4379-821e-909c8d3d8bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d6d6c-ffae-47ff-917a-ce52e78874e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f4430b-226f-4563-8351-aabf0f23c395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e969a3c-271b-4962-9007-a557ecb02be4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70f181e-750b-41b1-a0fa-adf2b569a0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8603ebac-531f-4289-801a-d7eb606b0c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fe5708-1503-4b31-903e-771ffdcdbbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c003a8-258f-4945-9424-cb34c6dd5386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f5c6d1-4b88-4919-94cd-488f7c2263d5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0edeb98-30c7-4341-8cce-e7f639c3a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe72c2c4-5a76-4be8-8619-356fa652ddfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9201183-8190-4f8d-8e99-ab036154b065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2ffc11-12c9-4f8c-bce5-f3bc2c83112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9084e9-7c16-42f9-b87e-b862c4b59052",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dad25d-ea30-403c-8060-370441537e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64122b6f-9800-4d76-adde-588db90c4bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4f96df-1728-47fd-b6d2-995f41065b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "175f6350-a59c-4312-85ab-9a623ba1f181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b036d188-41a5-4f16-a455-3a296e7ffb60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3555b-4442-480d-acda-3ca2cab560f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb94b712-9592-4dd9-86d9-694feb510311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25337eb-882b-4db8-92e3-e7b1cd5b6d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aba0481-533f-458f-8c6c-8492b4627705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00393494-4509-4b3b-8ca5-07bf3246228c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0091ed0-3c83-4105-9b77-0ab20c43b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b97331e-4b2c-44af-b20a-d3440dd48ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f400fd50-2956-4dcf-9360-0916b97f3576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cde64bf6-806f-471a-affd-fe31e42cd1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accef0fd-02ab-46c8-8a2a-248969cd4e5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0b15af-23d4-401a-a365-ca0ad124fb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2c368d-95df-4b04-9452-52379c6841f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7e20e-763e-44c8-adf4-273037f08af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b08d5689-f94d-4cbe-b725-aed4c9a287d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694c3393-eb93-4e19-9ac1-d3334b0cefe1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267c9ef7-feb5-4228-8bfb-839104f2414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d8a711-cdec-411b-ac4a-6d2e6b7ee960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b1478b-e275-4cca-802c-b1abfe6239f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "400890bd-0330-479a-a499-450ccdd63af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d893f129-4ad0-4728-b07b-65c7fb922809",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce7ba55-4434-4741-ad2d-f8e33ac1b280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22e4c71-e713-4394-a799-f7cefe953bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790b220b-e648-453c-bfd6-d1df13530174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "559de2e7-2957-4839-83e9-08469a946c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d02787b-9606-4df9-9525-f744e22595de",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179fb1bb-42c6-4e29-bba1-9e2b1d79d8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edcbfbe-4aff-4873-8da4-eb93e5911a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeddf38-985e-403d-8b3c-bfc64669997b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9cf606-f6c8-4f9b-8eea-d54baaebeb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee03d120-ce58-4a9b-88fb-fd87d4e421a5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0825aa3c-2ee9-48d4-8f69-c975dc379994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8fab6b-2f4f-4f78-826b-2cf82903198f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbac6c6e-c219-488c-8912-837e5b5a65fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1392e9b4-b8f7-461a-88b3-63876d8f1d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a74cd63-b0a0-4af6-b0fc-dc6ea23033f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccad9d5f-da38-4787-b1c8-f3d4c7d011aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7efa08-ad9c-4900-9529-32a313013983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c58d8a-f9e6-4f89-baee-8e6fdc7172ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75ab435-f77b-41a2-bd7e-e2eb6fcbf145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58a6570-4e11-4029-89dc-ec8466cb0d33",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82540e3a-cc7b-4fa9-875e-92e9733ddb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a96be53-2f93-4b38-8e78-d471036f98ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd414e03-95c0-4a80-a49b-474b3b7129fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfa33b4-7e99-4463-966c-8d99a99466d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d3b0f2-da98-4269-b660-c269254d88e1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2dbfa0-4094-4fa7-b579-945545e58ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c03439-8087-47ef-8a22-4a0f3e71f460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0480b4-7210-40b6-893a-921f1def23e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c30d3c43-a4e5-49a7-8b29-f32bf67bdd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ff0189-d46a-4d5a-95e4-0baaaedf13f7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcda168a-6209-4595-9bb5-fe40b397f845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c513818b-9ec1-4183-ab20-7f19aa90d96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f92f81-298c-4cf9-ab9d-1e7068fb520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc6478c-2c8d-4255-9eab-9003c9de6695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a50c0c-e1b1-45ad-aafd-f56558b36f71",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a499da3c-ab7b-482d-a24f-c0b951d1e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8766b0e6-3424-4fb6-8cb2-bddb24ce24c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726d82dc-548d-43cd-a065-c896ba185298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24fb24f-4e15-4dac-b566-41c76ae000ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d97c38-0b65-45f2-aeff-9dfaef10ffe9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccdce17-7971-4cd3-9d16-bdd8c0d262b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10bf56b-3ee9-4d7c-9ef4-f654f0537b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40af8d80-e365-4541-84dd-d2adf6de01cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b10ea4-25cc-483b-b102-b5bf529cf16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c796520-0514-4872-af8c-e84728e4836d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0572da9d-2e9f-4094-a053-3bd819774e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00647aea-1378-41d4-903c-3df5626f064a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2220a868-4f71-4ad5-b07c-dc06f4d98567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "676d9cb7-f012-498b-830b-99f295841c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af56c94e-7f8d-48a2-a723-048595a720e1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fe9099-c77f-4359-b5cd-8777909bdf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33743a3-a02c-4809-a06c-c75e26196992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd4de1b-cc6f-4319-ba19-767ed0c5da97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ac5fa2-0851-467e-b4d5-3c7eed9901cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0bbfa-a52a-4f93-b2db-7e05b2cb63c3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed631fab-f0d9-48a7-881e-3fbfaf9207bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae47fc64-2fe7-47e1-96ca-b9de4c58becd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc0312-e0a6-4e88-b605-3f0e1bc40c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d037e789-460d-49bc-bcdf-d08c6f70b83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d85fa1e-7835-49bb-92ef-ad8cb26a923d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea10d4a-4f73-45f9-aee4-a1c95f325b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013ed1e9-4375-4c4c-89ad-eab533d7458f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e22552-f4b3-4a5b-8a01-deefb7bd0599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d72a8c-8f2c-4d7f-9eb5-2c1296f339ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf0768b-07e0-4814-8fee-11b8c2a9579b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b3c50c-ce8d-4fd0-b57f-5974c15b250f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65f49df-5b60-44ba-958c-c501018ed5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626fce9c-8f12-4369-b6c3-1e467633ad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b545d5f-68f9-4ae7-804d-7ccf65fee344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41fe623-3da2-4b22-9f4a-c66ed15c62a1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb4c32e-8918-4238-97ba-7f512fbc6bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbec42fd-332b-4973-8033-7bd333b70b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32f76cd-e941-4475-ac9d-f66bf0d8282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74da373c-bae0-469a-ad95-b5f50ff60b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836df8f6-df8e-496c-a102-1acadedd9e1c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cb650f-ea1d-438c-9d2d-d96fef07d944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f040957d-7bfb-4af7-818b-626b849669b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8303d4c7-52af-4982-9b93-e9535019db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac98487-adc7-4552-bd01-adbcd5c44628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82915d8-f679-47b1-bf77-c7c8a34fe4c3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cc2933-1354-4cc5-bc34-60c3d80a4e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7e5080-2068-4aa2-aaa3-f5c97933caba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e83765-2d3d-4bfa-b82e-6da5db50ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81f709b-434a-4d16-b5e5-06850ff6d923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ff7d4e-7d78-4f8a-b3b6-9b30c05d2a9b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee0b19d-7519-47a4-a13f-ee6f30a6bdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc53393-0d27-4b0a-8b5c-1ac538a66b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeb3385-b4cf-4722-8121-3652df3b6917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc95217-0a70-45ee-be74-6d77e9eecf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e8f783-16a1-4e79-8595-d69afb9f2006",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4315db46-8e94-441e-83c7-0d752a561b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f818839-a076-4600-bbc6-cec8fe8bad94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be552274-c8da-4ec6-8a0b-846eec4c6fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e67892ed-eae3-47c5-a03e-8980cdf8fd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da61ee30-a2a5-480d-a751-ea726d2c9cfb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee2fb7c-6b10-4230-9494-455445aa473e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9166ad-45a3-4dde-bcd5-3dbf912df1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04163086-807f-4d71-9e1b-bdd1fc07b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b517a5-aded-4042-9d1c-12fa86acc7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb4851c-0979-43f1-a61e-61970c2437ac",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0bb98c-2634-4735-97d5-b29354a49a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3cd727-7f45-4665-8c5f-cd01e41fc764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb66f45f-de5d-4e0e-bcf7-500fb28f0e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b646680c-4bfd-45ba-bd7b-60a22b512914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90519444-b357-4d1d-a9ce-977baa381cee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69673b00-7768-41af-b323-a83649a41b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f9bd5-4499-42a9-9faa-99e45f14fbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa660419-85af-4388-910b-afb0c76ba7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "822740fd-4cd8-4322-baa8-e6aac5359af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc278a5-2ac9-4ce5-9943-17f7b9ad887f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d317ad-aa31-464a-ac54-4a006ae00079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3c930f-d4cd-4ec7-82f9-d11d113f585c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5505ef5-c611-41f8-b6f2-71e616b49301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e007127-189a-4daf-8941-b34bb772c2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e009e5-85ab-47df-89a0-be1fb1923bfd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09e0d13-e811-4571-b591-3b2346753b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf08422-bfca-4a49-8b9b-e5c5435b03c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db222a-5d95-4edb-9199-e623974277ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08b90f22-d156-4f13-84b5-faa48a95c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4172692a-ddb4-40c6-a826-5e7d50ec94b9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f59f2a-2288-4c39-aede-13f6659519f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d0ff5e-213d-4fd4-8d59-08196c3d12de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ef2330-f592-4649-ae10-f748e9d61329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c00744ca-a679-45f6-90b4-4a215bc1bb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0b22b9-f70a-4b7f-850f-17b456770744",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595d2459-6316-428d-931a-b5bcdb90041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593a2d06-b695-4123-a88c-3b004b424575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c894cb-0f6b-4a42-b5bd-1a4f1600787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db584a1b-38e4-490e-afde-f1d7ced958b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc2c43-cb5c-4270-8176-3f673cf84f21",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8f3f5c-2a8a-4f9c-ab80-f7489296d21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c78f398-1fa3-4251-8235-b28a4d10dea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698d2d75-ac6d-4447-b1b7-3435387b5176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f81cd0-ee7b-4d4a-82fe-9e19841bd687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5750d653-7c5d-4412-9fea-380b945e2068",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7b7b56-f37e-4bfd-8c20-581c67f0a98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43d02ca-a61b-42b4-8d56-200d4b2b62b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed223ca-bd68-490f-8446-f13ae8e73ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e02ccb62-fe3d-41f8-b657-425a9da5a93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b6eac7-10c1-4957-bbe7-135abdede051",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06a733e-afab-4501-b265-9fa91375181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecbda17-59b8-4e50-a4a4-5b71833d87f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253ff950-15fc-4d77-b5f6-c9d286611ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d368403-c1a5-4222-b6c4-1cddc79b2bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd5a767-89dd-46d7-884c-e6d292a06756",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dfc829-3928-47d3-869f-fde2f0b76cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834554e2-77c0-46c6-82e3-ff9a5001db56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1880cf-73ba-4c51-8e5e-d05064c7f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97a1a93d-d5d8-4285-9f99-b3a001ee9598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcd0c79-5c3c-44b2-a4d5-a53329a0c000",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bb433d-0d3c-490b-b20c-eda4c4c82c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7d87776-44d9-4bee-b72e-e79ea4dec0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45571f7b-cbfa-4b9c-a75c-760884440642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5a197b-b4f7-499d-bf32-416ca1714a74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c7df84e-492f-47b8-aa17-f0bdf6cb7ccf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81540d6e-0fd3-41b0-aafd-8986b15d9ead",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3424c8b-31fa-4508-acd1-a85eeeceecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7276ed55-9590-4194-bac5-103fbf206771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce47d9e-f910-4822-b7c1-c1824607392b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8b52193-1b49-43e6-8e37-1c75d098b4cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb109009-1dbe-4322-a6bd-c454eefc00b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a99d9a3a-16af-4227-9de3-16b0db1ae60b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63e2e94b-60f7-497a-89a4-c13148e010b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19d0d9a6-edd9-43b4-8a17-0c63b5ec25ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26d240d0-c3fe-4063-aca1-d844f6125b7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "896ad8b0-1172-4704-9280-2bf77ae4f392"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ede3b726-fff7-4099-9046-e4580fcb14d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d01e0f45-99c7-4fdf-8973-78b0b112140a"
                }
              }
            ]
          },
          {
            "id": "fb860cf0-a2e4-4a38-ba51-0ea926f58c50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3129a797-49e9-4a6a-8edc-5384a87bd86d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6b39045-4853-438a-bc4f-b7600f229c07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5630200f-df7a-4197-a98d-e44720543a95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ececb30b-1624-4064-89b6-6b3220446d12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "507eb506-14bd-44bd-b503-a8d8d72ada6c"
                    }
                  }
                ]
              },
              {
                "id": "2cd8a320-d63b-49f1-9b30-42a59c39fab8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9895ac5e-4a06-42ab-a059-57697c0c0439",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54a638c9-01e0-480f-9de9-199a40e31433"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8401e584-7c17-42d6-8702-ddc8bcd49fb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dedad075-0c4f-4ebf-8561-b0eeb6535e3b"
                    }
                  }
                ]
              },
              {
                "id": "ca17f83c-8ab0-4877-8473-26562894e4d4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21ad56ed-ac87-40a3-8c59-cd6424cf58cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92eeb594-da5e-480a-a600-c05d25505247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be944c3e-9673-44d6-bbda-b83d18015a70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7dbe1295-9ed2-4790-ae65-666d42300be7"
                    }
                  }
                ]
              },
              {
                "id": "ea07de76-bb3f-4b9b-8ab8-fd77ed32fc1f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36a20ebb-286f-44c3-941d-3375f48cf680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db93128a-c72d-443a-8203-6ec656fa28c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abe2c870-89bc-4c42-aa26-2568bc22080b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "76e17d13-c774-4204-9795-a8d4dfd7c89c"
                    }
                  }
                ]
              },
              {
                "id": "2b58db6f-6d48-43c4-8ffa-f24acf86db32",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcd8cc7f-ca7c-4aa5-890c-60c5e16ff841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc26c413-f99f-4204-8a88-95eb13fe153c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03991a76-b8a2-4166-b142-c243a9aae7bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "87bab61f-7f08-4a9d-8892-4a69778dc552"
                    }
                  }
                ]
              },
              {
                "id": "6638bdf2-b238-4e0f-b0c5-1ea32245c4a5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8582421-cd8b-4dc9-82e5-39df39e87e29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d27fd20-a2f8-47fc-8785-765abb5d3043"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33582ded-480e-48f6-bbf6-3582c8885be4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0dc73559-532e-4f69-adf5-9acef4bfdc24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19dfd6fd-7f31-41c1-8c72-4a290869feb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3e458c8-9d11-48c7-b966-28c087ffda89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d46b4aaf-62b6-4e8d-b310-d7d7724f9bc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ff2bbe5-de89-451f-b185-328956107bb4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfd8b320-116f-4b6c-8034-122b38951670",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5aaea35c-6c63-4753-b337-3e192896e1d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9338869e-18c5-4dfe-a965-9ca7752c8615",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7816c97b-9f22-4b0c-81a7-7f31e9161dea"
            }
          }
        ]
      },
      {
        "id": "569d8c58-31c1-49d8-81d5-00f75d10791e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6a9fd063-7c8d-4ac4-98c9-3f724ed0165e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d2fde1a-e303-4b6d-9110-4170c1fd4689",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7b078b6-37c9-4ba3-b574-62204b6c9ea4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38aa978-c595-47f1-8cbf-beac8bb10c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6adf0df-5e27-474f-b332-d14670000cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60a8f65-c2f9-4d4b-a18d-e90bcc92e01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af1098e-125c-455e-8e8a-8d1a31ce9ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a42e93-0fc7-494b-8618-67cbfd1a0c5c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05d886e-059d-49bb-82ce-938a1e78e2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7aa6748-5a7a-4e01-a5c3-a6535183d77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53220f9-2d0f-421c-8c12-212761c8ea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26518ff4-2490-45a0-9a08-0092e1c940a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdb6014-5674-474b-b6d8-3346cf0fc1e2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1495ec4-bc6c-41db-8de1-5a9c2b89b7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4edaeb-dc02-4560-aeb2-fc87220de2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b718a7-cff7-4eaa-aac6-9f36a8a8d1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b6c67e-944e-4d31-8557-f700853b6ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0938432d-4286-4b5b-b169-390bd0a040ad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0685616-0dc3-44af-80f5-b6bf1a111a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60346b3-67e0-4512-8fe3-3a08f052a4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a5c5e8-55f6-4dad-ac12-d4fd0659cf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35969503-5230-472d-91bb-df70a9afcec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4de6260-98be-416a-903a-6b88fae97aba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f02cab3-cf7f-48ab-b41a-1f2e350608ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63c5dce-813e-49d5-a05a-e76089d6d314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34fc768-12cd-48bd-8504-6ce5e9c49afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c376f108-f368-4e68-b66c-912f06762a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfbd37e-b090-410c-be13-dc900d4ccb5c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9896424-afe4-4602-a742-e2de430e498d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ec3ddb-b406-419c-9749-aede5a84370e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5e3886-d4c9-43f0-ab64-bc3e0c6ea112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f2d32f-4d55-4d49-9727-9c95d83b1901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d19d14e-d03a-49c5-8792-0bf9336e2749",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c1dc9b-75f6-4e96-b985-d592150759c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255ededa-e76d-4132-b269-c1da3e6b2910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc61868-30a2-4bcf-9ddb-f8b28d741702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "33224238-e63e-45c4-a97a-22e4bed39718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c774e02-454a-4c22-8f2d-e15e8474a32c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd5a64d-eb5b-479b-b890-988d566c6e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3a85e3-1b1d-4bd2-b899-87a4f9235ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c34cc18-7af2-48f8-81ef-30e20fe5c886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "185dcb78-7dbb-43c3-9998-8e4f69899ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f409ac2e-41bc-47c5-9509-cc1830a1a037",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9033c6d1-5252-467e-9531-be0d20fcf67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a7e5d0-6b01-4e7a-9dfb-6122aaaf76bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7880a0ae-3a35-4938-8631-f3451202cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dafc3e9-b910-4a49-945d-2229ed1109ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f24e27-eaa7-4b2e-96b7-cef37dfebe45",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f529a65-400b-4e59-bb47-881e85c0b083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef59988-9c19-49d3-b019-91e773e610df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0313288-32f5-44b4-9850-a57138ad6385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abdbe367-0ea6-40e7-858c-295f634faa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7594e56-ea77-46c6-bb55-2fe743a59c26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e56e559-6f70-4edf-92b9-0767c8daf5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8505a988-1c8f-40cd-90ca-95db03e375c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc534709-6e23-47f2-b645-9ff9bf854da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee40a26-b920-4b8e-9863-a17c3ee5540e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486fd289-0338-4556-8e4c-0b6fbd7b58aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c674c661-1089-4d69-87f3-fb981977b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363d0263-ad49-43d0-96c3-030974abb923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e69724e-e062-48a9-8fff-06e9360a1aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d13a5dee-8a3c-4b45-9203-86c848f33f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf714bba-5f78-4a68-bb95-b6a606591327",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a482c4-492d-4c41-9613-2bb9273b2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7e0b20-0849-4f36-9109-b3e443ec10cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21be2961-5a77-494f-ad48-63e9cd62de45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42668470-452e-4c25-bc0f-cd44f15aa12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7108b6-030e-4325-b906-f4052659825a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25066448-4ef2-4080-a390-3405b626ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b33640-71ae-48a4-a76d-096fb4a49d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a36dd7-af39-4a00-a6bc-8f8c2a17d925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a312686d-8f78-4049-a10a-5e462090c49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831231d5-9b29-44ae-801b-51536d4eb4c0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa284d0-778d-42a3-862f-f5d66b17da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c0309b-821a-4c30-ab42-b4e400c51c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea988c-011d-4181-ad8f-ca8b745e3360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b85557-aee8-496f-996f-2c6712ba7d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f1fc69-45eb-4ec1-9388-957f29adeefd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227baa18-fa2a-4cd9-8911-0ac4c86520d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239d5c97-2164-4ba1-bf8e-541ec95e28eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348344e1-2ae1-4287-af0f-6da0450fec69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bb060d-b3fb-4088-8c7f-cc05caf4aee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4fef98-9edd-4d59-b093-a2498e9f7ea0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c7b7d4-69dc-4892-bb8d-13861eab4237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31d8ca9-a1df-4cbe-9ef8-173f84c109b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199803b0-da2c-4c01-8218-bd8d0be22127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d715e1d5-cd2c-4a8e-a128-825a64e0e220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fab3c0-fd44-46e9-8364-6a616ae929ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152800b2-6d0c-4516-812e-387601bb981a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b270472c-cbcf-4331-a7d0-e1514b9e2c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1c177f-12c1-4cbd-b9ce-1338658a5407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22a6f96-e1a3-4c85-a760-0faacfd829f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02a6f70-7a75-4f99-a5db-a8b145701a83",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131de688-7e7d-4114-a2b5-e201a6523563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b54926-e33c-4ecb-a48d-5e4d19b664da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e33899-d33a-46d6-9983-b2416aafaa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b97a82-b280-4bc6-8432-c71bee30bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3a6875-eec1-4675-a5d1-b1fd2e1b4569",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a73b7f-f8ef-41d3-94d4-10bc2af24e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ada4f6-88f0-48ab-88bc-f72dcc9d0282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42ef1b5-4844-4979-9d2f-c7e21d2c74d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adcc45fa-1abc-4989-9138-feb67e98370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f128f35-e7ca-41e2-89ca-4a1856df8d1b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7c633b-2275-44e0-8626-11ad0e3c4927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c227aba-07c0-4eb8-90bd-509b95fff94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5478b0a-e7de-49d0-b13e-187ca225bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e57d517e-175b-4dee-887b-10679f649205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f8a029-55b2-4c5a-a8bb-9b05d630acdd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dea4582-acbc-4ed6-853c-3ce4f02c7427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c0dbd6-f45d-457b-a07d-094316862b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2680ab2-0005-483c-9754-712a9b1ec705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76960cc-949f-446d-957a-b511af434b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863466bc-d6a5-4ccb-9ab8-b63bd979585c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bba2e8-1821-41bd-b46f-d8bcc4ffb0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48944e66-6486-4bdd-a82c-6ba7ea87c8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e683c8-86ae-407e-894d-8258a6bc3ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7799d0-9563-4999-a856-3517bdee6194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ebf9d0-9263-43be-8f4b-b689419259b4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cb2641-7c7d-4738-83cd-212109bad618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd21075-54c8-4dd1-9466-6389942033b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c82df54-21ae-4df9-95dc-52a864cb1f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e0cbc0-da3d-40d9-85f0-a18d1ec97541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041368f2-c5b3-4239-a9ae-cd8e7abbd20e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2002129c-08d2-45fe-a05c-72f4909a1b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db32bfac-bebd-4f2c-9a88-639463cc172c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0940c5-8ca5-4e6b-b0df-6f81a8c5cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69d24cf-ae9e-4b21-9592-728520bb2f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe067357-18a7-45f2-a444-428efdb100c4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc2133f-221b-42e6-8fa7-a2177ad58ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6038257e-d568-4823-80db-ce548b254aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbacaa88-c23e-4100-82db-ec2dad8077d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3df8d17-a0cb-4887-8b00-cb9f1e95bdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b227fa14-3e40-4b7b-9de0-7bcc03acd45d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f072a7c6-c82e-4bde-8e06-07e7fde0ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27add883-2cf8-4998-92a1-a2143544d5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179f7819-150d-45a1-9657-ed79b5df6fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cef0c0f-8f8f-4506-9008-33f1881bcd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2fdf8b-18a0-4a85-99ef-ceba00b6552b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96a8dde-8a54-40d3-af04-7b1460bc2528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8403ab-36c8-47d1-83ce-1d93940459c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89f749-3de3-40ca-910b-592d017a5129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ca36fe-0598-4e05-b257-fe9a75b377ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9960dee-b652-4585-800f-1fe5eea88d50",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae99f74d-7e6e-4d61-b3bd-60db470357a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdbc99e-700b-45a5-b67f-67dc04d8e7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb3140e-8f7d-4d0f-9422-b89c4deb4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d211724c-bb42-4152-b7d7-0e10b3b482d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef636af-0cf2-4429-b138-643681c42084",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43837356-9609-4bb6-9c64-ba345c45265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d843eff3-ada3-4acc-8736-faa6edea217e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0334aed9-caee-4ce8-b8cc-835296e0abba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea96eb0d-7b32-477f-9d98-98cd9371fd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0820198-5bb9-4115-8fb7-2f14cdbc1a1e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5420df39-1df8-4e5f-b652-12fb6d23b83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff50939-0c72-4f41-8eb8-9953415bcb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a94c756-8964-4579-a22d-d46f61913415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a86e83a-5401-476b-b25d-5739ed76d2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f10ecca-57d9-488b-95de-c330977c3f77",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7ca0e7-1643-47dc-aaca-8b17366a48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbbddc4-b596-4865-857e-f7af5b8a718e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2b30b8-768a-494d-9456-428c6d47895a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feaf7885-297a-485e-b7a7-db75d6d8bbe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd979c16-a7db-4582-95de-fc2bf3544321",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02873924-8647-4800-bde0-ceeb032dab2f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f318da9-d0af-4709-ae0c-718e3615148e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "218bb8e9-1a39-43b5-8246-120960b1aa59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bae143-aaaf-4e6d-af0a-9ab85e75c0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "466fa486-22a7-4a48-be82-f0486f415c19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e446cd4-a92e-4ac2-b4a5-a8d1fbaf963b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7f90b20-6800-4c03-bd07-1056f3c50eb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86793fe1-ab2a-449f-8cb1-611abe77f7a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5b433f6-f032-48ed-8694-7d0b8b42c455"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9e56601-456f-480c-ac77-fe6793330e55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f712935-bf78-4143-b7db-18522fbd3f88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd2196f6-be9d-4552-b753-7d8a78e67136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd68e4ae-4088-4a09-abd8-c899b630ef3d"
            }
          }
        ]
      },
      {
        "id": "33c9e92f-92a7-4f45-b2a5-ebe3c4ccfe73",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0c03daf0-76bf-4d6a-8dd3-7778e023753b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "677fce96-7c6d-48de-9150-8871cfff3f68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a127829-4788-4096-bc6b-d196f3287acc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6839ecf4-ae03-4cf2-b757-07d7e0539ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97e4047-4b9c-4bed-b86c-e4f27e227a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc38d67e-f288-4adc-af0c-c02f5aa2e8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b6075a-77a7-4e5c-ae56-6fe6734066c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bec06d-ec96-4bf8-a846-77c8eb52f1fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95876be-07ca-42f5-b539-7c78857361c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bcd6bb-4ccc-4251-9034-794d9be835dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f11c547-a5c6-4a39-9e6b-367781991660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7cb0ef-16a7-4a4e-a553-ea1ac40993f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21736aea-37a4-4d46-a7c5-6cfff5105c3b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375f067a-0cc4-4a5a-bfcd-2267ade0c877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29242ebf-4381-419b-8bc7-5c97e116592d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0287b3c7-9a7d-435c-9730-b8b1301e5b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "995e4c8f-8336-489f-9f1b-0c1b5f18169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c029067-f60f-4c58-a385-ebb94d180433",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ac875-1cbc-475a-bda8-2abe2c5822f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221a2341-a6b0-48d2-a5ac-f52adc4688d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588e633b-45da-4986-bf30-9122004e2fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8620ec0-3a86-40d8-a372-fb710a8f9a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ed0781-7394-4aa0-ab8f-0ad95b9fceb6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233f8e6c-be24-40c7-ae9e-e263227e20cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302462a0-1cc4-4654-8700-790cf61223e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7a3449-55fe-4e36-a4f1-a040f904ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdcceaf-9b39-439c-ac47-e25964fcee23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5591f4a-049f-4f94-8614-ab270b0aa82e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc7059c-8b61-472c-b73b-84cfea047140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1666940-7f2f-40f8-aec2-32320fbc8ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4258ecb6-8671-416b-aa6d-04ff46fad691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7e503f-757a-4abd-8604-11263c1394e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42333874-cc5d-4ec4-b918-1cdba7126c97",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e67dc9-e95c-4a31-928e-0d6b81a60299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166ff1d7-6b1d-44a6-961f-679caf3d8909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c980e683-adac-453e-8d32-d50752766d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4037330f-defc-43cf-95a3-f737f340a381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc648f38-7401-46d2-b05f-26c8c8d1c8fc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77a8d6-5afe-4862-8bcf-112b01b305e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911c22a1-7fb4-48b8-9d78-2304b8d13ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af693343-c98e-44e6-886b-84fe264842d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af7a05f-3b9a-4ffc-95a8-bd501ae9eb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c46cbd-7e68-45f6-af38-072b446e281b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5813687a-7ab1-4818-9bc0-edb297868553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48952a2b-1199-4879-bc58-4ac2144027a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090d9d7d-ee49-487b-b1f3-df4b98394f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd14095-448a-44f5-8501-d07d1bda5719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2846303c-0a49-4eda-9bec-994a49fe82ff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b86c82-fd68-4c4d-b03c-d165ff0383c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d977b7-5617-46e7-a4de-db3f7c3664b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18f86db-335a-497f-af6c-087b02dd46a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b69d6bb0-ca47-4eac-b271-b40415b5ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0083d28d-e1d1-4d50-b97e-591781c97c52",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c37019-b3e9-417d-91ea-d7af192615d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2976c54-2917-4ff0-8f23-b10e5a7284a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043603c7-8207-4710-a400-93e1dd769804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cb452177-5352-4ed5-ac67-bf93d896f62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b273b2-39fe-40ae-b8b4-fe73f90e506e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a54dec-40ae-49d9-a83e-5e67c26dc768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52d8470-1a9e-45c1-9427-45a887d174af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5a8b34-7279-4ec8-a65c-f783d8d36fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acdab7e7-e3db-4c03-a615-54b392eb0af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684dc25-b2d7-4e48-bd9f-1ca2de1035a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a862b25-c30a-494a-a56f-cbd134305b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa07753-87c3-4c56-8ada-d3722a44fa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9da38-d1e6-4e0a-b22f-8f0359f982fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f849b8-34d9-4e81-b5f1-029683ff5bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e92f7dd-81e3-43fa-9a53-69ba27fac4ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ca4faf-c0a1-4c66-8d53-a3d98a6c2e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9f3f8e-1445-4590-b2ec-d0bddd6d398e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be29d38e-7175-40d4-a156-df605edf9a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8da5763-1f5d-4b14-9671-5058db158499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c2d64b-8fa6-4db6-9092-05fa33d5d42a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e4313a-8057-4251-a2a6-f309652a26aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484bc794-c3ce-4f3d-b967-51e72ad8e371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb0a7f1-f314-4b40-bb43-b0378ec06eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff1c7ea-d038-4e44-88fe-040ec2c157c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44861128-5eb8-4b90-b2fe-bd73bf7714a7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7025123-e9f3-4ecb-a8a6-2a81efada0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbd2e34-cf8f-4243-9285-30c0e409036e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f80e7ad-7eeb-4fc8-81ef-f7af3b5e8de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f502ceff-e6ca-48c0-a7af-2b595d67411a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395a1fdf-6ccb-4d13-adc6-7a8100a59850",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee9a457-3109-4ede-bef4-5792b029e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf24582-c88c-4715-a2fe-340c858d8912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54608af-8238-4399-b9cc-138ff79fc21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "497df519-1653-439c-8db4-c1955d3db089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0b8030-9ef1-41c4-9cb1-7b86ccd43ee7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f28ace-52d7-4790-a46d-6bd1686e8ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7317d6bd-9beb-48c6-897d-c8c86cb92546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd057d20-cbc2-48bb-8a6f-b4c851db5df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47022a1e-9b60-4a2f-b3a2-4b45f3253d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f2cd70-38ec-4c0b-93fc-e5852d2cbdc2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b3ce4a-783a-46fd-b854-0d567e3c2790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ff22f8-5c40-4399-ac07-41504e1e96d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38407832-0c6b-4b95-96e8-4ad42b3d2bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b69dc8b-9d9c-4e65-bb55-dbcd67da30fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3503bc-8682-4e94-b645-ead34a1dc673",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c6329-952b-45a8-8b7b-bbad7510f98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e78826-e235-4d80-9521-6ca1303e4e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c35dcab-2f10-4ff3-8f8c-ba9c458d75ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c6270a-9d21-4527-8ce2-72283b7b7122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74acdc39-ebed-4831-b522-d6f83c206b45",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bce253-af0e-4525-88c8-0051fae7713b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aace824-c3e7-456c-a8db-d6b8d1025faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ca4c23-24b3-43d6-bcde-0c12c7213940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96102337-0ec7-442e-a4da-4384d1596e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbf78ef-4a33-4d0f-a555-9202cb2c0859",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8038a5-2fa1-46db-9d0e-c112ab7cf5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae3e75c-ac89-49c0-8f45-ab801d68fc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8440a0-6236-46d1-bb9c-be8ed21843f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0544c8b8-c594-43de-b745-5bdd4c7c2003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7906cca9-39c7-40f1-a860-7f0c2defd3a6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f660ea50-92f3-4dc2-961e-897d89ae9d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec1dffe-633f-41c7-bf22-ba535d7e5d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb73bc-be6a-4447-8f90-0a2be8def491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "905ea3f7-fc05-4a36-9c48-d7ce1f2b358a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6339501-f2cf-4ff8-a856-799818fe11de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504b9bdf-5837-4925-8217-c53b664340ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c700e8-a98b-44ab-8a79-c9f6bc948480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d641ed8-dc9f-43aa-a15c-12cc59ab0beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98b8c5c-fedd-4cb3-bd6e-6ad8fe69dc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ed1ca2-a954-44ce-ad54-f52bb6634e73",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ff300-cc39-4afc-97e2-6dcd5cc6b8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa343ebb-22b9-4e28-86b1-0d4e99731d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8e3797-1bea-45c1-b6b7-c512e2899763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b696c7e4-6a88-44de-a640-e2d680802c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c336f876-0a6b-4d17-ac25-2df74b99c7d1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce563494-e65b-4481-bace-1577cf68ec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17490861-9be6-4a55-9bad-d40c66500f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedc8792-b26f-4705-b287-3efc9abcd460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080f7fc1-0e92-4fb9-9b7b-f694779bb8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c62d501-4d6a-43fa-a484-08d82bcf592d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52177625-76e2-43e5-8855-ddfdeddf819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b64afc2-0e24-4e5e-a536-2c33e145c201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7137f4e8-1705-4543-b9eb-0939f11c4957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89144bb1-98cd-465b-88ba-036ad4ecd848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ed55f7-210c-4baf-8ef0-2849063783c4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361ff90e-32f2-451d-ab17-e6a471f93a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6d5bf1-23fd-4592-abc6-1301fe4e91d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393d41ac-6440-4de5-99fb-cd2e205a4382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d154ff94-56f7-4bca-a14e-fe814ca660e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae40049e-b653-48fa-909c-85130a125f30",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f2c673-cd56-40d0-a4f1-104cf1b7115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4d832d-7c65-476c-b634-e7626988bad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9f9f55-6622-4dea-9529-fb53335fa6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af51e98-4e9e-468d-bed2-395898b3e047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac85f75d-1e38-4709-b548-3db668513139",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fcf144-b91c-43db-9494-d9c03af6c825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a6f669-db75-408e-ba95-887d32cd7a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc48d08a-f033-413e-8eca-b8e51fdd600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72154649-3227-40b1-b21d-0ece001a9dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07385fdb-d226-4d1a-ac42-be29b2211dc6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d9624-2f25-41b8-adf7-27f95c393de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f97deb1-a4f1-4564-a949-e65ade81c1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce6bcdb-bf1d-42eb-adbc-b81d81641308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f9f3cd-c8c4-45b4-ac8d-ceb9a67856db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843640d0-0068-46a2-a96d-e474e2c5148f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c6e749-9087-41bc-85a2-22163872583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b566ebcc-a484-47c9-9cc1-a13a0ef3c74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4320ed-7ae1-466f-831f-00b98c03d8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8be80ca-9eb3-43ed-acc9-eca307a2ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d921bf-33dd-45ae-b783-996e39852842",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa78b73d-90f9-43da-8a7f-b062f2565e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedf5ba9-7f39-4d48-a6b3-b60e1f2a4663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1186c7c0-b237-41c7-93e6-a5fa38290928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4dee00-4a92-4fb9-b857-ea1a03186138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d16689f-c0e4-4129-b8d1-3c9ba7d11a2c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bb631b-e019-4c07-a188-23e607c403b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b0cb25-bc1b-4fb6-8a01-da91f2cc0f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febbbaf4-f129-4dbc-bbe2-b0e85b8650bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8132e69-9b6c-446c-8d3e-e9d88356944f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075a65f6-4cd3-484f-ad9e-bbef225782ea",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57daa05f-d500-4785-a3ef-163f2db54c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade6e778-85ac-4a26-8a5c-91aca296afcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32548ffd-fbc1-4728-8512-e2a70daa2930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81cb9484-7a17-4aa2-8221-19af036d747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebff3c73-46fd-49a1-877a-b3112668f9ed",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d5caca-f3d0-4136-aca6-3075ce96f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be20292f-fe81-40ea-a34f-45e3840e8193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353ed14d-f2b1-4828-92bb-ed4e7f927705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78da61e9-b5b3-49ba-b393-2331b445b8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46e7b50-57a8-42db-b3d0-6857f47e793e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e04e83-a6b4-43d1-8259-553b6fe3a017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe94107-32ab-430e-8c0b-e98216b65dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737aa743-fa8e-440c-87d2-3c8cc3b3a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec1f5fd-2924-44bc-9e2b-c0e6033a6c1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a942b3d0-ecf2-49ec-b260-f9414334214b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e30af105-15aa-401d-bd62-486fb7f4e171",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f18f2-2838-43fc-a0ec-902bdb0ed06d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4d66bc-64cc-49d7-8eae-f9d6392643bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c177f4a3-35a7-4fae-9aad-c1ee47b398b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2975cc0-430e-4a97-a658-14c831628248"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e24ce076-9522-4e77-b44d-05b32f7e4f23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c57db7ae-2a9a-450f-adb4-6c0ad398aca1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02f40a17-8e3b-4fe3-a24c-a9e61f1df5eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b124a746-7e5d-4659-bc52-58ac8453d96d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "192d9e1e-b12a-40ab-a671-c2218951ff54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44b06755-24da-4d9b-9ade-11327e8049ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00a8b820-269c-4ee5-a42c-bf099f826119",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eebdd501-59a5-4acc-8100-a5c589ba3426"
            }
          }
        ]
      },
      {
        "id": "cda925dc-6709-4fe9-8af6-1355059b65f8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a7e70ff1-e1f0-4877-ad5c-8a2da679fec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83e3348b-7c9d-47d4-a989-cc6bc517369e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40fe36b5-9f1e-4c49-b16e-6c527e514557",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c083a1f-31c6-4ef6-9457-c2f4e15a10ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc7b6d-a73c-419e-963e-d5403941bd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4477f00b-c7de-46a1-a462-545241b43460",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ffa544-90af-4a1e-9186-9db42cc754e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b8415d-0367-4b01-bd86-0cb207c6f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0038c6a3-7f78-4548-8e6b-2301108baf06",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f6d53f-49b7-448f-9d2b-2025e2f6ed9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3faa7b99-dd73-44d2-8d70-7fa1084c90df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f25f359-2150-4190-bffc-4356175f4827",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310926e1-446b-4c9d-a044-7b5e09038e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b650d6fb-2e19-4fcf-b392-943da74011ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31787b2b-0fe0-452b-aee5-51372e607697",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e3495f-df4c-4b78-87ad-8916917ecd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f73ad80-3274-474a-9ba8-148684816cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437f5298-5ad0-424a-a214-ca6984f7d50e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e543754e-330c-4408-ad37-954cb1bfaf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddee8109-4693-432c-9631-a2f30045bd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9305b636-b094-4414-a1f7-780c39a18bff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6595a312-1e53-4616-a3cf-779fecd492fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208d11a4-0306-444a-ad29-d32ffe6cfd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c263f944-aa45-4c5f-be8e-f40eb3fe86bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adb8345-e484-4b43-9c12-a733574b6b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3099980e-9c7e-414a-b4e2-22c09c32b4d1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474f8d5b-d619-4d7e-901b-b00726930617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3494c91a-2dac-48b2-8136-c59b26dd5062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf07a6f7-92d6-4fd6-8d87-d86f1cfde1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137f0109-13b6-477f-bc3f-122f443ea413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62427fec-d466-4eb0-b656-750e8dd6eb61",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44394f63-cf3e-4a54-a762-03f5c632a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a334a75-8575-4d48-b251-311adf184661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9e5ef5-4ff7-45ee-97cd-4fbe594700f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43451d22-8f78-46d4-b3ba-cb4f42e7bc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483da6a6-84e4-4097-85fb-57ff350c482d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4717eb84-ec9a-40f8-a569-2ab46b47c282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c963f3b6-d959-4643-ae87-074722adaaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38074dc-a983-4227-8664-8854b6ff06df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9474cb4f-dbd2-49f2-9826-198f3d080bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e7266c-8141-4870-8de9-c6af7ae50f31",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2e3685-0892-48f4-93f8-b1746a961121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c640ec9e-87f4-42a6-a302-d39982a066d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bed354-2ea3-459b-b7f9-51641fb29f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489999bf-08e2-451b-874f-cfc583592c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b309e0-3cb3-4e57-bcff-4d7108faff5a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5140e8a6-3b5e-4c11-8360-bacdcca0c0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983d98ec-e260-4bf5-9a61-0a2b56a188ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696791d4-b886-4933-ae07-3faabd5945c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb94a57d-9f39-4d08-9147-b11d9e1cc899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928b478c-fcda-4656-9524-e9785cba69b2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfe89d6-d651-4453-92fc-91d1682d91e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e747b0-30d4-4ad7-a8da-43179956c92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474ccf55-39d9-43be-aae7-4b1f0ad726f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4073c289-d3be-45f0-9e13-a5ef830b3c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9cd16b-4381-4805-b481-fb9cf7a656b3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95af8228-76b1-4cdc-bc1c-c21f8e4e3ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d670e34-b49a-4aba-9a28-9633bb44ddca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37758737-84f8-4744-9480-c77c8797a85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0447e55c-db38-4ae4-b3a5-798496568a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b224580-6630-46ec-a8d9-ee112c757186",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1309368-965d-43a5-8260-624398018eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a24355a-40b4-44b8-8b0f-af4870f7bc93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9d583f-03cd-47fb-b8b6-60e353e908a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cccbf86-3ba8-46d6-8aeb-272230c32e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8413418f-e3c3-422d-baf0-3d533329a47d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cded387-fd60-4436-84c5-cb03b5f4fe9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36cf94ff-321a-444d-b86f-362361a2085f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4b3571-5b26-47ac-a153-90a12bcdd3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0746dcd-9fb1-42a6-9fba-d8120e163968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0f68a4-5c3c-4332-bfb8-5b0587779e0f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcbbbaa-35cd-4dcf-b048-dcda6f55727e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9844c17c-5c08-4ce8-bebd-5962c9397829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b25bfbc-6d13-4fdf-a661-37de1494024b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de69b6b1-45c0-4932-8ca2-d5702da02b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebedfda-76e9-439a-a5e4-fe56bed593bb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fe1d1a-d00b-4564-92f5-cb446bd9c216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e67880-15ec-4d48-a753-005e331b308c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843126d2-5b55-4ffb-9736-b5c5c22ab61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9849f90-0a80-4efe-b8b9-7eeb6bfd68cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f9570f-9c3e-421a-8f9f-b72d7325fb9b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c829cc2-f25e-40ff-b789-7cd586bfb1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb29869-cec5-473b-be6d-4fe6c258d3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3c284f-ad15-44fe-b906-f930062fcfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5574f9-a3f9-43de-85fc-8f0342c323d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559ae4b-5649-4ab1-a925-a9e4051e3cb8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bd7f7f-6e4a-4ff8-8aef-033b7bc78296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdba86e-741a-435b-8a47-956498eaf859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacbcd39-f69f-4af6-b55b-ab244966f707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e471c535-a0f9-4746-9801-24091e325689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1629608-6f00-4fae-9417-7bd0ec14933c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cae40a-b67f-4425-9b81-0dc7beb136c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeaaca8-5cb9-46af-bff9-8293dc805283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c349ac7-fe4a-4539-96cc-25efb62bffad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8735251e-637d-425c-b0ed-c5b56da52353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673358bd-6167-4a4e-a7a7-46b51c1e4a8c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83739c29-5ac0-44cb-8cea-2ea7fbd65a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa78fdeb-be0d-485d-a93f-12cbb96713d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c04386-15ca-4975-8018-6c60c991a891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10256795-885c-4a1d-9d57-195625461ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1086af1b-a699-4d9b-b684-1dbeee0910b5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98dbcd7-c17c-4167-9637-0007bd2c7a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8695b514-910d-43dd-a4f4-59c102228962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5a79a1-b794-48a1-80ed-1583d8f8ebcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f06eff9-afcd-4938-8faf-fd23a9ce02a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e16d14-d510-4463-a29d-f2709de53c18",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a67cb3b-774b-475c-aae6-cd080afeec89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6b89d2-f1ee-4ec0-9fc7-447913dfa15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c56a02c-ae81-4c42-a94e-ff68f927a81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ac3395-b8e1-4b42-b61f-57e2d8d2c2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5551816e-88d4-4848-ad5f-02c573b5d0ef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219702e5-336e-4aca-a3c7-847ae78f46d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e2a427-23b5-4974-ad04-fc992558d96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06700b5-d678-431b-a3c4-f3719e519852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296f29d0-1f90-4121-a70f-42bd02edce7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e14fc23-02f3-4013-b7a4-49b851a1018a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460098b0-33f4-4266-a7ec-8286d7820ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1277f093-cc74-43ac-b928-e1201923110d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27706c3d-f4f5-457c-ab3b-2be6f00471bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26022b1a-0f21-4ce6-b255-f9cf7918aee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ca92c9-5bfa-4491-9f19-3ac45fa7ad38",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003ec55f-08d0-481c-babd-19b923284302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fe00d1-b775-49fa-9e81-281387852c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c545e2c-c821-4237-a3f9-3534461a1f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6395d56d-0709-482a-a16a-85420ff3a39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9f7f0d-3750-4879-80fc-bd4e28f05d4c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd349ed-750c-478b-a9a8-a04ef4302a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483bfde8-d2d8-411d-9ac8-eff2fed7dac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4141177-fdaa-4acf-b56d-fc590fb2d845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52caf2e0-b35d-4702-8fcb-cdec4146f65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa36fbb-9419-43ee-8b7c-89ced04be050",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05da5c46-dee6-4757-aaa5-cbe9c22086db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbe68b4-4088-4bf9-b774-f0d8ec07fd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fddc036-7df4-41d4-a9c3-1e10d3dabf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79465c9e-1b3e-4551-9dd6-a0afadd64631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2175e2-4cf3-4564-a00e-f61e7a970d6d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c3e89-aa9a-4850-a64e-78d1528d7ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5a2fce-60e7-45ae-88a4-cbdc64f5aaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290179fd-ff51-4048-8dde-caace0f47576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994a83c2-1f6d-447c-b531-3ee55e000bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e0d33e-db45-4db4-b65c-a0a9550e98e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb23761e-1735-4bc9-9e99-0db75ccf4a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4841414-af39-4935-a72c-6647e3974479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4411d6-b68f-44e1-9a33-4dfdc79c6bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3294bc-81a6-4d5f-a5cf-09773bd440fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e1ead6-a2ca-4e0d-9e6c-c06f04deaa06",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10773e5-4009-4658-b8f2-06d9e5548b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a633cf5-137c-4f46-92e0-8d7800dc487a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5f3992-7c6c-4f4f-a7e4-2a81a18a46f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe305669-2100-4fb9-ab5e-12e7a7ce9c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a310124-fc9b-4829-8417-34a84a2300ee",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d5b8c1-7213-4bdc-8ebf-f09935e9c507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276d47fb-dc88-44d2-a496-861843d51ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb3b72f-d22a-47db-901f-5dba864d8df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff0aadb-f7bb-44aa-bac3-df2623c71d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acec682c-9899-434a-9a39-f5a8ee46c854",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57338092-f7e2-4905-8bc1-25de135c827a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dee8136-4672-4912-b003-ecd2928fb494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93421e03-a356-43e0-b0b5-48de0bedb25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b023335e-0875-4c5f-b4d0-2604d56daa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d2bc4d-38aa-4984-a4aa-db5d0c31b473",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05861c61-5ae6-43ac-8898-d39fb99486a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207450a1-7ee7-48fe-8fa9-9bda0abba4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25088282-edc9-40d2-8975-8bf377079578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e99aa8e-30eb-4b80-84e4-dfb1de43611c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58694a63-f714-4b3a-9cef-d3a80eb4d1f0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69188ced-9264-414a-b315-601ad68409a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bb1769-0ebf-44ca-9787-7dd92a535200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec52132-8e0d-48d9-80d1-4b48e1a02269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bf8e8a-9438-40d6-9beb-b8666f00a731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e0e6ff-726f-4ba2-8829-331007c81aa0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f4f293-471e-418e-8feb-793bb5103a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ffac2b-3a1d-4442-a710-c58996e60505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d090ca-ac6a-4cf9-a0e5-3f2d2e97a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ec999c-1754-4367-b815-e92917315ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe93822e-b9c0-4ed5-bb66-16477c91cd9a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c8a067-231a-4f5d-8905-a67d567a8a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc83b7f-5c1a-4eb3-a1e4-7f8869618f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0e0ead-9d95-4394-9e3d-9ff39f4d82d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1e85e4-835c-4b07-86d6-7f9539f6f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dec1eaa-5af0-46c7-8e04-bfae9a764804",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5cdd41-10b3-4c66-b1ab-a392c79d3d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b731b6-af60-4545-8d3e-ec5c5bcc845e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f933369-cc94-406a-a06a-d714ea68c3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aee2d27-1977-460f-a6fb-21f55d83d077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005fd1ca-19af-458b-995c-7597138609f4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3977c0-99a5-4b62-9227-c6a1e13deee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d90f33-b67a-452b-8141-21a4ab4c9894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8731477-8f0f-4603-b7ce-e3c0b8679597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dd1e8e-7056-43b7-9e45-5e72eeac3f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265129a-867f-45be-9e6d-973e86075061",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf9ab9c-f8ae-4346-a0b3-392310c7a002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bd07e5-eb64-4757-acb9-8e068f237678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2cca1-21ea-40a9-8201-dbcdff7a3d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbb1509-4153-4c46-8e9c-a15b174496ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741a92bf-9bbb-4f94-a4a8-33bf2764cf0c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b7e98a-06a1-40ad-a75f-ff09ba240146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66115aae-51d9-4823-aa44-a7afca72bb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7f5443-e3dd-4584-8ec7-a9becf787f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bc6d33-7040-4c42-9390-1bfe4dd3a1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf93e636-307c-4a99-b74e-1e4342b318ce",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cf1adf-7be8-49c0-8876-5b8955e7f2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e567ca-579f-4978-94f7-7a8559131fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da18010-d537-4b6f-b689-6d34d877b707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d40d34-0afd-4d75-bdd3-54d9ee1356bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fcf688-4767-4c31-b624-33ab1668b9c8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55a5d24-0e5e-4606-8ea0-8c9a95c03a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9090b572-82b9-4ac2-9028-edf7a9ffe19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3426fbe0-c170-4130-b6a5-83d3d67474ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65673d8-52b5-4832-be0e-46696ff5eda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad76561e-b189-455c-8e48-8cff83549693",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9ab136-01b2-40dc-b823-c9137d6e75eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c1a71c-731c-4f8a-9764-9c004d0088b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1818489-1501-4477-9c36-9a742da2b40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28222143-e7d7-47b8-8980-f07e1048f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb50674-297c-48ce-9643-a9bbb7f38e31",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d6c8f9-99b7-42a3-8bb2-d2525413e3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45cff6e-2251-4743-8300-2d78a9a00c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace5daf2-3e16-48fb-ac33-857ad9d4abad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cbc0a2-c7c4-43c0-8722-d784be145c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48198bea-eaf6-4339-b7cc-077059d2b454",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff1a875-3985-41e6-84a6-7d052bb2ffa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74bd2ef-4549-493e-b792-8a0d98a43127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e197a91a-7c8a-498f-a58f-4d447424d2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafbf05f-1730-4492-ac8b-a98e6bd0fa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f45e34b-20ab-48cf-a827-ec57ad86bb80",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34929735-8b0b-4dc1-99f3-404ed1cb6f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99a736a-4314-4859-8cc1-41f18dfcde45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a46465-80e2-4bc5-abf8-8603f8ef9837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a09c31-7389-4436-8179-bbab2f26f215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af167b04-95f4-4d80-9011-142c7333afbc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c6899e-7774-46a9-b06b-e4f3c6a3de0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddffb1d-aaed-4016-aaef-1644acc15a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de211d0-ab20-4c4b-ade2-6e0bd427e2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92febcab-2cca-45f6-9447-d49b8324422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc9f22a-bfd7-40e2-8a1b-0081cd3f6998",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8bf23-a98f-493d-bebe-58ec3f3c3845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77f8a5d-c9ed-475b-b36d-ef01d6ba9251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190a8897-f747-4ac7-ba9e-2b68ed568e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454b0a39-c4b2-4b08-af13-6d227042c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f0be4d-fc7d-4d96-8e14-d23e79be3707",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae744e3e-9fb2-428c-b8e6-613ed744112d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94bb6a3-f6c8-4efc-b378-69f4e6837079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9681bfc1-dbef-4db0-be30-ae6503e03603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c55c19-28e4-4802-9977-5b32f83eea10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b173f6-9deb-4cdc-b94b-51ec78ed248e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f232ff82-e919-4ff0-8715-e0a603a38783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee3b4e2-6ea5-4fbd-ac76-dc1db4082ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a884663-9495-4277-b435-04a72156116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ab3484-da06-47a2-a07a-76c4b89a3ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640ea283-1c14-4855-a148-68c46f11d5e4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcae8b9-ff04-4ece-9f20-1b2d0ab85c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debefd26-24fa-4803-995d-09b46bc8f650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e489f9-72e1-405b-b698-3f6c98e7b244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4bc426-f8d4-40db-8067-3959d1daad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37d082d-67af-4f55-90e5-97ccab8bae65",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f173b73a-cea7-4d6f-86a8-74deb39c60b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865ee7b9-2221-4a2f-8b29-4ef2fb03e281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983712c5-1feb-47a9-9e54-38664f1b955f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4feddaff-28d9-47c0-bcaa-b997bd78cfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a902d133-cc62-472b-9356-eb8f9b324ba9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94efd46-28b4-422e-be77-0c9c4f5d1f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e975941-cf3c-40e5-82a5-94fb765eb90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0cd5ae-744b-466b-9592-909a99b6bb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f513ca-5a8c-4d02-8739-cd88ff8aee59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9410dc0-541b-4d02-a9d0-98b623ad6b26",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e4e6a2-b143-4d62-9261-9e426a024ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2048c6b7-0c0d-412d-a3a1-ec6229fdcfd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6b4783-6884-45a1-9f4c-9348e98d90f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc7ea23-a3c3-4e03-b830-4f94c181ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a40524-613e-4852-904f-10a3148610dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b369b4-e337-4a37-ab06-85c6d6ba5165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cf3231-d049-4441-96ef-94800edef000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47662990-8eee-4f04-a7ce-6b894ac94120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed06940-7410-4c3a-aac5-d2db663f8586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59f00c1-9895-44b0-8170-bb7cbe268414",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20f766f-ea21-45ed-810c-bde70d5a8a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ad1a11-fefd-4871-af65-7bb3752b80a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a68cb5-938b-4009-88e3-1be7c95948e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e380544-308e-4775-b4ed-542576e6c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7527c7e-f8d1-45ea-a132-4c0b4340060d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d6fd93-bd6e-443d-ae5c-96b38352ab40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d126309-b4f2-4f62-bbd4-454270ab28c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2efce50-cc08-4cec-a71a-4bfd7a6ce2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1304f1e1-adc8-4680-9a5e-b2ff0f437e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caee9fba-3a48-4b50-ad0a-5f21f01a6a29",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31fea0d-31bf-4ad1-a386-ebb0d46c02cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2968f5a-3091-45fd-ab72-79dcd417b1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c756f9f-a806-418b-b8d1-939d91dcb2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3300889a-aae0-4a5c-938a-6d68b974db59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dc3673-5804-4e7f-8df2-ab7728595101",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc338b7-75cd-4e00-a16c-1c88d8e5cb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0371dde5-1622-4007-9253-a7977219b839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abea346-a49f-4df8-b6d9-b2bc27247523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e274cb-f70a-4555-9863-cb4339e1ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa7f6c4-36e8-4c44-a1e6-feecbd5a4a4a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5bd0c1-5c7f-4702-bbcb-19cde176af65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f576a94-6f98-49c3-ad0e-175aa2d2955d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7d701c-c0f0-456b-b0ab-9b1ad2e5f075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9698d82a-0cf5-47fd-9da0-25e1d6111a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1bd003-0ffe-495e-a621-b7378943c88f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde07b7f-2444-41dc-8718-9ea39a728e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e054e6f9-db30-4c8a-bbfd-6654a45f4363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea468a8-e9b1-4a78-b5af-ffd28cb2206f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0beb73-317c-4875-a6f8-952c4aff8876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc686f9-91ad-4373-93a8-b820672c7c67",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188bd725-d792-4277-afec-57f5f99649ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e200f1a9-98de-43ff-bde6-7b7e338df8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572b5a22-5244-47e3-ab6f-a3ac13759c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabd414e-f329-4baf-bc3c-b41b1da10c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f18a2-2578-4862-b6ce-63f0f5c02ec0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b55505f-b8d7-4863-84cd-7b46cd10eb3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47899e40-276e-4395-a191-53a80f1ae699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497f1c87-52da-4979-8584-4218c6d90be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0411eb1e-a12a-43af-a1ae-1b1a6e6dbe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0a301a-0a9a-4c3d-8721-da58c5e00ea8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca184b20-5535-47d3-88f5-4679f3045656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62fac8c4-4f36-4881-84ab-454e1834aac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcc823c-8bb3-40c1-a823-9c0a97532bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0b15bf-8261-4619-ad3a-894599d5a4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540030ac-d2b5-4dc1-9357-aed5d328aafb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b771e281-9ae2-42f7-bd4b-a3e8bdc59af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e298f68e-ab74-4350-b9bd-11cee5c64784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d8b746-5434-4d50-88a7-4ba1057dd11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510759d3-ea61-407f-99b7-60f72f6451f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab561e-d2dc-4519-af06-eb232b1b810b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab2857b-e287-480e-9a16-469121ec1290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbfe1c5-44aa-4ba1-ae1d-2163befad891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812ddef3-fa64-494b-bf91-da5b23d1217c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d31ca95-98f8-4abb-8cc0-48b9b8b54c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93231b95-4432-4ca4-9f94-57834c40c243",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38e314f-74db-4d49-9761-9324eedf0700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e39d962-52f5-4b18-b442-bbd62a569e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d79aec-cb21-45e8-9e38-e242959f9e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0fb32a-8c5b-4f2a-80a0-dbc6efab1cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bed79c0-4be1-4344-87f5-16432dcd0aed",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d2941-a4f9-4214-8fb9-9f7d15d930a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09a15eb-4006-4c6d-aafc-c72716355f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f651191-4cc1-4fc9-bf96-d9b69ae258bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c9fe2c-28a7-4efd-bbe1-c6e6d5aa25a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f640765-ef76-49d4-b522-78114e1025a8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d58c65-d805-4b6f-b637-acddf0b38fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb30a2b7-8169-43f6-928d-a711fff87852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373594c5-8284-4ed6-ac78-2a5b22b3ccf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcf609e-cf05-471c-a8f0-8211d8b7053e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e94d09-7b09-42d3-996a-f5a4640455e2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed4cd4b-6e8a-4318-b72b-8dcaca745c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2616ebe6-6b00-47b6-9f47-d632d59fb512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39645b31-2901-4dfe-b27f-6cb27d7702a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb42479e-cd57-47ef-90c5-c0892ea9403f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32db4bb-a0de-4fa2-ba10-1b8c187f6d38",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82851b37-2595-42ad-9586-62ace8e50853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691e16a3-457e-4d57-8baa-ca1a975d8726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b4c967-91d2-48f4-a893-9e40f2f7aa6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c485727d-8832-4c1b-b52e-5956c785ab24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abefc682-4622-4d3c-812b-edc2db69b32d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8855d7cc-4ddb-474b-b7ac-925917dd7122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4993f09b-c2fd-4c47-ae35-23684e65aab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2441851-70ef-445e-9539-35e6821740aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21b09d0-8c70-4631-ba82-41c1f73e9bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad868007-a2c7-45bf-93dd-e52f036d8fc9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f3591-78b7-44db-b1ba-15b2473e2356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8dfc3d-c83e-4ee9-bfb7-4d47a244b4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31926b74-b8ce-44f4-ad86-76d2c881a2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b854f90-d418-4dac-b290-ba8a4f66f6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da12daf-9d1f-4b62-bd86-8ec80bc03982",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a2bd58-c85f-4fa8-9946-d060b11a6385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68279c21-083e-4b42-9dde-874e0f26cab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580ecec6-7b63-4194-9996-afdb9ed6de57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c7e41c-256e-4990-8419-0f23876bba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c617f4a-bfe7-4eb2-9825-f14bd7eac294",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c77b414-aaaf-4a5b-9ac2-5f3410768517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8519f186-d813-4585-adc3-3549e5718169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaa7df1-79c2-4365-a152-e5b97fc27d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df24dfa-33cc-47ad-8603-604f6cba81c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704a0317-2899-4432-8e1c-b74b43712cec",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46913839-8edd-4e97-a480-3a39437f180d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb83b8a-8b20-46c8-b551-eb755b4805e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c2fe7-e93e-4021-896e-82af91057301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a8dffb-84c4-45fd-ad72-026ddf67c872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d4fe7-a01d-4848-ab55-9a94ef1b3ea5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77246dce-e873-475a-b606-0949bc509768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33365c42-64b4-469c-8285-5ec09feedc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d0a8c-9601-467e-8f7b-78dd98d7abfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a962413f-95ec-4d53-8eb5-9cb36688a590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d299e10-78a8-482c-bccf-08dd83a51c5c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52c4ad9-7084-4f0d-b4a6-1e73eb2920cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b29726c-cd83-4ad1-b5e0-474dc1075afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a9b3b5-47c5-4fc4-af56-1db396d3b6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb441701-afe9-48fd-a693-e5f75de84f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22b6c2b-8019-4600-84b4-7e96756621dc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2588f21-80f3-4f30-905f-50f245b563fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6760fb-74b5-4629-89f0-62bd776d9bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322a5dfb-d60f-4953-9b86-fef2836f852a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d332eaa7-054d-4260-9d94-bee03625f101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a542372a-0754-4b3f-a6ef-79cba686f8af",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f995c2-0880-4686-b8a9-50d0f92bb9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc59c61d-5f1f-417c-8db1-96e9343d1d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e732d667-64b5-48cc-bd92-7295736b4171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc25358-0f6a-4144-a95b-f479e44b4410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f2068-a090-43bb-b046-852abcc8d66d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7605c8a5-f469-4027-8f54-a4868604446d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696efe9d-e1b5-427f-b213-b96fa4cb0527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db02da9e-9bf1-4c63-bc97-329488265729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a653da3d-1194-4e13-a331-15e564977e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806316d6-8492-4035-91a2-a1564565a64d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21619cb8-3865-4240-b664-7873bf33d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed444fb-88c8-45f8-8ff2-7e59375dda61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b44600-a86a-420c-b0fb-6cb2b54d28d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbdbe85-f7d1-48ba-9548-885a22aebfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3366cc-ea05-4f95-9cea-d26d85013bc1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05a02e8-7aa1-4608-aaf5-0bd74b75e324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5237df7-e388-49ea-9930-d992f7bcf760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6526d64-48b5-4cb0-9e09-c418202cf420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee5b426-cae1-45cd-9c51-da46d55262c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3126ca38-68a2-4bb9-9962-5ab398cd76ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30068c93-decf-479d-8dd7-bf454bb5d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850b5a02-8839-471c-acaa-6b967465aedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1316c5d-ef9b-49ff-9c11-2519a107ed8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5049d9f-8f50-4e3d-b9a4-30d1cb0e1799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bb3bd7-07ad-4bf3-b675-bf4363e73b35",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33b61ff-47a5-4de2-8014-2f2a3153460f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01823249-913b-402e-a35e-29a9a85fc27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00f1232-9131-4d34-a6a3-9b481b05337f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b138f472-4684-419c-b8f8-7606111ab79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b854c4f-5025-44aa-ae15-170a05552765",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9653c881-c566-46e7-8f8b-1e80d4b7b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f28173-24c1-436f-9c83-6eae09c9ae9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a327e3-7a92-4610-ba96-746b740bbbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e83376-c2ce-40e2-a49b-d4eca2f5d81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0bc03f-d51f-4d98-b744-678734c63046",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f85bd5-3af6-4c2a-96fd-f1ec21560901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c103d0-79de-478c-9cfe-fce8fb602b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef833bc4-e363-482c-a2be-96fa5d94427f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526f5ad4-431a-47e5-bc89-edec03ed2e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab104b93-fa0b-4fff-a799-9cfa2a9e9cca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58196b68-dd5a-4b39-a131-eba02e0bff96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0777bd-e71c-4383-af70-0acd9a2f2d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b263db-ec81-4234-84f7-186b03a33031",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38bd39c-9561-47bc-bc13-9d42c19ee7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93202ddd-1063-460e-96a7-123d93f99a85",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1e43c0-ba2e-4736-bee4-7c917d229870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db2efcc-fcf1-42d1-a370-000941de535f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c21f3-e26d-4d6f-8748-04362a1a9ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc218dc-6155-4bdb-a215-7de895bbcbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e1a85-f7ed-46be-8b85-f696b3ec0407",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded263e1-66e7-448b-8d14-15a1c3849c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306e9f57-866f-4228-8a65-bdc14d2f17ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889f1735-5605-4fb6-8084-5884b2d82144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48c8409-d2aa-4ff5-979e-3bc3fc8b7ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670c66aa-2efa-4d7c-a66d-245edc61982b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18955677-510f-4ef6-a06b-c4d4ba822518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a839a6e3-35aa-4909-93b1-f8bca72748fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b40b3da-f43c-4404-9118-4b312912698e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edb6840-f498-44c6-a914-74b900d6f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1c823b-6ef9-4021-b670-618a9164d3c1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4dfe93-93bf-4e9f-b359-287156b8a9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b04ccaa-3fb7-44ec-b7dc-c766faaef2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a38618-58be-4760-9710-b0e96b9048e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fcba63-e1ac-423d-b146-39b173cb55a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9683192d-af48-45f1-8ecc-aeed6896552f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeb596d-b291-44c3-8dee-514917a7306f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369ae09e-b353-48ca-a8d9-c834fd841f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49508317-3069-4ebc-9cac-21dce2b13b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3c5f6c-bdf6-43a9-951c-c4d6c84642a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014f7031-4933-48fa-9ada-26e74f01aa15",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc12e7f-876c-4c84-ac8d-036697fbc805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ab0705-3898-4d23-bea4-cdf29ebac12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190b6d6a-c368-431e-b94c-790c5ca3bf0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd76ab05-8a2e-4484-9f4e-ac84ddb5f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23625499-391e-49b1-b6fc-fe404fafb613",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784b6d24-4837-4a00-b310-4c3636e7be5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8375303e-0769-402f-baab-547783f10555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72853a-f8aa-43c2-8b9f-7587fcf3369f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4067b606-1d01-4a0d-89d9-a40cadf25a40"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1018eb0-f296-4f07-8cf3-09ea04b842e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc83b605-119f-4fb2-bd6a-3b38b19b71c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8b7bb2d-4130-4781-9397-a720a2c337fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30c18108-2d4c-42d2-9437-a10f84ea227b"
                    }
                  }
                ]
              },
              {
                "id": "5c63be78-a706-49d5-9085-5b4043ccfd16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23377059-be51-45b3-a13b-cde646129f05",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107ed06b-e8af-4f41-8925-227ffa03fe97",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ce8d5731-a799-4667-8c97-cbfebd035442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c518caef-055a-48a1-be59-ebcf54113612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ea1f04c-963f-459c-ab8a-1b2f34315b7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ea9c997-dbea-40c7-859e-d55b586a877b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f63be209-8765-43fc-9c24-adac236be2ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf2848ff-b4b6-4d3d-8dc2-10ea81488979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61f4e078-82ad-4cae-9bbc-59e90131a5cd"
                    }
                  }
                ]
              },
              {
                "id": "1b6fb6e4-24b1-4af2-ab93-dd3b0d5b5bd4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88a330dd-3313-48b8-ad0d-b7bd123cfbc9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d8a418-f9f5-4dae-b0f4-b446cff1d3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c78be752-19ce-4dac-9324-d199e3b6f418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5f79df-7fab-4069-a8fb-c5344fa40968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb39ff3-1f43-4d68-8da0-731ee8221387"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "768f81d9-8ea1-4168-afcc-e21d1d291f48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af0c0f38-e374-4291-b21e-536798a142a3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9ad7e53-4591-454e-a64c-09871df54958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c9109bc-8b30-4a30-88c7-735f51e462fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22ddf829-b765-44ff-9057-a04a3e2d6e06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bccc5b3b-da5f-4d3f-b3e7-d3a011ca802d"
                    }
                  }
                ]
              },
              {
                "id": "02228330-9ff3-4670-b020-4e954f95b126",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07f7b4d6-2763-40a4-b90b-bc76e0758c33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0c4e44e-3c10-4624-b85d-71189bfa5c87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95f4df02-f43c-493c-bd7d-69dbcb617a4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2013512-214f-4dc8-b79f-9ff17ce3ccba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be29041b-1cf1-4a74-a7c2-2e1e24a64435",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "57dc94ae-3e3e-4fb2-9746-a6cb1ec358e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecc91b0d-dd6a-4034-bda5-89d821483700",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abd6769e-2290-4311-b930-432e64d8636f"
            }
          }
        ]
      },
      {
        "id": "014a5b7b-d5ed-450a-90e2-16c65d18e303",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a8da386a-4ee6-4110-87f9-df89c6df63c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d24b447e-d7f6-4699-a832-7a8743d6981b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4856f201-2654-467b-a9f7-cd521178452c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167cf450-2d59-4670-8e96-b5012b7d51d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1cf221a0-ea84-4805-b4f4-67c97d0df4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b771fed-8c4f-4034-b50c-3b064d991680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "611f0651-3d4d-4f80-9802-00b99c9da66a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "168c7d77-56ed-4f6d-9f9d-1cedaf589b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98f89938-e6f6-4437-b9b8-0d762ba71c64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c5e255c-3474-4da0-9795-7ae3df8d264f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea88d47b-ce48-4f00-b3d8-522bed3f200a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ca915e7-3e56-4557-9efa-2cff0c44de3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cdf9d0cb-dfda-4bb7-8155-102683fec55f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "485bdc01-d779-4a38-abcc-7e416936d561",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8db5202-4950-47b6-b56e-2668b7f9485e"
            }
          }
        ]
      },
      {
        "id": "109d3597-9035-4f47-9404-2bea4f9d189e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dfb4b033-3844-415b-b5c5-9cf948632062",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14bfa8f6-f0ce-4426-a396-fa8aa69a079d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cf18e29-da44-473d-8aad-43e8cb8fd146",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f75df-2a5d-4807-b2bc-b3e119d3b89c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1c62d12-3697-4e8f-b73a-9487decaad43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddc7761-5bb1-48c0-a7f1-5684cc8343ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfca3d0e-d106-4f90-a78b-faa8f655a92a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6cc3fd2-8acd-4c7d-8dfc-58ab32b584db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15474376-2c51-4588-a4e0-4ea0923eb3e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14fafefc-e02f-4089-b3dd-5070c3c05753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f809049e-8cdd-44f0-b68c-c272bdc21cdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a015364-9623-49cf-99d5-9d3632e94be2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "263dd3cb-93cf-407d-843d-b8b839a4a88f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f7cfc05-8f7a-4676-bbb6-6fa1f4bba132",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6e51235-874f-4b54-bef6-7b28fc898515"
            }
          }
        ]
      },
      {
        "id": "c7006ac0-6610-4c07-976c-2bc6abd53e38",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5ebf0b0d-331e-47c9-95e7-50ad0df29476",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3bc5ac3-001f-4001-8220-a2b7795b9e95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa213bf1-54dc-4fa8-8010-d4b3eb664279",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a49539-1779-47f8-bd32-31c9f6be2e10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8617224b-ac67-4a1e-a216-ff9be7000963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132927d0-7688-4316-ae05-d6ad08e90ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f21506fa-5d56-4e68-ad4a-ebf5b0920da6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d7354fb-c11b-4e77-a430-0ae5f9eac03e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f89de5-521a-4f76-a874-b99011ea2e67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7c254d3-2b0b-4192-9ab6-61bd63a2eeb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe92490f-f47b-465f-903a-6d5fe55dd9a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee10dfd7-9c10-4826-841e-b809fde8cfc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c06987f-8521-491c-8683-ab75b66bef1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdc6c7d6-28a0-4aef-897a-30fd4eeeecfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13f1f4a5-7c8e-4538-8fc1-c0dadbf0ffb6"
            }
          }
        ]
      },
      {
        "id": "d7b1c65d-d59d-447d-a50d-1f612b7d328d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e3d445e-9bdd-477c-be3f-c2e573749042",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d8abc0b-de5b-462b-b278-3e56848b9d0b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d739c443-f395-4ecc-8bb4-671ad529686c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3c04007-0571-471c-917e-f173314e3331",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f469f40e-fc83-4c97-81cf-47f1bd8bf591",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.91197183098596,
      "responseMin": 10,
      "responseMax": 4872,
      "responseSd": 394.6987565830738,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693960348722,
      "completed": 1693960385850
    },
    "executions": [
      {
        "id": "fe854704-9aa8-4727-8fe1-74e5e2910c0b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fd236067-eae9-4480-9905-ed31345ed8e8",
          "httpRequestId": "14549487-7395-4439-934f-0307f40ccf9e"
        },
        "item": {
          "id": "fe854704-9aa8-4727-8fe1-74e5e2910c0b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6b673908-e102-4e34-8029-16bbd92f65d8",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "5492723e-9420-416e-aab8-b212cecfc1f1",
        "cursor": {
          "ref": "35dd7c14-79b7-4082-ad3e-1c51e9eb843c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "50a3be8f-d653-41ef-8156-860554397cc5"
        },
        "item": {
          "id": "5492723e-9420-416e-aab8-b212cecfc1f1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dae10382-6872-4387-be0a-0792c4cbf64f",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8ae779df-0613-400c-ad0a-9f17f27975b9",
        "cursor": {
          "ref": "b0a1d533-0ce3-442e-bb5b-4acfd0359612",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e1f2c5c5-cfa1-4725-a6e7-f01fc5d2f59c"
        },
        "item": {
          "id": "8ae779df-0613-400c-ad0a-9f17f27975b9",
          "name": "did_json"
        },
        "response": {
          "id": "494c9553-a64a-43d9-b68a-c53272b57cb1",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f23a78-1dae-4e96-b8a6-03bc2e2cffdc",
        "cursor": {
          "ref": "a962d5a1-874d-4751-88e2-cf13e67f884b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "05bd72d7-4d85-49bf-b46e-cc16d4c8edf1"
        },
        "item": {
          "id": "09f23a78-1dae-4e96-b8a6-03bc2e2cffdc",
          "name": "did:invalid"
        },
        "response": {
          "id": "3f320a5e-8f6c-461b-a752-fb211e45ac0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 769,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f23a78-1dae-4e96-b8a6-03bc2e2cffdc",
        "cursor": {
          "ref": "a962d5a1-874d-4751-88e2-cf13e67f884b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "05bd72d7-4d85-49bf-b46e-cc16d4c8edf1"
        },
        "item": {
          "id": "09f23a78-1dae-4e96-b8a6-03bc2e2cffdc",
          "name": "did:invalid"
        },
        "response": {
          "id": "3f320a5e-8f6c-461b-a752-fb211e45ac0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 769,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd0a710-c2dd-4d9f-bbfe-56b669fefc9d",
        "cursor": {
          "ref": "e3177b61-49ca-42d5-8d3b-1ef97e8574b5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0879a41a-92f8-4f96-a229-46118d498e6d"
        },
        "item": {
          "id": "9cd0a710-c2dd-4d9f-bbfe-56b669fefc9d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1ab7da06-54be-4142-bda0-c3428ef09a57",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd6838a-5f21-4b90-964d-5b7b1a04f739",
        "cursor": {
          "ref": "f4906de1-2445-4f42-97bf-51daad5fccec",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fd6ceb28-ac15-460c-a755-30518f1ce782"
        },
        "item": {
          "id": "cbd6838a-5f21-4b90-964d-5b7b1a04f739",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9d6be590-acae-4087-96f4-bb47c85dcaf5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dee4f14-1df9-4306-bc48-aadda9196cd6",
        "cursor": {
          "ref": "3879fde9-dbef-4e22-a2fc-897621022aa4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "425591b0-645a-4772-9207-80f5d0c1f107"
        },
        "item": {
          "id": "9dee4f14-1df9-4306-bc48-aadda9196cd6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d7d93bb-d7e5-4e82-a346-11ef48176572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb311854-4d7e-41a2-927e-7216e9a6a7fb",
        "cursor": {
          "ref": "eb1ab0ea-8adf-4cda-8e14-8eff21bc078d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dbca84ad-0487-4bce-84e4-10f75bd1d112"
        },
        "item": {
          "id": "cb311854-4d7e-41a2-927e-7216e9a6a7fb",
          "name": "identifiers"
        },
        "response": {
          "id": "033241af-0bba-430d-b036-42d34625df09",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48748f50-19d0-4971-ad39-ef6c359935ad",
        "cursor": {
          "ref": "4b4c9b23-23bb-4353-b591-dff8bd8d8116",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70634b41-1dde-4a69-8de8-764e53f5de30"
        },
        "item": {
          "id": "48748f50-19d0-4971-ad39-ef6c359935ad",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "59cc77e2-aeec-4a40-9d2b-6c683ef22da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d33271-afbf-47c9-b950-6f921bcc4658",
        "cursor": {
          "ref": "feda64d3-e77d-4fe1-b568-c1b9a83badf9",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "948a56c9-d853-4459-a2e3-9f62291917b0"
        },
        "item": {
          "id": "d3d33271-afbf-47c9-b950-6f921bcc4658",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81a0d487-8f38-47a1-a89a-66a6f16afeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2d9a5-fc27-4319-a8f5-77f80143e5bf",
        "cursor": {
          "ref": "abee40eb-78ec-4bf8-8395-63bf6c1cc634",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a92fa32-293b-4ab3-9474-2a3cace7b5b7"
        },
        "item": {
          "id": "b1d2d9a5-fc27-4319-a8f5-77f80143e5bf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "121f3a8d-c1fe-4b16-acc0-c132f99289f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a936d7e5-b0c1-43bd-91d8-f951889933f7",
        "cursor": {
          "ref": "37cdca66-779a-451d-b051-40556ab9f487",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3daaccc7-1e8c-45c4-8427-ac0b0d243576"
        },
        "item": {
          "id": "a936d7e5-b0c1-43bd-91d8-f951889933f7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61d5ec7f-7df1-4a04-893d-72734bd26cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3026cef-49c1-42b3-8ce4-50385b5ddff6",
        "cursor": {
          "ref": "c678a353-4c7c-4567-a23c-50593945dcaa",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "77d03abd-6eac-4083-bbfa-b3e13051e583"
        },
        "item": {
          "id": "d3026cef-49c1-42b3-8ce4-50385b5ddff6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4729d4c5-eb03-4c30-b77a-ba76af84d210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f050006-222f-45b0-999b-98c17b186d32",
        "cursor": {
          "ref": "98c6ff3a-9b49-4672-b75c-f0b1e82f730b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9cd89fc3-9a8b-4b29-86f9-f216617077bd"
        },
        "item": {
          "id": "4f050006-222f-45b0-999b-98c17b186d32",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "03206a7d-da93-4901-8a14-d1d3a727cc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d3e043-420a-418a-876e-c71e68e9598f",
        "cursor": {
          "ref": "0296d20b-1c86-4db0-9c4e-bd99f765d014",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d52a8a1e-b1a6-4771-87c7-8c78552542bb"
        },
        "item": {
          "id": "19d3e043-420a-418a-876e-c71e68e9598f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d1817ad2-993e-4475-964c-7443625a70cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcedd39-bb5d-4638-b84b-3827bbe69834",
        "cursor": {
          "ref": "f51400b5-93bc-477f-8bf0-ab16e5be4da6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c722a11d-1136-479f-a056-37c2df37cd2a"
        },
        "item": {
          "id": "dfcedd39-bb5d-4638-b84b-3827bbe69834",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c2361226-7f60-44a5-88ad-5efe2dfec44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb46894b-d1c4-41fb-b681-d7e0c3962868",
        "cursor": {
          "ref": "359103df-cf10-4571-a706-bd20f95ceb02",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "92e7f306-dea8-4ff6-a523-97985130dd93"
        },
        "item": {
          "id": "fb46894b-d1c4-41fb-b681-d7e0c3962868",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b7d22576-fce3-48d0-8bf3-a622d0b77044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d66c95c-939a-48a9-933d-f3809becc23d",
        "cursor": {
          "ref": "27c446fb-adb7-4c04-a44e-f075cc5bb1ee",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "76acbb64-c171-4f76-8625-9eaf3d1c4bc0"
        },
        "item": {
          "id": "4d66c95c-939a-48a9-933d-f3809becc23d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cb031e82-c5af-45f6-92b2-06d1b09c53fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b801a-7e86-48f1-b7e0-6bd75c93924d",
        "cursor": {
          "ref": "72627aec-afaa-49b0-b85a-9c3ea0aae7c8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a00ace05-6678-438a-b03b-f9ed0b63bcb6"
        },
        "item": {
          "id": "7d5b801a-7e86-48f1-b7e0-6bd75c93924d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f48c97ff-3b61-44d9-8340-d8aa432fa2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c745a18-47c7-47e6-b39d-7f2bb9fa27b2",
        "cursor": {
          "ref": "a7898dfb-8e8f-44ea-855c-adc8cdcd20d6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7faf4ba3-0c48-4cbf-8d0d-8b452410d285"
        },
        "item": {
          "id": "4c745a18-47c7-47e6-b39d-7f2bb9fa27b2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5c43692c-1e62-4806-b4d2-275037fbb727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b16169d-3b93-4923-af78-a7d46cd32e42",
        "cursor": {
          "ref": "2ca47a4f-7a3b-4fa9-bdd7-04fc60812a3c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "96d42701-2231-4334-b475-b2b1b98e5de4"
        },
        "item": {
          "id": "8b16169d-3b93-4923-af78-a7d46cd32e42",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f1321da9-2414-43be-8edf-987c18f5ba7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba52562-4c8e-454f-a882-5a577c84b5a3",
        "cursor": {
          "ref": "386822ed-db71-47d7-b162-2f1c72d23b07",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "47ffc2f9-b5c4-4510-b239-ffecf855792d"
        },
        "item": {
          "id": "7ba52562-4c8e-454f-a882-5a577c84b5a3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f23cb1be-f861-4928-bebb-c03bf3d090d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabbf047-da6d-41b0-a616-58493533ca79",
        "cursor": {
          "ref": "297cadb7-ccae-41ad-8816-88841b045987",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "864a28a6-869a-4b77-828b-c13512d79d3c"
        },
        "item": {
          "id": "aabbf047-da6d-41b0-a616-58493533ca79",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1acba267-5590-4faa-8d97-e74b61b5c6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a1e6de-c98d-4af1-8362-d89e22333bd0",
        "cursor": {
          "ref": "d534c48b-121b-4e45-9e1b-2ec0cec78941",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "50dcae90-7bb6-4bfd-921d-e1dbf6a72516"
        },
        "item": {
          "id": "d7a1e6de-c98d-4af1-8362-d89e22333bd0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8d8bef8e-06f1-4433-b3cc-41c5db3e0002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d5f7be-2450-4b0a-8070-a075ce2c286f",
        "cursor": {
          "ref": "bd12af4a-a5ab-474d-8bb4-cae47ded09cd",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2a9d97f5-83fe-4ea5-ba9e-5ffc0c503621"
        },
        "item": {
          "id": "86d5f7be-2450-4b0a-8070-a075ce2c286f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0ea7db2d-2ff5-4ab3-81b4-fc176d050d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad86123a-5465-440f-bcaf-081c9ce4588a",
        "cursor": {
          "ref": "27fc5511-fe96-4f64-a70e-b0c6a15131bb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7aa35ca0-8624-464d-b2b6-3a3efc1ddaf9"
        },
        "item": {
          "id": "ad86123a-5465-440f-bcaf-081c9ce4588a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af0fa66f-3802-41ce-b50a-e068a33d7379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162819f5-9827-4d94-adbd-ee8007dbf0fc",
        "cursor": {
          "ref": "ad5d6384-5079-4f0f-93d2-2ff5ac3319fb",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b276509-a536-4bc6-9cb6-6119cad34ede"
        },
        "item": {
          "id": "162819f5-9827-4d94-adbd-ee8007dbf0fc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "96218070-d33a-4f0d-ba57-790e58b06b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f46abdc-0903-409a-b8d0-64e92845ce58",
        "cursor": {
          "ref": "9d39674f-5389-480e-9bcb-c384b2f6f319",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "567f61b3-ac29-4558-b108-539422deb88b"
        },
        "item": {
          "id": "5f46abdc-0903-409a-b8d0-64e92845ce58",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "019474d1-4686-463f-89fd-60e6997d359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d671e24-76fd-47f6-b57b-a3f01eb96af1",
        "cursor": {
          "ref": "87eefaec-f577-410e-a98d-d8d8da5a6481",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9d2d71d6-72ac-41a4-8c0d-0239b116823a"
        },
        "item": {
          "id": "3d671e24-76fd-47f6-b57b-a3f01eb96af1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7c8713a7-0e99-45ba-9ea1-d97017f6f4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe27dcc5-ed23-4343-a7a6-bce4fd0a9995",
        "cursor": {
          "ref": "1996c259-d08f-4dda-8b12-80fca77eb389",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2a74f5f5-5a0a-4641-8d78-68b190145470"
        },
        "item": {
          "id": "fe27dcc5-ed23-4343-a7a6-bce4fd0a9995",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c1d45081-5a3d-451e-848c-e7d617d5acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff887583-b83d-4396-8f6b-13bf7e118aee",
        "cursor": {
          "ref": "6ccf0f2b-9692-4ee1-b442-dfebafad3d80",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "88c89514-7522-4fda-917b-254deb627857"
        },
        "item": {
          "id": "ff887583-b83d-4396-8f6b-13bf7e118aee",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ab5428b4-9ba8-465a-90e3-62e6a6128b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b8187f-5e7e-40df-895a-21e9527ab166",
        "cursor": {
          "ref": "152c6bbe-fe17-48bf-9f7a-3fb245eb35e8",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "079328a7-deac-466b-ad50-ce9012488a15"
        },
        "item": {
          "id": "d3b8187f-5e7e-40df-895a-21e9527ab166",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "33cbde18-a2ef-4d6d-8223-e61e0832bf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5e0e4c-a0e9-402f-a14b-9d1cd81daf51",
        "cursor": {
          "ref": "cec5abfd-bd39-4366-83b0-ecaa0b622f04",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3619a713-d3ee-4e3f-86db-086ca09ed4c1"
        },
        "item": {
          "id": "0f5e0e4c-a0e9-402f-a14b-9d1cd81daf51",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2275ba7f-a641-41bf-88d6-a28794ad00e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fc3f7b-6079-4d82-9ab5-10560fe8215b",
        "cursor": {
          "ref": "60cdf65c-081c-492a-87be-3bc61efeb89c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0f7f25aa-afdf-4d4b-af50-34ba00b53435"
        },
        "item": {
          "id": "a1fc3f7b-6079-4d82-9ab5-10560fe8215b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85d47d63-0437-4dfd-8433-ecc1274d3121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7447456f-5081-469d-831f-778279e2e6f0",
        "cursor": {
          "ref": "c0e04cdd-a35e-47b7-bd6b-5941d6ed732e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3c6bbd1-35eb-4eb9-a656-78404098958a"
        },
        "item": {
          "id": "7447456f-5081-469d-831f-778279e2e6f0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5828f108-721c-4fc3-bddf-3d0b0a1d31a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38881e14-aca0-4e62-a52a-f0869072c20e",
        "cursor": {
          "ref": "aaf56d8e-3db5-443e-b34d-481364a98176",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b2ed84d3-0e6a-41ed-84fc-a8f2a0683cb2"
        },
        "item": {
          "id": "38881e14-aca0-4e62-a52a-f0869072c20e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "91ba1d11-5771-4f74-9430-b3e3f217a854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11b2004-eb34-4097-9273-25c648f957e0",
        "cursor": {
          "ref": "669d41cf-7d02-4bd7-bf18-6a3c5fdd64ba",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cc0eb3ad-1cc0-4c04-85dc-b21b831eb729"
        },
        "item": {
          "id": "c11b2004-eb34-4097-9273-25c648f957e0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "587dc210-1e6a-4194-8907-852e776442c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf80bd7-95ec-4416-b954-c99ea86512fc",
        "cursor": {
          "ref": "37deed1f-a156-4244-a2f1-9b6dee22e4f5",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2bd08345-89f2-4c58-8fff-cf4b1e3805f1"
        },
        "item": {
          "id": "ddf80bd7-95ec-4416-b954-c99ea86512fc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8bbf3122-caa1-4ca0-98a0-744fdadfa96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4f8bd0-1763-4361-bafc-34a17978aa93",
        "cursor": {
          "ref": "66da7939-15ab-4cdb-92ac-b883c50fa179",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "aa16364e-8c93-4e80-9549-629e557d46f2"
        },
        "item": {
          "id": "2f4f8bd0-1763-4361-bafc-34a17978aa93",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "82d663ce-89d3-44f7-9b07-822f1291d104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad1db0-9a12-456e-afe2-910a4f884f64",
        "cursor": {
          "ref": "b6cfff63-cfd3-42b6-998a-974f99e57166",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8a587949-3005-4f70-b9d7-8bb1e820babb"
        },
        "item": {
          "id": "1dad1db0-9a12-456e-afe2-910a4f884f64",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2ea4eae2-1e02-4dd8-b912-e6d461c101b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d282d976-0afc-467c-955e-e3d4442aabf5",
        "cursor": {
          "ref": "fd2fb67e-d87f-4fbb-9a62-dbd0f0e1e83d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7703250-f490-48cc-9d73-8740026d92b6"
        },
        "item": {
          "id": "d282d976-0afc-467c-955e-e3d4442aabf5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d22934b8-a295-43cb-b13a-99c10289ee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3520092e-2bad-47f1-b599-4dd4de277f12",
        "cursor": {
          "ref": "e326e9ef-019d-4b6a-8d25-44143931b122",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a8ed62fd-e962-48e8-ba08-401ede038245"
        },
        "item": {
          "id": "3520092e-2bad-47f1-b599-4dd4de277f12",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "800b7dec-ab71-41b9-88c3-c5571e8fdf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dc28d5-033c-483b-af94-24c575c15f51",
        "cursor": {
          "ref": "25b4a4a0-e460-455d-b755-db39732f4f3f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "265419fa-4390-4cb4-8675-b597452c6610"
        },
        "item": {
          "id": "92dc28d5-033c-483b-af94-24c575c15f51",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "be5c3104-1205-4431-902b-f043371eeb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c8500d-43ba-4e6f-b3fa-be230031c4b1",
        "cursor": {
          "ref": "f85f3680-383e-41da-91dc-e2ad273007b2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "395448ec-b0ab-4c59-ae88-e20f5336aa31"
        },
        "item": {
          "id": "98c8500d-43ba-4e6f-b3fa-be230031c4b1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aca4b9c6-dee5-4a9c-9963-406c091e3f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647174e7-05b9-4b24-874c-9ed9e2343b92",
        "cursor": {
          "ref": "0fd5cce3-cea0-4c22-a969-05990a4645df",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a8b3e791-ed0f-4f8f-825b-4d9ddebe8f6c"
        },
        "item": {
          "id": "647174e7-05b9-4b24-874c-9ed9e2343b92",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d4b13163-5e5d-4c9c-b3e6-017640a34665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81df32a-62d4-427a-9776-760ab633743c",
        "cursor": {
          "ref": "6dc7e2c0-18ab-42d9-90c2-1d2b8ac7ac39",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "438cebf4-ef46-44ac-a705-083e6d4dd3f2"
        },
        "item": {
          "id": "b81df32a-62d4-427a-9776-760ab633743c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f6d995c2-38ee-4438-95cc-51fc1c03ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86738cf7-2ad8-4764-b57d-7ee866177f41",
        "cursor": {
          "ref": "7217da54-f74b-4428-a928-fa1251b4d771",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f1fb80cc-eea2-4641-a21f-b35311313984"
        },
        "item": {
          "id": "86738cf7-2ad8-4764-b57d-7ee866177f41",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea21bff2-feb6-4645-87d6-4a6cfda7e98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2191d123-27c6-4420-9942-c256fb1b1372",
        "cursor": {
          "ref": "e750dfd8-26f5-4ea5-be44-837bfd07e310",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "45dde353-e519-44a7-8cef-654ffc1fd312"
        },
        "item": {
          "id": "2191d123-27c6-4420-9942-c256fb1b1372",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4f3bbdd7-7035-4798-865e-e61d42b53c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168728fa-a593-441f-8bbf-ba2d77facd6d",
        "cursor": {
          "ref": "d92b2446-633b-4aa2-8cc6-a78c996c8b5b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ca404a33-e612-4458-97c6-aee08d268bfe"
        },
        "item": {
          "id": "168728fa-a593-441f-8bbf-ba2d77facd6d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b8877faf-d7e1-4f6c-bb6a-3a1da5c388c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2485d61-fa0f-4b78-95e6-cb43d4ade607",
        "cursor": {
          "ref": "07131583-a3c1-4064-8425-668d6fd2158d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b89ff023-962f-4601-a624-5e085e39eb61"
        },
        "item": {
          "id": "c2485d61-fa0f-4b78-95e6-cb43d4ade607",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8d0d405b-cae4-4557-9b22-1662f7a17b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b300934-0a22-405c-aa1e-d3a89fcd96cc",
        "cursor": {
          "ref": "50df7827-243e-4371-942c-b3b8d4da660a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc74675c-7d1b-4204-82bf-e9346ff2672a"
        },
        "item": {
          "id": "3b300934-0a22-405c-aa1e-d3a89fcd96cc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eeea3602-8f2e-4961-8bf8-f7116c5c18f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718cc6fc-fec7-4ace-92c3-49c425ff88cb",
        "cursor": {
          "ref": "c3f1e725-f019-4ceb-b01a-be894f728cb3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4c5fd318-4c4c-4862-85f7-186754198c16"
        },
        "item": {
          "id": "718cc6fc-fec7-4ace-92c3-49c425ff88cb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8c742db1-53d6-46d0-a979-c9bbc3d33c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3428b400-cd86-4776-a805-c4903a5b2663",
        "cursor": {
          "ref": "8cee6d80-9ee3-4d92-8c05-d901f005eb40",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "431f8d84-45ad-43c3-9c1a-ccb9b2fe4c48"
        },
        "item": {
          "id": "3428b400-cd86-4776-a805-c4903a5b2663",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9ec43310-264a-4839-9030-7e33413a037b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4e6d64-7ac1-4936-8f7f-91314e0761d3",
        "cursor": {
          "ref": "5aa97773-1478-4ff2-896c-2118abd12cca",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3ebdb4c3-1eb7-4d87-8d12-67421f860744"
        },
        "item": {
          "id": "9f4e6d64-7ac1-4936-8f7f-91314e0761d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3e60c567-1aaf-46cd-8fd2-92677bcc148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c565d8ec-b9e0-4a34-aec3-bfc12567bdd3",
        "cursor": {
          "ref": "7e028c55-c425-4653-ac4c-6ff84201e2f9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f3905ac4-fce0-4ba5-aa73-1f7444b15653"
        },
        "item": {
          "id": "c565d8ec-b9e0-4a34-aec3-bfc12567bdd3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ed6a0bfb-eb49-4ea2-b842-f22ae2f77121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5755052-a50e-418c-ae5d-a1ac27aecc76",
        "cursor": {
          "ref": "cfaf00ee-60a6-46a1-851c-6361066d46d9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ff73fc55-5d6c-440b-a7d9-bd823644ac5f"
        },
        "item": {
          "id": "d5755052-a50e-418c-ae5d-a1ac27aecc76",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a8bde17e-fedb-4e6a-aa52-7a988a26e1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01691dc2-3314-417f-83c5-5cdf461fca0f",
        "cursor": {
          "ref": "15a9c5d3-6c30-48db-9513-37e5e168676f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5b064a8c-5777-499e-b21a-a40bb1cf2098"
        },
        "item": {
          "id": "01691dc2-3314-417f-83c5-5cdf461fca0f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "82ece982-f113-4bb0-b40b-5bf7b92e6670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0ce90a-7697-45e2-928e-f1ab6a87035e",
        "cursor": {
          "ref": "9fed8713-575b-4d9a-bea6-ea04512376da",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fd04b453-b463-497b-b503-0d98c735ad00"
        },
        "item": {
          "id": "1b0ce90a-7697-45e2-928e-f1ab6a87035e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cd136909-25db-4d57-8ae8-918985c83fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01380c8e-f903-4064-8582-b2f60575279d",
        "cursor": {
          "ref": "025795e0-909a-4bd8-b45a-d5554d55e8da",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6fddab32-c592-43b6-99d3-404db6198a74"
        },
        "item": {
          "id": "01380c8e-f903-4064-8582-b2f60575279d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5144b375-8271-4b4e-9106-60a21f8bf912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6348308d-f7cc-4ee5-958c-cf38bb14a5e3",
        "cursor": {
          "ref": "16a3fcbc-f9f9-4151-b052-5b098bd049d2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5f5dbef7-52c4-4dca-8fad-d8428d4c48ef"
        },
        "item": {
          "id": "6348308d-f7cc-4ee5-958c-cf38bb14a5e3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9976db9-dc5c-4f9a-9719-2f07479e6a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a8133f-c344-4654-be74-a3c7ed1be348",
        "cursor": {
          "ref": "db75b82f-7bd5-4170-9b9d-1da121f111ec",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "44fa7af6-d645-4471-bea6-e25c53f161b2"
        },
        "item": {
          "id": "c0a8133f-c344-4654-be74-a3c7ed1be348",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "43550248-7a54-4e19-8e54-672d68582926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2ea57-1275-4316-819a-28a000f7171f",
        "cursor": {
          "ref": "611e01f5-0036-49b9-a0b3-aec5dfcfe41f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e8024f1a-8315-4c1d-9d20-357075ef9d3e"
        },
        "item": {
          "id": "09c2ea57-1275-4316-819a-28a000f7171f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ea384cbd-77a2-4495-99b1-91ce3eca4dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e969a3c-271b-4962-9007-a557ecb02be4",
        "cursor": {
          "ref": "ec21b113-02af-4a8f-9678-a4c3d3d0e72f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3faa6f44-5c48-439a-818b-68fad1ff157e"
        },
        "item": {
          "id": "4e969a3c-271b-4962-9007-a557ecb02be4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fa254f91-8fc8-4204-9fce-f4bbfbd4ad70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f5c6d1-4b88-4919-94cd-488f7c2263d5",
        "cursor": {
          "ref": "6fdf41ac-e659-4aed-b571-7422a3530980",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a1dc44f-2de6-4f6d-b44a-88c1c1527127"
        },
        "item": {
          "id": "60f5c6d1-4b88-4919-94cd-488f7c2263d5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1c828b55-d795-4af1-9e74-c70c9d8eced9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9084e9-7c16-42f9-b87e-b862c4b59052",
        "cursor": {
          "ref": "954b1593-db83-4b94-804c-aac0db1b7216",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b0f5f23f-a822-4999-bdec-2d2796697909"
        },
        "item": {
          "id": "bb9084e9-7c16-42f9-b87e-b862c4b59052",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "debcc11e-e9d9-4788-a539-dca1e1c50f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b036d188-41a5-4f16-a455-3a296e7ffb60",
        "cursor": {
          "ref": "f0397066-ca94-4da8-96f6-9f2f855ef1dd",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ccb8977b-9c83-4292-8c6d-499d9f1d2791"
        },
        "item": {
          "id": "b036d188-41a5-4f16-a455-3a296e7ffb60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7ab1aa41-6cb9-4129-ac03-6823fa19b5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00393494-4509-4b3b-8ca5-07bf3246228c",
        "cursor": {
          "ref": "a59b0aab-8860-46d3-98d4-e4393dcb46d6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "46f8deab-fc0a-4a35-af20-e39b665a205e"
        },
        "item": {
          "id": "00393494-4509-4b3b-8ca5-07bf3246228c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "70ee37da-a26b-4633-83a4-bc79546b92c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accef0fd-02ab-46c8-8a2a-248969cd4e5d",
        "cursor": {
          "ref": "7e1f8814-cbdd-423e-9824-a78b99c66a4a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "06ef2dcf-ab02-4e9a-97b8-2c7ed380eed9"
        },
        "item": {
          "id": "accef0fd-02ab-46c8-8a2a-248969cd4e5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "333973d4-54c5-4b2d-a282-d0473dec8883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694c3393-eb93-4e19-9ac1-d3334b0cefe1",
        "cursor": {
          "ref": "50d862c2-5284-4746-aef0-9771b9244d4e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd1573dd-bb09-479c-8a8e-2656020ec64f"
        },
        "item": {
          "id": "694c3393-eb93-4e19-9ac1-d3334b0cefe1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bde2db75-4ca2-458b-b296-eeab94f6ce6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d893f129-4ad0-4728-b07b-65c7fb922809",
        "cursor": {
          "ref": "aa5a1242-b233-4b46-b133-65e1056305be",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5f1fe2bd-1acf-4790-925b-9e14f65b4b62"
        },
        "item": {
          "id": "d893f129-4ad0-4728-b07b-65c7fb922809",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9b3262cc-18bc-463d-b460-f1a2e7484920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d02787b-9606-4df9-9525-f744e22595de",
        "cursor": {
          "ref": "74863449-cffb-401a-9db2-8d1af56b0ed1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "06f88ff0-8d81-4f6e-9319-319de4afd268"
        },
        "item": {
          "id": "2d02787b-9606-4df9-9525-f744e22595de",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ef7d579b-2390-4894-b386-d578ea039f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee03d120-ce58-4a9b-88fb-fd87d4e421a5",
        "cursor": {
          "ref": "5607034e-b5bd-4569-a714-66dd2e5f7c7f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1839658-a08c-4240-8f7a-b72410eee9b1"
        },
        "item": {
          "id": "ee03d120-ce58-4a9b-88fb-fd87d4e421a5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a5a84a6c-9d56-4287-bdb9-298bae937b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a74cd63-b0a0-4af6-b0fc-dc6ea23033f9",
        "cursor": {
          "ref": "79f3c333-0803-4bf3-8a76-2244959947a8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "89fae721-2f2a-4206-b89d-12152403717d"
        },
        "item": {
          "id": "6a74cd63-b0a0-4af6-b0fc-dc6ea23033f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d7534838-5357-450c-8788-ec7e0b08313d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58a6570-4e11-4029-89dc-ec8466cb0d33",
        "cursor": {
          "ref": "dea796a5-6730-4bc2-9099-696dcd040382",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "76434750-79dc-471a-9c99-cdd6db8a7a2a"
        },
        "item": {
          "id": "d58a6570-4e11-4029-89dc-ec8466cb0d33",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e4d70453-6808-45e1-ac53-3502636d1fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d3b0f2-da98-4269-b660-c269254d88e1",
        "cursor": {
          "ref": "b4117c76-489d-4e6a-9b7c-156621f70834",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa1d1969-ba18-453f-af4b-2fb2aa721b47"
        },
        "item": {
          "id": "67d3b0f2-da98-4269-b660-c269254d88e1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c43030c-7e0e-44cb-b8b2-789dc6db36c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ff0189-d46a-4d5a-95e4-0baaaedf13f7",
        "cursor": {
          "ref": "cbe1667d-021c-4f6e-97a9-95602708d4a4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7d4fffc9-aa86-4d28-87cd-b436922e6a15"
        },
        "item": {
          "id": "14ff0189-d46a-4d5a-95e4-0baaaedf13f7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "30a92770-2e81-4aec-b93e-b86d1ca7f098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a50c0c-e1b1-45ad-aafd-f56558b36f71",
        "cursor": {
          "ref": "770a0cd3-36f2-433d-9512-447c1505d24b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "85672a8c-9519-4a77-a794-d33233088afb"
        },
        "item": {
          "id": "13a50c0c-e1b1-45ad-aafd-f56558b36f71",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "932b3b79-a2ed-446c-a013-d401735c879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d97c38-0b65-45f2-aeff-9dfaef10ffe9",
        "cursor": {
          "ref": "ddb3712e-e3f1-43ff-9e87-416619ce149a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8a992ad8-03b6-474f-a542-2fc67204cf81"
        },
        "item": {
          "id": "76d97c38-0b65-45f2-aeff-9dfaef10ffe9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c7e82315-4801-4361-bf98-2b231c3ecdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c796520-0514-4872-af8c-e84728e4836d",
        "cursor": {
          "ref": "330f8558-f346-4aef-a544-2dbd3b0d9730",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc1e7456-9eda-4893-8598-4930c66a8a32"
        },
        "item": {
          "id": "1c796520-0514-4872-af8c-e84728e4836d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0557ff4c-8ec4-4946-8f90-771952575f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af56c94e-7f8d-48a2-a723-048595a720e1",
        "cursor": {
          "ref": "a32982f0-5e29-48d0-91c5-21a114e7b3f3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "caef6209-3cda-4871-a39c-089ffc7f1443"
        },
        "item": {
          "id": "af56c94e-7f8d-48a2-a723-048595a720e1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f3ca33fd-0213-4492-82ea-524bc8b10a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0bbfa-a52a-4f93-b2db-7e05b2cb63c3",
        "cursor": {
          "ref": "38a545c4-65a1-43c5-87cd-12c72e7db41b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e78eedfa-9d2a-47a1-b609-cacb7772ada4"
        },
        "item": {
          "id": "9db0bbfa-a52a-4f93-b2db-7e05b2cb63c3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f85be44b-40aa-4048-a650-f50b0479d5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d85fa1e-7835-49bb-92ef-ad8cb26a923d",
        "cursor": {
          "ref": "cb0fbe38-6969-4eb6-9822-195a239a9c40",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9552247c-c333-45b8-9cd7-348e24b2c585"
        },
        "item": {
          "id": "9d85fa1e-7835-49bb-92ef-ad8cb26a923d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "840b7d51-9924-4357-8770-0d7828cf5c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf0768b-07e0-4814-8fee-11b8c2a9579b",
        "cursor": {
          "ref": "0365a98a-ee3b-4cee-9e9c-37c891196cfa",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6fd59902-a71b-4b35-8ea4-e33cc5d88bef"
        },
        "item": {
          "id": "caf0768b-07e0-4814-8fee-11b8c2a9579b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "301348c6-75a5-484b-ac3d-16da094248fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41fe623-3da2-4b22-9f4a-c66ed15c62a1",
        "cursor": {
          "ref": "1445170c-428c-4a28-88c5-bcb905619321",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "21f1c2f1-8df9-4ec8-a14d-7b983d50d7c6"
        },
        "item": {
          "id": "a41fe623-3da2-4b22-9f4a-c66ed15c62a1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "79713e3c-a787-463b-b96d-0ed4c2be83d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836df8f6-df8e-496c-a102-1acadedd9e1c",
        "cursor": {
          "ref": "90ca836b-4f17-4d6a-b6b8-f25a514189f2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7a1646ef-076d-44ef-9067-8f216332b574"
        },
        "item": {
          "id": "836df8f6-df8e-496c-a102-1acadedd9e1c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bc17b56a-2778-47f8-8314-6415588a0a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82915d8-f679-47b1-bf77-c7c8a34fe4c3",
        "cursor": {
          "ref": "c82ee3a7-a68d-46c6-b324-3cb3e06f8033",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "36f0d5a2-50f7-49b1-a6f0-feb828fbb9a9"
        },
        "item": {
          "id": "d82915d8-f679-47b1-bf77-c7c8a34fe4c3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6dfe57eb-157b-4940-801d-64ce6a86dbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ff7d4e-7d78-4f8a-b3b6-9b30c05d2a9b",
        "cursor": {
          "ref": "fea49e67-226a-45cb-8dd8-a3c680e324c4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "df9306da-a9c6-4064-8d3d-baa54df16d22"
        },
        "item": {
          "id": "72ff7d4e-7d78-4f8a-b3b6-9b30c05d2a9b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8e8fba4f-bb60-41d1-9c95-19a9ddfb0e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e8f783-16a1-4e79-8595-d69afb9f2006",
        "cursor": {
          "ref": "7ad27e8d-d6ea-4b79-8d14-e769f0c57ea4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e09e04da-f0e2-4cee-bab8-32bb8360a522"
        },
        "item": {
          "id": "c1e8f783-16a1-4e79-8595-d69afb9f2006",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e9ee6115-cb64-4549-9a6d-e8ded46f3731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da61ee30-a2a5-480d-a751-ea726d2c9cfb",
        "cursor": {
          "ref": "58ee08b2-1fe9-4f7e-b346-3ac9a6fb7020",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e118129f-a8ec-4238-8b20-7b7d465c19b7"
        },
        "item": {
          "id": "da61ee30-a2a5-480d-a751-ea726d2c9cfb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "803c002a-d455-4313-a658-38dd226621fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb4851c-0979-43f1-a61e-61970c2437ac",
        "cursor": {
          "ref": "51015b7e-9bea-4e64-9e86-69cd4c13abe1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c45a7cc4-8477-427b-858e-a603e608d45c"
        },
        "item": {
          "id": "fbb4851c-0979-43f1-a61e-61970c2437ac",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "466048a9-1f3e-4948-8c23-fecf2c32977c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90519444-b357-4d1d-a9ce-977baa381cee",
        "cursor": {
          "ref": "93d78da4-dd35-4c53-bf75-c65030de28b1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "26ea6a13-fb54-40f3-8d3d-005fa85a7b8e"
        },
        "item": {
          "id": "90519444-b357-4d1d-a9ce-977baa381cee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f33bb89d-0fee-463d-ad76-9a3f3d2526c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc278a5-2ac9-4ce5-9943-17f7b9ad887f",
        "cursor": {
          "ref": "88ea151b-5a67-4698-aa67-2aedeaaf12f3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7054a28b-3a80-4312-855b-d7482fe51d29"
        },
        "item": {
          "id": "4fc278a5-2ac9-4ce5-9943-17f7b9ad887f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "33e82a2e-ff67-42fa-9378-9023e4e43b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e009e5-85ab-47df-89a0-be1fb1923bfd",
        "cursor": {
          "ref": "dbfc2ed2-f178-4a55-8d5c-e58e479aba74",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "78931d1d-6343-4acc-a3b4-15bb05c422f0"
        },
        "item": {
          "id": "48e009e5-85ab-47df-89a0-be1fb1923bfd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fe1156c2-4b17-459e-8ca8-f75f321a78cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4172692a-ddb4-40c6-a826-5e7d50ec94b9",
        "cursor": {
          "ref": "d351e6e4-8e0a-47cb-baba-21740fab4f3d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e363bb97-1fbd-46f7-828d-d17316bedd1e"
        },
        "item": {
          "id": "4172692a-ddb4-40c6-a826-5e7d50ec94b9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a423f7ee-090b-408d-8103-98e3ddcebdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0b22b9-f70a-4b7f-850f-17b456770744",
        "cursor": {
          "ref": "a962bffa-eff3-4a2a-808a-78331e7272b4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "489501fb-acae-401f-9452-4bd174ee72fd"
        },
        "item": {
          "id": "0f0b22b9-f70a-4b7f-850f-17b456770744",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ae1ff745-945b-433d-bdff-5525e004d662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc2c43-cb5c-4270-8176-3f673cf84f21",
        "cursor": {
          "ref": "7e40c51d-6c87-43c6-98b0-c2750988cd3b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8aa08596-38ec-4c64-9c53-d1528f6ba112"
        },
        "item": {
          "id": "94cc2c43-cb5c-4270-8176-3f673cf84f21",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c5661e8b-3bf2-4dda-a9f7-dad0ca09d235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5750d653-7c5d-4412-9fea-380b945e2068",
        "cursor": {
          "ref": "194ff299-2c9c-4441-a6c2-4cd31b29a558",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e391cf1e-508d-4049-9855-2c5e6a42f5f0"
        },
        "item": {
          "id": "5750d653-7c5d-4412-9fea-380b945e2068",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "206f0338-b12b-4789-9d72-9864a2f92e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b6eac7-10c1-4957-bbe7-135abdede051",
        "cursor": {
          "ref": "a174b99b-264f-443f-a12a-10c0ec53e4d2",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b2cf4cd7-8c36-438c-b70a-f6998ea1ca19"
        },
        "item": {
          "id": "16b6eac7-10c1-4957-bbe7-135abdede051",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5db65018-f3f6-4a11-b4e3-88eb01a71beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd5a767-89dd-46d7-884c-e6d292a06756",
        "cursor": {
          "ref": "6586aa34-1491-49fc-aed5-e80d2614f2ee",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e2322584-5c37-4dde-8120-f0cd35bfe4a8"
        },
        "item": {
          "id": "acd5a767-89dd-46d7-884c-e6d292a06756",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ca84686-375a-4b36-b3eb-ebfb2c1da53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcd0c79-5c3c-44b2-a4d5-a53329a0c000",
        "cursor": {
          "ref": "7f6975b8-1033-4374-9f53-0d957e313b49",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5c36e8e-1915-43e7-a640-dd2322bb8e08"
        },
        "item": {
          "id": "9fcd0c79-5c3c-44b2-a4d5-a53329a0c000",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8e75d831-be43-407e-a7a0-a4e4ea0127da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81540d6e-0fd3-41b0-aafd-8986b15d9ead",
        "cursor": {
          "ref": "1dbcd530-acc1-4015-b974-fc01872db433",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c9cc29d4-6c2f-4196-ae0e-ae779e4e2464"
        },
        "item": {
          "id": "81540d6e-0fd3-41b0-aafd-8986b15d9ead",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bb3353be-499d-4e04-8c4e-e430d4b962c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3129a797-49e9-4a6a-8edc-5384a87bd86d",
        "cursor": {
          "ref": "eaeca825-9a26-4002-9db6-f9fbde60a6c3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aa11e178-72df-4c28-8e88-8c72fafb4e56"
        },
        "item": {
          "id": "3129a797-49e9-4a6a-8edc-5384a87bd86d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6d9a9e04-3563-4681-9f56-036b10b58fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "2cd8a320-d63b-49f1-9b30-42a59c39fab8",
        "cursor": {
          "ref": "7e650984-6afa-4825-b585-9dc1e6c8b9c2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "55db6fd6-72ae-4dc0-aa5f-ebdca589b2b3"
        },
        "item": {
          "id": "2cd8a320-d63b-49f1-9b30-42a59c39fab8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4fa9f2ca-2294-4529-82bd-0224c1e3f093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "ca17f83c-8ab0-4877-8473-26562894e4d4",
        "cursor": {
          "ref": "815650e1-b1e6-46e2-9ed1-8661ce7b56cb",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1519c985-abcb-461c-8fc0-722ae9f7c322"
        },
        "item": {
          "id": "ca17f83c-8ab0-4877-8473-26562894e4d4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "416350d1-bb0e-4500-a11e-d79a427b3305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ea07de76-bb3f-4b9b-8ab8-fd77ed32fc1f",
        "cursor": {
          "ref": "6f112329-bc17-4ff2-a49b-a5e282e45966",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "17afb842-4259-4ef5-aeb8-a4253a9243c3"
        },
        "item": {
          "id": "ea07de76-bb3f-4b9b-8ab8-fd77ed32fc1f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2f45d7f8-ebca-4140-b880-28ac75f4fff8",
          "status": "Created",
          "code": 201,
          "responseTime": 4872,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b58db6f-6d48-43c4-8ffa-f24acf86db32",
        "cursor": {
          "ref": "742fe7d3-0d9b-4437-8282-5600ab666e49",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "33db8d57-f0c7-461d-b68f-6e3a81cba53a"
        },
        "item": {
          "id": "2b58db6f-6d48-43c4-8ffa-f24acf86db32",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ce2b81a6-a156-4462-bc67-dd93159d60fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6638bdf2-b238-4e0f-b0c5-1ea32245c4a5",
        "cursor": {
          "ref": "cd56f579-bcf6-48df-9203-e84786345697",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f9326a09-0c82-4b09-9336-fe4d9fc65dbb"
        },
        "item": {
          "id": "6638bdf2-b238-4e0f-b0c5-1ea32245c4a5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "32b19196-3a06-4138-8b37-57535c26f515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "e7b078b6-37c9-4ba3-b574-62204b6c9ea4",
        "cursor": {
          "ref": "c3cf57f8-97a6-48d5-823e-69f8f92539a2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a1a56ba-9d7a-49a4-831c-f3e51cb6d473"
        },
        "item": {
          "id": "e7b078b6-37c9-4ba3-b574-62204b6c9ea4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57d5ab22-82b7-46b7-a922-1304c1266ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a42e93-0fc7-494b-8618-67cbfd1a0c5c",
        "cursor": {
          "ref": "6dd14deb-a80b-470a-bae4-ec2b6b556023",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a2fba171-4f3f-4077-9131-989181623b2f"
        },
        "item": {
          "id": "e7a42e93-0fc7-494b-8618-67cbfd1a0c5c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2bcb14d0-7111-41c6-87af-2e86063b2891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdb6014-5674-474b-b6d8-3346cf0fc1e2",
        "cursor": {
          "ref": "0cf87558-40c0-4b82-a27b-6b6c6a09153c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a43f7e68-4d09-4b01-a098-71c1bfeb1ced"
        },
        "item": {
          "id": "2fdb6014-5674-474b-b6d8-3346cf0fc1e2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "02c772f9-4f67-4970-9584-8758d157f9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0938432d-4286-4b5b-b169-390bd0a040ad",
        "cursor": {
          "ref": "d0a95b7d-eb44-49e9-85f6-c1df552c8444",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d6d50811-a970-491b-b6e8-45627b04be07"
        },
        "item": {
          "id": "0938432d-4286-4b5b-b169-390bd0a040ad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "023170b0-2486-4ad1-9243-b07a5f5b8a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4de6260-98be-416a-903a-6b88fae97aba",
        "cursor": {
          "ref": "d5b2eaef-0c41-4a7b-bc67-19a2179542b2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "13d70eae-51b6-44c2-8bf7-7099652181b0"
        },
        "item": {
          "id": "c4de6260-98be-416a-903a-6b88fae97aba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57593bcb-1817-4646-9737-88d97b9de8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfbd37e-b090-410c-be13-dc900d4ccb5c",
        "cursor": {
          "ref": "35a5fe56-7aaa-4db9-bbfe-7a803113edd7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c54586fc-6f62-402c-8530-b9d3e30717f7"
        },
        "item": {
          "id": "0dfbd37e-b090-410c-be13-dc900d4ccb5c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ad1fa7e-a59d-48ab-a385-9476832bae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19d14e-d03a-49c5-8792-0bf9336e2749",
        "cursor": {
          "ref": "846a88af-4e8d-4f5b-9700-e5c454017ec0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b168d86d-10ea-4d71-ade5-0ed983a1675e"
        },
        "item": {
          "id": "5d19d14e-d03a-49c5-8792-0bf9336e2749",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "287714e7-e8f4-4d80-a4d2-41445e10031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c774e02-454a-4c22-8f2d-e15e8474a32c",
        "cursor": {
          "ref": "5ac897e6-4a56-4709-95b4-f1231a6acf1b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f2bc051f-7cb5-42eb-8097-9ab261b65df5"
        },
        "item": {
          "id": "6c774e02-454a-4c22-8f2d-e15e8474a32c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4f9a5059-9eda-4e81-bafc-052a5e0dded6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f409ac2e-41bc-47c5-9509-cc1830a1a037",
        "cursor": {
          "ref": "5da0bf67-c210-43f1-9552-07d935245048",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e840277e-a2cd-4b3b-9997-23fc5d815d7f"
        },
        "item": {
          "id": "f409ac2e-41bc-47c5-9509-cc1830a1a037",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f1b459d2-bac9-49d4-bc7d-66faeda95f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f24e27-eaa7-4b2e-96b7-cef37dfebe45",
        "cursor": {
          "ref": "b25e8951-1ee2-4a40-b654-3f1264e0983f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7ba64794-bf9a-4227-90ab-52d6732720fc"
        },
        "item": {
          "id": "b6f24e27-eaa7-4b2e-96b7-cef37dfebe45",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aec8eb6a-d4d0-4aec-bd0d-55ca6a0bc357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7594e56-ea77-46c6-bb55-2fe743a59c26",
        "cursor": {
          "ref": "9fd157af-4049-4552-919e-f49889650aa2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2def6b99-f52a-4eae-854d-04dfecd18197"
        },
        "item": {
          "id": "d7594e56-ea77-46c6-bb55-2fe743a59c26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5dd3041c-194a-44cb-a5ab-21e5b2ccff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486fd289-0338-4556-8e4c-0b6fbd7b58aa",
        "cursor": {
          "ref": "4b02f472-a5e5-4ed6-a3ec-4ad7d8c37fee",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ed8d816b-c1d8-465d-8fd9-a98fd7680eda"
        },
        "item": {
          "id": "486fd289-0338-4556-8e4c-0b6fbd7b58aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6029800a-c1e2-4e34-8abf-bc46a8d03ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf714bba-5f78-4a68-bb95-b6a606591327",
        "cursor": {
          "ref": "0d0ea226-6639-4c54-a2c3-eb11b54d46f6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05ade5d5-627d-4fdd-b969-f42b504ab5ff"
        },
        "item": {
          "id": "bf714bba-5f78-4a68-bb95-b6a606591327",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1065f980-a9ea-431a-9971-dd48880fc33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7108b6-030e-4325-b906-f4052659825a",
        "cursor": {
          "ref": "ee8ef964-7388-489a-8db4-94966562cfa1",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4c7ea142-74b4-4ba8-a863-d34725f3eeea"
        },
        "item": {
          "id": "9c7108b6-030e-4325-b906-f4052659825a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4aecf3b2-df18-4093-a955-cd6d03f69459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831231d5-9b29-44ae-801b-51536d4eb4c0",
        "cursor": {
          "ref": "ac077661-8c15-4c85-ab40-229862020c18",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5af9c44-ad1b-4312-88b9-a00218704b95"
        },
        "item": {
          "id": "831231d5-9b29-44ae-801b-51536d4eb4c0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "628b9239-e53b-4fd0-b4d8-ae41d0d38b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f1fc69-45eb-4ec1-9388-957f29adeefd",
        "cursor": {
          "ref": "8fae7a79-fc8d-4ab6-9d2e-0549f85d16ee",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c328960-d636-4d39-960e-903a12d79efa"
        },
        "item": {
          "id": "60f1fc69-45eb-4ec1-9388-957f29adeefd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6158cd21-5a8e-4a03-a187-cf5f46e3e176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4fef98-9edd-4d59-b093-a2498e9f7ea0",
        "cursor": {
          "ref": "e851d866-7702-4730-a093-a715dfe7f6f8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b577d764-07d7-45f0-92b0-e814eb8fa584"
        },
        "item": {
          "id": "2f4fef98-9edd-4d59-b093-a2498e9f7ea0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2055ea57-1080-4fc0-ba16-032d2e934739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fab3c0-fd44-46e9-8364-6a616ae929ae",
        "cursor": {
          "ref": "3bca7ff5-7690-4f34-9f11-8ffdf3aaac59",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "00681568-b355-4247-bf59-cfb9e6ba5c52"
        },
        "item": {
          "id": "f4fab3c0-fd44-46e9-8364-6a616ae929ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "090a6bb2-6600-4d0c-a43c-1e022913e73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02a6f70-7a75-4f99-a5db-a8b145701a83",
        "cursor": {
          "ref": "4ad5c3df-be4a-4d03-932d-3f0a0fb2d9ff",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "990e5ad6-2131-4bed-826a-b8c8c257f3e7"
        },
        "item": {
          "id": "a02a6f70-7a75-4f99-a5db-a8b145701a83",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "673933c0-35bc-4e12-9e72-0015f1e251d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3a6875-eec1-4675-a5d1-b1fd2e1b4569",
        "cursor": {
          "ref": "2c039bed-d95a-4354-afa3-82f0a30d89b0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c8f4363c-0955-423b-b513-801d374c2b7d"
        },
        "item": {
          "id": "ff3a6875-eec1-4675-a5d1-b1fd2e1b4569",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9282872f-36ae-45d0-a787-5e8d2c604a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f128f35-e7ca-41e2-89ca-4a1856df8d1b",
        "cursor": {
          "ref": "937e568a-548d-46e4-8a04-6745517b7808",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "04abebcb-3b08-4710-83c5-a9b87f92eeb4"
        },
        "item": {
          "id": "9f128f35-e7ca-41e2-89ca-4a1856df8d1b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e510c9ec-9b92-4b4f-b394-e9008951852f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f8a029-55b2-4c5a-a8bb-9b05d630acdd",
        "cursor": {
          "ref": "eabb1805-661b-49bd-a0f0-2476860f6f80",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a1c222ad-250c-424b-95cf-4434716b987c"
        },
        "item": {
          "id": "f5f8a029-55b2-4c5a-a8bb-9b05d630acdd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9c1ba7f0-bfb9-4173-81d0-f744226fd7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863466bc-d6a5-4ccb-9ab8-b63bd979585c",
        "cursor": {
          "ref": "a5f0e830-34ab-4353-99ad-d55cf899a0f0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "03ac2429-1612-4083-b6ca-83143e33ee8e"
        },
        "item": {
          "id": "863466bc-d6a5-4ccb-9ab8-b63bd979585c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22209e9c-0524-4994-9822-1ca4729acb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ebf9d0-9263-43be-8f4b-b689419259b4",
        "cursor": {
          "ref": "51204191-7e4c-4290-b4b3-755528874395",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "93398cc0-440c-411a-ae2b-8ee59b3b12d2"
        },
        "item": {
          "id": "28ebf9d0-9263-43be-8f4b-b689419259b4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "382d8cfb-9da4-4377-b060-1c68b93c2e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041368f2-c5b3-4239-a9ae-cd8e7abbd20e",
        "cursor": {
          "ref": "46390213-5507-4789-a129-a609773127af",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8527020d-b9fa-4746-81ee-dadf8b012aae"
        },
        "item": {
          "id": "041368f2-c5b3-4239-a9ae-cd8e7abbd20e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b3546842-77b1-412c-95ff-daa03062fb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe067357-18a7-45f2-a444-428efdb100c4",
        "cursor": {
          "ref": "2c532297-8107-4345-a747-1ccdc4a6c872",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "86203035-b405-456f-ac4c-f2c037469f01"
        },
        "item": {
          "id": "fe067357-18a7-45f2-a444-428efdb100c4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4539dd60-93d6-4929-b512-0441e2da2ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b227fa14-3e40-4b7b-9de0-7bcc03acd45d",
        "cursor": {
          "ref": "255e0ec7-0938-4fc8-8ed9-952490051f94",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7358466b-15e0-46a6-8761-5d5846be7e4d"
        },
        "item": {
          "id": "b227fa14-3e40-4b7b-9de0-7bcc03acd45d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5ebcab5-0333-482d-9e92-614f2313c4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2fdf8b-18a0-4a85-99ef-ceba00b6552b",
        "cursor": {
          "ref": "1cb49b68-7bd7-41dc-8eed-8c3c5b1e40e8",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c77c30b5-fb5c-4050-9ac8-49ee5e7dbe2b"
        },
        "item": {
          "id": "ac2fdf8b-18a0-4a85-99ef-ceba00b6552b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a029fa5f-d078-428c-a539-63c36cd0de88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9960dee-b652-4585-800f-1fe5eea88d50",
        "cursor": {
          "ref": "608d6aec-9ce0-4d1f-a9a9-035246d5cca3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dec8889c-46d9-4378-b6d3-b252a1c2c5b4"
        },
        "item": {
          "id": "b9960dee-b652-4585-800f-1fe5eea88d50",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9ab9b0d1-ddf7-42a8-a21e-18f33b8c6490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef636af-0cf2-4429-b138-643681c42084",
        "cursor": {
          "ref": "ca7d3f79-06bb-477a-be51-714ef27618b1",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2bee09d3-e2f8-49fe-9371-7802da5d100d"
        },
        "item": {
          "id": "8ef636af-0cf2-4429-b138-643681c42084",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "006fdbf9-063b-4539-87f4-0d9ca5685297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0820198-5bb9-4115-8fb7-2f14cdbc1a1e",
        "cursor": {
          "ref": "fdbfb6ec-8416-4770-a79c-161c19879405",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dd743be4-f3e0-46be-8b74-eeddab9e4d69"
        },
        "item": {
          "id": "f0820198-5bb9-4115-8fb7-2f14cdbc1a1e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "46286274-573d-4d19-9c7a-b93c3c250332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f10ecca-57d9-488b-95de-c330977c3f77",
        "cursor": {
          "ref": "6bebee2e-f75a-4667-afd7-a6949d9aea0d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d3d74f23-6ed9-4220-a069-9865255d2e21"
        },
        "item": {
          "id": "4f10ecca-57d9-488b-95de-c330977c3f77",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1bc9450b-6a30-4884-9670-3e63acb3eba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02873924-8647-4800-bde0-ceeb032dab2f",
        "cursor": {
          "ref": "da0765c3-3b8f-4a86-b837-e8afc7d67d61",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7c4e009e-c186-44f8-b59a-406cf531e395"
        },
        "item": {
          "id": "02873924-8647-4800-bde0-ceeb032dab2f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3862f404-7bc4-41b3-9129-63871a0cba12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a127829-4788-4096-bc6b-d196f3287acc",
        "cursor": {
          "ref": "ec6c35dd-29af-418d-99b3-8fe7683e798f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d3f666a0-a327-4468-8ce8-ef33dc0e2a6e"
        },
        "item": {
          "id": "3a127829-4788-4096-bc6b-d196f3287acc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "02d83a3f-aad5-4614-a6ec-45190897a671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bec06d-ec96-4bf8-a846-77c8eb52f1fa",
        "cursor": {
          "ref": "565e5762-5c9a-4604-ae7f-6516eaf65ab3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "523ee85e-eb84-45e3-bd62-05c8506d7269"
        },
        "item": {
          "id": "96bec06d-ec96-4bf8-a846-77c8eb52f1fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2a77d771-4461-4cff-86c7-79d031313290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21736aea-37a4-4d46-a7c5-6cfff5105c3b",
        "cursor": {
          "ref": "0018a890-dcc5-412f-b2e7-8597aa29eb8f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0924d901-8a3c-458f-ba0c-4a6beecf45e7"
        },
        "item": {
          "id": "21736aea-37a4-4d46-a7c5-6cfff5105c3b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b650a85e-014a-4ef7-90a6-0e2910c94471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c029067-f60f-4c58-a385-ebb94d180433",
        "cursor": {
          "ref": "3d72415a-7539-4a4f-81d3-05bdb6109c76",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "81334b69-9349-446a-8a53-265a1c3d8d9e"
        },
        "item": {
          "id": "0c029067-f60f-4c58-a385-ebb94d180433",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fa92ff8d-d09c-4b94-806a-77ff439f3e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ed0781-7394-4aa0-ab8f-0ad95b9fceb6",
        "cursor": {
          "ref": "8590bfe9-0bd4-47ee-8fd5-005c2a634af9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "42f7bf22-20f5-42b2-b5ec-e40338c0b4f1"
        },
        "item": {
          "id": "d7ed0781-7394-4aa0-ab8f-0ad95b9fceb6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "51a5669d-1e0c-41a4-8f97-5fb94cfd6fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5591f4a-049f-4f94-8614-ab270b0aa82e",
        "cursor": {
          "ref": "9b68dba6-b1b3-495d-8716-c016d19bee3f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "acfd76dd-1d3b-4e2a-a67b-76297314681e"
        },
        "item": {
          "id": "b5591f4a-049f-4f94-8614-ab270b0aa82e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b6fa341-f2de-4b9b-b6d8-0da3c97086a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42333874-cc5d-4ec4-b918-1cdba7126c97",
        "cursor": {
          "ref": "d3b66ce5-462a-4c74-9fd1-379060da54d3",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fdc31160-f288-4571-b191-88902bf6589c"
        },
        "item": {
          "id": "42333874-cc5d-4ec4-b918-1cdba7126c97",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c6d6dbb-2c49-4051-aba7-7c500553d4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc648f38-7401-46d2-b05f-26c8c8d1c8fc",
        "cursor": {
          "ref": "5616ad0a-c824-4097-ace5-f199046e437a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "957525bd-3725-4ab4-921f-49f7379c0d62"
        },
        "item": {
          "id": "bc648f38-7401-46d2-b05f-26c8c8d1c8fc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "89d77331-4f80-42be-a102-8ce2ef71b879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c46cbd-7e68-45f6-af38-072b446e281b",
        "cursor": {
          "ref": "af6277c9-0c20-47c7-91c0-0bc7c35d75be",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "191d016c-6f28-461c-9277-c6f86923faf9"
        },
        "item": {
          "id": "09c46cbd-7e68-45f6-af38-072b446e281b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ec9896b-e4b3-432d-ac02-967cd1f2a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2846303c-0a49-4eda-9bec-994a49fe82ff",
        "cursor": {
          "ref": "31b4a3c9-d334-4739-aecd-5e55fb17ee2c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8e907036-d04a-4527-8e0c-3185f08cc9ba"
        },
        "item": {
          "id": "2846303c-0a49-4eda-9bec-994a49fe82ff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21fc0e7c-7f52-4474-b052-040ddc2c90da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0083d28d-e1d1-4d50-b97e-591781c97c52",
        "cursor": {
          "ref": "35b76a2f-c07e-4062-8a5b-37fe1627e12c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a105a18d-9ffe-4626-9162-7b4139744cdb"
        },
        "item": {
          "id": "0083d28d-e1d1-4d50-b97e-591781c97c52",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d1f2fdf7-0a5e-4e90-b560-e4795f897484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b273b2-39fe-40ae-b8b4-fe73f90e506e",
        "cursor": {
          "ref": "3b895ca7-088f-447a-84fc-46f842968483",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a630cfbe-732d-4393-9100-854ea8179790"
        },
        "item": {
          "id": "84b273b2-39fe-40ae-b8b4-fe73f90e506e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e1d43a3e-34c6-4897-9ca1-8fdd7a25fd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684dc25-b2d7-4e48-bd9f-1ca2de1035a5",
        "cursor": {
          "ref": "3d883772-3269-4345-b1ea-5bcce972edb2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "79ebd861-5ab3-4e93-96df-eda293ae77c2"
        },
        "item": {
          "id": "e684dc25-b2d7-4e48-bd9f-1ca2de1035a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "16286975-6fed-4aad-8651-a0d25d4fc21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e92f7dd-81e3-43fa-9a53-69ba27fac4ff",
        "cursor": {
          "ref": "462b1c64-4826-4dfe-a64d-9e7133d6893c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "664ad5f6-591a-45d3-aaff-5cf5ce0e4e39"
        },
        "item": {
          "id": "0e92f7dd-81e3-43fa-9a53-69ba27fac4ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "61571875-f253-476a-92b2-d1033bf4b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c2d64b-8fa6-4db6-9092-05fa33d5d42a",
        "cursor": {
          "ref": "3ccca14e-58d9-4bf2-a313-00239142289d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "30c57459-de85-42ed-9727-7bab3be499d3"
        },
        "item": {
          "id": "96c2d64b-8fa6-4db6-9092-05fa33d5d42a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1bb4220-ad09-4702-a327-6cfa122ab7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44861128-5eb8-4b90-b2fe-bd73bf7714a7",
        "cursor": {
          "ref": "58c41d31-d5e6-4b55-b1ab-39f5983941a7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "55592b32-2b30-47de-9adf-1da4865b766e"
        },
        "item": {
          "id": "44861128-5eb8-4b90-b2fe-bd73bf7714a7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2bd7cb6b-8bde-47f0-9d62-fa450ba98d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395a1fdf-6ccb-4d13-adc6-7a8100a59850",
        "cursor": {
          "ref": "b200f765-f0e5-432e-97c7-27c3613a54e2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1bd84f96-5b7f-44ac-bed1-e1ac0dcc2cd7"
        },
        "item": {
          "id": "395a1fdf-6ccb-4d13-adc6-7a8100a59850",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17593d2d-9a5b-4a46-8518-f75653278a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0b8030-9ef1-41c4-9cb1-7b86ccd43ee7",
        "cursor": {
          "ref": "1638cadc-3ffa-4122-a13e-acf13e727847",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "807d8fef-f6a9-4dd6-b7ba-864bb1044523"
        },
        "item": {
          "id": "9f0b8030-9ef1-41c4-9cb1-7b86ccd43ee7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2cff5046-86e4-4d32-89ed-d0bb47d51f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f2cd70-38ec-4c0b-93fc-e5852d2cbdc2",
        "cursor": {
          "ref": "a581c50b-a531-44bb-abdd-f655163c0e06",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "08e21683-d841-4934-8092-d97a356fa732"
        },
        "item": {
          "id": "21f2cd70-38ec-4c0b-93fc-e5852d2cbdc2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fcd422c6-d152-4277-8b2f-9971667e6e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3503bc-8682-4e94-b645-ead34a1dc673",
        "cursor": {
          "ref": "e182abaa-a8eb-4831-b8bd-a99106fc5bfd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0377717d-c8fd-4456-9c48-f6574c451d51"
        },
        "item": {
          "id": "cc3503bc-8682-4e94-b645-ead34a1dc673",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ac4bc7f2-cf19-4ccd-b600-f2538a9a6121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74acdc39-ebed-4831-b522-d6f83c206b45",
        "cursor": {
          "ref": "a7e37fa9-b91c-4141-9582-1821bcaed155",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d4113c0-2632-4773-a3aa-50f0ef891ca2"
        },
        "item": {
          "id": "74acdc39-ebed-4831-b522-d6f83c206b45",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1d5a25e5-0ceb-48e5-b3be-0a5ae90ab74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbf78ef-4a33-4d0f-a555-9202cb2c0859",
        "cursor": {
          "ref": "dd63e883-679f-41dd-bff2-9d57cd63d399",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f78fdc51-fd1b-48c4-a19a-8620eb41783a"
        },
        "item": {
          "id": "0cbf78ef-4a33-4d0f-a555-9202cb2c0859",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d7e47a6e-7de9-4e16-aa54-f40804286a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7906cca9-39c7-40f1-a860-7f0c2defd3a6",
        "cursor": {
          "ref": "a9b7b1bd-1dbc-4034-a430-f54cc94c4b6d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "14f3247d-b840-4d2c-859f-8875e078a208"
        },
        "item": {
          "id": "7906cca9-39c7-40f1-a860-7f0c2defd3a6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e1adc05e-790d-4dfe-9db7-c84b8b7dfce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6339501-f2cf-4ff8-a856-799818fe11de",
        "cursor": {
          "ref": "ea625ac4-7cd8-4b97-a3fc-6949437e0e07",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b8e13eb4-4d04-49c3-96ac-721ac7555592"
        },
        "item": {
          "id": "a6339501-f2cf-4ff8-a856-799818fe11de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "80ac9dd7-44d5-4531-9d0c-e7719abcfa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ed1ca2-a954-44ce-ad54-f52bb6634e73",
        "cursor": {
          "ref": "1ba2b151-458a-4e85-ac90-1cb5566c0d1a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "365146e2-f1ae-4468-9e5f-a081ac6f6387"
        },
        "item": {
          "id": "e6ed1ca2-a954-44ce-ad54-f52bb6634e73",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b78bf50d-cd99-445e-af07-222aab6313d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c336f876-0a6b-4d17-ac25-2df74b99c7d1",
        "cursor": {
          "ref": "24cba7c1-1398-4a96-9c90-737ddc7a711a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2d928559-d82d-4a41-9058-ff312a5aac2d"
        },
        "item": {
          "id": "c336f876-0a6b-4d17-ac25-2df74b99c7d1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db7e70f7-4aa3-45ed-a897-f497185a8a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c62d501-4d6a-43fa-a484-08d82bcf592d",
        "cursor": {
          "ref": "d044f908-5886-4a1e-b9eb-f57c067277dd",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4da64437-12db-4bcd-9cbe-b133b30944fa"
        },
        "item": {
          "id": "3c62d501-4d6a-43fa-a484-08d82bcf592d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10d08f1e-274a-4448-b2aa-103bd75bdb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ed55f7-210c-4baf-8ef0-2849063783c4",
        "cursor": {
          "ref": "570bcd1b-5bcf-4fe2-b464-f2437a8f4008",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a31a9e89-ebb3-45aa-bb43-4c998f6772ac"
        },
        "item": {
          "id": "72ed55f7-210c-4baf-8ef0-2849063783c4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "393a7ad4-191f-4ebf-bd93-0fd05aa992a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae40049e-b653-48fa-909c-85130a125f30",
        "cursor": {
          "ref": "03445fe0-6b20-4699-bd85-86c5fc8988d4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "955431db-3f17-4d47-bbf4-fd2376dbe038"
        },
        "item": {
          "id": "ae40049e-b653-48fa-909c-85130a125f30",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fce21e14-cdba-4749-9bc7-7fcddf5a25e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac85f75d-1e38-4709-b548-3db668513139",
        "cursor": {
          "ref": "32d17227-98b7-475d-b03f-9ca084bcef58",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "72394ae0-c20e-44f7-81f6-d40c4bb48519"
        },
        "item": {
          "id": "ac85f75d-1e38-4709-b548-3db668513139",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f4f3a20e-9e6d-47ef-91f1-db04a757fbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07385fdb-d226-4d1a-ac42-be29b2211dc6",
        "cursor": {
          "ref": "382ac2ca-f6f7-4cf5-afe1-9330fe24ff36",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a3e82256-4d47-4d9e-aed3-f046bf8038f4"
        },
        "item": {
          "id": "07385fdb-d226-4d1a-ac42-be29b2211dc6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1792e98b-9bfa-42b5-889e-3f64dc8e2a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843640d0-0068-46a2-a96d-e474e2c5148f",
        "cursor": {
          "ref": "f76903e2-affc-43c7-b1f7-b8acd16bd9e8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1b15ac35-dd2c-4f9e-b37c-dc58bf26ce1e"
        },
        "item": {
          "id": "843640d0-0068-46a2-a96d-e474e2c5148f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "611ef9aa-ca27-4a7e-9c92-59050a2350bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d921bf-33dd-45ae-b783-996e39852842",
        "cursor": {
          "ref": "c03ee12c-2e12-4767-aa77-288cbfb7da66",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "de1569a4-1db6-4f80-af6c-c797a44566f3"
        },
        "item": {
          "id": "85d921bf-33dd-45ae-b783-996e39852842",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56d449ad-83ed-4783-80e6-a94d766c3deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d16689f-c0e4-4129-b8d1-3c9ba7d11a2c",
        "cursor": {
          "ref": "72f839e2-af6d-4230-995b-c5d5fec914b7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6594e165-56cb-4fb1-bff8-933bd150194a"
        },
        "item": {
          "id": "3d16689f-c0e4-4129-b8d1-3c9ba7d11a2c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "19eb6167-433b-4d74-8dec-1d5e8d2ab54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075a65f6-4cd3-484f-ad9e-bbef225782ea",
        "cursor": {
          "ref": "c995259b-56d0-49f8-aeb7-4968e6baa778",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7cafdffd-a87b-4a48-9b08-2b9876f40e2f"
        },
        "item": {
          "id": "075a65f6-4cd3-484f-ad9e-bbef225782ea",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f73e128e-0a78-42ba-a612-3f72a93359c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebff3c73-46fd-49a1-877a-b3112668f9ed",
        "cursor": {
          "ref": "fb3568d2-d502-4541-857f-efb465588520",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1e0f2425-644c-41d8-a440-5f5af4c1c503"
        },
        "item": {
          "id": "ebff3c73-46fd-49a1-877a-b3112668f9ed",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a59fc244-c76b-4176-8562-e06a38df6078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46e7b50-57a8-42db-b3d0-6857f47e793e",
        "cursor": {
          "ref": "dedc33de-7cff-4d3f-83e1-f5519ac352a8",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8bcd8b2b-7b4c-498b-aa8b-53f8327eebd1"
        },
        "item": {
          "id": "b46e7b50-57a8-42db-b3d0-6857f47e793e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d368d59b-7b1d-4d77-9ad7-71e20ceae083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30af105-15aa-401d-bd62-486fb7f4e171",
        "cursor": {
          "ref": "6e274cfa-56ed-4ebd-aadc-7f183a6eab57",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a26046fc-328e-4b01-abff-1d7cfc8f906e"
        },
        "item": {
          "id": "e30af105-15aa-401d-bd62-486fb7f4e171",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd20a2c1-b3b3-4ecc-bc0b-0ae348e7e0ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe36b5-9f1e-4c49-b16e-6c527e514557",
        "cursor": {
          "ref": "9ba3a263-3df2-42d6-a922-413ec15a7bfe",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0a0e8771-cdaf-4715-ac62-2e7469cde015"
        },
        "item": {
          "id": "40fe36b5-9f1e-4c49-b16e-6c527e514557",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0186ccd8-3b42-4736-9d4e-7cfd730eead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4477f00b-c7de-46a1-a462-545241b43460",
        "cursor": {
          "ref": "f39cb43c-80ee-4c07-aa9f-d0b09b0baa89",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9806397f-f660-4563-9fd2-e99574ea8232"
        },
        "item": {
          "id": "4477f00b-c7de-46a1-a462-545241b43460",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "288ddb41-f36e-4820-b2f6-d6b1b0a7d9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0038c6a3-7f78-4548-8e6b-2301108baf06",
        "cursor": {
          "ref": "f3f6c184-a0bd-4166-90a1-4a2ce40a9fb9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4049cca7-a81e-4383-a22a-0b1e62478bd1"
        },
        "item": {
          "id": "0038c6a3-7f78-4548-8e6b-2301108baf06",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c2e06053-6fc3-446e-8fcf-22e9d1211db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f25f359-2150-4190-bffc-4356175f4827",
        "cursor": {
          "ref": "457efb59-95b3-41e6-a916-e2517b12b099",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30ff4fc3-fd63-4339-8f13-73e60a65ccbd"
        },
        "item": {
          "id": "2f25f359-2150-4190-bffc-4356175f4827",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "981a6abc-d3df-475d-aa6f-94463a70503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31787b2b-0fe0-452b-aee5-51372e607697",
        "cursor": {
          "ref": "ba22369d-748e-45dc-8295-95d72bba4b94",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "38dc7311-0a0e-4ccd-9e93-0d46672fa967"
        },
        "item": {
          "id": "31787b2b-0fe0-452b-aee5-51372e607697",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3ad23232-18c1-4b33-8e32-cba23edd805c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f5298-5ad0-424a-a214-ca6984f7d50e",
        "cursor": {
          "ref": "c291e725-d251-4872-a9fb-4f42ac4783f4",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "80e05ccf-1bbf-42a5-8c0d-22aa85c046c3"
        },
        "item": {
          "id": "437f5298-5ad0-424a-a214-ca6984f7d50e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbb2a41f-6698-4790-bcc4-dbd27ae31e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9305b636-b094-4414-a1f7-780c39a18bff",
        "cursor": {
          "ref": "e3ef3e14-ee3d-443c-9870-cae6357ad88a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ee53158-baa9-409a-b038-7f0f65965f28"
        },
        "item": {
          "id": "9305b636-b094-4414-a1f7-780c39a18bff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "608096f9-786f-4753-87bb-86fe1cc90658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3099980e-9c7e-414a-b4e2-22c09c32b4d1",
        "cursor": {
          "ref": "99a6bb5b-b9e0-4f3a-9c59-899fae43190e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0b010ff5-be63-4c05-bbff-0d6ea5a8b4a8"
        },
        "item": {
          "id": "3099980e-9c7e-414a-b4e2-22c09c32b4d1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "76b3d58d-598f-4457-8607-d938dbb6c20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62427fec-d466-4eb0-b656-750e8dd6eb61",
        "cursor": {
          "ref": "b30a9e47-ed08-4f23-9e86-c51d5d82bbca",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "831f92a5-01fe-4f4c-8ef3-a4d568379027"
        },
        "item": {
          "id": "62427fec-d466-4eb0-b656-750e8dd6eb61",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "85925436-b424-49b7-b824-096948a33888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483da6a6-84e4-4097-85fb-57ff350c482d",
        "cursor": {
          "ref": "368c0f04-33f7-41b2-aaf6-8d2e05cd2b00",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c38aeec0-0db8-4bcb-91df-09aa1464af5b"
        },
        "item": {
          "id": "483da6a6-84e4-4097-85fb-57ff350c482d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "37761697-eadf-4079-9594-365743ebb681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e7266c-8141-4870-8de9-c6af7ae50f31",
        "cursor": {
          "ref": "7c2e2fef-4640-4890-a639-a5d531c2396b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4ae6398e-f33d-4a5a-b6a6-071bb5c74074"
        },
        "item": {
          "id": "05e7266c-8141-4870-8de9-c6af7ae50f31",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3253a2eb-87d8-489e-8571-a65456641d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b309e0-3cb3-4e57-bcff-4d7108faff5a",
        "cursor": {
          "ref": "1e0e0294-6405-495e-9aff-b172c6f3089c",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b59be1ce-ff48-4930-8145-5b88ef7aaf58"
        },
        "item": {
          "id": "a8b309e0-3cb3-4e57-bcff-4d7108faff5a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1cf9984c-cf66-4234-9a5d-d164715b342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928b478c-fcda-4656-9524-e9785cba69b2",
        "cursor": {
          "ref": "6679c844-bdb3-4ef0-b07d-add6e613e83f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6de95f58-9eac-4e73-ab88-58ecd695de9f"
        },
        "item": {
          "id": "928b478c-fcda-4656-9524-e9785cba69b2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6b4987d-6959-4659-9f7f-1564f3905433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9cd16b-4381-4805-b481-fb9cf7a656b3",
        "cursor": {
          "ref": "44920830-a7ee-451e-9a1a-ff7189176d2d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "59d7c9c7-931e-4891-b66e-4e9ecf5927f8"
        },
        "item": {
          "id": "9f9cd16b-4381-4805-b481-fb9cf7a656b3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "278af925-2c7b-4e2e-8a1c-43c5da6bf680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b224580-6630-46ec-a8d9-ee112c757186",
        "cursor": {
          "ref": "e347c990-270b-42f2-9d10-9d42d02d1435",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3d9f13f2-0efa-4450-ba44-ddb8f53e4910"
        },
        "item": {
          "id": "3b224580-6630-46ec-a8d9-ee112c757186",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "216bb2c9-5e1d-4e5f-8697-6238bd7fda0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8413418f-e3c3-422d-baf0-3d533329a47d",
        "cursor": {
          "ref": "bdff2ec3-daf0-4804-9e0e-afe5948b1ea0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ef5901b6-c7e4-4bd3-9674-6edd2509a5be"
        },
        "item": {
          "id": "8413418f-e3c3-422d-baf0-3d533329a47d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "30b03479-fdb9-4eb0-b41b-4744e2601811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0f68a4-5c3c-4332-bfb8-5b0587779e0f",
        "cursor": {
          "ref": "32e0ec4c-7038-4fa0-8fc6-c225138a58f8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c08b5efb-eccb-4bf4-8934-404b991ef263"
        },
        "item": {
          "id": "1e0f68a4-5c3c-4332-bfb8-5b0587779e0f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "216c6fff-4878-4842-883e-6e51af13cf06",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "6ebedfda-76e9-439a-a5e4-fe56bed593bb",
        "cursor": {
          "ref": "567aa514-58a3-4d40-af51-40f426bcebf6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8ef085c5-b15e-422b-aafb-15c3abbffe3d"
        },
        "item": {
          "id": "6ebedfda-76e9-439a-a5e4-fe56bed593bb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "af0c532d-19bc-446a-8b4c-598e4cad7800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f9570f-9c3e-421a-8f9f-b72d7325fb9b",
        "cursor": {
          "ref": "2a2e2936-e029-4669-9c58-428a2a3db15e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "11aa5260-8caa-43f9-8ef6-c48795f33e65"
        },
        "item": {
          "id": "d6f9570f-9c3e-421a-8f9f-b72d7325fb9b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a2842616-bd3b-4140-85ca-f67e05814852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559ae4b-5649-4ab1-a925-a9e4051e3cb8",
        "cursor": {
          "ref": "f10278df-4004-4088-b2c3-0371bfa3080a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ccfceed6-a8c8-4805-a650-053988ec4a29"
        },
        "item": {
          "id": "d559ae4b-5649-4ab1-a925-a9e4051e3cb8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3dcb5440-6fb7-4d62-865b-a5f813c65eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1629608-6f00-4fae-9417-7bd0ec14933c",
        "cursor": {
          "ref": "41eacd3f-4f91-4c6e-8c84-9294108d7d3b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "66c3955d-0c07-4ca9-af49-7c09ee1c9d44"
        },
        "item": {
          "id": "f1629608-6f00-4fae-9417-7bd0ec14933c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0c0cc4cb-9dfe-4ba8-8c08-253f921a8f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673358bd-6167-4a4e-a7a7-46b51c1e4a8c",
        "cursor": {
          "ref": "fcff7b76-8192-4d14-b414-04a9e1c1de00",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ed4204d2-33a0-459e-8c24-1f99d5fc054f"
        },
        "item": {
          "id": "673358bd-6167-4a4e-a7a7-46b51c1e4a8c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "28f3ce58-1a30-457d-a76f-628b23664956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1086af1b-a699-4d9b-b684-1dbeee0910b5",
        "cursor": {
          "ref": "b07754f9-0463-4a61-ac31-55c7475530c5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eef8ba9f-2169-4948-86a7-18e642baf962"
        },
        "item": {
          "id": "1086af1b-a699-4d9b-b684-1dbeee0910b5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e93922f9-1dbc-4002-8a79-b6330ab0cd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e16d14-d510-4463-a29d-f2709de53c18",
        "cursor": {
          "ref": "d5fc6895-d1d5-4f6d-b434-ee2e317b7550",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5b0f2164-085d-4d86-a6e2-5f7425d1cb59"
        },
        "item": {
          "id": "31e16d14-d510-4463-a29d-f2709de53c18",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f5dc5d7-a9e8-4e8e-8c31-d38ba990dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5551816e-88d4-4848-ad5f-02c573b5d0ef",
        "cursor": {
          "ref": "11c02505-6f7d-47cf-a172-46e3f411fa08",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "187b77fd-688e-460d-9a37-e3fa52c1741b"
        },
        "item": {
          "id": "5551816e-88d4-4848-ad5f-02c573b5d0ef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6ccad07f-9bea-46b2-ae45-602698a48107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e14fc23-02f3-4013-b7a4-49b851a1018a",
        "cursor": {
          "ref": "fae7f2a9-7434-4e64-be36-468fe602a768",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "97d81fb5-37a0-43be-835f-d7d623dc491b"
        },
        "item": {
          "id": "9e14fc23-02f3-4013-b7a4-49b851a1018a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c1abaef7-b04f-4a5f-855e-84b63c542659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ca92c9-5bfa-4491-9f19-3ac45fa7ad38",
        "cursor": {
          "ref": "9b01b644-bd7d-4f0d-a26a-b4028c1a055b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eb58fa39-f620-4079-a0d5-a6550be5bec3"
        },
        "item": {
          "id": "35ca92c9-5bfa-4491-9f19-3ac45fa7ad38",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "758f74f4-294d-4669-8997-d5a21054cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f7f0d-3750-4879-80fc-bd4e28f05d4c",
        "cursor": {
          "ref": "b3d4206b-7cf7-4f0d-a06a-282e634c04c5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "23988f90-6281-4259-b86e-251ffde939c1"
        },
        "item": {
          "id": "ad9f7f0d-3750-4879-80fc-bd4e28f05d4c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b2c74454-f243-4bc5-872b-94c564603b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa36fbb-9419-43ee-8b7c-89ced04be050",
        "cursor": {
          "ref": "f8dbf132-4e62-4136-9f6b-4f7bed9e506b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4dff2ac3-5261-4590-921b-a0c22d228440"
        },
        "item": {
          "id": "baa36fbb-9419-43ee-8b7c-89ced04be050",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fe73778e-9161-428e-821a-8a8a358a7c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2175e2-4cf3-4564-a00e-f61e7a970d6d",
        "cursor": {
          "ref": "325588b3-3228-44a0-ba7c-06decbaa40ab",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8357b15f-bbc5-4a4b-a981-ad3d84a1726d"
        },
        "item": {
          "id": "fd2175e2-4cf3-4564-a00e-f61e7a970d6d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "880ac0a9-dfae-4196-a988-8f4f0088616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e0d33e-db45-4db4-b65c-a0a9550e98e5",
        "cursor": {
          "ref": "8ad84abf-8bd9-4aa6-8d24-3ac69898f6bb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3f5277a9-fe3e-4980-8370-4c1786b737c1"
        },
        "item": {
          "id": "03e0d33e-db45-4db4-b65c-a0a9550e98e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5a3afb03-4000-43f2-aae6-811daf0c1c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e1ead6-a2ca-4e0d-9e6c-c06f04deaa06",
        "cursor": {
          "ref": "eea8aa4f-94b0-477c-be1e-e5fd727c8fda",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9c77c191-8636-417a-80e7-f2472445e441"
        },
        "item": {
          "id": "e8e1ead6-a2ca-4e0d-9e6c-c06f04deaa06",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6f2e12a2-23e2-40f6-a7c5-8e214fbaeee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a310124-fc9b-4829-8417-34a84a2300ee",
        "cursor": {
          "ref": "e29871e3-934c-41bb-b340-011827cbbead",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e968b31-ec6e-4a54-a479-aacd401e2b86"
        },
        "item": {
          "id": "2a310124-fc9b-4829-8417-34a84a2300ee",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d22668fd-8267-4bef-b6d5-62881bc41ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acec682c-9899-434a-9a39-f5a8ee46c854",
        "cursor": {
          "ref": "963f1379-b393-4207-92e7-7f6cdac065d0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "508f4276-37c4-476a-90b5-ac41d3be164d"
        },
        "item": {
          "id": "acec682c-9899-434a-9a39-f5a8ee46c854",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c27b6f46-9e5c-4e3e-b3b6-79d40a4a8f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2bc4d-38aa-4984-a4aa-db5d0c31b473",
        "cursor": {
          "ref": "25eef371-f306-48d0-9353-b12e33bf4038",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0a05c352-c444-4abf-b723-bd692a08ae7d"
        },
        "item": {
          "id": "d9d2bc4d-38aa-4984-a4aa-db5d0c31b473",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c390499f-9ea5-4cf5-b6fa-02d6c0f1de68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58694a63-f714-4b3a-9cef-d3a80eb4d1f0",
        "cursor": {
          "ref": "ae0d8cb0-26fe-4ed7-b89b-475180b65538",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6e6f42fa-2ce2-484d-bcc9-d2386456a718"
        },
        "item": {
          "id": "58694a63-f714-4b3a-9cef-d3a80eb4d1f0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "549ea819-06fa-40e4-8674-115f7cd9ff7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e0e6ff-726f-4ba2-8829-331007c81aa0",
        "cursor": {
          "ref": "975534ad-b852-44f9-a429-809608204671",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b85b4be8-b0ec-4b33-a04c-7d6e5b8b92cc"
        },
        "item": {
          "id": "d0e0e6ff-726f-4ba2-8829-331007c81aa0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1310f395-d90c-4fbf-9310-c19d681f664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe93822e-b9c0-4ed5-bb66-16477c91cd9a",
        "cursor": {
          "ref": "2df80866-d117-4c7f-b6ce-28f97b8d39c3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "129030e7-3e89-421d-b8b0-76a2bdcf8377"
        },
        "item": {
          "id": "fe93822e-b9c0-4ed5-bb66-16477c91cd9a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3f3e4fcb-5857-49c9-a1ba-bc3ea28a0725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dec1eaa-5af0-46c7-8e04-bfae9a764804",
        "cursor": {
          "ref": "d43546e7-369a-4304-aefd-ea695845de20",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "38218941-381c-4bb2-a232-35e6cf4077a0"
        },
        "item": {
          "id": "6dec1eaa-5af0-46c7-8e04-bfae9a764804",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3299738c-b7b2-4656-bb1b-144efef805f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005fd1ca-19af-458b-995c-7597138609f4",
        "cursor": {
          "ref": "b8c181c9-354f-4acd-80e6-387c8f9effed",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "896be4f1-11d1-468d-a947-9ec9bc27d4ea"
        },
        "item": {
          "id": "005fd1ca-19af-458b-995c-7597138609f4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "60dec475-915c-4c21-a134-8b162cc90949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265129a-867f-45be-9e6d-973e86075061",
        "cursor": {
          "ref": "aad762fd-a11f-4f40-a3e0-58dccf4b13cc",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e0be2c4e-43b9-4a42-9673-5da8df5808e9"
        },
        "item": {
          "id": "7265129a-867f-45be-9e6d-973e86075061",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9853bb90-8ee5-4ae5-a07f-a5dc557be98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741a92bf-9bbb-4f94-a4a8-33bf2764cf0c",
        "cursor": {
          "ref": "5f853cd8-05ea-4514-b473-700fb9d192e5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2abccad8-817e-401a-9162-d4b6afee8161"
        },
        "item": {
          "id": "741a92bf-9bbb-4f94-a4a8-33bf2764cf0c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6a3eed49-4964-400b-8073-e949d642db3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf93e636-307c-4a99-b74e-1e4342b318ce",
        "cursor": {
          "ref": "8c79cde5-fd5c-4e4e-9868-8527f5e751d3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2b178141-7414-4d8f-b582-a9d01174b9d0"
        },
        "item": {
          "id": "bf93e636-307c-4a99-b74e-1e4342b318ce",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a57cee97-2da5-4b26-a2fe-c923d9d3dc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fcf688-4767-4c31-b624-33ab1668b9c8",
        "cursor": {
          "ref": "cf1f6d0e-7530-4860-96e1-fc2c48753253",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0e7212e3-c325-478e-9cd5-9212a6785496"
        },
        "item": {
          "id": "e6fcf688-4767-4c31-b624-33ab1668b9c8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2f857086-2c38-41b7-8ab9-f1c41f7b7da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad76561e-b189-455c-8e48-8cff83549693",
        "cursor": {
          "ref": "c6f6db96-cc5b-42e7-855c-5a62d8ca2aaa",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1519dee1-4ff1-497d-985b-c3b5c5c040ff"
        },
        "item": {
          "id": "ad76561e-b189-455c-8e48-8cff83549693",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "497d5ed5-146d-4688-b22f-fc2700a77799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb50674-297c-48ce-9643-a9bbb7f38e31",
        "cursor": {
          "ref": "751fefdc-30ca-4cfb-9e0f-8638dd65ac92",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "970796a6-be51-45c5-b065-973566c1bc9d"
        },
        "item": {
          "id": "1fb50674-297c-48ce-9643-a9bbb7f38e31",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5056660d-f7e6-4572-8528-5d838aa23c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48198bea-eaf6-4339-b7cc-077059d2b454",
        "cursor": {
          "ref": "e71c5817-56ed-46b5-8011-32a2cf2aa551",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "599c548c-8dd7-4be0-ae85-f3307e70676d"
        },
        "item": {
          "id": "48198bea-eaf6-4339-b7cc-077059d2b454",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1653939a-9377-4a50-bcb6-4425b243af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f45e34b-20ab-48cf-a827-ec57ad86bb80",
        "cursor": {
          "ref": "4737d626-ca02-47c7-a6bc-e16bf338c0f0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59ae6cbc-560e-499e-8e55-d3d885e25d7a"
        },
        "item": {
          "id": "2f45e34b-20ab-48cf-a827-ec57ad86bb80",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "520cc2df-6a70-492e-b918-4c1384e4d5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af167b04-95f4-4d80-9011-142c7333afbc",
        "cursor": {
          "ref": "cd8f2e86-04f4-49b9-bfa7-9a4e4fcc5d32",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c017fb47-7002-4279-be49-c50ec0c887c5"
        },
        "item": {
          "id": "af167b04-95f4-4d80-9011-142c7333afbc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "96b45cc0-4d98-4ffe-a39b-3e9533b06d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc9f22a-bfd7-40e2-8a1b-0081cd3f6998",
        "cursor": {
          "ref": "9e98d8b1-aa12-4e90-a827-226885d20ef0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e9a035fa-bea8-4883-b510-0aed964b93a9"
        },
        "item": {
          "id": "9fc9f22a-bfd7-40e2-8a1b-0081cd3f6998",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "407ef7b2-5270-45fe-9948-b77eb75fadc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f0be4d-fc7d-4d96-8e14-d23e79be3707",
        "cursor": {
          "ref": "7ab83e5c-31e3-4b4c-89c4-5175196a7cb4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c298f37b-5c7f-43b1-a54a-8ea915aa04ae"
        },
        "item": {
          "id": "16f0be4d-fc7d-4d96-8e14-d23e79be3707",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3892b745-186a-470a-a5ba-7e63f9a145a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b173f6-9deb-4cdc-b94b-51ec78ed248e",
        "cursor": {
          "ref": "f7a07c90-a620-4666-a1cc-60f50546badf",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aaaa6f78-b541-4eaa-bd11-7fb588a8cb41"
        },
        "item": {
          "id": "02b173f6-9deb-4cdc-b94b-51ec78ed248e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d1adddbd-eaf5-461a-9a20-d842911cfa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640ea283-1c14-4855-a148-68c46f11d5e4",
        "cursor": {
          "ref": "60e822b0-8673-4ccd-a44f-ca752a79ef0c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d3d979dc-945b-4359-88a8-ac825cadf9e2"
        },
        "item": {
          "id": "640ea283-1c14-4855-a148-68c46f11d5e4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "858c3d9b-e8e7-497e-8ab6-21f138585c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37d082d-67af-4f55-90e5-97ccab8bae65",
        "cursor": {
          "ref": "d5b950ef-70f8-4ab6-a27e-24567c764144",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "12b821f3-a4f2-43e3-b477-f2aae0c7a416"
        },
        "item": {
          "id": "c37d082d-67af-4f55-90e5-97ccab8bae65",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e925e532-5136-4aa9-ab91-fa142a49d225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a902d133-cc62-472b-9356-eb8f9b324ba9",
        "cursor": {
          "ref": "5ab5ecfa-dbcb-47de-8d23-7df5ec84985f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a3c4872d-ac0b-442c-b1cc-a2663c7bfe68"
        },
        "item": {
          "id": "a902d133-cc62-472b-9356-eb8f9b324ba9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cd7db366-302d-47bc-86e7-df8a506dc6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9410dc0-541b-4d02-a9d0-98b623ad6b26",
        "cursor": {
          "ref": "bd1aef80-1c79-45bd-85ba-b52245d10e63",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7963bf7d-c97a-4c8e-a633-e66096c3d0c2"
        },
        "item": {
          "id": "c9410dc0-541b-4d02-a9d0-98b623ad6b26",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bdfe3c16-b4bd-4cc9-bb63-d77c53ff1d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a40524-613e-4852-904f-10a3148610dd",
        "cursor": {
          "ref": "761dd46f-e0e5-4cd1-9694-a1e4f9b95b0e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "320b73b6-637a-4006-a4cf-502730f391f5"
        },
        "item": {
          "id": "81a40524-613e-4852-904f-10a3148610dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c5773a5c-80d8-4d3a-af20-a0e9a24ad9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59f00c1-9895-44b0-8170-bb7cbe268414",
        "cursor": {
          "ref": "2d485fdf-757b-4171-8c39-beb9b880e8ed",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "48f6a2a9-d57e-48c9-90dd-2439b4f59350"
        },
        "item": {
          "id": "b59f00c1-9895-44b0-8170-bb7cbe268414",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "06984a1a-6b54-42cc-bb32-d6e3cab0485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7527c7e-f8d1-45ea-a132-4c0b4340060d",
        "cursor": {
          "ref": "d469a642-e5f9-43ea-bb29-95145db56048",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4db533ec-c923-4b93-bf27-e061021eac62"
        },
        "item": {
          "id": "b7527c7e-f8d1-45ea-a132-4c0b4340060d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eb7719e0-eb88-428d-aa02-2687d44a5a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caee9fba-3a48-4b50-ad0a-5f21f01a6a29",
        "cursor": {
          "ref": "98df0b2b-5fa7-4465-a8e5-1bf2fd44ae67",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2b6b46e6-3aa3-4488-95eb-841e096699aa"
        },
        "item": {
          "id": "caee9fba-3a48-4b50-ad0a-5f21f01a6a29",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2cd17e26-dbe3-47fd-9b74-bc44116397be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dc3673-5804-4e7f-8df2-ab7728595101",
        "cursor": {
          "ref": "053bf4bc-3dea-4621-b849-19dc5dbf8886",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9a41449a-1406-46b7-bab3-bca15af774ef"
        },
        "item": {
          "id": "17dc3673-5804-4e7f-8df2-ab7728595101",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "21564f0d-b423-47a1-86cd-a327cddeeb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa7f6c4-36e8-4c44-a1e6-feecbd5a4a4a",
        "cursor": {
          "ref": "fc39e9ae-6350-4693-b941-42e5f18e9150",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5a2457f0-f5e4-43da-8490-2bdb89201e30"
        },
        "item": {
          "id": "5fa7f6c4-36e8-4c44-a1e6-feecbd5a4a4a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "212d8285-070f-4579-be60-e3bc0f583717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1bd003-0ffe-495e-a621-b7378943c88f",
        "cursor": {
          "ref": "abe2232c-3db2-453e-98c2-19213e133fde",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "833a41ec-2505-4a20-ad8d-8b49b6c94458"
        },
        "item": {
          "id": "cf1bd003-0ffe-495e-a621-b7378943c88f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6c1ac0bd-25cf-4d9a-b356-dfb691fcdf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc686f9-91ad-4373-93a8-b820672c7c67",
        "cursor": {
          "ref": "347edd84-11ad-4208-af43-b9a5a0dc3cfc",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1c180dfc-c2b9-45aa-a4b1-b9b17b8fc198"
        },
        "item": {
          "id": "8cc686f9-91ad-4373-93a8-b820672c7c67",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8ea013d7-66d8-4521-b63b-da967800014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f18a2-2578-4862-b6ce-63f0f5c02ec0",
        "cursor": {
          "ref": "cdbab957-eb52-48cf-abec-f4fe7de25132",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "57c92f08-8b17-4c08-9b76-092abe21535e"
        },
        "item": {
          "id": "a08f18a2-2578-4862-b6ce-63f0f5c02ec0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df93f75a-6d2a-473d-ad5e-9d0d1959e201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0a301a-0a9a-4c3d-8721-da58c5e00ea8",
        "cursor": {
          "ref": "46ed420e-1221-4c07-8475-eeae1a290861",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d2797f2c-e519-49fc-b7e7-a131b4a09aed"
        },
        "item": {
          "id": "ba0a301a-0a9a-4c3d-8721-da58c5e00ea8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a6f68020-9a4e-4b33-9fba-61955637996d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540030ac-d2b5-4dc1-9357-aed5d328aafb",
        "cursor": {
          "ref": "24ad22d5-64e1-4bc4-9d9d-688115d46747",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "222e0248-c55a-452d-be14-bd9d9407f468"
        },
        "item": {
          "id": "540030ac-d2b5-4dc1-9357-aed5d328aafb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "86a5df11-f892-463d-96aa-f9486c7ac6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab561e-d2dc-4519-af06-eb232b1b810b",
        "cursor": {
          "ref": "0efdcadd-6dd9-4912-957e-0e6c2817d86f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a048bd33-f2e6-4bf3-b532-9cc888c60080"
        },
        "item": {
          "id": "54ab561e-d2dc-4519-af06-eb232b1b810b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c0b99338-8297-494e-bbe9-aabdb607b856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93231b95-4432-4ca4-9f94-57834c40c243",
        "cursor": {
          "ref": "ac64e1fe-8c35-4b32-be50-1f69239e711e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c735a4fc-b66b-49da-b11c-d05383639e8e"
        },
        "item": {
          "id": "93231b95-4432-4ca4-9f94-57834c40c243",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "18a898f6-5384-44e3-8b07-5807552f60da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bed79c0-4be1-4344-87f5-16432dcd0aed",
        "cursor": {
          "ref": "a4fc5b58-a108-4dda-9b75-25cd65056a65",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "813446c4-e81a-4265-9d0b-fc7a13127dac"
        },
        "item": {
          "id": "8bed79c0-4be1-4344-87f5-16432dcd0aed",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a4fb7e91-ff80-4599-bae7-833e15050239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f640765-ef76-49d4-b522-78114e1025a8",
        "cursor": {
          "ref": "cd719df8-d203-4761-8610-40b0242a75b3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e9a1790f-6692-4c1e-b38c-cfa88550c606"
        },
        "item": {
          "id": "9f640765-ef76-49d4-b522-78114e1025a8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "68c0307c-d43d-481e-b9b3-2ec11bbed7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e94d09-7b09-42d3-996a-f5a4640455e2",
        "cursor": {
          "ref": "ab187e0c-e408-4de1-86ed-de35e1fa86a6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "678c70ce-f7ed-48dc-a823-53b70b735986"
        },
        "item": {
          "id": "77e94d09-7b09-42d3-996a-f5a4640455e2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6a82c0e4-3561-4852-8f9e-49977c6f02de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32db4bb-a0de-4fa2-ba10-1b8c187f6d38",
        "cursor": {
          "ref": "ef09d750-e4ed-4a8a-9a1a-765a8fa46efd",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "adc33b0e-b330-41fb-be15-34b143c7324a"
        },
        "item": {
          "id": "c32db4bb-a0de-4fa2-ba10-1b8c187f6d38",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f5d71d8a-d3d6-491f-87a0-c5a69c94ed03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abefc682-4622-4d3c-812b-edc2db69b32d",
        "cursor": {
          "ref": "05c54eb1-d9b5-43a2-86d0-c304b0f66845",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e5e05523-b83a-4eec-aca8-0227a5587bbe"
        },
        "item": {
          "id": "abefc682-4622-4d3c-812b-edc2db69b32d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ca29db1c-96bd-4c68-a612-06d02e0d2d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad868007-a2c7-45bf-93dd-e52f036d8fc9",
        "cursor": {
          "ref": "b882706c-2cd5-48eb-b092-607ac54fc05d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "326e6d19-f23f-4e7b-b9da-41dcb32af2ab"
        },
        "item": {
          "id": "ad868007-a2c7-45bf-93dd-e52f036d8fc9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "79da20db-103d-4ece-a0be-675f8769c0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da12daf-9d1f-4b62-bd86-8ec80bc03982",
        "cursor": {
          "ref": "8f7b618c-9e9e-46a9-97ee-d448a2bfb1ce",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b9a13f40-02ba-4844-8b49-449bfd294368"
        },
        "item": {
          "id": "0da12daf-9d1f-4b62-bd86-8ec80bc03982",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "023e1db4-873e-4562-95e9-5b08d1ca8b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c617f4a-bfe7-4eb2-9825-f14bd7eac294",
        "cursor": {
          "ref": "7291911c-195d-4a27-8663-8b4b8cbfca21",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cc892b67-361e-4afc-a03c-6640defd1c46"
        },
        "item": {
          "id": "9c617f4a-bfe7-4eb2-9825-f14bd7eac294",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b763bc73-bccd-4b65-8e26-82437b1cf8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704a0317-2899-4432-8e1c-b74b43712cec",
        "cursor": {
          "ref": "5a690e51-bf04-43d5-87bd-c8bdfd55ecd8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "02d6b371-2c92-420d-977b-ea12e9f0d2cf"
        },
        "item": {
          "id": "704a0317-2899-4432-8e1c-b74b43712cec",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "78613e42-939e-4d8a-abf7-f419baa4af70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d4fe7-a01d-4848-ab55-9a94ef1b3ea5",
        "cursor": {
          "ref": "f6cbda67-fc88-4b26-a038-4e903e16daad",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b7bca02e-0b1d-430e-8505-978e0760bc01"
        },
        "item": {
          "id": "8f0d4fe7-a01d-4848-ab55-9a94ef1b3ea5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ce9a4dc2-9504-4886-be45-c5c02a33d0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d299e10-78a8-482c-bccf-08dd83a51c5c",
        "cursor": {
          "ref": "4f7d5442-9398-41d3-8baf-556bbc7cce33",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f7b6d29f-a33b-4ae6-a79f-d748bb49c948"
        },
        "item": {
          "id": "2d299e10-78a8-482c-bccf-08dd83a51c5c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e45ccb36-ea23-4ca3-9147-bab1a8e21627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22b6c2b-8019-4600-84b4-7e96756621dc",
        "cursor": {
          "ref": "c1ec81b7-817d-4b9e-95e1-0e21b052dd73",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8b71a7bd-e57a-4964-ad7d-cb0541b20584"
        },
        "item": {
          "id": "c22b6c2b-8019-4600-84b4-7e96756621dc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6bb07668-889d-44aa-89b5-1523bb625791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a542372a-0754-4b3f-a6ef-79cba686f8af",
        "cursor": {
          "ref": "6d6af0e5-5fdd-40e8-af58-0faa848ead89",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e086d9a7-e6f6-4983-b412-ef133858bc87"
        },
        "item": {
          "id": "a542372a-0754-4b3f-a6ef-79cba686f8af",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9fd01051-94a7-481b-8b8d-e7f02d6ee41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f2068-a090-43bb-b046-852abcc8d66d",
        "cursor": {
          "ref": "0a627073-b53f-4729-92d0-7f8d3abf7e41",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cffc9bcf-dda2-4728-987d-e500ef276916"
        },
        "item": {
          "id": "bb3f2068-a090-43bb-b046-852abcc8d66d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "83eb1d2f-1b28-4783-b6cb-069b94c57536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806316d6-8492-4035-91a2-a1564565a64d",
        "cursor": {
          "ref": "045dbdc3-6939-45bf-86cc-10f1ee25cf18",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8f15778c-485a-4872-93bb-11c2ddc311c1"
        },
        "item": {
          "id": "806316d6-8492-4035-91a2-a1564565a64d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "96be2246-d992-4989-bfdf-273db7701145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3366cc-ea05-4f95-9cea-d26d85013bc1",
        "cursor": {
          "ref": "2a6181d4-509b-4709-8d03-4be71e45bbcb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "339b263f-0f15-49ba-83bf-396dc9e29fdc"
        },
        "item": {
          "id": "fe3366cc-ea05-4f95-9cea-d26d85013bc1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b2f0c83-4fc3-49dd-84e9-14cfcfb62770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3126ca38-68a2-4bb9-9962-5ab398cd76ac",
        "cursor": {
          "ref": "62cbf7bb-0137-4b79-b006-c78640ad7baf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3580269f-d5b7-4da0-baea-bfc7f01380c0"
        },
        "item": {
          "id": "3126ca38-68a2-4bb9-9962-5ab398cd76ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "08135462-a982-4272-b360-1c0460b2a88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bb3bd7-07ad-4bf3-b675-bf4363e73b35",
        "cursor": {
          "ref": "f42f2be4-743f-4141-9d5c-b9a694a636c8",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b3c225e4-142f-49bc-a751-2d10a7e79197"
        },
        "item": {
          "id": "f3bb3bd7-07ad-4bf3-b675-bf4363e73b35",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "156f655e-f580-48a7-8e49-4a16002dd5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b854c4f-5025-44aa-ae15-170a05552765",
        "cursor": {
          "ref": "c2c9777b-4d3d-4997-af3b-9716162faf47",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "29d2d392-f957-41fb-b97b-5285e870fbf5"
        },
        "item": {
          "id": "9b854c4f-5025-44aa-ae15-170a05552765",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6641cacb-fed9-4314-b50d-9d801aa724c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0bc03f-d51f-4d98-b744-678734c63046",
        "cursor": {
          "ref": "da3c3cf3-473a-45d6-8a92-9332f3187f7d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4476d193-b415-4b51-b100-371c8d311d8e"
        },
        "item": {
          "id": "1a0bc03f-d51f-4d98-b744-678734c63046",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "14755b02-3d2c-47b4-9878-c7c6440b0593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab104b93-fa0b-4fff-a799-9cfa2a9e9cca",
        "cursor": {
          "ref": "c3173899-6734-43f8-a54b-cd2639530f09",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "83b36e03-8c15-4815-9ca6-6e3347afae29"
        },
        "item": {
          "id": "ab104b93-fa0b-4fff-a799-9cfa2a9e9cca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "29af168a-0ee1-464c-82a8-d782d5e45785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93202ddd-1063-460e-96a7-123d93f99a85",
        "cursor": {
          "ref": "327de6d2-00c2-4208-9fe8-252a08b29f60",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f475f5e4-4f9c-4df1-91f0-fbb49933112b"
        },
        "item": {
          "id": "93202ddd-1063-460e-96a7-123d93f99a85",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39ac3f7b-2b47-4ded-b0e7-bed4bc164d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e1a85-f7ed-46be-8b85-f696b3ec0407",
        "cursor": {
          "ref": "be790a04-3bcc-46ec-a1e8-9e0c11f04271",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2194c43b-90ec-487a-9915-9a253573aa71"
        },
        "item": {
          "id": "2b3e1a85-f7ed-46be-8b85-f696b3ec0407",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7aa35ef8-e8ed-4d8c-9dd9-f1956b552dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670c66aa-2efa-4d7c-a66d-245edc61982b",
        "cursor": {
          "ref": "6fd76557-da86-4e61-b6d1-09a346778b9d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a9f4ee3f-7a54-4552-927e-931515c6b0d7"
        },
        "item": {
          "id": "670c66aa-2efa-4d7c-a66d-245edc61982b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ae3ee41e-f0a0-497c-85d0-bf2daf08d270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1c823b-6ef9-4021-b670-618a9164d3c1",
        "cursor": {
          "ref": "99c15218-ba32-47ec-8630-552429296b71",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a1d13aff-896c-4400-a25c-eac381d11eea"
        },
        "item": {
          "id": "ba1c823b-6ef9-4021-b670-618a9164d3c1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d2a5c1e7-f4bc-453f-8b3b-ce4723c83147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683192d-af48-45f1-8ecc-aeed6896552f",
        "cursor": {
          "ref": "c9a4431b-6b14-470c-ba7d-31111b990b76",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ee68140c-61fa-4738-b072-15777d93e528"
        },
        "item": {
          "id": "9683192d-af48-45f1-8ecc-aeed6896552f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "13226dca-7651-4afc-a690-200a29a290df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014f7031-4933-48fa-9ada-26e74f01aa15",
        "cursor": {
          "ref": "3ce6c288-dd5b-4d94-8b1e-cf34a33b6458",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "367bc57c-ac2c-49f8-9b5f-fd94dacb1a68"
        },
        "item": {
          "id": "014f7031-4933-48fa-9ada-26e74f01aa15",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "836d0930-3b9a-40b2-b62a-ed3ee56d9d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23625499-391e-49b1-b6fc-fe404fafb613",
        "cursor": {
          "ref": "f67ce19c-2ae9-4196-9836-2b2af4adf975",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a2fd6bef-d4bb-4e32-91f6-7a8ea9ef31ae"
        },
        "item": {
          "id": "23625499-391e-49b1-b6fc-fe404fafb613",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5a81bc7-202c-4aa7-912c-6bc1e7bbc9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23377059-be51-45b3-a13b-cde646129f05",
        "cursor": {
          "ref": "ddf7896f-214b-4376-b9df-669586ad1f6c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1681efcc-856a-418c-9696-52d6abf93ba2"
        },
        "item": {
          "id": "23377059-be51-45b3-a13b-cde646129f05",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d7883d73-ffc9-444e-a159-70245bfbe44e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a330dd-3313-48b8-ad0d-b7bd123cfbc9",
        "cursor": {
          "ref": "51ab56bc-9c74-4296-9135-903f2e764569",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "234c631d-2b2c-4556-b2c8-47bd15a12656"
        },
        "item": {
          "id": "88a330dd-3313-48b8-ad0d-b7bd123cfbc9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7816305a-dc62-45e8-80a2-f16e6813c111",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0c0f38-e374-4291-b21e-536798a142a3",
        "cursor": {
          "ref": "6abdc559-ee6d-4cf0-9ce6-b1abfe72d0fd",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a797426e-1b08-4674-aa68-62b258380046"
        },
        "item": {
          "id": "af0c0f38-e374-4291-b21e-536798a142a3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1fae3df4-7c9a-4692-a438-d544c83b40f8",
          "status": "OK",
          "code": 200,
          "responseTime": 3111,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "02228330-9ff3-4670-b020-4e954f95b126",
        "cursor": {
          "ref": "273dd75c-17ab-4a62-810c-7fe2281e6ca2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3f4d9144-3d5b-48c5-8237-6efe30c6b732"
        },
        "item": {
          "id": "02228330-9ff3-4670-b020-4e954f95b126",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fa2affd4-5e53-48ef-b3f0-b88f3b196aa3",
          "status": "OK",
          "code": 200,
          "responseTime": 3079,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4856f201-2654-467b-a9f7-cd521178452c",
        "cursor": {
          "ref": "9c0a706a-ccdf-45a2-9e31-1986e2219c57",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "530ee95e-5845-41c9-b243-18f6128cc84f"
        },
        "item": {
          "id": "4856f201-2654-467b-a9f7-cd521178452c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b1bdc80-8914-465f-8ef4-887b838ae481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4856f201-2654-467b-a9f7-cd521178452c",
        "cursor": {
          "ref": "9c0a706a-ccdf-45a2-9e31-1986e2219c57",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "530ee95e-5845-41c9-b243-18f6128cc84f"
        },
        "item": {
          "id": "4856f201-2654-467b-a9f7-cd521178452c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b1bdc80-8914-465f-8ef4-887b838ae481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf18e29-da44-473d-8aad-43e8cb8fd146",
        "cursor": {
          "ref": "2d0c0f61-a729-4a01-b436-9a073e232331",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "59562ffe-eb19-49d5-b38b-b160e8b56bfb"
        },
        "item": {
          "id": "4cf18e29-da44-473d-8aad-43e8cb8fd146",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "212af44f-4f0c-405f-9077-fbe203ec43ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa213bf1-54dc-4fa8-8010-d4b3eb664279",
        "cursor": {
          "ref": "1bd162a3-7a54-4b97-acdf-63d68836cd3d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d5733bbc-d9a7-45f6-b327-3989845a27e6"
        },
        "item": {
          "id": "aa213bf1-54dc-4fa8-8010-d4b3eb664279",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ab34ca8a-d369-4b94-b2ea-fb54b8c87e8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}